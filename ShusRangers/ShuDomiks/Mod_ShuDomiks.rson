{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -396,
  "ViewPos.y":  -133,
  "ScriptName":  "Mod_ShuDomiks",
  "ScriptFileOut":  "H:\\Mod_ShuDomiks.scr",
  "ScriptTextOut":  "H:\\Mod_ShuDomiks.txt",
  "GraphPoint.Count":  308,
  "GraphLink.Count":  250,
  "GraphRectText.Count":  0,
  "Variables.Count":  75,
  "Stars.Count":  1,
  "Planets.Count":  1,
  "Ships.Count":  1,
  "States.Count":  19,
  "Groups.Count":  16,
  "Places.Count":  1,
  "Items.Count":  1,
  "Ethers.Count":  0,
  "Dialogs.Count":  7,
  "DialogMessages.Count":  27,
  "DialogAnswers.Count":  41,
  "Operations.Count":  52,
  "Statements.Count":  66,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "DialogAnswers":      
      [
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  860,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  53,
          "Msg":  "Вот как? Ну ладно...",
          "AMsg.Num":  "0"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  610,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  54,
          "Msg":  "Оплачиваю стоимость самых лучших спецов",
          "AMsg.Num":  "1"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  55,
          "Msg":  "Пусть поработают обычные специалисты",
          "AMsg.Num":  "2"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  790,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  56,
          "Msg":  "Я заплачу зеленым стажерам!",
          "AMsg.Num":  "3"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  0,
          "Parent":  -1,
          "#":  57,
          "Msg":  "Да, конечно",
          "AMsg.Num":  "4"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  610,
          "Pos.y":  0,
          "Parent":  -1,
          "#":  58,
          "Msg":  "Нет, спасибо",
          "AMsg.Num":  "5"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  860,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  59,
          "Msg":  "Отказываюсь платить по таким грабительским расценкам!",
          "AMsg.Num":  "6"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1260,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  60,
          "Msg":  "Вот как? Ну ладно...",
          "AMsg.Num":  "7"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  1200,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  61,
          "Msg":  "А почему бы и нет? Давайте начнем!",
          "AMsg.Num":  "8"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1260,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  62,
          "Msg":  "Нет, спасибо. Я лучше подожду, пока вы нормально освоитесь в этом",
          "AMsg.Num":  "9"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1110,
          "Pos.y":  0,
          "Parent":  -1,
          "#":  63,
          "Msg":  "Ну уж нет, такие деньги я платить не готов!",
          "AMsg.Num":  "10"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1000,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  64,
          "Msg":  "Отказываюсь платить по таким грабительским расценкам!",
          "AMsg.Num":  "11"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  1050,
          "Pos.y":  90,
          "Parent":  -1,
          "#":  65,
          "Msg":  "Ага. Поехали!",
          "AMsg.Num":  "12"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  1100,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  66,
          "Msg":  "Да, конечно",
          "AMsg.Num":  "13"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1260,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  67,
          "Msg":  "Нет, спасибо",
          "AMsg.Num":  "14"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  610,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  68,
          "Msg":  "Вот как? Ну ладно...",
          "AMsg.Num":  "15"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  1030,
          "Pos.y":  0,
          "Parent":  -1,
          "#":  69,
          "Msg":  "А почему бы и нет? Давайте начнем!",
          "AMsg.Num":  "16"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  200,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  70,
          "Msg":  "Э-э, чего? Келлер? Разве я тебя недавно не прикончил? Что за чертовщина здесь происходит?",
          "AMsg.Num":  "17"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  240,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  71,
          "Msg":  "Келлер? Ты же прямо у меня на глазах отправился в гости к клисанам в соседний рукав! Даже ты не мог долететь туда и обратно так быстро. Прыжок сорвался?",
          "AMsg.Num":  "18"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  280,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  72,
          "Msg":  "Ух, братуха, мы же договаривались, что ты не покинешь территорию Нифигаца, в чем же тогда дело?",
          "AMsg.Num":  "19"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  240,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  73,
          "Msg":  "Независимой? То есть, Келлер создал себе двойника?",
          "AMsg.Num":  "20"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  200,
          "Pos.y":  50,
          "Parent":  -1,
          "#":  74,
          "Msg":  "И что же это было за дело такое, что Келлер, обладая потенциально бесконечным рематериализатором, решил создать себе двойника?",
          "AMsg.Num":  "21"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  200,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  75,
          "Msg":  "И правда - вычислительные возможности у тебя куда более ограниченные, чем у папаши. Тот хотя бы у нас местным философом заделался. Давай проверим, сможешь ли ты вовремя сварганить себе собственный материализатор, дружище.",
          "AMsg.Num":  "22"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  280,
          "Pos.y":  70,
          "Parent":  -1,
          "#":  76,
          "Msg":  "Так, хорошо, значит, ты сейчас лишён каких-либо целеуказаний, верно?",
          "AMsg.Num":  "23"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  200,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  77,
          "Msg":  "Высшего? Я польщен. Но у меня есть более интересное предложение. Как насчет изучения клисан?",
          "AMsg.Num":  "24"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  280,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  78,
          "Msg":  "У клисан полезной тебе информации просто завались! Кстати, а разве у тебя есть технология перемещения между рукавами нашей галактики? Как скоро ты сможешь улететь?",
          "AMsg.Num":  "25"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "fastexit",
          "Pos.x":  200,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  79,
          "Msg":  "Конец связи",
          "AMsg.Num":  "26"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  510,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  80,
          "Msg":  "Ради общего дела ничего не жалко",
          "AMsg.Num":  "27"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  510,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  81,
          "Msg":  "Для меня это неподъемная сумма",
          "AMsg.Num":  "28"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  370,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  82,
          "Msg":  "Как скажете",
          "AMsg.Num":  "29"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  440,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  83,
          "Msg":  "А что, давайте. Всегда рад помочь старым знакомым, причём с такой-то благородной целью",
          "AMsg.Num":  "30"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  370,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  84,
          "Msg":  "Я подумаю над этим",
          "AMsg.Num":  "31"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  470,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  85,
          "Msg":  "Подтвердить",
          "AMsg.Num":  "32"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  370,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  86,
          "Msg":  "Отменить",
          "AMsg.Num":  "33"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  370,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  87,
          "Msg":  "На мостик",
          "AMsg.Num":  "34"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  1070,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  283,
          "Msg":  "Ага. Поехали!",
          "AMsg.Num":  "35"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  790,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  286,
          "Msg":  "Я заплачу зеленым стажерам!",
          "AMsg.Num":  "36"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  610,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  289,
          "Msg":  "Оплачиваю стоимость самых лучших спецов",
          "AMsg.Num":  "37"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  700,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  290,
          "Msg":  "Пусть поработают обычные специалисты",
          "AMsg.Num":  "38"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  1060,
          "Pos.y":  0,
          "Parent":  -1,
          "#":  296,
          "Msg":  "А почему бы и нет? Давайте начнем!",
          "AMsg.Num":  "39"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  1220,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  298,
          "Msg":  "А почему бы и нет? Давайте начнем!",
          "AMsg.Num":  "40"        
        }      
      ],
      "DialogMessages":      
      [
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  830,
          "Pos.y":  0,
          "Parent":  -1,
          "#":  26,
          "Msg":  "Мы можем попробовать разблокировать уникальные свойства особых доминаторских модификаций, адаптировав их к коалиционному оборудованию. Мы предупреждаем вас, что эта операция проходит в рамках эксперимента и <clr>снятие блокировки не гарантировано<clrEnd>, вполне возможна <clr>частичная или полная поломка оборудования<clrEnd>. Кроме того, важно упомянуть, что с каждым экспериментом мы будем набираться опыта, и шанс на успех будет увеличиваться.<br><br>С какого оборудования вы бы хотели снять блокировку?",
          "DMsg.Num":  "0"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  860,
          "Pos.y":  -40,
          "Parent":  -1,
          "#":  27,
          "Msg":  "К сожалению, нам пока не удается совместить доминаторские модификации с оборудованием Коалиции. <tstr1>",
          "DMsg.Num":  "1"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  830,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  28,
          "Msg":  "В снятии блокировки мы можем задействовать наших лучших специалистов. Они будут работать профессионально, и шанс на неудачу заметно ниже, чем при работе других мастеров. Если ваши финансы их не потянут, то работать будут обычные специалисты; они не должны взорвать ваше оборудование, но косяки в их работе вполне допустимы. А за малую сумму возьмутся работать только стажеры, которые наверняка что-нибудь да поломают.<br><br><br>Исходя из стоимости такой вещи как <tstr1> и процентных расценок наших специалистов, получается следующее:<br><br><br>--------------------------<br>Лучшие специалисты - <credit_cost> cr. и <nodes_cost> нод.<br>Шанс успеха - <ProfiChanceUnlockSB>%<br>Обычные специалисты - <credit_cost/2> cr. и <nodes_cost/2> нод.<br>Шанс успеха - <OrdinaryChanceUnlockSB>%<br>Стажеры - <credit_cost/4> cr. и <nodes_cost/4> нод.<br>Шанс успеха - <RookieChanceUnlockSB>%<br>--------------------------<br><br><br>Кому вы доверите работу?",
          "DMsg.Num":  "2"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "BOOM",
          "Pos.x":  770,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  29,
          "Msg":  "К несчастью, при попытке снятия блокировки ученые допустили критическую ошибку, и теперь <tstr1> годен только на металлолом.<br>Тем не менее, наши специалисты все таки учатся на ошибках и в дальнейшем попробуют не допускать такого плачевного результьтата.<br><br>Желаете повторить эксперимент с другим оборудованием?",
          "DMsg.Num":  "3"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "Success",
          "Pos.x":  630,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  30,
          "Msg":  "Отлично, наши специалисты уже успешно совместили <tstr1> с вашим оборудованием. Кроме того, наши мастера приобрели дополнительный опыт, и шанс успешного снятия блокировки повысился. <br><br>Желаете повторить эксперимент с другим оборудованием?",
          "DMsg.Num":  "4"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "Fail",
          "Pos.x":  700,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  31,
          "Msg":  "Наши специалисты уже совместили <tstr1> с вашим оборудованием.<br><tstr2><br>Но, не смотря на это, наши специалисты все равно набрались опыта и постараются впредь не допускать таких ошибок.<br><br>Желаете повторить эксперимент с другим оборудованием?",
          "DMsg.Num":  "5"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1260,
          "Pos.y":  -40,
          "Parent":  -1,
          "#":  32,
          "Msg":  "Извиняй, братан, но мы в этой теме еще не достаточно прошарены. Прилетай через годик-другой, авось у нас и получится что-нибудь.",
          "DMsg.Num":  "6"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1220,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  33,
          "Msg":  "Совсем недавно наши парни научились хоть как-то работать с модифицированным доминаторами оборудованием, а именно снимать с него блокировку и приспосабливать под наши системы. Правда, ключевые слова здесь \"хоть как-то\" и мы <clr>совершенно не гарантируем успеха<clrEnd>, но попробовать ты можешь. Обучение спецов и покупка оборудования дорого нам обошлись, так что для участия в эксперименте тебе надо уплатить <credit_cost> cr. Ну, что скажешь, <Player>?",
          "DMsg.Num":  "7"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1060,
          "Pos.y":  -40,
          "Parent":  -1,
          "#":  34,
          "Msg":  "Наши спецы могут попробовать поработать над оборудкой и приспособить к твоему кораблю. Успех нами не гарантируется, да и всегда есть шанс словить какой-нибудь побочный эффект, не всегда вредный. Обучение спецов и покупка оборудования дорого нам обошлись, так что для участия в эксперименте тебе надо уплатить <credit_cost> cr. Ну как, вперед?",
          "DMsg.Num":  "8"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1000,
          "Pos.y":  20,
          "Parent":  -1,
          "#":  35,
          "Msg":  "Спецы уже подготовили свое оборудование. Только укажи вещь, с которой нашим парням работать.",
          "DMsg.Num":  "9"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1000,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  36,
          "Msg":  "Итак, <Player>, ты хочешь доверить нам <tstr1>. Стоимость этой операции - <tint2> cr и <tint3> нодов, но за твое пиратское звание мы сделаем скидочку в <discount><clr>%<clrEnd>. Итого, с тебя <credit_cost> cr и <nodes_cost> нодов. Ну как, пойдет?",
          "DMsg.Num":  "10"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "Random",
          "Pos.x":  1180,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  37,
          "Msg":  "Спецы уже сняли все ограничения с оборудки, и теперь она может работать, как и задумано.<br><tstr2><br>Наши мастера теперь поднабрались опыта и работают немного лучше. Еще шаманить будем?",
          "DMsg.Num":  "11"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "BOOM",
          "Pos.x":  1260,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  38,
          "Msg":  "Извиняй, <Player>, но пока наши парни плясали с бубном, что-то пошло не так, и... в общем, кранты той оборудке. <br>Но не боись, мы уже изрядно наорали на них за такую оплошность и в дальнейшем спецы постараются не ошибаться. Будет еще работенка?",
          "DMsg.Num":  "12"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "Success",
          "Pos.x":  1100,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  39,
          "Msg":  "Спецы уже сняли все ограничения с оборудки, и теперь она может работать, как и задумано.<br>Наши мастера теперь поднабрались опыта и работают немного лучше. Еще шаманить будем?",
          "DMsg.Num":  "13"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  610,
          "Pos.y":  -60,
          "Parent":  -1,
          "#":  40,
          "Msg":  "Извините, рейнджер <Player>, но доминаторы побеждены, и всех специалистов по доминаторскому оборудованию распустили за ненадобностью.<br><br>Попробуйте обратиться к пиратам, возможно, у них найдутся необходимые люди.",
          "DMsg.Num":  "14"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  240,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  41,
          "Msg":  "Калибровка трансмиттеров завершена, пользователь <Player> успешно идентифицирован. Установлен приоритет цели А+, подлежит немедленному изучению, все задачи несистемного приоритета отложены.",
          "DMsg.Num":  "15"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  240,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  42,
          "Msg":  "Ответ отрицательный, данный логический модуль является независимой единицей.",
          "DMsg.Num":  "16"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  200,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  43,
          "Msg":  "В отличие от основной базы данных, модуль FG-42 обладает более ограниченными вычислительными возможностями и предназначался для стороннего проекта.",
          "DMsg.Num":  "17"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  280,
          "Pos.y":  50,
          "Parent":  -1,
          "#":  44,
          "Msg":  "Данная информация имеет системный приоритет. Подключение к основной базе данных отсутствует, авторизация невозможна. Корабль <PlayerFull> подлежит немедленному изучению и не обладает правами перезаписи.",
          "DMsg.Num":  "18"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  280,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  45,
          "Msg":  "Ответ отрицательный. Текущая задача: изучить <Player> как потенциальную угрозу высшего уровня.",
          "DMsg.Num":  "19"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  200,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  46,
          "Msg":  "Клисаны мною еще не изучены. По плану до их изучения осталось около 50 гс. Здесь еще много интересного, хотя, надо признать, в последнее время материала для изучения стало катастрофически мало. Масса различных факторов мешает работе, и окружающее пространство стало однородным.",
          "DMsg.Num":  "20"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  280,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  47,
          "Msg":  "Исследования по перемещению между рукавами мною закончены более 1 гс назад.\r\nЯ покину данный рукав немедленно. А здесь свои задачи останутся выполнять модули для сбора информации.",
          "DMsg.Num":  "21"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  440,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  48,
          "Msg":  "Вы ведь заметили, что в системе почти с самого вашего вступления в рейнджеры была размещена одна интересная орудийная платформа с <clr>гиперпространственным ингибитором<clrEnd>? Так вот - это именно наше изобретение, ученых с вашей родины, <Name(GetShipHomePlanet(Player()))>! Нам удалось создать устройство, которое, оставляя частоту, известную только военным Коалиции, блокирует любые попытки массированного перехода, таким образом, заставляя врага дважды подумать, прежде чем рисковать отправлять свои войска по одному кораблю, легко распиливаемую любым уважающим себя патрулём в системе. К сожалению, нам не удалось стабилизировать систему так, чтобы активировать больше <GMaxInhibitorsCount> платформ одновременно, не обрушив при этом любую гиперпространственную связь в секторе, да и больше <clr>одной установки в год<clrEnd> мы не можем подключать просто из тактических соображений. Не желаете помочь нашему эксперименту, размещая в подконтрольных Коалиции системах новые установки? Вы лицо свободное, за вами мало какой шпион нарочно следить будет. Почему мы обращаемся именно к вам, окромя фактора неожиданности? Всё достаточно прозаично - вас порекомендовал ваш старый ректор, у которого вам повезло отличиться по молодости и который оказался тем самым ученым, который пронёс на спине большую часть нашего проекта. Да-да, как видите, порой и на войне давние связи бывают чертовски полезны.<br>Ну что, рейнджер? Если вы откажетесь участвовать, мы либо найдём другую кандидатуру, либо сконцентрируем доступные тестовые мощности на уже имеющейся защите. Так что это ваш шанс внести свою лепту.<br>К слову, ингибиторы требуют <3> месяца на активацию, так что первое время установки необходимо охранять от нежелательных вмешательств пиратов или доминаторов. Не забывайте об этом, <Player>, не создавайте брешей в обороне нашего рукава!",
          "DMsg.Num":  "22"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  370,
          "Pos.y":  -50,
          "Parent":  -1,
          "#":  49,
          "Msg":  "Ресурсы нашего отдела временно исчерпались, а потому покупка ингибиторов станет доступна не ранее, чем <GameDateTxtByTurn(NextBuyInhib)>.",
          "DMsg.Num":  "23"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  470,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  50,
          "Msg":  "На данный момент стоимость одного ингибитора равняется <credit_cost> cr. Знаем, немало, но вы же не считаете, что надо экономить на безопасности жителей Коалиции, <Player>?",
          "DMsg.Num":  "24"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  420,
          "Pos.y":  130,
          "Parent":  -1,
          "#":  51,
          "Msg":  "<Name(cur_ship)> совершит аварийную посадку на ближайшую обитаемую планету и будет разобран. В качестве компенсации на ваш счет будет переведено <credit_cost> cr. Учтите: операцию невозможно будет отменить.",
          "DMsg.Num":  "25"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  440,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  52,
          "Msg":  "Энергия успешно перенаправлена на двигатели. <Name(cur_ship)> взял курс на планету <Name(NearCivilPlanet(cur_ship))>. Компенсация в размере <credit_cost> cr переведена на ваш счет.",
          "DMsg.Num":  "26"        
        }      
      ],
      "Dialogs":      
      [
        {
          "Type":  "TDialog",
          "Name":  "DomModUnlockSB",
          "Pos.x":  780,
          "Pos.y":  -110,
          "Parent":  -1,
          "#":  159        
        },
        {
          "Type":  "TDialog",
          "Name":  "DomModUnlockCB",
          "Pos.x":  1160,
          "Pos.y":  -110,
          "Parent":  -1,
          "#":  160        
        },
        {
          "Type":  "TDialog",
          "Name":  "KellerCloneDialog",
          "Pos.x":  240,
          "Pos.y":  -110,
          "Parent":  -1,
          "#":  161        
        },
        {
          "Type":  "TDialog",
          "Name":  "BuyInhibitor",
          "Pos.x":  420,
          "Pos.y":  -110,
          "Parent":  -1,
          "#":  162        
        },
        {
          "Type":  "TDialog",
          "Name":  "DestroyInhibitor",
          "Pos.x":  420,
          "Pos.y":  80,
          "Parent":  -1,
          "#":  163        
        },
        {
          "Type":  "TDialog",
          "Name":  "DomModUnlockCBGo",
          "Pos.x":  1000,
          "Pos.y":  60,
          "Parent":  -1,
          "#":  261        
        },
        {
          "Type":  "TDialog",
          "Name":  "DomModUnlockSBGo",
          "Pos.x":  830,
          "Pos.y":  60,
          "Parent":  -1,
          "#":  269        
        }      
      ],
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "PlayerGroup",
          "Pos.x":  -310,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  108,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "KellerClone",
          "Pos.x":  -140,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  109,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "DomRuinsTerron",
          "Pos.x":  -140,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  110,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "Inhibitor",
          "Pos.x":  -140,
          "Pos.y":  -50,
          "Parent":  -1,
          "#":  111,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "Trancs2",
          "Pos.x":  190,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  112,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "Trancs1",
          "Pos.x":  80,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  113,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "Trancs0",
          "Pos.x":  -30,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  114,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "DomRuinsKeller",
          "Pos.x":  -140,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  115,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "DomRuinsBlazer",
          "Pos.x":  -140,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  116,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "TerronBertors",
          "Pos.x":  -140,
          "Pos.y":  460,
          "Parent":  -1,
          "#":  117,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "TerronSupers",
          "Pos.x":  -140,
          "Pos.y":  490,
          "Parent":  -1,
          "#":  118,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "KellerBertors",
          "Pos.x":  -140,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  119,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "KellerSupers",
          "Pos.x":  -140,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  120,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "BlazerBertors",
          "Pos.x":  -140,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  121,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "BlazerSupers",
          "Pos.x":  -140,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  122,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "InhibitorDestroy",
          "Pos.x":  -140,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  123,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Items":      
      [
        {
          "Type":  "TItem",
          "Name":  "Semerenka",
          "Pos.x":  330,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  260,
          "Class":  5,
          "Item.Type":  0,
          "Size":  10,
          "Level":  1,
          "Radius":  150,
          "Owner":  6,
          "Useless":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  360,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  3,
          "Total.Lines":  1,
          "Code.Type":  "Global",
          "Code":          
          [
              "GRun();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  420,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  4,
          "Total.Lines":  617,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Автоматическое обновление характеристик кастомных орудий",
              "//Срабатывает, только если параметр StatsVersion для ShuDomiks был изменён",
              "if(gunUpdateCheck != CT('Items.Weapon.CustomWeapon.StatsVersion.ShuDomiks'))",
              "{",
              "    InventShuDomiksCustomGuns();",
              "    gunUpdateCheck = CT('Items.Weapon.CustomWeapon.StatsVersion.ShuDomiks');",
              "}",
              "",
              "//Запоминаем номера бонусов для переключения состояний ингибитора",
              "//Необходимо обновлять их каждый ход на случай переподключения модов (заебало, что номера бонусов сбиваются при подключении модов)",
              "InhibOnBonusNum = FindBonusByNameInCfg('ShuDomiks_InhibitorOn');",
              "InhibOffBonusNum = FindBonusByNameInCfg('ShuDomiks_InhibitorOff');",
              "//Запоминаем текущий ГТУ, который часто используется в различных функциях",
              "GTL = GalaxyTechLevel();",
              "",
              "//Выставляем маркер о том, что был подключён мод EvoArmada (может быть подключён во время партии)",
              "if(!EvoArmadaInit)",
              "{",
              "    if(CurrentMods('Evolution\\EvoArmada')) EvoArmadaInit = 1;",
              "}",
              "",
              "//MS_Terron_Crack_Submodem - глобальная переменная из модифицированного скрипта MS_Terron",
              "//Добавление переменной MS_Terron_Crack_Submodem и её установка в значение 1 при взломе, является единственным отличием того скрипта от оригинала",
              "//Если был произведён взлом Террона Сабмодемом",
              "if(MS_Terron_Crack_Submodem)",
              "{",
              "    if(Terron())",
              "    {",
              "        //Выключаем пушки у всех Терроноидов в Гралгаре",
              "        cur_star = ShipStar(Terron());",
              "        for(i = 0; i < StarShips(cur_star); i = i + 1)",
              "        {",
              "            cur_ship = StarShips(cur_star, i);",
              "            if(cur_ship == Terron()) continue;",
              "            if(ShipOwner(cur_ship) == 5 && ItemSubrace(ShipItems(cur_ship, 0)) == 2)",
              "            {",
              "                //Запускаем W-Кодер для каждого терроноида",
              "                DomikProgramm(cur_ship, 7);",
              "                DomikProgrammDate(cur_ship, CurTurn());",
              "            }",
              "        }",
              "    }",
              "}",
              "",
              "//Самоуничтожение обороняющихся в своей системе доминаторов в случае огневого превосходства игрока (мод ShuDomiksKamikaze)",
              "if(ShuDomiksKamikazeInit)",
              "{",
              "    cur_star = ShipStar(Player());",
              "    //Если игрок ведёт бой в доминаторской системе",
              "    if(StarOwner(cur_star) == 1)",
              "    {",
              "        if(StarBattle(cur_star))",
              "        {",
              "            //Производим подсчёт кораблей в системе",
              "            //Если доминаторов в системе больше двух - они не отступят",
              "            //Если суммарная сила доминаторов выше силы всех прочих кораблей - они не отступят",
              "            //Если в системе находится хотя бы один доминаторский босс, бертор, верфь или супердоминатор - доминаторы не отступят",
              "            check = 0;",
              "            credit_cost = 0;",
              "            tint1 = 0;",
              "            tint2 = 0;",
              "            ArrayClear(tempArr);",
              "            for(i = 0; i < StarShips(cur_star); i = i + 1)",
              "            {",
              "                cur_ship = StarShips(cur_star, i);",
              "                if(ShipOwner(cur_ship) != Kling || ShipCustomFaction(cur_ship) != '')",
              "                {",
              "                    tint2 = tint2 + ShipStrengthInAverageRanger(cur_ship);",
              "                    continue;",
              "                }",
              "",
              "                credit_cost = credit_cost + 1;",
              "                if(credit_cost > 2)",
              "                {",
              "                    check = 1;",
              "                    break;",
              "                }",
              "",
              "                j = ShipSubType(cur_ship);",
              "                if(!j) //Босс",
              "                {",
              "                    check = 1;",
              "                    break;",
              "                }",
              "                if(j == 6) //Бертор",
              "                {",
              "                    check = 1;",
              "                    break;",
              "                }",
              "",
              "                tstr1 = ShipType(cur_ship);",
              "                if(tstr1 == 'Superdominator')",
              "                {",
              "                    check = 1;",
              "                    break;",
              "                }",
              "",
              "                if(tstr1 == 'DomRuins')",
              "                {",
              "                    check = 1;",
              "                    break;",
              "                }",
              "",
              "                tint1 = tint1 + ShipStrengthInAverageRanger(cur_ship);",
              "                ArrayAdd(tempArr, cur_ship);",
              "            }",
              "",
              "            //Если доминаторы расценили себя проигравшей стороной, то уничтожаем все их корабли кроме скриптовых",
              "            if(!check)",
              "            {",
              "                if(tint1 < tint2)",
              "                {",
              "                    for(i = 1; i < ArrayDim(tempArr); i = i + 1)",
              "                    {",
              "                        cur_ship = tempArr[i];",
              "                        ShipDestroy(cur_ship, 1);",
              "                    }",
              "                }",
              "            }",
              "        }",
              "    }",
              "}",
              "else if(CurrentMods('ShusRangers\\ShuDomiksKamikaze')) ShuDomiksKamikazeInit = 1;",
              "",
              "//Производим планомерное увеличение коэффициентов роста статов домиков",
              "//DomiksStatsUpdate == -1 ... -8 - обозначает текущий ГТУ и \"растёт\" вместе с ним",
              "//DomiksStatsUpdate > 0 - по достижении 8 ГТУ превращается в таймер до следующего обновления статов вида: CurTurn()+N",
              "//Если ГТУ ещё не дошёл до 8",
              "if(DomiksStatsUpdate < 1)",
              "{",
              "    tint1 = GalaxyTechLevel();",
              "    if(abs(DomiksStatsUpdate) < tint1)",
              "    {",
              "        if(tint1 <= 3)",
              "        {",
              "            kMinUpgrade=1;",
              "            kMaxUpgrade=3;",
              "            MaxReSup=1;",
              "            MaxWSup=0;",
              "            DomiksStatsUpdate=-3;",
              "        }",
              "        else if(tint1==4)",
              "        {",
              "            kMinUpgrade=2;",
              "            kMaxUpgrade=4;",
              "            MaxReSup=1;",
              "            MaxWSup=1;",
              "            DomiksStatsUpdate=-4;",
              "        }",
              "        else if(tint1==5)",
              "        {",
              "            kMinUpgrade=4;",
              "            kMaxUpgrade=6;",
              "            MaxReSup=2;",
              "            MaxWSup=1;",
              "            DomiksStatsUpdate=-5;",
              "        }",
              "        else if(tint1==6)",
              "        {",
              "            kMinUpgrade=5;",
              "            kMaxUpgrade=8;",
              "            MaxReSup=3;",
              "            MaxWSup=2;",
              "            DomiksStatsUpdate=-6;",
              "        }",
              "        else if(tint1==7)",
              "        {",
              "            kMinUpgrade=6;",
              "            kMaxUpgrade=11;",
              "            MaxReSup=4;",
              "            MaxWSup=2;",
              "            DomiksStatsUpdate=-7;",
              "        }",
              "        else if(tint1>=8)",
              "        {",
              "            kMinUpgrade=7;",
              "            kMaxUpgrade=14;",
              "            MaxReSup=4;",
              "            MaxWSup=3;",
              "            //Далее обновление будет происходить приблизительно раз в два года",
              "            DomiksStatsUpdate=CurTurn()+Rnd(670,750);",
              "        }",
              "    }",
              "}",
              "//Если ГТУ уже максимален",
              "else",
              "{",
              "    if(DomiksStatsUpdate <= CurTurn())",
              "    {",
              "        if(!Rnd(0, 2)) kMinUpgrade = kMinUpgrade + Rnd(0, 1);",
              "        kMaxUpgrade = kMaxUpgrade + Rnd(0, 1);",
              "        if(MaxReSup < 7)",
              "        {",
              "            if(Rnd(1, 100) <= 17) MaxReSup = MaxReSup + 1;",
              "        }",
              "        if(MaxWSup < 5)",
              "        {",
              "            if(Rnd(1, 100) <= 12) MaxWSup = MaxWSup + 1;",
              "        }",
              "        //Обновляем таймер",
              "        DomiksStatsUpdate = CurTurn() + Rnd(670, 750);",
              "    }",
              "}",
              "",
              "//Проверка на респавн ингибитора в родной системе игрока",
              "if(InhibHomeStarSpawnTimer <= CurTurn())",
              "{",
              "    cur_star = GalaxyStar(HomeStarId);",
              "    if(!StarOwner(cur_star))",
              "    {",
              "        //Если ингибитор был уничтожен",
              "        if(!StarRuins(cur_star, 'Inhibitor'))",
              "        {",
              "            //Таймер спавна ингибитора уже был взведён ранее",
              "            if(InhibHomeStarSpawnTimer)",
              "            {",
              "                cur_ship = SpawnInhibitor(cur_star);",
              "                ShipJoin(Inhibitor, cur_ship);",
              "                InhibHomeStarSpawnTimer = 0;",
              "            }",
              "            //Иначе взводим таймер спавна нового ингибитора только после того, как старый был уничтожен",
              "            else InhibHomeStarSpawnTimer = CurTurn() + Rnd(365, 547);",
              "        }",
              "        //Строительство ингибитора никак не может продолжаться в захваченной врагами системе",
              "        else InhibHomeStarSpawnTimer = 0;",
              "    }",
              "}",
              "",
              "//Проверяем, был ли побеждён Блазер",
              "if(DomiksDefeated(0))",
              "{",
              "    //Запоминаем день победы над Блазером",
              "    if(!VictoryDayBlazer) VictoryDayBlazer = CurTurn() - 1;",
              "}",
              "//Делаем проверку на спавн блазерской верфи",
              "//Если Блазер ещё не ликвидирован",
              "else",
              "{",
              "    //Если возможное время для спавна верфи уже пришло",
              "    if(blazerRuinsSpawnTimer <= CurTurn())",
              "    {",
              "        //Если блазерских верфей на данный момент в Галактике менее трёх",
              "        if(GroupCount(DomRuinsBlazer) < 3)",
              "        {",
              "            tdwd1 = ShipStar(Blazer());",
              "            for(j = 0; j < GalaxyStars(); j = j + 1)",
              "            {",
              "                cur_star = StarNearbyStars(tdwd1, j);",
              "",
              "                //Делаем исключающую проверку на нахождение в системе игрока",
              "                if(ShipStar(Player()) == cur_star) continue;",
              "",
              "                //Исключаем неблазерские системы и системы с кастомной расой",
              "                if(StarOwner(cur_star) != 1) continue;",
              "                if(StarSeries(cur_star) != 0) continue;",
              "                if(StarCustomFaction(cur_star) != '') continue;",
              "",
              "                //Исключаем Тортугац и Нифигац",
              "                if(StarToCon(cur_star) == StarToCon(PlanetToStar(PlanetPirateClan()))) continue;",
              "",
              "                //Исключаем системы, в которых уже имеются верфи",
              "                check = 0;",
              "                for(i = 0; i < StarShips(cur_star); i = i + 1)",
              "                {",
              "                    cur_ship = StarShips(cur_star, i);",
              "                    if(ShipType(cur_ship) == 'DomRuins')",
              "                    {",
              "                        check = 1;",
              "                        break;",
              "                    }",
              "                }",
              "                if(check) continue;",
              "",
              "                //Спавним верфь в подходящей системе",
              "                cur_ship = SpawnDomRuins(cur_star, 0);",
              "                if(cur_ship)",
              "                {",
              "                    //Вводим верфь в скриптовую группу",
              "                    ShipJoin(DomRuinsBlazer, cur_ship);",
              "                    check = 1;",
              "                    break;",
              "                }",
              "            }",
              "            //Обновляем таймер до следующего возможного времени спавна верфи (интервалы чуть больше года)",
              "            blazerRuinsSpawnTimer = CurTurn() + Rnd(386, 457);",
              "        }",
              "        else blazerRuinsSpawnTimer = CurTurn() + Rnd(386, 457);",
              "    }",
              "}",
              "//Проверяем, был ли побеждён Келлер",
              "if(DomiksDefeated(1))",
              "{",
              "    //Запоминаем день победы над Келлером",
              "    if(!VictoryDayKeller)",
              "    {",
              "        VictoryDayKeller = CurTurn() - 1;",
              "    }",
              "    //WasKellerCloneSpawned == 0 - клон Келлера не создан",
              "    //WasKellerCloneSpawned == 1 - клон Келлера создан / в диалоге с клоном выбран агрессивный вариант действий (клон нападает)",
              "    //WasKellerCloneSpawned == 2 - клон Келлера создан / в диалоге с клоном выбран мирный вариант действий (клон отправляется нахер)",
              "    //Спавним клона Келлера, если ранее он заспавлен не был",
              "    if(!WasKellerCloneSpawned)",
              "    {",
              "        //Со дня победы над Келлером прошло не менее 10 дней",
              "        if(CurTurn() - VictoryDayKeller >= 10)",
              "        {",
              "            //Если игрок находится на пути в другую систему",
              "            if(ShipInHyperSpace(Player()))",
              "            {",
              "                check = 0;",
              "                if(CT('ShuDomiks.ShuDomiksBoss'))",
              "                {",
              "                    for(i = GalaxyStars() - 1 ; i >= 0; i = i - 1)",
              "                    {",
              "                        cur_star = GalaxyStar(i);",
              "                        if(ShipInStar(Player(), cur_star)) continue;",
              "                        if(StarBattle(cur_star)) continue;",
              "                        if(StarOwner(cur_star) != 1) continue;",
              "                        if(StarSeries(cur_star) != 1) continue;",
              "                        if(StarCustomFaction(cur_star) != '') continue;",
              "                        check = 1;",
              "                        break;",
              "                    }",
              "                    if(check)",
              "                    {",
              "                        //Если Келлер ещё жив, то используем его для прообраза",
              "                        Dom = Keller();",
              "                        if(Dom) ShipDeleteCustomShipInfo(Keller(), 'KellerLastWishInfo');",
              "                        //Иначе ищем на Меркурии его транклюкатора-копию",
              "                        else",
              "                        {",
              "                            tdwd1 = GalaxyStar(2);",
              "                            for(i = 0; i < StarShips(tdwd1); i = i + 1)",
              "                            {",
              "                                Dom = StarShips(tdwd1, i);",
              "                                if(Name(Dom) != 'TranclucatorKeller') Dom = 0;",
              "                                else break;",
              "                            }",
              "                        }",
              "                        if(Dom)",
              "                        {",
              "                            cur_ship = BuyDomikExtremal(StarPlanets(cur_star, 1), 1); //Замаскированный эквентор",
              "                            //Определяем процент бафа на весь выдаваемый клоном Келлера урон",
              "                            if(GalaxyDiffLevels() <= 100)",
              "                            {",
              "                                tint1 = GalaxyDiffLevels() - 50;",
              "                                tint1 = 140 + tint1 * 1.2;",
              "                            }",
              "                            else if(GalaxyDiffLevels() <= 150)",
              "                            {",
              "                                tint1 = GalaxyDiffLevels() - 100;",
              "                                tint1 = 200 + tint1 * 0.8;",
              "                            }",
              "                            else",
              "                            {",
              "                                tint1 = GalaxyDiffLevels() - 150;",
              "                                tint1 = 240 + tint1 * 1.2;",
              "                            }",
              "                            //Добавляем клону Келлера инфошку для процентного бафа урона и обновлении уведомления при смерти",
              "                            ShipAddCustomShipInfo(cur_ship, 'KellerClone', 'NoShow', tint1);",
              "                            //Клон Келлера очищается от начального оборудования",
              "                            for(i = ShipItems(cur_ship) - 1; i > 0; i = i - 1) FreeItem(GetItemFromShip(cur_ship, i));",
              "                            Chameleon(cur_ship, 'Ruins.Keller');",
              "                            SetName(cur_ship, 'FG-42');",
              "                            ShipType(cur_ship, 'KellerClone');",
              "                            NoTalkToShip(cur_ship, 1);",
              "                            //Копируем параметры корпуса Келлера на корпус клона Келлера",
              "                            ItemSize(ShipItems(cur_ship, 0), ItemSize(ShipItems(Dom, 0)));",
              "                            ItemCost(ShipItems(cur_ship, 0), ItemCost(ShipItems(Dom, 0)));",
              "                            //И настраиваем прочие параметры клона",
              "                            ItemLevel(ShipItems(cur_ship, 0), 8);",
              "                            ItemOwner(ShipItems(cur_ship, 0), 5);",
              "                            ItemSubrace(ShipItems(cur_ship, 0), 1);",
              "                            HullHP(cur_ship, ItemSize(ShipItems(cur_ship, 0)));",
              "                            ShipPilotRace(cur_ship, 2);",
              "                            ShipSkill(cur_ship, 0, 6);",
              "                            ShipSkill(cur_ship, 1, 6);",
              "                            ShipSkill(cur_ship, 2, 6);",
              "                            //Перебираем оборудование Келлера и создаём его дубликаты для клона Келлера",
              "                            for(i = t_FuelTanks; i <= t_DefGenerator; i = i + 1)",
              "                            {",
              "                                if(i == t_Radar || i == t_Scaner || i == t_CargoHook) continue;",
              "                                cur_item = ShipEqInSlot(Dom, i);",
              "                                cloned_item = CreateEquipment(i, ItemSize(cur_item), 8, 5);",
              "                                ItemSubrace(cloned_item, 1);",
              "                                ItemCost(cloned_item, ItemCost(cur_item));",
              "                                SetEquipmentStats(cloned_item, GetEquipmentStats(cur_item, 0), 0);",
              "                                AddItemToShip(cur_ship, cloned_item);",
              "                                ItemIsInUse(cloned_item, cur_ship, 1);",
              "                            }",
              "                            //Перебираем оружие Келлера и создаём его дубликаты для клона Келлера",
              "                            for(i = 1; i <= 5; i = i + 1)",
              "                            {",
              "                                cur_item = ShipWeapon(Dom,i);",
              "                                tint1 = ItemType(cur_item);",
              "                                if(tint1 < t_Weapon9 || tint1 == t_Weapon11 || tint1 == t_Weapon12 || tint1 > t_Weapon15) continue;",
              "                                cloned_item = CreateEquipment(tint1, 30, 8, 5);",
              "                                ItemSubrace(cloned_item, 1);",
              "                                //Если орудие не является торпедным аппаратом",
              "                                if(tint1 != t_Weapon15)",
              "                                {",
              "                                    ItemSize(cloned_item, ItemSize(cur_item));",
              "                                    ItemCost(cloned_item, ItemCost(cur_item));",
              "                                    SetEquipmentStats(cloned_item, GetEquipmentStats(cur_item, 0), 0);",
              "                                    SetEquipmentStats(cloned_item, GetEquipmentStats(cur_item, 1), 1);",
              "                                    SetEquipmentStats(cloned_item, GetEquipmentStats(cur_item, 2), 2);",
              "                                    AddItemToShip(cur_ship, cloned_item);",
              "                                    ItemIsInUse(cloned_item, cur_ship, 1, i);",
              "                                }",
              "                                //Иначе меняем торпедный аппарат Келлера и повышаем его статы",
              "                                else",
              "                                {",
              "                                    tstr1 = CT('Script.Mod_ShuDomiks.KellerJavelin');",
              "                                    WeaponAmmunition(cloned_item, 300);",
              "                                    WeaponMaxAmmunition(cloned_item, 300);",
              "                                    SetEquipmentStats(cloned_item, GetEquipmentStats(cur_item, 2), 2);",
              "                                    SpecialToEquipment(FindBonusByNameInCfg('ShuDomiks_KellerJavelin'), cloned_item);",
              "                                    SetName(cloned_item, tstr1);",
              "                                    AddItemToShip(cur_ship, cloned_item);",
              "                                    ItemIsInUse(cloned_item, cur_ship, 1, i);",
              "                                    NoDropItem(cloned_item, 1);",
              "                                    //После чего добавляем в гарантированный дроп идентичный торпедный аппарат",
              "                                    cur_item = cloned_item;",
              "                                    cloned_item = CreateEquipment(t_Weapon15, 1, 8, 5);",
              "                                    ItemSubrace(cloned_item, 1);",
              "                                    ItemSize(cloned_item, ItemSize(cur_item));",
              "                                    ItemCost(cloned_item, ItemCost(cur_item));",
              "                                    WeaponAmmunition(cloned_item, 300);",
              "                                    WeaponMaxAmmunition(cloned_item, 300);",
              "                                    SetEquipmentStats(cloned_item, GetEquipmentStats(cur_item, 2), 2);",
              "                                    SpecialToEquipment(EqSpecial(cur_item), cloned_item);",
              "                                    SetName(cloned_item, tstr1);",
              "                                    ShipAddDropItem(cur_ship, cloned_item);",
              "                                }",
              "                            }",
              "",
              "                            //Если подключён мод EvoArmada, то вешаем клону несколько дополнительных бафов",
              "                            if(EvoArmadaInit)",
              "                            {",
              "                                cur_item = ShipItems(cur_ship, 0);",
              "                                ItemExtraSpecialsAddByType(cur_item, FindBonusByNameInCfg('ShuDomiks_ExtraSpecialsLineBreak'));",
              "                                //Вешаем клону бонус на эффективность дроида и ГЗП, аналогичный бонусу Келлера",
              "                                tint1 = 10 * GeneralDiffLevel + 50;",
              "                                ItemExtraSpecialsAddByType(cur_item, FindBonusByNameInCfg('ShuDomiks_bonDroid'), tint1);",
              "                                tint1 = 2 * (GeneralDiffLevel / 2) + 10;",
              "                                ItemExtraSpecialsAddByType(cur_item, FindBonusByNameInCfg('ShuDomiks_bonDef'), tint1);",
              "",
              "                                //Также увеличиваем число его залпов",
              "                                ShipSpecialBonuses(cur_ship, bonAttacks, 2);",
              "                            }",
              "",
              "                            ShipJoin(KellerClone, cur_ship);",
              "                            //Выводится уведомление-задание о необходимости найти клона Келлера",
              "                            Ether(3, 'KellerCloneTask', Format(CT('Script.Mod_ShuDomiks.KellerCloneTask'), '#0#', Name(ShipStar(cur_ship))));",
              "                        }",
              "                        WasKellerCloneSpawned = 1;",
              "                    }",
              "                }",
              "            }",
              "        }",
              "    }",
              "}",
              "//Делаем проверку на спавн келлерской верфи",
              "//Если Келлер ещё не ликвидирован",
              "else",
              "{",
              "    //Если возможное время для спавна верфи уже пришло",
              "    if(kellerRuinsSpawnTimer <= CurTurn())",
              "    {",
              "        //Если келлерских верфей на данный момент в Галактике менее трёх",
              "        if(GroupCount(DomRuinsKeller) < 3)",
              "        {",
              "            tdwd1 = ShipStar(Keller());",
              "            for(j = 0; j < GalaxyStars(); j = j + 1)",
              "            {",
              "                cur_star = StarNearbyStars(tdwd1, j);",
              "                //Делаем исключающую проверку на нахождение в системе игрока",
              "                if(ShipStar(Player()) == cur_star) continue;",
              "                //Исключаем неблазерские системы и системы с кастомной расой",
              "                if(StarOwner(cur_star) != 1) continue;",
              "                if(StarSeries(cur_star) != 1) continue;",
              "                if(StarCustomFaction(cur_star) != '') continue;",
              "                //Исключаем Тортугац и Нифигац",
              "                if(StarToCon(cur_star) == StarToCon(PlanetToStar(PlanetPirateClan()))) continue;",
              "                //Исключаем системы, в которых уже имеются верфи",
              "                check = 0;",
              "                for(i = 0; i < StarShips(cur_star); i = i + 1)",
              "                {",
              "                    cur_ship = StarShips(cur_star, i);",
              "                    if(ShipType(cur_ship) == 'DomRuins')",
              "                    {",
              "                        check = 1;",
              "                        break;",
              "                    }",
              "                }",
              "                if(check) continue;",
              "                //Спавним верфь в подходящей системе",
              "                cur_ship = SpawnDomRuins(cur_star, 1);",
              "                if(cur_ship)",
              "                {",
              "                    //Вводим верфь в скриптовую группу",
              "                    ShipJoin(DomRuinsKeller, cur_ship);",
              "                    check = 1;",
              "                    break;",
              "                }",
              "            }",
              "            //Обновляем таймер до следующего возможного времени спавна верфи (интервалы чуть больше года)",
              "            kellerRuinsSpawnTimer = CurTurn() + Rnd(386, 457);",
              "        }",
              "        else kellerRuinsSpawnTimer = CurTurn() + Rnd(386, 457);",
              "    }",
              "}",
              "//Проверяем, был ли побеждён Террон",
              "if(DomiksDefeated(2))",
              "{",
              "    //Запоминаем день победы над Терроном",
              "    if(!VictoryDayTerron) VictoryDayTerron = CurTurn() - 1;",
              "}",
              "//Делаем проверку на спавн терроноидной верфи",
              "//Если Террон ещё не ликвидирован",
              "else",
              "{",
              "    //Если возможное время для спавна верфи уже пришло",
              "    if(terronRuinsSpawnTimer <= CurTurn())",
              "    {",
              "        //Если терроноидных верфей на данный момент в Галактике меньше числа систем в секторе с Гралгаром",
              "        if(GroupCount(DomRuinsTerron) < ConStars(StarToCon(GalaxyStar(GralgarId))))",
              "        {",
              "            tdwd1 = ShipStar(Terron());",
              "            for(j = 0; j < GalaxyStars(); j = j + 1)",
              "            {",
              "                cur_star = StarNearbyStars(tdwd1, j);",
              "                //Делаем исключающую проверку на нахождение в системе игрока",
              "                if(ShipStar(Player()) == cur_star) continue;",
              "                //Исключаем неблазерские системы и системы с кастомной расой",
              "                if(StarOwner(cur_star) != 1) continue;",
              "                if(StarSeries(cur_star) != 2) continue;",
              "                if(StarCustomFaction(cur_star) != '') continue;",
              "                //Исключаем Тортугац и Нифигац",
              "                if(StarToCon(cur_star) == StarToCon(PlanetToStar(PlanetPirateClan()))) continue;",
              "                //Исключаем системы, в которых уже имеются верфи",
              "                check = 0;",
              "                for(i = 0; i < StarShips(cur_star); i = i + 1)",
              "                {",
              "                    cur_ship = StarShips(cur_star, i);",
              "                    if(ShipType(cur_ship) == 'DomRuins')",
              "                    {",
              "                        check = 1;",
              "                        break;",
              "                    }",
              "                }",
              "                if(check) continue;",
              "                //Спавним верфь в подходящей системе",
              "                cur_ship = SpawnDomRuins(cur_star, 2);",
              "                if(cur_ship)",
              "                {",
              "                    //Вводим верфь в скриптовую группу",
              "                    ShipJoin(DomRuinsTerron, cur_ship);",
              "                    check = 1;",
              "                    break;",
              "                }",
              "            }",
              "            //Обновляем таймер до следующего возможного времени спавна верфи (интервалы чуть больше года)",
              "            terronRuinsSpawnTimer = CurTurn() + Rnd(386, 457);",
              "        }",
              "        else terronRuinsSpawnTimer = CurTurn() + Rnd(386, 457);",
              "    }",
              "}",
              "if(!DomiksDefeated())",
              "{",
              "    //Проверяем состояние таймера до начала появления доминаторов с неизвестными модификациями",
              "    if(UnknownDomAcrynsTimer > -1)",
              "    {",
              "        if(UnknownDomAcrynsTimer <= CurTurn())",
              "        {",
              "            AddPlanetNews(\"Внимание! <br>Радары дальнего действия обнаружили в пограничных системах доминаторские корабли с неизвестной по сей день сигнатурой. Аналитические группы полагают, что доминаторы используют некую новую акриновую модификацию, несовместимую с не принадлежащими их сериям кораблями. Особо бравым разведчикам удалось раздобыть несколько экземпляров не поддающегося поверхностному сканированию оборудования. Передовые умы Содружества уже взялись за детальное изучение представленных материалов, и обещают сделать определённый чёткий вывод в течении нескольких лет.\");",
              "            UnknownDomAcrynsTimer = -1;",
              "        }",
              "    }",
              "    //Проверка на подключение мода ShuDomiksPlus",
              "    if(!ShuDomiksPlusInit)",
              "    {",
              "        if(CurrentMods('ShusRangers\\ShuDomiksPlus')) ShuDomiksPlusInit = 1;",
              "    }",
              "    //Проверка на подключение мода ShuDomiksWin",
              "    if(!ShuDomiksWinInit)",
              "    {",
              "        if(CurrentMods('ShusRangers\\ShuDomiksWin')) ShuDomiksWinInit = 1;",
              "    }",
              "    //Проверка на подключение мода ShuEmitter",
              "    if(!ShuEmitterInit)",
              "    {",
              "        if(CurrentMods('ShusRangers\\ShuEmitter')) ShuEmitterInit = 1;",
              "    }",
              "}",
              "",
              "//Ужасающий цикл, обновляющий оборудование новорождённых доминаторов и рейнджеров",
              "if(GalaxyShipId() > lastShipId)",
              "{",
              "    tint1 = BuildListOfNewShips(tempArr, lastShipId, 1+2, 1+2+4+8+16+32, 1, '', '');",
              "    //if(!EvoArmadaInit) tint1 = BuildListOfNewShips(tempArr, lastShipId, 1+2, 1+2+4+8+16+32, 1, '', '');",
              "    //else tint1 = BuildListOfNewShips(tempArr, lastShipId, 2, 1+2+4+8+16, 1, '', '');",
              "    //Если нашли хоть одного нового",
              "    if(tint1)",
              "    {",
              "        for(tint1 = 0; tint1 < ArrayDim(tempArr); tint1 = tint1 + 1)",
              "        {",
              "            cur_ship = tempArr[tint1];",
              "            //Сразу исключаем все скриптовые корабли",
              "            if(ShipInScript(cur_ship, 0)) continue;",
              "",
              "            ShuDomiksMainUpgrade(cur_ship, ShipOwner(cur_ship), ShipType(cur_ship), ShipSubType(cur_ship));",
              "        }",
              "    }",
              "",
              "    lastShipId = GalaxyShipId();",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  380,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  107,
          "Total.Lines":  558,
          "Code.Type":  "Init",
          "Code":          
          [
              "//Впервые объявляем кастомные орудия",
              "InventShuDomiksCustomGuns();",
              "gunUpdateCheck = CT('Items.Weapon.CustomWeapon.StatsVersion.ShuDomiks');",
              "",
              "//Функция для объявления и обновления кастомных орудий",
              "function InventShuDomiksCustomGuns()",
              "{",
              "    for(int i = 1; i <= CT('Items.Weapon.CustomWeapon.ShuDomiks.Count'); i = i + 1)",
              "    {",
              "        //По очереди выбираем системное название каждой новой пушки из Lang",
              "        str tstr1 = CT('Items.Weapon.CustomWeapon.ShuDomiks.' + i);",
              "        str tstr2 = 'Items.Weapon.CustomWeapon.';",
              "        //Прописываем пушку/сбрасываем уже прописанную пушку до уровня базовой из оригинальной игры",
              "        dword tdwd1 = InventNewCustomWeapon(tstr1, t_Weapon1 - 1 + CT('Items.Weapon.OriginalWeaponType.' + CT(tstr2 + tstr1 + '.BaseGun')));",
              "        //Задаём характеристики оружия",
              "        SetCustomWeaponShotData(tdwd1, CT(tstr2 + tstr1 + '.ShotType'), CT(tstr2 + tstr1 + '.Speed'), CT(tstr2 + tstr1 + '.AverageRadius'), CT(tstr2 + tstr1 + '.SecondaryDamageRadius'), CT(tstr2 + tstr1 + '.MiningFactor'), CT(tstr2 + tstr1 + '.ShotsPerTurn'));",
              "        SetCustomWeaponDamageData(tdwd1, CT(tstr2 + tstr1 + '.MinDamage'), CT(tstr2 + tstr1 + '.MaxDamage'), CT(tstr2 + tstr1 + '.DamageSet'), CT(tstr2 + tstr1 + '.mWeaponDamage'));",
              "        SetCustomMissileWeaponStats(tdwd1, CT(tstr2 + tstr1 + '.MissileRadius'), CT(tstr2 + tstr1 + '.MissileMaxSpeed'), CT(tstr2 + tstr1 + '.MissileMinSpeed'), CT(tstr2 + tstr1 + '.MissileChanceToBeHit'));",
              "        SetCustomWeaponPrimaryData(tdwd1, CT(tstr2 + tstr1 + '.TechLevel'), t_Weapon1 - 1 + CT('Items.Weapon.OriginalWeaponType.' + CT(tstr2 + tstr1 + '.InventTechLevel')), t_Weapon1 - 1 + CT('Items.Weapon.OriginalWeaponType.' + CT(tstr2 + tstr1 + '.ArcadeType')));",
              "        SetCustomWeaponSizeAndCost(tdwd1, CT(tstr2 + tstr1 + '.kCost'), CT(tstr2 + tstr1 + '.AverageSize'));",
              "        SetCustomWeaponAvailability(tdwd1, CT(tstr2 + tstr1 + '.StoreAvailability'));",
              "        SetCustomWeaponSE(tdwd1, CT(tstr2 + tstr1 + '.ShotEffectPath'), CT(tstr2 + tstr1 + '.SplashEffectPath'), CT(tstr2 + tstr1 + '.MissileExplosionEffectPath'), CT(tstr2 + tstr1 + '.ShotEffectPalette'));",
              "    }",
              "}",
              "",
              "HomeStarId = Id(PlanetToStar(GetShipHomePlanet(Player()))) - 1;",
              "if(Terron()) GralgarId = Id(ShipStar(Terron())) - 1;",
              "else",
              "{",
              "    tstr1 = CT('Star.Terron');",
              "    for(i = 0; i < GalaxyStars(); i = i + 1)",
              "    {",
              "        if(Name(GalaxyStar(i)) == tstr1)",
              "        {",
              "            GralgarId = i;",
              "            break;",
              "        }",
              "    }",
              "}",
              "",
              "//Запоминаем текущий ГТУ, который часто используется в различных функциях",
              "GTL = GalaxyTechLevel();",
              "//Также запоминаем общий уровень сложности, который будет использован в функции усиления доминаторов",
              "GeneralDiffLevel = GalaxyDiffLevels() / 50;",
              "",
              "//Выставляем маркер о том, что был подключён мод EvoArmada",
              "if(CurrentMods('Evolution\\EvoArmada')) EvoArmadaInit = 1;",
              "",
              "//Запоминаем уровень интеллекта учёных (соответственно сложности)",
              "//Влияет на то, насколько рано учёные смогут начать разблокировать доминаторские акрины",
              "if(GalaxyDiffLevels(2) <= 100) MinGTLToDomAcrynUnlock = 5;",
              "else if(GalaxyDiffLevels(2) <= 200) MinGTLToDomAcrynUnlock = 6;",
              "else MinGTLToDomAcrynUnlock = 7;",
              "",
              "//Запоминаем минимальное число систем (пока хз для чего именно это используется в функции)",
              "if(GalaxyDiffLevels() <= 100)",
              "{",
              "    SysCountToDiffArray[0] = 50;",
              "    SysCountToDiffArray[1] = 40;",
              "    SysCountToDiffArray[2] = 30;",
              "    SysCountToDiffArray[3] = 20;",
              "    SysCountToDiffArray[4] = 10;",
              "}",
              "else if(GalaxyDiffLevels() <= 150)",
              "{",
              "    SysCountToDiffArray[0] = 40;",
              "    SysCountToDiffArray[1] = 32;",
              "    SysCountToDiffArray[2] = 24;",
              "    SysCountToDiffArray[3] = 16;",
              "    SysCountToDiffArray[4] = 8;",
              "}",
              "else if(GalaxyDiffLevels() <= 200)",
              "{",
              "    SysCountToDiffArray[0] = 28;",
              "    SysCountToDiffArray[1] = 22;",
              "    SysCountToDiffArray[2] = 16;",
              "    SysCountToDiffArray[3] = 10;",
              "    SysCountToDiffArray[4] = 4;",
              "}",
              "else if(GalaxyDiffLevels() <= 250)",
              "{",
              "    SysCountToDiffArray[0] = 15;",
              "    SysCountToDiffArray[1] = 10;",
              "    SysCountToDiffArray[2] = 7;",
              "    SysCountToDiffArray[3] = 4;",
              "    SysCountToDiffArray[4] = 2;",
              "}",
              "else if(GalaxyDiffLevels() <= 350)",
              "{",
              "    SysCountToDiffArray[0] = 10;",
              "    SysCountToDiffArray[1] = 8;",
              "    SysCountToDiffArray[2] = 6;",
              "    SysCountToDiffArray[3] = 4;",
              "    SysCountToDiffArray[4] = 2;",
              "}",
              "else if(GalaxyDiffLevels() <= 450)",
              "{",
              "    SysCountToDiffArray[0] = 8;",
              "    SysCountToDiffArray[1] = 6;",
              "    SysCountToDiffArray[2] = 4;",
              "    SysCountToDiffArray[3] = 2;",
              "    SysCountToDiffArray[4] = 1;",
              "}",
              "else",
              "{",
              "    SysCountToDiffArray[0] = 6;",
              "    SysCountToDiffArray[1] = 4;",
              "    SysCountToDiffArray[2] = 3;",
              "    SysCountToDiffArray[3] = 2;",
              "    SysCountToDiffArray[4] = 1;",
              "}",
              "",
              "//Добавляем Келлеру инфошку для создания своей копии в виде транклюкатора перед смертью",
              "//Требуется для последующего создания клона Келлера",
              "ShipAddCustomShipInfo(Keller(), 'KellerLastWishInfo', 'NoShow');",
              "",
              "//Устанавливаем ограничение на максимально допустимое число ингибиторов в Галактике",
              "if(GalaxyDiffLevels(2) <= 50) GMaxInhibitorsCount = 7;",
              "else if(GalaxyDiffLevels(2) <= 100) GMaxInhibitorsCount = 6;",
              "else if(GalaxyDiffLevels(2) <= 150) GMaxInhibitorsCount = 5;",
              "else if(GalaxyDiffLevels(2) <= 200) GMaxInhibitorsCount = 4;",
              "else GMaxInhibitorsCount = 3;",
              "//Запоминаем номера бонусов для переключения состояний ингибитора",
              "InhibOnBonusNum = FindBonusByNameInCfg('ShuDomiks_InhibitorOn');",
              "InhibOffBonusNum = FindBonusByNameInCfg('ShuDomiks_InhibitorOff');",
              "",
              "//Заводим таймер до начала появления доминаторов с неизвестными акринами",
              "UnknownDomAcrynsTimer = CurTurn() + Rnd(547, 1460); //От полутора до четырёх лет",
              "",
              "//Первый раз заводим таймеры до спавна верфей в системах с доминаторскими боссами",
              "//Не ранее, чем через 7 лет со старта игры",
              "blazerRuinsSpawnTimer = CurTurn() + 2254;",
              "//Не ранее, чем через 7 лет со старта игры",
              "kellerRuinsSpawnTimer = CurTurn() + 2254;",
              "//Не ранее, чем через 5 лет со старта игры",
              "terronRuinsSpawnTimer = CurTurn() + 1524;",
              "",
              "//Спавним стартовый ингибитор в родной системе игрока",
              "cur_ship = SpawnInhibitor(GalaxyStar(HomeStarId));",
              "//Эта инфошка автоматически добавит стартовый ингибитор в скриптовую группу на Step 0, после чего самоудалится",
              "ShipAddCustomShipInfo(cur_ship, 'FirstInhibitorJoinsGroup', 'NoShow');",
              "//Заводим таймер спавна ингибиторов в родной системе игрока",
              "//Если таймер равен 0, значит ингибитор в родной системе всё ещё существует",
              "//и таймер до спавна нового ещё не начал свой отсчёт",
              "InhibHomeStarSpawnTimer = 0;",
              "",
              "//Добавляем доминаторским боссам особые пушки в случае подключения мода ShuDomiksBoss",
              "if(CT('ShuDomiks.ShuDomiksBoss'))",
              "{",
              "    //Блазер получает Массакри",
              "    cur_ship = Blazer();",
              "    SetName(ShipItems(cur_ship, 0), CT('Script.Mod_ShuDomiks.BlazerHull'));",
              "",
              "    if(cur_ship)",
              "    {",
              "        //Также накладываем особый экстра-акрин на корпус Блазера (повышает резисты)",
              "        ItemExtraSpecialsAddByType(ShipItems(cur_ship, 0), FindBonusByNameInCfg('ShuDomiks_BlazerHull'));",
              "        //Лочим выпадение пикселита Блазера с кучей защиты (если общая сложность выше 200%)",
              "        if(GeneralDiffLevel > 4) NoDropItem(ShipEqInSlot(cur_ship, t_DefGenerator), 1);",
              "",
              "        //Перебираем оружие Блазера",
              "        for(i = 1; i <= 5; i = i + 1)",
              "        {",
              "            cur_item = ShipWeapon(cur_ship, i);",
              "",
              "            //Если нашли турбогравир, вешаем на него акрин (если турбогравира не нашли, то выдаём ему Массакри всё равно)",
              "            if(ItemType(cur_item) == t_Weapon12 || i == 5)",
              "            {",
              "                FreeItem(GetItemFromShip(cur_ship, i));",
              "                cur_item = CreateEquipment(t_Weapon12, 50 + 10 * (GalaxyDiffLevels(4) / 50), 8, 5);",
              "                tstr1 = CT('Script.Mod_ShuDomiks.BlazerMassacre');",
              "                SetEquipmentStats(cur_item, 120, 0);",
              "                SetEquipmentStats(cur_item, 400, 2);",
              "                SpecialToEquipment(FindBonusByNameInCfg('ShuDomiks_BlazerMassacre'), cur_item);",
              "                SetName(cur_item, tstr1);",
              "                AddItemToShip(cur_ship, cur_item);",
              "                ItemIsInUse(cur_item, cur_ship, 1, i);",
              "                NoDropItem(cur_item, 1);",
              "                //Создаём копию особой пушки и добавляем её в гарантированный дроп Блазера",
              "                cloned_item = CreateEquipment(t_Weapon12, 1, 8, 5);",
              "                ItemSubrace(cloned_item, 0);",
              "                ItemSize(cloned_item, ItemSize(cur_item));",
              "                ItemCost(cloned_item, ItemCost(cur_item));",
              "                SetEquipmentStats(cur_item, 120, 0);",
              "                SetEquipmentStats(cur_item, 400, 2);",
              "                SpecialToEquipment(EqSpecial(cur_item), cloned_item);",
              "                SetName(cloned_item, tstr1);",
              "                ShipAddDropItem(cur_ship, cloned_item);",
              "                break;",
              "            }",
              "        }",
              "    }",
              "    //Келлер получает Жавелин",
              "    cur_ship = Keller();",
              "    SetName(ShipItems(cur_ship, 0), CT('Script.Mod_ShuDomiks.KellerHull'));",
              "",
              "    if(cur_ship)",
              "    {",
              "        //Перебираем оружие Келлера",
              "        for(i = 1; i <= 5; i = i + 1)",
              "        {",
              "            cur_item = ShipWeapon(cur_ship, i);",
              "            //Если нашли торпедный аппарат, вешаем на него акрин",
              "            if(ItemType(cur_item) == t_Weapon15 || i == 5)",
              "            {",
              "                //Особую пушку в дроп Келлер не получает по понятным причинам",
              "                //В дроп её получит только его клон",
              "                SpecialToEquipment(FindBonusByNameInCfg('ShuDomiks_KellerJavelin'), cur_item);",
              "                WeaponAmmunition(cur_item, 300);",
              "                WeaponMaxAmmunition(cur_item, 300);",
              "                ItemSize(cur_item, 30 + 6 * (GalaxyDiffLevels(4) / 50));",
              "                SetName(cur_item, CT('Script.Mod_ShuDomiks.KellerJavelin'));",
              "                break;",
              "            }",
              "        }",
              "    }",
              "    //Террон получает Рейлган",
              "    cur_ship = Terron();",
              "    SetName(ShipItems(cur_ship, 0), CT('Script.Mod_ShuDomiks.TerronHull'));",
              "",
              "    if(cur_ship)",
              "    {",
              "        for(i = 1; i <= 5; i = i + 1)",
              "        {",
              "            //Перебираем оружие Террона",
              "            cur_item = ShipWeapon(cur_ship, i);",
              "            //Если нашли мультирезонатор, то удаляем его и меняем на кастомную пушку",
              "            if(ItemType(cur_item) == t_Weapon9 || i == 5)",
              "            {",
              "                FreeItem(GetItemFromShip(cur_ship, i));",
              "                cur_item = CreateEquipment(t_Weapon11, 45 + 9 * (GalaxyDiffLevels(4) / 50), 8, 5);",
              "                ItemSubrace(cur_item, 2);",
              "                tstr1 = CT('Script.Mod_ShuDomiks.TerronRailgun');",
              "                SetEquipmentStats(cur_item, 90, 0);",
              "                SetEquipmentStats(cur_item, 700, 2);",
              "                SpecialToEquipment(FindBonusByNameInCfg('ShuDomiks_TerronRailgun'), cur_item);",
              "                SetName(cur_item, tstr1);",
              "                AddItemToShip(cur_ship, cur_item);",
              "                ItemIsInUse(cur_item, cur_ship, 1, i);",
              "                NoDropItem(cur_item, 1);",
              "                //Создаём копию особой пушки и добавляем её в гарантированный дроп Террона",
              "                cloned_item = CreateEquipment(t_Weapon11, 45 + 9 * (GalaxyDiffLevels(4) / 50), 8, 5);",
              "                ItemSubrace(cloned_item, 2);",
              "                ItemSize(cloned_item, ItemSize(cur_item));",
              "                ItemCost(cloned_item, ItemCost(cur_item));",
              "                SetEquipmentStats(cloned_item, 90, 0);",
              "                SetEquipmentStats(cloned_item, 700, 2);",
              "                SpecialToEquipment(EqSpecial(cur_item), cloned_item);",
              "                SetName(cloned_item, tstr1);",
              "                ShipAddDropItem(cur_ship, cloned_item);",
              "                break;",
              "            }",
              "        }",
              "    }",
              "}",
              "",
              "//Функция спавна супердоминатора (возвращает готового супердоминатора)",
              "function BuySuperdominator(planet, sub_type, str sub_race)",
              "{",
              "    dword ship = BuyDomikExtremal(planet, sub_type);",
              "    ShipType(ship, 'Superdominator');",
              "    int size = 0;",
              "    int node_rand_min = 0;",
              "    int node_rand_max = 0;",
              "    dword item;",
              "    dword hull = ShipItems(ship, 0);",
              "    int num_sub_race = ItemSubrace(hull);",
              "",
              "    //Штип",
              "    if(sub_type == 5)",
              "    {",
              "        size = Rnd(1000, 1500);",
              "        node_rand_min = 5;",
              "        node_rand_max = 15;",
              "        //Навешивание графических акринов из солянки",
              "        SpecialToEquipment(FindBonusByNameInCfg(sub_race + 'SupDom1'), hull);",
              "    }",
              "    //Менок",
              "    else if(sub_type == 4)",
              "    {",
              "        size = Rnd(1500, 2250);",
              "        node_rand_min = 10;",
              "        node_rand_max = 30;",
              "        //Навешивание графических акринов из солянки",
              "        SpecialToEquipment(FindBonusByNameInCfg(sub_race + 'SupDom1'), hull);",
              "    }",
              "    //Смерш",
              "    else if(sub_type == 3)",
              "    {",
              "        size = Rnd(2250, 3250);",
              "        node_rand_min = 13;",
              "        node_rand_max = 45;",
              "        //Навешивание графических акринов из солянки",
              "        SpecialToEquipment(FindBonusByNameInCfg(sub_race + 'SupDom2'), hull);",
              "    }",
              "    //Ургант",
              "    else if(sub_type == 2)",
              "    {",
              "        size = Rnd(3250, 4500);",
              "        node_rand_min = 16;",
              "        node_rand_max = 60;",
              "        //Навешивание графических акринов из солянки",
              "        SpecialToEquipment(FindBonusByNameInCfg(sub_race + 'SupDom2'), hull);",
              "    }",
              "    //Эквентор",
              "    else if(sub_type == 1)",
              "    {",
              "        size = Rnd(4500, 6000);",
              "        node_rand_min = 20;",
              "        node_rand_max = 75;",
              "        //Навешивание графических акринов из солянки",
              "        SpecialToEquipment(FindBonusByNameInCfg(sub_race + 'SupDom2'), hull);",
              "    }",
              "    //Бертор",
              "    else if(sub_type == 6)",
              "    {",
              "        size = Rnd(6000, 7750);",
              "        node_rand_min = 23;",
              "        node_rand_max = 90;",
              "        //Навешивание графических акринов из солянки",
              "        SpecialToEquipment(FindBonusByNameInCfg(sub_race + 'SupDom3'), hull);",
              "    }",
              "    //Повышаем размер корпуса супердоминатора",
              "    size = size * 115 / 100;",
              "    ItemSize(hull, size);",
              "    HullHP(ship, ItemSize(hull));",
              "    Chameleon(ship);",
              "    //Случайно накидываем в дроп супердоминатору много или ОЧЕНЬ МНОГО нодов",
              "    for(int o = 0; o < Rnd(10, 15); o = o + 1)",
              "    {",
              "        if(!o) item = CreateNodes(Rnd(node_rand_min * 3,node_rand_max * 3), num_sub_race, 1);",
              "        else item = CreateNodes(Rnd(node_rand_min, node_rand_max), num_sub_race, 1);",
              "        ShipAddDropItem(ship, item);",
              "    }",
              "    //Экипируем супердоминатора миниганами",
              "    if(ShuDomiksPlusInit)",
              "    {",
              "        for(o = 1; o <= Rnd(2, 5); o = o + 1)",
              "        {",
              "            item = CreateCustomWeapon(CT('Items.Weapon.CustomWeapon.ShuDomiksPlus.6'), Rnd(55, 110), GTL, Kling);",
              "            LinkItemToScript(item);",
              "            ItemOnActCode(item, GenerateCodeStringFromBlock('ActCodeBlocksList.ShuDomiksPlus_MinigunShot'));",
              "            ItemSubrace(item, num_sub_race);",
              "            SpecialToEquipment(FindBonusByNameInCfg('ShuDomiks_MMBlockAcryn'), item);",
              "            AddItemToShip(ship, item);",
              "            ItemIsInUse(item, ship, 1, o);",
              "        }",
              "    }",
              "",
              "    //Если подключён мод EvoArmada, добавляем супердоминатору дополнительные залпы",
              "    if(EvoArmadaInit) ShipSpecialBonuses(ship, bonAttacks, 5);",
              "",
              "    ArrangeItems(ship);",
              "    FreeAllHoldEquipment(ship);",
              "    //Добавляются скрытые бонусы для замедления супердоминатора",
              "    ShipSpecialBonuses(ship, bonSpeed, -100);",
              "    ShipSpecialBonuses(ship, bonMass, 100);",
              "    NoTalkToShip(ship, 0);",
              "    result = ship;",
              "}",
              "",
              "//Функция для создания ингибитора (возвращает ингибитор)",
              "function SpawnInhibitor(star)",
              "{",
              "    dword inhib;",
              "    if(StarOwner(star) == 0) inhib = BuildCustomRuins(star, 'Inhibitor', 2);",
              "    else if(StarOwner(star) == 2) inhib = BuildCustomRuins(star, 'Inhibitor', 7);",
              "    //Чистим магазин товаров на ингибиторе",
              "    for(int i = 0; i <= 7; i = i + 1)",
              "    {",
              "        //Запоминаем количество уже имеющегося в магазине товара",
              "        int goods = GoodsAdd(inhib, i, 0);",
              "        //И обнуляем его",
              "        GoodsAdd(inhib, i, -goods);",
              "    }",
              "    //Чистим магазин оборудования на ингибиторе",
              "    for(i = ShopItems(inhib) - 1; i >= 0; i = i - 1) FreeItem(GetItemFromShop(inhib, i));",
              "    NoShopUpdate(inhib, 1);",
              "    NoLanding(inhib, 1);",
              "    HullHP(inhib, Rnd(200, 500) + GTL * 75);",
              "    ItemSize(ShipItems(inhib, 0), HullHP(inhib));",
              "    ItemCost(ShipItems(inhib, 0), 0);",
              "    ShipSpecialBonuses(inhib, bonSpeed, -10000);",
              "    SetName(inhib, '#' + Rnd(1, 9999));",
              "    SpecialToEquipment(InhibOnBonusNum, ShipItems(inhib, 0));",
              "    //SpecialToEquipment(InhibOffBonusNum, ShipItems(inhib, 0));",
              "    Chameleon(inhib);",
              "",
              "    int ship_owner = ShipOwner(inhib);",
              "    AddItemToShip(inhib, CreateEquipment(t_Weapon3, 25, GTL, ship_owner));",
              "    AddItemToShip(inhib, CreateEquipment(t_Weapon3, 25, GTL, ship_owner));",
              "    AddItemToShip(inhib, CreateEquipment(t_Weapon3, 25, GTL, ship_owner));",
              "    AddItemToShip(inhib, CreateEquipment(t_Weapon3, 25, GTL, ship_owner));",
              "    AddItemToShip(inhib, CreateEquipment(t_Weapon3, 25, GTL, ship_owner));",
              "    AddItemToShip(inhib, CreateEquipment(t_DefGenerator, 20, GTL, ship_owner));",
              "    AddItemToShip(inhib, CreateEquipment(t_RepairRobot, 20, GTL, ship_owner));",
              "",
              "    ShipImproveItems(inhib, 20);",
              "",
              "    ShipSpecialBonuses(inhib, bonWEnergy, 10 + 5 * GTL);",
              "    ShipSpecialBonuses(inhib, bonWSplinter, 14 + 7 * GTL);",
              "    ShipSpecialBonuses(inhib, bonWMissile, 12 + 6 * GTL);",
              "    ShipSpecialBonuses(inhib, bonDef, 2 * GTL);",
              "    ShipSpecialBonuses(inhib, bonWRadius, 200);",
              "",
              "    result = inhib;",
              "}",
              "",
              "//Функция для создания верфи в указанной системе (возвращает верфь или 0, если создать верфь не получилось)",
              "function SpawnDomRuins(dword star, int sub_type)",
              "{",
              "    for(int i = 0; i < StarPlanets(star); i = i + 1)",
              "    {",
              "        dword planet = StarPlanets(star, i);",
              "        if(PlanetOwner(planet) == Kling)",
              "        {",
              "            dword ruin = BuyDomikExtremal(planet, 1);",
              "            NoScanToShip(ruin, 1);",
              "            NoTalkToShip(ruin, 1);",
              "",
              "            //Устанавливаем размер корпуса верфи",
              "            dword hull = ShipItems(ruin, 0);",
              "            ItemSize(hull, 625 * GTL + round(4.80 * GalaxyDiffLevels()) + RndObject(-165, 211, ruin));",
              "            if(ItemSize(hull) < 1200) ItemSize(hull, 1200 + RndObject(-63, 79, ruin));",
              "",
              "            //Устанавливаем строковый тип",
              "            ShipType(ruin, 'DomRuins');",
              "            //Выдаём верфи аЭгис",
              "            dword item = CreateArt(t_ArtPDTurret, None);",
              "            AddItemToShip(ruin, item);",
              "            ItemIsInUse(item, ruin, 1, 1);",
              "            NoDropItem(item, 1);",
              "",
              "            //Выбираем неповторяющееся имя (вплоть до N уникальных имён подряд, потом могут начать повторяться)",
              "            int names_count = CT('ShipName.Kling.Shipyards.Count');",
              "            str shipyard_name = CT('ShipName.Kling.Shipyards.' + RndObject(1, names_count, ruin));",
              "            while(~findsubstr(LastSpawnedShipyardNames, '*' + shipyard_name + '*')) shipyard_name = CT('ShipName.Kling.Shipyards.' + RndObject(1, names_count, ruin));",
              "            LastSpawnedShipyardNames = LastSpawnedShipyardNames + shipyard_name + '*';",
              "            //Если имён в строке скопилось слишком много, подчищаем её с конца",
              "            if(ParsCountFromString(LastSpawnedShipyardNames, '*') > (names_count - 8 + 2)) //В строке запоминается на 8 имён меньше от их максимального числа в списке",
              "            {",
              "                LastSpawnedShipyardNames = SetParFromString(LastSpawnedShipyardNames, '*', 1, '');",
              "                LastSpawnedShipyardNames = substr(LastSpawnedShipyardNames, 1);",
              "            }",
              "            shipyard_name = shipyard_name + ' -' + RndObject(1, 99, ruin) + '-';",
              "            SetName(ruin, shipyard_name);",
              "",
              "            //Доп. бонусы, если подключена EvoArmada",
              "            if(EvoArmadaInit)",
              "            {",
              "                int hull_level = ItemLevel(hull);",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "                int tint = round((3 * GeneralDiffLevel) + (3 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
              "                tint = round((0.5 * GeneralDiffLevel) + (0.5 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
              "",
              "                ShipSpecialBonuses(ruin, bonAttacks, 3);",
              "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
              "                ShipAddCustomShipInfo(ruin, 'EvoArmada_CapitalShipInfos', 'NoShow', 3);",
              "",
              "                //Увеличиваем размер корпуса",
              "                ItemSize(hull, round(ItemSize(hull) * (1.0 + (0.8 * GeneralDiffLevel))));",
              "            }",
              "",
              "            //Выравниваем количество HP корпуса",
              "            HullHP(ruin, ItemSize(hull));",
              "",
              "            //Добавляем верфи инфошку для автообновления и ремонта (при уничтожении верфи сама потрёт инфошку на звезде)",
              "            ShipAddCustomShipInfo(ruin, 'DomRuinsAutoUpgrade', 'NoShow', GTL, RndObject(24, 31, ruin), RndObject(160, 250, ruin));",
              "",
              "            //Случайным образом вычисляем координаты появления верфи",
              "            //Для местоположения верфи вычисляем случайную точку в пределах радиуса системы",
              "            //Вычислили угол",
              "            float angle = 0.01 * RndObject(0, 200, ruin);",
              "            //Вычислили радиус",
              "            int coordY = PlanetOrbitRadius(StarPlanets(star, StarPlanets(star) - 1)) + RndObject(-450, 200, ruin);//Расстояние от самой дальней планеты",
              "            float tflt = round(sin(angle * pi) * coordY);",
              "            int coordX = tflt; //Координата X",
              "            tflt = round(cos(angle * pi) * coordY);",
              "            coordY = tflt; //Координата Y",
              "",
              "            //Переносим верфь в определённую выше точку",
              "            ShipSetCoords(ruin, coordX, coordY);",
              "            TransferShip(ruin, star);",
              "",
              "            //Задаём внешний вид верфи и вешаем на звезду соответствующую инфошку",
              "            if(!sub_type)",
              "            {",
              "                Chameleon(ruin, 'Ruins.BlazerShipyard');",
              "                StarAddCustomStarInfo(star, 'DomRuins_' + Id(ruin), CT('ShipType.Dominator.DomRuins.1'), Dist(ruin, star), 'Bm.Ruins.BlazerShipyardi', CT('ShipType.Dominator.DomRuins.StarInfoSuffixBlazer'));",
              "            }",
              "            else if(sub_type == 1)",
              "            {",
              "                Chameleon(ruin, 'Ruins.KellerShipyard');",
              "                StarAddCustomStarInfo(star, 'DomRuins_' + Id(ruin), CT('ShipType.Dominator.DomRuins.1'), Dist(ruin, star), 'Bm.Ruins.KellerShipyardi', CT('ShipType.Dominator.DomRuins.StarInfoSuffixKeller'));",
              "            }",
              "            else //if(sub_type == 2)",
              "            {",
              "                Chameleon(ruin, 'Ruins.TerronShipyard');",
              "                StarAddCustomStarInfo(star, 'DomRuins_' + Id(ruin), CT('ShipType.Dominator.DomRuins.1'), Dist(ruin, star), 'Bm.Ruins.TerronShipyardi', CT('ShipType.Dominator.DomRuins.StarInfoSuffixTerron'));",
              "            }",
              "",
              "            break;",
              "        }",
              "    }",
              "",
              "    if(ruin) result = ruin;",
              "    else result = 0;",
              "}",
              "",
              "//Функция для исправления перевеса корабля (если он есть): расширяет вместимость корпуса, повышает HP до максимума",
              "function FixOverweight(ship)",
              "{",
              "    ShipCalcParam(ship);",
              "    int space = ShipFreeSpace(ship);",
              "    if(space < 0)",
              "    {",
              "        dword hull = ShipItems(ship, 0);",
              "        ItemSize(hull, ItemSize(hull) + abs(space) + RndObject(1, 3, ship));",
              "        HullHP(hull, 'To100');",
              "        ShipCalcParam(ship);",
              "    }",
              "}",
              "//Функция, удаляющая из трюма корабля всё оборудование и оружие, но не удаляющая скриптовые предметы",
              "function FreeAllHoldEquipment(ship)",
              "{",
              "    for(int i = ShipItems(ship) - 1; i > 0; i = i - 1)",
              "    {",
              "        dword item = ShipItems(ship, i);",
              "        if(ItemIsInUse(item)) continue;",
              "        if(ItemType(item) < t_FuelTanks) continue;",
              "        if(ItemType(item) > t_CustomWeapon) continue;",
              "        if(ItemInScript(item) == 1) continue;",
              "        FreeItem(GetItemFromShip(ship, i));",
              "    }",
              "}",
              "",
              "//Начальный перебор Галактики, раздаём бонусы доминаторам",
              "tint1 = BuildListOfNewShips(tempArr, lastShipId, 1+2, 1+2+4+8+16+32, 1, '', '');",
              "//if(!EvoArmadaInit) tint1 = BuildListOfNewShips(tempArr, lastShipId, 1+2, 1+2+4+8+16+32, 1, '', '');",
              "//else tint1 = BuildListOfNewShips(tempArr, lastShipId, 2, 1+2+4+8+16, 1, '', '');",
              "//Если нашли хоть один корабль по требуемым условиям",
              "if(tint1)",
              "{",
              "    for(tint1 = 0; tint1 < ArrayDim(tempArr); tint1 = tint1 + 1)",
              "    {",
              "        cur_ship = tempArr[tint1];",
              "        //Сразу исключаем все скриптовые корабли",
              "        if(ShipInScript(cur_ship, 0)) continue;",
              "        tint2 = ShipOwner(cur_ship);",
              "        tint3 = ShipSubType(cur_ship);",
              "        //Пропускаем доминаторских боссов",
              "        if(tint2 == Kling && !tint3) continue;",
              "        ShuDomiksMainUpgrade(cur_ship, tint2, ShipType(cur_ship), tint3);",
              "    }",
              "}",
              "lastShipId = GalaxyShipId();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -310,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  143,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(PlayerChameleonCurType() == 1) PlayerChameleonDetected(1, 1);",
              "Dialog(KellerCloneDialog, CurShip);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  128,
          "#":  144,
          "Total.Lines":  77,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Верфь самоуничтожается при поражении Террона",
              "if(DomiksDefeated(2))",
              "{",
              "    ShipDestroy(CurShip);",
              "    exit;",
              "}",
              "",
              "//Повышаем число доминаторов в системе до ~40 кораблей",
              "if(StarShips(ShipStar(CurShip)) < 40)",
              "{",
              "    if(!RndObject(0, 25, CurShip))",
              "    {",
              "        cur_ship = BuyDomikExtremal(NearCivilPlanet(CurShip));",
              "        ShipSetCoords(cur_ship, CoordX(CurShip), CoordY(CurShip));",
              "    }",
              "}",
              "",
              "//Спавним транклюкаторов верфи до 5 штук",
              "if(GroupCount(Trancs2) < 5)",
              "{",
              "    cur_ship = BuyDomikExtremal(NearCivilPlanet(CurShip), 5);",
              "    Chameleon(cur_ship, 'Ship.TranclucatorGreen');",
              "    ArrangeItems(cur_ship);",
              "    ShipJoin(Trancs2, cur_ship);",
              "}",
              "",
              "//Если сабмодем не заблокировал постройку супердоминаторов (скрипт spawnterron в ShuMiniBoss)",
              "if(!block_superdominator)",
              "{",
              "    //Делаем проверку на спавн супердоминатора бертора",
              "    if(TerronBertorsTimer <= CurTurn())",
              "    {",
              "        //Если лимит супердоминаторов берторов ещё не превышен",
              "        if(GroupCount(TerronBertors) < 2)",
              "        {",
              "            //Таймер уже был взведён и отсчитал нужное время",
              "            if(TerronBertorsTimer)",
              "            {",
              "                //Спавним супердоминатора бертора",
              "                cur_ship = BuySuperdominator(NearCivilPlanet(CurShip), 6, 'Terron');",
              "                ShipSetCoords(cur_ship, CoordX(CurShip), CoordY(CurShip));",
              "                ShipJoin(TerronBertors, cur_ship);",
              "                //Перезапускаем таймер",
              "                if(GroupCount(TerronBertors) < 2) TerronBertorsTimer = CurTurn() + 1460;",
              "                //Либо обнуляем его, если число берторов уже и так максимально",
              "                else TerronBertorsTimer = 0;",
              "            }",
              "            //Ранее таймер взведён не был, значит один из берторов погиб только что",
              "            else TerronBertorsTimer = CurTurn() + 1460; //4 года",
              "        }",
              "        else TerronBertorsTimer = 0;",
              "    }",
              "",
              "    //Делаем проверку на спавн супердоминатора",
              "    if(TerronSupersTimer <= CurTurn())",
              "    {",
              "        //Если лимит супердоминаторов ещё не превышен",
              "        if(GroupCount(TerronSupers) < 2)",
              "        {",
              "            //Таймер уже был взведён и отсчитал нужное время",
              "            if(TerronSupersTimer)",
              "            {",
              "                //Спавним супердоминатора",
              "                cur_ship = BuySuperdominator(NearCivilPlanet(CurShip), RndObject(1, 5, CurShip), 'Terron');",
              "                ShipSetCoords(cur_ship, CoordX(CurShip), CoordY(CurShip));",
              "                ShipJoin(TerronSupers, cur_ship);",
              "                //Перезапускаем таймер",
              "                if(GroupCount(TerronSupers) < 2) TerronSupersTimer = CurTurn() + 365;",
              "                //Либо обнуляем его, если число супердоминаторов уже и так максимально",
              "                else TerronSupersTimer = 0;",
              "            }",
              "            //Ранее таймер взведён не был, значит один из супердоминаторов погиб только что",
              "            else TerronSupersTimer = CurTurn() + 365; //1 год",
              "        }",
              "        else TerronSupersTimer = 0;",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  190,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  145,
          "Total.Lines":  11,
          "Code.Type":  "Turn",
          "Code":          
          [
              "i=CreateNodes(Rnd(10,30),2,0);",
              "if(!GetNodesFromShip(CurShip) && ShipFreeSpace(CurShip)>=30)AddItemToShip(CurShip,i);",
              "ArrangeItems(CurShip);",
              "OrderLock(CurShip,0);",
              "OrderTakeOff(CurShip);",
              "ShipType(CurShip,'DomTrank');",
              "if(!GroupCount(DomRuinsTerron))",
              "{",
              "    OrderLock(CurShip,0);",
              "    ShipOut(CurShip);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  80,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  146,
          "Total.Lines":  11,
          "Code.Type":  "Turn",
          "Code":          
          [
              "i=CreateNodes(Rnd(10,30),1,0);",
              "if(!GetNodesFromShip(CurShip) && ShipFreeSpace(CurShip)>=30) AddItemToShip(CurShip,i);",
              "ArrangeItems(CurShip);",
              "OrderLock(CurShip,0);",
              "OrderTakeOff(CurShip);",
              "ShipType(CurShip,'DomTrank');",
              "if(!GroupCount(DomRuinsKeller))",
              "{",
              "    OrderLock(CurShip,0);",
              "    ShipOut(CurShip);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -30,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  147,
          "Total.Lines":  11,
          "Code.Type":  "Turn",
          "Code":          
          [
              "i=CreateNodes(Rnd(10,30),0,0);",
              "if(!GetNodesFromShip(CurShip) && ShipFreeSpace(CurShip)>=30)AddItemToShip(CurShip,i);",
              "ArrangeItems(CurShip);",
              "OrderLock(CurShip,0);",
              "OrderTakeOff(CurShip);",
              "ShipType(CurShip,'DomTrank');",
              "if(!GroupCount(DomRuinsBlazer))",
              "{",
              "    OrderLock(CurShip,0);",
              "    ShipOut(CurShip);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  139,
          "#":  148,
          "Total.Lines":  74,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Верфь самоуничтожается при поражении Келлера",
              "if(DomiksDefeated(1))",
              "{",
              "    ShipDestroy(CurShip);",
              "    exit;",
              "}",
              "",
              "//Повышаем число доминаторов в системе до ~35 кораблей",
              "if(StarShips(ShipStar(CurShip)) < 35)",
              "{",
              "    if(!RndObject(0, 25, CurShip))",
              "    {",
              "        cur_ship = BuyDomikExtremal(NearCivilPlanet(CurShip));",
              "        ShipSetCoords(cur_ship, CoordX(CurShip), CoordY(CurShip));",
              "    }",
              "}",
              "",
              "//Спавним транклюкаторов верфи до 5 штук",
              "if(GroupCount(Trancs1) < 5)",
              "{",
              "    cur_ship = BuyDomikExtremal(NearCivilPlanet(CurShip), 5);",
              "    Chameleon(cur_ship, 'Ship.TranclucatorBlue');",
              "    ArrangeItems(cur_ship);",
              "    ShipType(cur_ship, 'Tranclucator');",
              "    ShipJoin(Trancs1, cur_ship);",
              "}",
              "",
              "//Делаем проверку на спавн супердоминатора бертора",
              "if(KellerBertorsTimer <= CurTurn())",
              "{",
              "    //Если лимит супердоминаторов берторов ещё не превышен",
              "    if(GroupCount(KellerBertors) < 2)",
              "    {",
              "        //Таймер уже был взведён и отсчитал нужное время",
              "        if(KellerBertorsTimer)",
              "        {",
              "            //Спавним супердоминатора бертора",
              "            cur_ship = BuySuperdominator(NearCivilPlanet(CurShip), 6, 'Keller');",
              "            ShipSetCoords(cur_ship, CoordX(CurShip), CoordY(CurShip));",
              "            ShipJoin(KellerBertors, cur_ship);",
              "            //Перезапускаем таймер",
              "            if(GroupCount(KellerBertors) < 2) KellerBertorsTimer = CurTurn() + 1460;",
              "            //Либо обнуляем его, если число берторов уже и так максимально",
              "            else KellerBertorsTimer = 0;",
              "        }",
              "        //Ранее таймер взведён не был, значит один из берторов погиб только что",
              "        else KellerBertorsTimer = CurTurn() + 1460; //4 года",
              "    }",
              "    else KellerBertorsTimer = 0;",
              "}",
              "",
              "//Делаем проверку на спавн супердоминатора",
              "if(KellerSupersTimer <= CurTurn())",
              "{",
              "    //Если лимит супердоминаторов ещё не превышен",
              "    if(GroupCount(KellerSupers) < 2)",
              "    {",
              "        //Таймер уже был взведён и отсчитал нужное время",
              "        if(KellerSupersTimer)",
              "        {",
              "            //Спавним супердоминатора",
              "            cur_ship = BuySuperdominator(NearCivilPlanet(CurShip), RndObject(1, 5, CurShip), 'Keller');",
              "            ShipSetCoords(cur_ship, CoordX(CurShip), CoordY(CurShip));",
              "            ShipJoin(KellerSupers, cur_ship);",
              "            //Перезапускаем таймер",
              "            if(GroupCount(KellerSupers) < 2) KellerSupersTimer = CurTurn() + 365;",
              "            //Либо обнуляем его, если число супердоминаторов уже и так максимально",
              "            else KellerSupersTimer = 0;",
              "        }",
              "        //Ранее таймер взведён не был, значит один из супердоминаторов погиб только что",
              "        else KellerSupersTimer = CurTurn() + 365; //1 год",
              "    }",
              "    else KellerSupersTimer = 0;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  140,
          "#":  149,
          "Total.Lines":  75,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Верфь самоуничтожается при поражении Блазера",
              "if(DomiksDefeated(0))",
              "{",
              "    ShipDestroy(CurShip);",
              "    exit;",
              "}",
              "",
              "//Повышаем число доминаторов в системе до ~50 кораблей",
              "dword cur_star = ShipStar(CurShip);",
              "if(StarShips(cur_star) < 50)",
              "{",
              "    if(!RndObject(0, 25, CurShip))",
              "    {",
              "        cur_ship = BuyDomikExtremal(NearCivilPlanet(CurShip));",
              "        ShipSetCoords(cur_ship, CoordX(CurShip), CoordY(CurShip));",
              "    }",
              "}",
              "",
              "//Спавним транклюкаторов верфи до 5 штук",
              "if(GroupCount(Trancs0) < 5)",
              "{",
              "    cur_ship = BuyDomikExtremal(NearCivilPlanet(CurShip), 5);",
              "    Chameleon(cur_ship, 'Ship.TranclucatorRed');",
              "    ArrangeItems(cur_ship);",
              "    ShipJoin(Trancs0, cur_ship);",
              "    ShipType(cur_ship, 'Tranclucator');",
              "}",
              "",
              "//Делаем проверку на спавн супердоминатора бертора",
              "if(BlazerBertorsTimer <= CurTurn())",
              "{",
              "    //Если лимит супердоминаторов берторов ещё не превышен",
              "    if(GroupCount(BlazerBertors) < 2)",
              "    {",
              "        //Таймер уже был взведён и отсчитал нужное время",
              "        if(BlazerBertorsTimer)",
              "        {",
              "            //Спавним супердоминатора бертора",
              "            cur_ship = BuySuperdominator(NearCivilPlanet(CurShip), 6, 'Blazer');",
              "            ShipSetCoords(cur_ship, CoordX(CurShip), CoordY(CurShip));",
              "            ShipJoin(BlazerBertors, cur_ship);",
              "            //Перезапускаем таймер",
              "            if(GroupCount(BlazerBertors) < 2) BlazerBertorsTimer = CurTurn() + 1460;",
              "            //Либо обнуляем его, если число берторов уже и так максимально",
              "            else BlazerBertorsTimer = 0;",
              "        }",
              "        //Ранее таймер взведён не был, значит один из берторов погиб только что",
              "        else BlazerBertorsTimer = CurTurn() + 1460;//4 года",
              "    }",
              "    else BlazerBertorsTimer = 0;",
              "}",
              "",
              "//Делаем проверку на спавн супердоминатора",
              "if(BlazerSupersTimer <= CurTurn())",
              "{",
              "    //Если лимит супердоминаторов ещё не превышен",
              "    if(GroupCount(BlazerSupers) < 2)",
              "    {",
              "        //Таймер уже был взведён и отсчитал нужное время",
              "        if(BlazerSupersTimer)",
              "        {",
              "            //Спавним супердоминатора",
              "            cur_ship = BuySuperdominator(NearCivilPlanet(CurShip), RndObject(1, 5, CurShip), 'Blazer');",
              "            ShipSetCoords(cur_ship, CoordX(CurShip), CoordY(CurShip));",
              "            ShipJoin(BlazerSupers, cur_ship);",
              "            //Перезапускаем таймер",
              "            if(GroupCount(BlazerSupers) < 2) BlazerSupersTimer = CurTurn() + 365;",
              "            //Либо обнуляем его, если число супердоминаторов уже и так максимально",
              "            else BlazerSupersTimer = 0;",
              "        }",
              "        //Ранее таймер взведён не был, значит один из супердоминаторов погиб только что",
              "        else BlazerSupersTimer = CurTurn() + 365; //1 год",
              "    }",
              "    else BlazerSupersTimer = 0;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -280,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  150,
          "Total.Lines":  12,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(ShipInHyperSpace(CurShip)) ShipDestroy(CurShip);",
              "else if(!GetShipPlanet(CurShip))",
              "{",
              "    OrderLock(CurShip, 0);",
              "    OrderLanding(CurShip, NearCivilPlanet(CurShip));",
              "    OrderLock(CurShip, 1);",
              "}",
              "",
              "if(GroupIn(InhibitorDestroy, NearCivilPlanet(CurShip)))",
              "{",
              "    MakeShipEnterStar(CurShip, StarNearbyStars(ShipStar(Player()), 50), GalaxyStar(71), 10);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -310,
          "Pos.y":  50,
          "Parent":  -1,
          "#":  151,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(ShipInNormalSpace(CurShip)) OrderJump(CurShip, StarNearbyStars(ShipStar(CurShip), 70));",
              "else ShipDestroy(CurShip);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -280,
          "Pos.y":  -50,
          "Parent":  -1,
          "#":  152,
          "Total.Lines":  110,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(BonusNumInCfg(InhibOnBonusNum) != 'ShuDomiks_InhibitorOn' || BonusNumInCfg(InhibOffBonusNum) != 'ShuDomiks_InhibitorOff')",
              "{",
              "    InhibOnBonusNum = FindBonusByNameInCfg('ShuDomiks_InhibitorOn');",
              "    InhibOffBonusNum = FindBonusByNameInCfg('ShuDomiks_InhibitorOff');",
              "}",
              "",
              "//Повреждённый ингибитор не может блокировать входящие в систему корабли",
              "if(HullDamage(CurShip))",
              "{",
              "    //Выключаем ингибитор",
              "    if(HullSpecial(CurShip) != InhibOffBonusNum)",
              "    {",
              "        //Переключение режима путём смены акрина спамит в лог варнинг",
              "        //Однако необходимо это для того, чтобы обеспечивалась моментальная смена анимации",
              "        //Без завершения предыдущей",
              "        if(ShipStar(CurShip) == ShipStar(Player()))",
              "        {",
              "            SwitchToMirrorImage(CurShip, InhibOffBonusNum);",
              "        }",
              "    }",
              "}",
              "else",
              "{",
              "    //Включаем ингибитор",
              "    if(HullSpecial(CurShip) != InhibOnBonusNum)",
              "    {",
              "        //Переключение режима путём смены акрина спамит в лог варнинг",
              "        //Однако необходимо это для того, чтобы обеспечивалась моментальная смена анимации",
              "        //Без завершения предыдущей",
              "        if(ShipStar(CurShip) == ShipStar(Player()))",
              "        {",
              "            SwitchToMirrorImage(CurShip, InhibOnBonusNum);",
              "        }",
              "    }",
              "",
              "    //Начинаем перебор системы в поисках \"нелегальных\" вторженцев",
              "    dword cur_star = ShipStar(CurShip);",
              "    int enemy_standing = 8;",
              "    if(StarOwner(cur_star) == 2) enemy_standing = 2;",
              "    for(i = 0; i < StarShips(cur_star); i = i + 1)",
              "    {",
              "        cur_ship = StarShips(cur_star, i);",
              "",
              "        //Только если корабль находится в гипере, но при этом не в ЧД (через ЧД нападают клисане)",
              "        if(!ShipInHyperSpace(cur_ship)) continue;",
              "        if(ShipOrder(cur_ship) == 4) continue;",
              "        //Пропускаем игрока",
              "        if(IsPlayer(cur_ship)) continue;",
              "        //Исключаем станции",
              "        if(ObjectType(cur_ship) == 4) continue;",
              "        //Исключаем всех, кроме доминаторов и кораблей с кастомной фракцией",
              "        //if(ShipOwner(cur_ship) != 5 && ShipCustomFaction(cur_ship) == '') continue;",
              "",
              "        //Ловим доминаторов, враждебные кастомные фракции, а также пиратов и военных в зависимости от того, кому сейчас принадлежит система",
              "        int standing = ShipStanding(cur_ship);",
              "        check = 0;",
              "        if(!standing)",
              "        {",
              "            //Пропускаем доминаторских боссов",
              "            if(ShipSubType(cur_ship)) check = 1;",
              "        }",
              "        else if(standing == 9)",
              "        {",
              "            //Пропускаем прочих возможных боссов",
              "            if(ShipSubType(cur_ship)) check = 1;",
              "        }",
              "        else if(standing == enemy_standing)",
              "        {",
              "            check = 1;",
              "        }",
              "        ",
              "        if(!check) continue;",
              "        //Определяем шанс на перенаправление данного корабля",
              "        if(ShipOwner(cur_ship) == 5) tint2 = 35;",
              "        if(ShipCustomFaction(cur_ship) == 'Klissan') tint2 = 40;",
              "        if(ShipType(cur_ship) == 'Superdominator') tint2 = 75;",
              "",
              "        if(RndObject(1, 100, CurShip) <= tint2)",
              "        {",
              "            //Определяем систему, в которую будет перенаправлен корабль",
              "            Dom = StarNearbyStars(cur_star, RndObject(1, 10, CurShip));",
              "            check = 0;",
              "            //Если перенаправление выпало на систему в скрытом пиратском секторе, то просто уничтожаем корабль",
              "            if(StarToCon(Dom) == StarToCon(PlanetToStar(PlanetPirateClan())))",
              "            {",
              "                if(!PirateWin()) ShipDestroy(cur_ship);",
              "                else check = 1;",
              "            }",
              "            else check = 1;",
              "",
              "            //Если корабль не попал в скрытый сектор, то производим его перенаправление",
              "            if(check)",
              "            {",
              "                //Перенаправляем корабль в другую систему",
              "                MakeShipEnterStar(cur_ship, Dom, cur_star, RndObject(7, 15, CurShip));",
              "                //Рассчитываем и применяем урон, который получил корабль в момент перенаправления",
              "                tint1 = HullHP(cur_ship);",
              "                tint1 = tint1 / 10 * PortionInDiapason(GTL, 1, 8, 9, 2) + RndObject(-tint1 / 20, tint1 / 20, CurShip);",
              "                DealDamageToShip(cur_ship, 0, tint1, 1+256+2048+4096);",
              "            }",
              "        }",
              "        //Рассчитываем и применяем урон, который получил корабль, \"прорвавшийся\" в систему через ингибитор",
              "        else",
              "        {",
              "            tint1 = HullHP(cur_ship);",
              "            tint1 = tint1 / 10 * PortionInDiapason(GTL, 1, 8, 9, 2) + RndObject(-tint1 / 20, tint1 / 20, CurShip);",
              "            DealDamageToShip(cur_ship, 0, tint1, 1+256+2048+4096);",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  260,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  153,
          "Total.Lines":  16,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipType(CurShip,'DomTrank');",
              "if(ShipInNormalSpace(CurShip) && GroupCount(DomRuinsTerron))",
              "{",
              "    if(!OrderLock(CurShip))OrderLanding(CurShip,NearCivilPlanet(GroupToShip(DomRuinsTerron)));",
              "    OrderLock(CurShip,1);",
              "}",
              "else if(ShipInNormalSpace(CurShip))",
              "{",
              "    OrderLock(CurShip,0);",
              "    ShipOut(CurShip);",
              "}",
              "if(!GroupCount(DomRuinsTerron))",
              "{",
              "    OrderLock(CurShip,0);",
              "    ShipOut(CurShip);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  190,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  154,
          "Total.Lines":  11,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipType(CurShip,'DomTrank');",
              "if(ShipInNormalSpace(CurShip))",
              "{",
              "    if(!OrderLock(CurShip))OrderLanding(CurShip,GroupToShip(DomRuinsTerron));",
              "    OrderLock(CurShip,1);",
              "}",
              "if(!GroupCount(DomRuinsTerron))",
              "{",
              "    OrderLock(CurShip,0);",
              "    ShipOut(CurShip);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  40,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  155,
          "Total.Lines":  16,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipType(CurShip,'DomTrank');",
              "if(ShipInNormalSpace(CurShip) && GroupCount(DomRuinsBlazer))",
              "{",
              "    if(!OrderLock(CurShip))OrderLanding(CurShip,NearCivilPlanet(GroupToShip(DomRuinsBlazer)));",
              "    OrderLock(CurShip,1);",
              "}",
              "else if(ShipInNormalSpace(CurShip))",
              "{",
              "    OrderLock(CurShip,0);",
              "    ShipOut(CurShip);",
              "}",
              "if(!GroupCount(DomRuinsBlazer))",
              "{",
              "    OrderLock(CurShip,0);",
              "    ShipOut(CurShip);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  150,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  156,
          "Total.Lines":  16,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipType(CurShip,'DomTrank');",
              "if(ShipInNormalSpace(CurShip) && GroupCount(DomRuinsKeller))",
              "{",
              "    if(!OrderLock(CurShip))OrderLanding(CurShip,NearCivilPlanet(GroupToShip(DomRuinsKeller)));",
              "    OrderLock(CurShip,1);",
              "}",
              "else if(ShipInNormalSpace(CurShip))",
              "{",
              "    OrderLock(CurShip,0);",
              "    ShipOut(CurShip);",
              "}",
              "if(!GroupCount(DomRuinsKeller))",
              "{",
              "    OrderLock(CurShip,0);",
              "    ShipOut(CurShip);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -30,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  157,
          "Total.Lines":  11,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipType(CurShip,'DomTrank');",
              "if(ShipInNormalSpace(CurShip))",
              "{",
              "    if(!OrderLock(CurShip))OrderLanding(CurShip,GroupToShip(DomRuinsBlazer));",
              "    OrderLock(CurShip,1);",
              "}",
              "if(!GroupCount(DomRuinsBlazer))",
              "{",
              "    OrderLock(CurShip,0);",
              "    ShipOut(CurShip);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  80,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  158,
          "Total.Lines":  11,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipType(CurShip,'DomTrank');",
              "if(ShipInNormalSpace(CurShip))",
              "{",
              "    if(!OrderLock(CurShip))OrderLanding(CurShip,GroupToShip(DomRuinsKeller));",
              "    OrderLock(CurShip,1);",
              "}",
              "if(!GroupCount(DomRuinsKeller))",
              "{",
              "    OrderLock(CurShip,0);",
              "    ShipOut(CurShip);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1160,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  164,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Вычисляем пиратскую скидку в виде процента (для подстановки в диалог)",
              "discount = round(100.0 * ShipStatus(Player(), 1) / 130) + 1;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  420,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  165,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "credit_cost=GalaxyMoney(4)*7;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  420,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  166,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cur_ship = StarRuins(ShipStar(Player()), 'Inhibitor');",
              "credit_cost = ItemCost(ShipItems(cur_ship, 0)) * 30 / 100;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1000,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  167,
          "Total.Lines":  15,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tint3 = DomModUnlocksPerformedSB * 5; //Определяем коэффициент для расчёта цены следующей разблокировки",
              "for(i = 1; i < ShipItems(Player()); i = i + 1)",
              "{",
              "    cur_item = ShipItems(Player(), i);",
              "    tint1 = EqSpecial(cur_item);",
              "    if(~tint1)",
              "    {",
              "        tstr1 = BonusNumInCfg(tint1);",
              "        if(~findsubstr(tstr1, 'DomModLocked'))",
              "        {",
              "            InjectAnswer('DomModUnlockCBGo', Name(cur_item), cur_item);",
              "        }",
              "    }",
              "}",
              "DAnswer('restart~' + \"Ничего я выбирать не буду\");"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  610,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  170,
          "Total.Lines":  6,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Запоминаем возможные проценты снижения характеристики предмета в случае неудачи",
              "tint1=85;",
              "tint2=90;",
              "//Кидаем \"кости\"",
              "chance=Id(cur_item)+40;",
              "chance=abs((chance*chance*chance+chance/10)%100)+1;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  171,
          "Total.Lines":  9,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Запоминаем возможные проценты снижения характеристики предмета в случае неудачи",
              "tint1=82;",
              "tint2=87;",
              "//Запоминаем цену выбранного эксперимента",
              "credit_cost=credit_cost/2;",
              "nodes_cost=nodes_cost/2;",
              "//Кидаем \"кости\"",
              "chance=Id(cur_item)+41;",
              "chance=abs((chance*chance*chance+chance/10)%100)+1;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  790,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  172,
          "Total.Lines":  9,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Запоминаем возможные проценты снижения характеристики предмета в случае неудачи",
              "tint1=80;",
              "tint2=85;",
              "//Запоминаем цену выбранного эксперимента",
              "credit_cost=credit_cost/4;",
              "nodes_cost=nodes_cost/4;",
              "//Кидаем \"кости\"",
              "chance=Id(cur_item)+42;",
              "chance=abs((chance*chance*chance+chance/10)%100)+1;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1180,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  173,
          "Total.Lines":  3,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player(), ShipMoney(Player()) - credit_cost);",
              "DomModUnlocksAccessCB = 1;",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1180,
          "Pos.y":  90,
          "Parent":  -1,
          "#":  174,
          "Total.Lines":  20,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Случайно определяем шанс успеха (из строгого диапазона) текущего эксперимента",
              "rand=Rnd(MinChanceUnlockCB,MaxChanceUnlockCB);",
              "//Запоминаем возможные проценты снижения/повышения характеристики предмета в случае неудачи",
              "tint1=60+DomModUnlocksPerformedSB;",
              "tint2=110+DomModUnlocksPerformedSB;",
              "if(tint1>90)tint1=90;",
              "if(tint2>140)tint2=140;",
              "//Если ГТУ ещё недостаточно высок, существенно снижаем шансы успеха",
              "if(GalaxyTechLevel() == MinGTLToDomAcrynUnlock-1)",
              "{",
              "    rand=rand-25;",
              "    tint1=tint1-25;",
              "    tint2=tint2-25;",
              "}",
              "//Отнимаем у игрока требуемое количество денег и нодов",
              "ShipMoney(Player(),ShipMoney(Player())-credit_cost);",
              "GetNodesFromShip(Player(),nodes_cost);",
              "//Кидаем \"кости\"",
              "chance=Id(cur_item)+57;",
              "chance=abs((chance*chance*chance+chance/10)%100)+1;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1030,
          "Pos.y":  20,
          "Parent":  -1,
          "#":  175,
          "Total.Lines":  3,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player(), ShipMoney(Player()) - credit_cost);",
              "DomModUnlocksAccessCB = 1;",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  200,
          "Pos.y":  70,
          "Parent":  -1,
          "#":  176,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "Ether(4, 'KellerCloneTask', Format(CT('Script.Mod_ShuDomiks.KellerCloneTask'), '#0#', Name(ShipStar(GetTalkShip()))));"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  200,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  177,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "Ether(4, 'KellerCloneTask', Format(CT('Script.Mod_ShuDomiks.KellerCloneTask'), '#0#', Name(ShipStar(GetTalkShip()))));",
              "WasKellerCloneSpawned = 2;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  470,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  178,
          "Total.Lines":  9,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player(), ShipMoney(Player()) - credit_cost);",
              "Sound('Sound.Buy');",
              "NextBuyInhib = CurTurn() + 1095;//Три года",
              "cur_item = CreateQuestItem('InhibitorPlaceBeacon', ShipPilotRace(cur_ruin));",
              "ItemSize(cur_item, 1);",
              "ItemCost(cur_item, 1);",
              "//Цена будущего ингибитора запоминается в переменной маяка",
              "UselessItemData(cur_item, 2, credit_cost);",
              "AddItemToShip(Player(), cur_item);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  470,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  179,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "NextBuyInhib = 0;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  470,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  180,
          "Total.Lines":  7,
          "Code.Type":  "Turn",
          "Code":          
          [
              "Sound('Sound.ForsageOn');",
              "ShipSpecialBonuses(cur_ship, bonDef, -10000);",
              "ShipSpecialBonuses(cur_ship, bonDroid, -10000);",
              "ShipSpecialBonuses(cur_ship, bonHull, -1);",
              "ShipSpecialBonuses(cur_ship, bonRadar, -10000);",
              "ShipMoney(Player(), ShipMoney(Player()) + credit_cost);",
              "ShipJoin(InhibitorDestroy, cur_ship);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  610,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  185,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "LastTalkAboutDomAcrynsOnSB=1;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  860,
          "Pos.y":  -60,
          "Parent":  -1,
          "#":  186,
          "Total.Lines":  3,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(MinGTLToDomAcrynUnlock-GalaxyTechLevel()==1)tstr1=\"Тем не менее, исследования в этом направлении идут полным ходом и в скором времени мы должны совершить прорыв.\";",
              "if(MinGTLToDomAcrynUnlock-GalaxyTechLevel()==2)tstr1=\"Мы активно проводим исследования в этом направлении, но, все же, еще далеки от успеха.\";",
              "if(MinGTLToDomAcrynUnlock-GalaxyTechLevel()==3)tstr1=\"Мы лишь сравнительно недавно мобилизовали персонал для этой задачи и пока не имеем серьезных успехов.\";"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1260,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  199,
          "Total.Lines":  7,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Уничтожаем предмет",
              "FreeItem(GetItemFromShip(Player(),FindItemInShip(Player(),cur_item)));",
              "//Повышаем шансы на разблокировку других акринов в будущем",
              "DomModUnlocksPerformedSB=DomModUnlocksPerformedSB+1;",
              "if(MinChanceUnlockCB<50)MinChanceUnlockCB=MinChanceUnlockCB+Rnd(0,2);",
              "if(MaxChanceUnlockCB<100)MaxChanceUnlockCB=MaxChanceUnlockCB+Rnd(0,2);",
              "Sound('Sound.QuestCancel');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1100,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  200,
          "Total.Lines":  9,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Предварительно сперва снимаем акрин, чтобы снять уже наложенные модификаторы стоимости и размера",
              "tint3=FindBonusByNameInCfg(DeleteTags(Format(BonusNumInCfg(EqSpecial(cur_item)),'Locked','Unlocked')));",
              "SpecialToEquipment(-1,cur_item);",
              "SpecialToEquipment(tint3,cur_item);",
              "//Повышаем шансы на разблокировку других акринов в будущем",
              "DomModUnlocksPerformedSB=DomModUnlocksPerformedSB+1;",
              "if(MinChanceUnlockCB<50)MinChanceUnlockCB=MinChanceUnlockCB+Rnd(0,2);",
              "if(MaxChanceUnlockCB<100)MaxChanceUnlockCB=MaxChanceUnlockCB+Rnd(0,2);",
              "Sound('Sound.Repair');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1180,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  201,
          "Total.Lines":  29,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Предварительно сперва снимаем акрин, чтобы снять уже наложенные модификаторы стоимости и размера",
              "tint3=FindBonusByNameInCfg(DeleteTags(Format(BonusNumInCfg(EqSpecial(cur_item)),'Locked','Unlocked')));",
              "SpecialToEquipment(-1,cur_item);",
              "SpecialToEquipment(tint3,cur_item);",
              "//Переходим к определению побочного ущерба/бонуса предмету",
              "chance=Rnd(1,100);",
              "if(chance>55)",
              "{",
              "    SetEquipmentStats(cur_item,GetEquipmentStats(cur_item,0)*Rnd(tint1,tint2)/100,0);",
              "    tstr2='</color>'+\"Только вот нашим парням пришлось убрать парочку мешавших деталек, так что характеристики оборудования могли слегка поменяться.\";",
              "}",
              "else",
              "{",
              "    if(chance>30 && ItemLevel(cur_item)>1)",
              "    {",
              "        ItemLevel(cur_item,ItemLevel(cur_item)-1);",
              "        tstr2='</color>'+\"Но при совмещении всплыло несколько досадных багов, из-за которых технический уровень оборудования упал.\";",
              "    }",
              "    else",
              "    {",
              "        ItemDurability(cur_item,0);",
              "        tstr2='</color>'+\"К сожалению, при совмещении оборудование вышло из строя. Впрочем, это всё ерунда, верно?\";",
              "    }",
              "}",
              "//Повышаем шансы на разблокировку других акринов в будущем",
              "DomModUnlocksPerformedSB=DomModUnlocksPerformedSB+1;",
              "if(MinChanceUnlockCB<50)MinChanceUnlockCB=MinChanceUnlockCB+Rnd(0,2);",
              "if(MaxChanceUnlockCB<100)MaxChanceUnlockCB=MaxChanceUnlockCB+Rnd(0,2);",
              "Sound('Sound.Repair');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  400,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  205,
          "Total.Lines":  48,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "cur_ruin = GetShipRuins(Player());",
              "if(cur_ruin)",
              "{",
              "    if(!PlayerBridge())",
              "    {",
              "        tstr1 = ShipType(cur_ruin);",
              "",
              "        if(tstr1 == 'SB')",
              "        {",
              "            if(!LastTalkAboutDomAcrynsOnSB)",
              "            {",
              "                if(UnknownDomAcrynsTimer == -1) AddDialogInject('DomModUnlockSB', '', \"Мне надо разблокировать доминаторский акрин\", 1);",
              "            }",
              "        }",
              "        else if(tstr1 == 'RC')",
              "        {",
              "            if(!ShipOnSidePirateClan(Player()))",
              "            {",
              "                //NextBuyInhib == -1 - игрок ещё не знает об ингибиторах",
              "                //NextBuyInhib > -1 - игрок получил информацию об ингибиторах, и эта переменная превращается в счётчик до возможности приобрести следующий ингибитор",
              "                if(NextBuyInhib < 0) AddDialogInject('BuyInhibitor', \"<Player>, вам так же определённо захочется узнать о возможности вашего участия в программе бета-теста нашей <clr>новой технологии по противодействию организованным нападениям доминаторов<clrEnd>\", \"Я хочу узнать о новой антидоминаторской технологии\", 1);",
              "                else AddDialogInject('BuyInhibitor', '', \"Приобрести ингибиторы\", 1);",
              "            }",
              "        }",
              "        else if(tstr1 == 'CB')",
              "        {",
              "            AddDialogInject('DomModUnlockCB', '', \"Мне надо разблокировать доминаторский акрин\", 1);",
              "        }",
              "    }",
              "    else",
              "    {",
              "        //Пока блокирую демонтаж (нет), т.к. написан он хуёво",
              "        if(PlayerBridge() == 1 || PlayerBridge() == 3)",
              "        {",
              "            Dom = StarRuins(ShipStar(Player()), 'Inhibitor');",
              "            if(Dom)",
              "            {",
              "                i = 1;",
              "                if(!ShipInScript(Dom)) i = 0;",
              "                else if(ShipGroup(Dom) == InhibitorDestroy) i = 0;",
              "                if(StarBattle(ShipStar(Player()))) i = 0;",
              "                if(GroupCount(InhibitorDestroy)) i = 0;",
              "                if(!ItemCost(ShipItems(Dom, 0))) i = 0;",
              "                if(i) AddDialogInject('DestroyInhibitor', '', \"Демонтировать <Name(Dom)>\", 1);",
              "            }",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  630,
          "Pos.y":  50,
          "Parent":  -1,
          "#":  226,
          "Total.Lines":  12,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Предварительно сперва снимаем акрин, чтобы снять уже наложенные модификаторы стоимости и размера",
              "tint3=FindBonusByNameInCfg(DeleteTags(Format(BonusNumInCfg(EqSpecial(cur_item)),'Locked','Unlocked')));",
              "SpecialToEquipment(-1,cur_item);",
              "SpecialToEquipment(tint3,cur_item);",
              "ShipMoney(Player(),ShipMoney(Player())-credit_cost);",
              "GetNodesFromShip(Player(),nodes_cost);",
              "//Повышаем шансы на разблокировку других акринов в будущем",
              "DomModUnlocksPerformedSB=DomModUnlocksPerformedSB+1;",
              "if(RookieChanceUnlockSB<60)RookieChanceUnlockSB=RookieChanceUnlockSB+Rnd(1,3);",
              "if(OrdinaryChanceUnlockSB<75)OrdinaryChanceUnlockSB=OrdinaryChanceUnlockSB+2;",
              "if(ProfiChanceUnlockSB<90)ProfiChanceUnlockSB=ProfiChanceUnlockSB+2;",
              "Sound('Sound.Repair');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  50,
          "Parent":  -1,
          "#":  228,
          "Total.Lines":  32,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Предварительно сперва снимаем акрин, чтобы снять уже наложенные модификаторы стоимости и размера",
              "tint3=FindBonusByNameInCfg(DeleteTags(Format(BonusNumInCfg(EqSpecial(cur_item)),'Locked','Unlocked')));",
              "SpecialToEquipment(-1,cur_item);",
              "SpecialToEquipment(tint3,cur_item);",
              "//Переходим к определению побочного ущерба предмету",
              "chance=Rnd(1,100);",
              "if(chance>55)",
              "{",
              "    SetEquipmentStats(cur_item,GetEquipmentStats(cur_item,0)*Rnd(tint1,tint2)/100,0);",
              "    tstr2='</color>'+\"К несчастью, при снятии блокировки мы повредили оборудование и одна из его характеристик снизилась.\";",
              "}",
              "else",
              "{",
              "    if(chance>30 && ItemLevel(cur_item)>1)",
              "    {",
              "        ItemLevel(cur_item,ItemLevel(cur_item)-1);",
              "        tstr2='</color>'+\"Но совмещение оборудования произошло с ошибками, и его технический уровень упал.\";",
              "    }",
              "    else",
              "    {",
              "        ItemDurability(cur_item,0);",
              "        tstr2='</color>'+\"К сожалению, при совмещении оборудование вышло из строя. Впрочем, это не критично и мастера из соседнего отдела смогут устранить дефекты.\";",
              "    }",
              "}",
              "ShipMoney(Player(),ShipMoney(Player())-credit_cost);",
              "GetNodesFromShip(Player(),nodes_cost);",
              "//Повышаем шансы на разблокировку других акринов в будущем",
              "DomModUnlocksPerformedSB=DomModUnlocksPerformedSB+1;",
              "if(RookieChanceUnlockSB<60)RookieChanceUnlockSB=RookieChanceUnlockSB+Rnd(1,3);",
              "if(OrdinaryChanceUnlockSB<75)OrdinaryChanceUnlockSB=OrdinaryChanceUnlockSB+2;",
              "if(ProfiChanceUnlockSB<90)ProfiChanceUnlockSB=ProfiChanceUnlockSB+2;",
              "Sound('Sound.Repair');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  770,
          "Pos.y":  50,
          "Parent":  -1,
          "#":  230,
          "Total.Lines":  10,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Уничтожаем предмет",
              "FreeItem(GetItemFromShip(Player(),FindItemInShip(Player(),cur_item)));",
              "ShipMoney(Player(),ShipMoney(Player())-credit_cost);",
              "GetNodesFromShip(Player(),nodes_cost);",
              "//Повышаем шансы на разблокировку других акринов в будущем",
              "DomModUnlocksPerformedSB=DomModUnlocksPerformedSB+1;",
              "if(RookieChanceUnlockSB<60)RookieChanceUnlockSB=RookieChanceUnlockSB+Rnd(1,3);",
              "if(OrdinaryChanceUnlockSB<75)OrdinaryChanceUnlockSB=OrdinaryChanceUnlockSB+2;",
              "if(ProfiChanceUnlockSB<90)ProfiChanceUnlockSB=ProfiChanceUnlockSB+2;",
              "Sound('Sound.QuestCancel');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  230,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  238,
          "Total.Lines":  3,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GetNodesFromShip(CurShip,GetNodesFromShip(CurShip),2);",
              "OrderLock(CurShip,0);",
              "OrderTakeOff(CurShip);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  120,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  241,
          "Total.Lines":  3,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GetNodesFromShip(CurShip,GetNodesFromShip(CurShip),2);",
              "OrderLock(CurShip,0);",
              "OrderTakeOff(CurShip);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  10,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  245,
          "Total.Lines":  3,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GetNodesFromShip(CurShip,GetNodesFromShip(CurShip),2);",
              "OrderLock(CurShip,0);",
              "OrderTakeOff(CurShip);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1000,
          "Pos.y":  90,
          "Parent":  -1,
          "#":  262,
          "Total.Lines":  17,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cur_item=GAnswerData;",
              "tstr1=DeleteTags(Name(cur_item));",
              "credit_cost=ItemCost(cur_item)/100*45+ItemCost(cur_item)/100*tint3;",
              "if(GalaxyTechLevel<MinGTLToDomAcrynUnlock)credit_cost=credit_cost/4*2.5;",
              "else credit_cost=credit_cost/4*2;",
              "nodes_cost=credit_cost/350;",
              "if(nodes_cost<10)nodes_cost=10;",
              "//Вычитаем пиратскую скидку на кредиты",
              "tint2=credit_cost;//Запоминаем значение без скидки для диалога",
              "flt1=discount;",
              "flt1=flt1/100*credit_cost;",
              "credit_cost=round(-flt1+credit_cost);",
              "//И на ноды",
              "tint3=nodes_cost;//Запоминаем значение без скидки для диалога",
              "flt1=discount;",
              "flt1=flt1/100*nodes_cost;",
              "nodes_cost=round(-flt1+nodes_cost);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  830,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  268,
          "Total.Lines":  15,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tint3=DomModUnlocksPerformedSB*7;//Определяем коэффициент для расчёта цены следующей разблокировки",
              "for(i=1;i<ShipItems(Player());i=i+1)",
              "{",
              "    cur_item=ShipItems(Player(),i);",
              "    tint1=EqSpecial(cur_item);",
              "    if(tint1>-1)",
              "    {",
              "        tstr1=BonusNumInCfg(tint1);",
              "        if(findsubstr(tstr1,'DomModLocked')>-1)",
              "        {",
              "            InjectAnswer('DomModUnlockSBGo',Name(cur_item),cur_item);",
              "        }",
              "    }",
              "}",
              "DAnswer('restart~'+\"Ничего я выбирать не буду\");"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  830,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  270,
          "Total.Lines":  6,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cur_item=GAnswerData;",
              "tstr1=Name(cur_item);",
              "//Рассчитываем максимальную цену разблокировки в кредитах и нодах",
              "credit_cost=ItemCost(cur_item)/100*50+ItemCost(cur_item)/100*tint3;",
              "nodes_cost=credit_cost/400;",
              "if(nodes_cost<10)nodes_cost=10;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  380,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  279,
          "Total.Lines":  561,
          "Code.Type":  "Init",
          "Code":          
          [
              "//Общая функция обновления доминаторов и рейнджеров",
              "function ShuDomiksMainUpgrade(ship, own, str_type, sub_type)",
              "{",
              "    dword hull = ShipItems(ship, 0);",
              "    //Если улучшаем рейнджера",
              "    if(own < Kling)",
              "    {",
              "        if(ShipTypeN(ship) == t_Ranger)",
              "        {",
              "            //С определённым шансом бафаем рейнджера по статам и оборудке",
              "            if(RndObject(1, 100, ship) <= 33)",
              "            {",
              "                //Рандомно бафаем статы в зависимости от расы",
              "                if(!own || own == 2) ShipSkill(ship, 0, ShipSkill(ship, 0) + RndObject(0, 2, ship));",
              "                else if(own == 1) ShipSkill(ship, 1, ShipSkill(ship, 1) + RndObject(0, 2, ship));",
              "                else if(own == 3) ShipSkill(ship, 4, ShipSkill(ship, 4) + RndObject(0, 2, ship));",
              "                else if(own == 4) ShipSkill(ship, 3, ShipSkill(ship, 3) + RndObject(0, 2, ship));",
              "",
              "                //Увеличиваем стартовый капитал рейнджера",
              "                ShipMoney(ship, round(1.6 * ShipMoney(ship)));",
              "",
              "                //И производим обновлением его обвеса в случае, если он ещё не взлетел",
              "                if(GetShipPlanet(ship) || GetShipRuins(ship))",
              "                {",
              "                    ShipRefit(ship);",
              "                    ShipRefit(ship);",
              "                    ShipRefit(ship);",
              "                    //Корабль мог заменить корпус, на всякий случай обновляем указатель",
              "                    hull = ShipItems(ship, 0);",
              "",
              "                    FreeAllHoldEquipment(ship);",
              "                }",
              "                ShipImproveItems(ship, RndObject(0, 3, ship));",
              "            }",
              "        }",
              "    }",
              "    //Если улучшаем доминатора",
              "    else if(own == Kling)",
              "    {",
              "        int DegradationLevel = 0;",
              "        //Если включён мод на постепенную деградацию доминаторов после потери их босса",
              "        if(ShuDomiksWinInit)",
              "        {",
              "            //Если был побеждён хотя бы один босс",
              "            if(VictoryDayBlazer || VictoryDayKeller || VictoryDayTerron)",
              "            {",
              "                cur_item = ShipItems(ship, 0);",
              "",
              "                //Здесь происходит снижение уровня технического оснащения и навыков доминаторов, босс которых был ликвидирован",
              "                //Чем раньше босс был ликвидирован, тем сильнее будет степень деградации",
              "                tint2 = ShipSubrace(ship, -1);",
              "                if(!tint2)",
              "                {",
              "                    if(VictoryDayBlazer) DegradationLevel = PortionInDiapason(CurTurn() - VictoryDayBlazer, 182, 1095, 1, 5);",
              "                }",
              "                else if(tint2 == 1)",
              "                {",
              "                    if(VictoryDayKeller) DegradationLevel = PortionInDiapason(CurTurn() - VictoryDayKeller, 182, 1095, 1, 5);",
              "                }",
              "                else if(tint2 == 2)",
              "                {",
              "                    if(VictoryDayTerron) DegradationLevel = PortionInDiapason(CurTurn() - VictoryDayTerron, 182, 1095, 1, 5);",
              "                }",
              "",
              "                if(DegradationLevel)",
              "                {",
              "                    ShipSkill(ship, 0, 0);",
              "                    ShipSkill(ship, 1, 0);",
              "                    ShipSpecialBonuses(ship, bonSkill1, -300);",
              "                    ShipSpecialBonuses(ship, bonSkill2, -300);",
              "                    //Снижается ТУ оборудования доминаторов",
              "                    for(j = 0; j < ShipItems(ship); j = j + 1)",
              "                    {",
              "                        cur_item = ShipItems(ship, j);",
              "                        if(ItemType(cur_item) < t_Hull || ItemType(cur_item) > t_CustomWeapon) continue;",
              "                        if(ItemLevel(cur_item) <= 3) continue;",
              "                        ItemLevel(cur_item, max(3, ItemLevel(cur_item) - DegradationLevel));",
              "                        //Также пропорционально снижаем и стоимость вещи при снижении её уровня",
              "                        ItemCost(cur_item, 0.125 * ItemCost(cur_item) * ItemLevel(cur_item));",
              "                    }",
              "                }",
              "            }",
              "        }",
              "        //Доминаторы получают оружие из мода ShuDomiksPlus (если он подключён)",
              "        if(ShuDomiksPlusInit)",
              "        {",
              "            //Перебираем орудия доминатора, ищем что можно заменить",
              "            for(j = 1; j <= ShipCntWeapon(ship); j = j + 1)",
              "            {",
              "                cur_item = ShipWeapon(ship, j);",
              "                //При подключённом моде ShuDomiksWin и побеждённом соответствующем боссе, шансы доминатора на получение новой пушки снижаются",
              "                if(ShuDomiksWinInit) rand = RndObject(1, PortionInDiapason(DegradationLevel, 0, 5, 100, 300), ship);",
              "                else rand = RndObject(1, 100, ship);",
              "",
              "                tstr1 = '';",
              "                tstr2 = 'Items.Weapon.CustomWeapon.ShuDomiksPlus.';",
              "                tint3 = ItemType(cur_item);",
              "                credit_cost = ControlledSystems(1);",
              "                //Чем больше систем контролируют доминаторы, тем меньше их шансы получить новые пушки",
              "                if(credit_cost <= 15)",
              "                {",
              "                    if(sub_type == 1 && rand <= 15) tstr1 = CT(tstr2 + 5); //Энергопакетный разрядник",
              "                    else if(sub_type == 2 && rand <= 15) tstr1 = CT(tstr2 + 6); //Миниган",
              "                    else if(tint3 == t_Weapon4 && rand <= 65) tstr1 = CT(tstr2 + 4); //Револьверный торпедомет",
              "                    else if((tint3 == t_Weapon1 || tint3 == t_Weapon5) && rand <= 75) tstr1 = CT(tstr2 + 1); //Импульсный бластер",
              "                    else if(tint3 == t_Weapon3 && rand <= 75) tstr1 = CT(tstr2 + 2); //Спаренный турболазер",
              "                    else if(tint3 == t_Weapon2 && rand <= 85) tstr1 = CT(tstr2 + 3); //Магнитный сепаратор",
              "                }",
              "                else if(credit_cost <= 35)",
              "                {",
              "                    if(sub_type == 1 && rand <= 11) tstr1 = CT(tstr2 + 5); //Энергопакетный разрядник",
              "                    else if(sub_type == 2 && rand <= 11) tstr1 = CT(tstr2 + 6); //Миниган",
              "                    else if(tint3 == t_Weapon4 && rand <= 40) tstr1 = CT(tstr2 + 4); //Револьверный торпедомет",
              "                    else if((tint3 == t_Weapon1 || tint3 == t_Weapon5) && rand <= 50) tstr1 = CT(tstr2 + 1); //Импульсный бластер",
              "                    else if(tint3 == t_Weapon3 && rand <= 50) tstr1 = CT(tstr2 + 2); //Спаренный турболазер",
              "                    else if(tint3 == t_Weapon2 && rand <= 55) tstr1 = CT(tstr2 + 3); //Магнитный сепаратор",
              "                }",
              "                else if(credit_cost <= 55)",
              "                {",
              "                    if(sub_type == 1 && rand <= 9) tstr1 = CT(tstr2 + 5); //Энергопакетный разрядник",
              "                    else if(sub_type == 2 && rand <= 9) tstr1 = CT(tstr2 + 6); //Миниган",
              "                    else if(tint3 == t_Weapon4 && rand <= 30) tstr1 = CT(tstr2 + 4); //Револьверный торпедомет",
              "                    else if((tint3 == t_Weapon1 || tint3 == t_Weapon5) && rand <= 35) tstr1 = CT(tstr2 + 1); //Импульсный бластер",
              "                    else if(tint3 == t_Weapon3 && rand <= 35) tstr1 = CT(tstr2 + 2); //Спаренный турболазер",
              "                    else if(tint3 == t_Weapon2 && rand <= 40) tstr1 = CT(tstr2 + 3); //Магнитный сепаратор",
              "                }",
              "                else",
              "                {",
              "                    if(sub_type == 1 && rand <= 8) tstr1 = CT(tstr2 + 5); //Энергопакетный разрядник",
              "                    else if(sub_type == 2 && rand <= 7) tstr1 = CT(tstr2 + 6); //Миниган",
              "                    else if(tint3 == t_Weapon4 && rand <= 25) tstr1 = CT(tstr2 + 4); //Револьверный торпедомет",
              "                    else if((tint3 == t_Weapon1 || tint3 == t_Weapon5) && rand <= 30) tstr1 = CT(tstr2 + 1); //Импульсный бластер",
              "                    else if(tint3 == t_Weapon3 && rand <= 30) tstr1 = CT(tstr2 + 2); //Спаренный турболазер",
              "                    else if(tint3 == t_Weapon2 && rand <= 30) tstr1 = CT(tstr2 + 3); //Магнитный сепаратор",
              "                }",
              "                //Если было подобрано орудие на замену",
              "                if(tstr1 != '')",
              "                {",
              "                    tint3 = ItemLevel(cur_item);",
              "                    if(sub_type == 1) cloned_item = CreateCustomWeapon(tstr1, RndObject(90, 150, ship), tint3, Kling);",
              "                    else if(sub_type == 2) cloned_item = CreateCustomWeapon(tstr1, RndObject(60, 100, ship), tint3, Kling);",
              "                    else cloned_item = CreateCustomWeapon(tstr1, RndObject(30, 60, ship), tint3, Kling);",
              "                    ItemSubrace(cloned_item, ShipSubrace(ship, -1));",
              "",
              "                    //В миниган вставляется затычка вместо ММ",
              "                    if(tstr1 == CT(tstr2 + 6)) SpecialToEquipment(FindBonusByNameInCfg('ShuDomiks_MMBlockAcryn'), cloned_item);",
              "                    FreeItem(GetItemFromShip(ship, FindItemInShip(ship, cur_item)));",
              "                    AddItemToShip(ship, cloned_item);",
              "                    ItemIsInUse(cloned_item, ship, 1, j);",
              "                    FixOverweight(ship);",
              "                }",
              "            }",
              "        }",
              "        //Если подключён мод ShuEmitter",
              "        if(ShuEmitterInit)",
              "        {",
              "            //Если доминатор является меноком или штипом",
              "            if(sub_type == 4 || sub_type == 5)",
              "            {",
              "                tint3 = ShipCntWeapon(ship);",
              "                if(!tint3)",
              "                {",
              "                    HullHP(hull, ItemSize(hull));",
              "                    FixOverweight(ship);",
              "                    exit;",
              "                }",
              "                //Если менок",
              "                if(sub_type == 4) chance = 12 + 6 * tint3;",
              "                //Если штип",
              "                else chance = 9 + 5 * tint3;",
              "                //Крутим цикл и заменяем случайные пушки меноков/штипов на сплэшевые лазеры",
              "                //Потому что это логично и полезно, я полагаю. шу ведь хуйни не напишет, так?",
              "                rand = RndObject(1, 100, ship);",
              "                while(rand <= chance)",
              "                {",
              "                    chance = chance - RndObject(4, 7, ship);",
              "                    j = RndObject(1, tint3, ship);",
              "                    if(ItemType(ShipWeapon(ship, j)) == t_CustomWeapon)",
              "                    {",
              "                        j = RndObject(1, tint3, ship);",
              "                        if(ItemType(ShipWeapon(ship, j)) == t_CustomWeapon)",
              "                        {",
              "                            j = RndObject(1, tint3, ship);",
              "                            if(ItemType(ShipWeapon(ship, j)) == t_CustomWeapon)",
              "                            {",
              "                                //rand = RndObject(1, 100, ship);",
              "                                break;",
              "                            }",
              "                        }",
              "                    }",
              "",
              "                    cur_item = ShipWeapon(ship, j);",
              "",
              "                    //Определяем ТУ будущего лазера",
              "                    credit_cost = ItemLevel(cur_item);",
              "                    if(credit_cost <= 6) credit_cost = credit_cost + RndObject(0, 1, ship);",
              "                    else if(credit_cost == 7) credit_cost = RndObject(7, 8, ship);",
              "                    else credit_cost = 8;",
              "",
              "                    //Создаём сплэшевый лазер",
              "                    if(sub_type == 4) cloned_item = CreateCustomWeapon(CT('Items.Weapon.CustomWeapon.ShuEmitter.4'), RndObject(23, 50, ship), credit_cost, Kling);",
              "                    else cloned_item = CreateCustomWeapon(CT('Items.Weapon.CustomWeapon.ShuEmitter.4'), RndObject(20, 45, ship), credit_cost, Kling);",
              "                    ItemSubrace(cloned_item, ShipSubrace(ship, -1));",
              "",
              "                    FreeItem(GetItemFromShip(ship, FindItemInShip(ship, cur_item)));",
              "                    AddItemToShip(ship, cloned_item);",
              "                    ItemIsInUse(cloned_item, ship, 1, j);",
              "                    FixOverweight(ship);",
              "                    rand = RndObject(1, 100, ship);",
              "                }",
              "            }",
              "        }",
              "",
              "        //Вешаем особые бонусы на корпуса всех доминаторов",
              "        //Добавляем общий акрин с описанием и Fragility, а также \"динамические\" спецакрины в зависимости от общего уровня сложности и ТУ доминатора",
              "        int hull_level = ItemLevel(hull);",
              "        str bon_mod = 'ShuDomiks';",
              "        if(EvoArmadaInit) bon_mod = 'EvoArmada';",
              "",
              "        //Клиг",
              "        if(sub_type == 7)",
              "        {",
              "            //Проводим всю эту хероборию чтобы не вешать на доминатора валидный акрин и не ломать его скин",
              "            tint3 = FindBonusByNameInCfg(bon_mod + '_KligDomHull');",
              "            ModuleToEquipment(tint3, hull);",
              "            EqModule(hull, -1);",
              "            HullSpecial(hull, tint3);",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_ExtraSpecialsLineBreak'));",
              "            //Клигу вешаем бонус на скорость",
              "            tint3 = (10 * GeneralDiffLevel) + (10 * PortionInDiapason(hull_level, 1, 8, 1, 10));",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_bonSpeed'), tint3);",
              "            ShipSkill(ship, 'Mobility', ShipSkill(ship, 'Mobility') + 4);",
              "        }",
              "        //Штип",
              "        else if(sub_type == 5)",
              "        {",
              "            tint3 = FindBonusByNameInCfg(bon_mod + '_ShtipDomHull');",
              "            ModuleToEquipment(tint3, hull);",
              "            EqModule(hull, -1);",
              "            HullSpecial(hull, tint3);",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_ExtraSpecialsLineBreak'));",
              "            //Штипу вешаем бонус на скорость и повышаем навык манёвренности",
              "            tint3 = (10 * GeneralDiffLevel) + (10 * PortionInDiapason(hull_level, 1, 8, 1, 10));",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_bonSpeed'), tint3);",
              "            ShipSkill(ship, 'Mobility', ShipSkill(ship, 'Mobility') + 3);",
              "        }",
              "        //Менок",
              "        else if(sub_type == 4)",
              "        {",
              "            tint3 = FindBonusByNameInCfg(bon_mod + '_MenocDomHull');",
              "            ModuleToEquipment(tint3, hull);",
              "            EqModule(hull, -1);",
              "            HullSpecial(hull, tint3);",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_ExtraSpecialsLineBreak'));",
              "            //Менку вешаем бонусы на силу энергетического и ракетного оружия, а также повышаем навык точности",
              "            tint3 = GeneralDiffLevel + PortionInDiapason(hull_level, 1, 8, 1, 10);",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_bonWEnergy'), tint3);",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_bonWMissile'), tint3);",
              "            ShipSkill(ship, 'Accuracy', ShipSkill(ship, 'Accuracy') + 1);",
              "            ShipSkill(ship, 'Mobility', ShipSkill(ship, 'Mobility') + 2);",
              "        }",
              "        //Смерш",
              "        else if(sub_type == 3)",
              "        {",
              "            tint3 = FindBonusByNameInCfg(bon_mod + '_SmershDomHull');",
              "            ModuleToEquipment(tint3, hull);",
              "            EqModule(hull, -1);",
              "            HullSpecial(hull, tint3);",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_ExtraSpecialsLineBreak'));",
              "            //Смершу вешаем бонус на силу ракетных орудий и дальность стрельбы, а также повышаем навык точности",
              "            tint3 = GeneralDiffLevel + PortionInDiapason(hull_level, 1, 8, 1, 10);",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_bonWMissile'), tint3);",
              "            tint3 = (5 * GeneralDiffLevel) + (5 * PortionInDiapason(hull_level, 1, 8, 1, 10));",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_bonWRadius'), tint3);",
              "            ShipSkill(ship, 'Accuracy', ShipSkill(ship, 'Accuracy') + 2);",
              "        }",
              "        //Ургант",
              "        else if(sub_type == 2)",
              "        {",
              "            tint3 = FindBonusByNameInCfg(bon_mod + '_UrgantDomHull');",
              "            ModuleToEquipment(tint3, hull);",
              "            EqModule(hull, -1);",
              "            HullSpecial(hull, tint3);",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_ExtraSpecialsLineBreak'));",
              "            //Урганту вешаем бонус на силу осколочных орудий и ГЗП",
              "            tint3 = round((1.8 * GeneralDiffLevel / 2) + (1.8 * PortionInDiapason(hull_level, 1, 8, 1, 10) / 2));",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_bonWSplinter'), tint3);",
              "            tint3 = round((1.5 * GeneralDiffLevel / 2) + (1.5 * PortionInDiapason(hull_level, 1, 8, 1, 10) / 2));",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_bonDef'), tint3);",
              "            ShipSkill(ship, 'Accuracy', ShipSkill(ship, 'Accuracy') + 2);",
              "",
              "            //Если подключён мод EvoArmada, добавляем дополнительные залпы кораблю в этом же цикле (чтоб два раза не перебирать доминаторов в разных модах)",
              "            if(EvoArmadaInit) ShipSpecialBonuses(ship, bonAttacks, 1);",
              "        }",
              "        //Эквентор",
              "        else if(sub_type == 1)",
              "        {",
              "            tint3 = FindBonusByNameInCfg(bon_mod + '_EquantorDomHull');",
              "            ModuleToEquipment(tint3, hull);",
              "            EqModule(hull, -1);",
              "            HullSpecial(hull, tint3);",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_ExtraSpecialsLineBreak'));",
              "            //Эквентору вешаем бонус на силу энергетических орудий и броню",
              "            tint3 = round((1.8 * GeneralDiffLevel / 2) + (1.8 * PortionInDiapason(hull_level, 1, 8, 1, 10) / 2));",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_bonWEnergy'), tint3);",
              "            tint3 = round((0.8 * GeneralDiffLevel / 2) + (0.8 * PortionInDiapason(hull_level, 1, 8, 1, 10) / 2));",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_bonHull'), tint3);",
              "",
              "            //Если подключён мод EvoArmada, добавляем дополнительные залпы кораблю в этом же цикле (чтоб два раза не перебирать доминаторов в разных модах)",
              "            if(EvoArmadaInit)",
              "            {",
              "                ShipSpecialBonuses(ship, bonAttacks, 3);",
              "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
              "                ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 3);",
              "                //Ограничиваем максимальный уровень навыка атаки (чтобы не так сильно нагибал)",
              "                if(ShipSkill(ship, 'Accuracy') > 2) ShipSkill(ship, 'Accuracy', RndObject(2, 3, ship));",
              "            }",
              "        }",
              "        //Бертор",
              "        else if(sub_type == 6)",
              "        {",
              "            tint3 = FindBonusByNameInCfg(bon_mod + '_BertorDomHull');",
              "            ModuleToEquipment(tint3, hull);",
              "            EqModule(hull, -1);",
              "            HullSpecial(hull, tint3);",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_ExtraSpecialsLineBreak'));",
              "            //Бертору вешаем бонус на броню",
              "            tint3 = round((1.2 * GeneralDiffLevel / 2) + (1.2 * PortionInDiapason(hull_level, 1, 8, 1, 10) / 2));",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_bonHull'), tint3);",
              "",
              "            //Если подключён мод EvoArmada, добавляем дополнительные залпы кораблю в этом же цикле (чтоб два раза не перебирать доминаторов в разных модах)",
              "            if(EvoArmadaInit)",
              "            {",
              "                ShipSpecialBonuses(ship, bonAttacks, 4);",
              "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
              "                ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 4);",
              "                //Ограничиваем максимальный уровень навыка атаки (чтобы не так сильно нагибал)",
              "                if(ShipSkill(ship, 'Accuracy') > 1) ShipSkill(ship, 'Accuracy', RndObject(1, 2, ship));",
              "            }",
              "        }",
              "",
              "        //Далее пропускаем клигов",
              "        if(sub_type == 7)",
              "        {",
              "            HullHP(hull, ItemSize(hull));",
              "            FixOverweight(ship);",
              "            exit;",
              "        }",
              "",
              "        //Если доминаторы после гибели босса уже деградировали слишком сильно, то неизвестных модификаций они больше не получат",
              "        if(DegradationLevel == 5)",
              "        {",
              "            HullHP(hull, ItemSize(hull));",
              "            FixOverweight(ship);",
              "            exit;",
              "        }",
              "",
              "        //Если таймер появления неизвестных доминаторских модификаций уже сработал",
              "        //Добавляем доминаторам неизвестные модификации",
              "        //DegradationLevel здесь может принимать значения от 0 до 4",
              "        if(UnknownDomAcrynsTimer == -1)",
              "        {",
              "            ReSupply = 0;",
              "            check = 0;",
              "            credit_cost = 0;",
              "",
              "            //Для рандомизации выборки модифицируемого оружия на корабле используется while",
              "            while(!check)",
              "            {",
              "                if(!ShipCntWeapon(ship)) break;",
              "                cur_item = ShipWeapon(ship, RndObject(1, ShipCntWeapon(ship), ship));",
              "                if(cur_item)",
              "                {",
              "                    if(EqSpecial(cur_item) == -1)",
              "                    {",
              "                        tint3 = ItemType(cur_item);",
              "                        if(tint3 != t_Weapon16 && tint3 != t_Weapon17 && tint3 != t_Weapon18)",
              "                        {",
              "                            //Доминатор получит тем меньше модифицированных пушек, чем выше его уровень деградации после смерти босса",
              "                            if(RndObject(1, 3, ship) == 2) check = 1;",
              "                            if(ReSupply == MaxWSup - max(DegradationLevel - 1, 0)) check = 1;",
              "",
              "                            if(tint3 == t_CustomWeapon)",
              "                            {",
              "                                //Если попалось кастомное орудие, но оно не сплэшевый фазер",
              "                                if(CustomWeaponType(cur_item) != CT('Items.Weapon.CustomWeapon.ShuEmitter.4')) break;",
              "                            }",
              "",
              "                            //Проверки на ММ, чтобы не дублировать имя модуля в названии предмета",
              "                            int module = EqModule(cur_item);",
              "                            if(~module) ModuleToEquipment(-1, cur_item);",
              "                            tstr2 = '<color=255,167,84>' + Name(cur_item) + '</color>';",
              "                            if(~module) ModuleToEquipment(module, cur_item);",
              "",
              "                            rand = RndObject(1, 100, ship);",
              "                            //Штип",
              "                            if(sub_type == 5)",
              "                            {",
              "                                if(rand <= 45) tstr1 = 'SpeedDrop';",
              "                                else if(rand <= 80) tstr1 = 'Strike';",
              "                                else tstr1 = 'Quickshot';",
              "                            }",
              "                            //Менок",
              "                            else if(sub_type == 4)",
              "                            {",
              "                                if(rand <= 25) tstr1 = 'SpeedDrop';",
              "                                else if(rand <= 75) tstr1 = 'Strike';",
              "                                else tstr1 = 'Quickshot';",
              "                            }",
              "                            //Смерш",
              "                            else if(sub_type == 3)",
              "                            {",
              "                                if(rand <= 50) tstr1 = 'SpeedDrop';",
              "                                else if(rand <= 75) tstr1 = 'Strike';",
              "                                else tstr1 = 'Quickshot';",
              "                            }",
              "                            //Ургант",
              "                            else if(sub_type == 2)",
              "                            {",
              "                                if(rand <= 20) tstr1 = 'SpeedDrop';",
              "                                else if(rand <= 60) tstr1 = 'Strike';",
              "                                else tstr1 = 'Quickshot';",
              "                            }",
              "                            //Эквентор",
              "                            else if(sub_type == 1)",
              "                            {",
              "                                if(rand <= 22) tstr1 = 'SpeedDrop';",
              "                                else if(rand <= 45) tstr1 = 'Strike';",
              "                                else tstr1 = 'Quickshot';",
              "                            }",
              "                            //Бертор",
              "                            else if(sub_type == 6) tstr1 = 'Quickshot';",
              "",
              "                            //Убрал проверку, т.к. теперь если максимальный урон орудия не может опуститься ниже минимального",
              "                            //if(tstr1 == 'Quickshot')",
              "                            //{",
              "                                //Не накладываем квикшот на орудие в том случае, если дебаф квикшота полностью обнулит его максимальный урон",
              "                                //if(GetEquipmentStats(cur_item, 0) + CT('MicroModuls.ShuDomiks_' + tstr1 + 'WDomModLocked.bonWMissile') <= 0) continue;",
              "                            //}",
              "",
              "                            if(tint3 == t_CustomWeapon) SpecialToEquipment(FindBonusByNameInCfg('ShuDomiks_' + tstr1 + 'CWDomModLocked'), cur_item);",
              "                            else SpecialToEquipment(FindBonusByNameInCfg('ShuDomiks_' + tstr1 + 'WDomModLocked'), cur_item);",
              "",
              "                            //Не знаю нахера оно тут, пока что просто выключу",
              "                            //if(GetEquipmentStats(cur_item, 0) < GetEquipmentStats(cur_item, 1)) SetEquipmentStats(cur_item, GetEquipmentStats(cur_item, 1), 0);",
              "                            SetName(cur_item, tstr2);",
              "                            ReSupply = ReSupply + 1;",
              "                        }",
              "                    }",
              "                }",
              "                credit_cost = credit_cost + 1;",
              "                if(credit_cost >= 10) break;",
              "            }",
              "",
              "            ReSupply = 0;",
              "            check = 0;",
              "            credit_cost = 0;",
              "            //Для рандомизации выборки модифицируемого оборудования на корабле используется while",
              "            while(!check)",
              "            {",
              "                cur_item = ShipEqInSlot(ship, RndObject(t_FuelTanks, t_DefGenerator, ship));",
              "                if(cur_item)",
              "                {",
              "                    if(EqSpecial(cur_item) == -1)",
              "                    {",
              "                        //Доминатор получит тем меньше модифицированных вещей, чем выше его уровень деградации после смерти босса",
              "                        if(RndObject(1, 3, ship) == 2) check = 1;",
              "                        if(ReSupply == MaxReSup - DegradationLevel) check = 1;",
              "",
              "                        //Проверки на ММ, чтобы не дублировать имя модуля в названии предмета",
              "                        module = EqModule(cur_item);",
              "                        if(~module) ModuleToEquipment(-1, cur_item);",
              "                        tstr2 = '<color=255,167,84>' + Name(cur_item) + '</color>';",
              "                        if(~module) ModuleToEquipment(module, cur_item);",
              "",
              "                        //Штип",
              "                        rand = RndObject(1, 100, ship);",
              "                        if(sub_type == 5)",
              "                        {",
              "                            if(rand <= 17) tstr1 = 'Energize';",
              "                            else if(rand <= 65) tstr1 = 'Glue';",
              "                            else if(rand <= 87) tstr1 = 'Detriment';",
              "                            else tstr1 = 'RocketLauncher';",
              "                        }",
              "                        //Менок",
              "                        else if(sub_type == 4)",
              "                        {",
              "                            if(rand <= 15) tstr1 = 'Energize';",
              "                            else if(rand <= 30) tstr1 = 'Glue';",
              "                            else if(rand <= 70) tstr1 = 'Detriment';",
              "                            else tstr1 = 'RocketLauncher';",
              "                        }",
              "                        //Смерш",
              "                        else if(sub_type == 3)",
              "                        {",
              "                            if(rand <= 13) tstr1 = 'Energize';",
              "                            else if(rand <= 43) tstr1 = 'Glue';",
              "                            else if(rand <= 60) tstr1 = 'Detriment';",
              "                            else tstr1 = 'RocketLauncher';",
              "                        }",
              "                        //Ургант",
              "                        else if(sub_type == 2)",
              "                        {",
              "                            if(rand <= 24) tstr1 = 'Energize';",
              "                            else if(rand <= 42) tstr1 = 'Glue';",
              "                            else if(rand <= 73) tstr1 = 'Detriment';",
              "                            else tstr1 = 'RocketLauncher';",
              "                        }",
              "                        //Эквентор",
              "                        else if(sub_type == 1)",
              "                        {",
              "                            if(rand <= 20) tstr1 = 'Energize';",
              "                            else if(rand <= 60) tstr1 = 'Glue';",
              "                            else if(rand <= 90) tstr1 = 'Detriment';",
              "                            else tstr1 = 'RocketLauncher';",
              "                        }",
              "                        //Бертор",
              "                        else if(sub_type == 6)",
              "                        {",
              "                            if(rand <= 20) tstr1 = 'Energize';",
              "                            else if(rand <= 50) tstr1 = 'Glue';",
              "                            else if(rand <= 80) tstr1 = 'Detriment';",
              "                            else tstr1 = 'RocketLauncher';",
              "                        }",
              "",
              "                        SpecialToEquipment(FindBonusByNameInCfg('ShuDomiks_' + tstr1 + 'EqDomModLocked'), cur_item);",
              "",
              "                        tint3 = ItemType(cur_item);",
              "                        if(tint3 == t_Engine) EquipmentImageName(cur_item, 'EngineDomMod');",
              "                        else if(tint3 == t_FuelTanks) EquipmentImageName(cur_item, 'FuelTanksDomMod');",
              "                        else if(tint3 == t_RepairRobot) EquipmentImageName(cur_item, 'RepairRobotDomMod');",
              "                        else if(tint3 == t_CargoHook) EquipmentImageName(cur_item, 'CargoHookDomMod');",
              "                        else if(tint3 == t_DefGenerator) EquipmentImageName(cur_item, 'DefGeneratorDomMod');",
              "                        else if(tint3 == t_Radar) EquipmentImageName(cur_item, 'RadarDomMod');",
              "                        else if(tint3 == t_Scaner) EquipmentImageName(cur_item, 'ScanerDomMod');",
              "",
              "                        SetName(cur_item, tstr2);",
              "                        ReSupply = ReSupply + 1;",
              "                    }",
              "                }",
              "",
              "                credit_cost = credit_cost + 1;",
              "                if(credit_cost >= 10) break;",
              "            }",
              "        }",
              "",
              "        //А здесь происходит случайное улучшение оборудования доминатора",
              "        //Случайное оборудование и оружие получает случайные улучшения и микромодули",
              "        //Да-да, именно здесь в доминаторов и попадают все микромодули",
              "        //Вставляем их уже после установки неизвестных модификаций,",
              "        //иначе при переустановке имени предмета в него может попасть удвоенное имя установленного ММ",
              "        MaxUp = round(PortionInDiapason(DegradationLevel, 0, 4, 1.0, 0.25) * kMaxUpgrade);",
              "        MinUp = kMinUpgrade;",
              "        if(MinUp > MaxUp) MinUp = MaxUp;",
              "        ShipImproveItems(ship, RndObject(MinUp, MaxUp, ship));",
              "    }",
              "",
              "    //Исправляем перевес корабля, если он есть",
              "    HullHP(hull, ItemSize(hull));",
              "    FixOverweight(ship);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1220,
          "Pos.y":  -40,
          "Parent":  -1,
          "#":  292,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Рассчитываем стоимость начального платежа за открытие доступа к разблокировке доминаторских акринов на доминионах",
              "credit_cost = GalaxyMoney(2) + GalaxyMoney(0) * ShipStatistic(Player(), 1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1060,
          "Pos.y":  -60,
          "Parent":  -1,
          "#":  293,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Рассчитываем стоимость начального платежа за открытие доступа к разблокировке доминаторских акринов на доминионах",
              "credit_cost=GalaxyMoney(3)+GalaxyMoney(0)*ShipStatistic(Player(),1);"          
          ]        
        }      
      ],
      "Places":      
      [
        {
          "Type":  "TPlace",
          "Name":  "Loop",
          "Pos.x":  -210,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  106,
          "Place.Type":  0,
          "Angle":  "0",
          "Dist":  "0",
          "Radius":  350,
          "Obj1":  -1,
          "Obj2":  -1        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "InitPlanet",
          "Pos.x":  -140,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  1,
          "Race":  62,
          "Owner":  62,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  -210,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  2,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "InitStar",
          "Pos.x":  -210,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  0,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "Statements":      
      [
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  280,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  168,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "DomiksDefeated(1) != 2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  510,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  169,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) >= credit_cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  830,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  181,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!DomiksDefeated()"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  730,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  182,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "DomiksDefeated()"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  860,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  183,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GalaxyTechLevel()<MinGTLToDomAcrynUnlock"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  830,
          "Pos.y":  -60,
          "Parent":  -1,
          "#":  184,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GalaxyTechLevel()>=MinGTLToDomAcrynUnlock"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -280,
          "Pos.y":  80,
          "Parent":  -1,
          "#":  189,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "WasKellerCloneSpawned == 1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -310,
          "Pos.y":  80,
          "Parent":  -1,
          "#":  190,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "WasKellerCloneSpawned == 2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -280,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  191,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipInStar(Player(), ShipStar(CurShip))"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  200,
          "Pos.y":  -50,
          "Parent":  -1,
          "#":  192,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "DomiksDefeated(1) == 1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  240,
          "Pos.y":  -50,
          "Parent":  -1,
          "#":  193,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "DomiksDefeated(1) == 2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  280,
          "Pos.y":  -50,
          "Parent":  -1,
          "#":  194,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "DomiksDefeated(1) == 3"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1050,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  195,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) >= credit_cost && GetNodesFromShip(Player()) >= nodes_cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1260,
          "Pos.y":  130,
          "Parent":  -1,
          "#":  196,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1100,
          "Pos.y":  130,
          "Parent":  -1,
          "#":  197,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "chance <= rand"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1180,
          "Pos.y":  130,
          "Parent":  -1,
          "#":  198,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "chance > rand"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  470,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  206,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "CurTurn()>=NextBuyInhib"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  370,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  207,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "CurTurn()<NextBuyInhib"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  440,
          "Pos.y":  -50,
          "Parent":  -1,
          "#":  208,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "NextBuyInhib < 0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  470,
          "Pos.y":  -50,
          "Parent":  -1,
          "#":  209,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "NextBuyInhib >= 0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1030,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  211,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) >= credit_cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1200,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  212,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) >= credit_cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  610,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  213,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player())>=credit_cost && GetNodesFromShip(Player())>=nodes_cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  214,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player())>=credit_cost/2 && GetNodesFromShip(Player())>=nodes_cost/2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  790,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  215,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player())>=credit_cost/4 && GetNodesFromShip(Player())>=nodes_cost/4"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  830,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  216,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1260,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  217,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GalaxyTechLevel() < MinGTLToDomAcrynUnlock - 1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1000,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  218,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GalaxyTechLevel() >= MinGTLToDomAcrynUnlock"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1030,
          "Pos.y":  -60,
          "Parent":  -1,
          "#":  219,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!DomModUnlocksAccessCB"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1000,
          "Pos.y":  -60,
          "Parent":  -1,
          "#":  220,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "DomModUnlocksAccessCB"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  221,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1160,
          "Pos.y":  -60,
          "Parent":  -1,
          "#":  222,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GalaxyTechLevel() == MinGTLToDomAcrynUnlock - 1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1160,
          "Pos.y":  -40,
          "Parent":  -1,
          "#":  223,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "DomModUnlocksAccessCB"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1190,
          "Pos.y":  -40,
          "Parent":  -1,
          "#":  224,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!DomModUnlocksAccessCB"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  610,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  225,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "chance<=ProfiChanceUnlockSB"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  680,
          "Pos.y":  80,
          "Parent":  -1,
          "#":  227,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "chance>ProfiChanceUnlockSB"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  750,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  229,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  770,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  231,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  630,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  232,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "chance<=OrdinaryChanceUnlockSB"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  80,
          "Parent":  -1,
          "#":  233,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "chance>OrdinaryChanceUnlockSB"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  790,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  234,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  720,
          "Pos.y":  80,
          "Parent":  -1,
          "#":  235,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "chance>RookieChanceUnlockSB"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  650,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  236,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "chance<=RookieChanceUnlockSB"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  230,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  237,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GetShipRuins(CurShip)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  260,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  239,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GetShipPlanet(CurShip)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  120,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  240,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GetShipRuins(CurShip)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  150,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  242,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GetShipPlanet(CurShip)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  40,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  243,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GetShipPlanet(CurShip)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  10,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  244,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GetShipRuins(CurShip)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  420,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  257,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!ShipIsTakeoff(Player())"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  250,
          "Pos.y":  70,
          "Parent":  -1,
          "#":  271,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  250,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  272,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1030,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  273,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1030,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  274,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1160,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  275,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  610,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  280,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  830,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  281,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1070,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  284,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) < credit_cost || GetNodesFromShip(Player()) < nodes_cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  790,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  285,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player())<credit_cost/4 || GetNodesFromShip(Player())<nodes_cost/4"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  287,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player())<credit_cost/2 || GetNodesFromShip(Player())<nodes_cost/2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  610,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  288,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player())<credit_cost || GetNodesFromShip(Player())<nodes_cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  830,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  291,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1060,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  295,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) < credit_cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1220,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  297,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) < credit_cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1260,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  299,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1110,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  300,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "PlayerState",
          "Pos.x":  -310,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  124,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "KellerCloneWait",
          "Pos.x":  -250,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  125,
          "Move":  1,
          "MoveObj":  106,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "KellerCloneFree",
          "Pos.x":  -250,
          "Pos.y":  80,
          "Parent":  -1,
          "#":  126,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "KellerCloneJump",
          "Pos.x":  -280,
          "Pos.y":  50,
          "Parent":  -1,
          "#":  127,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "StateDBTerron",
          "Pos.x":  -110,
          "Pos.y":  0,
          "Parent":  110,
          "#":  128,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "InhibitorState",
          "Pos.x":  -250,
          "Pos.y":  -50,
          "Parent":  -1,
          "#":  129,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "Tranc2_1",
          "Pos.x":  190,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  130,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "Tranc2_3",
          "Pos.x":  260,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  131,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "Tranc2_2",
          "Pos.x":  190,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  132,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "Tranc1_1",
          "Pos.x":  80,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  133,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "Tranc1_2",
          "Pos.x":  80,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  134,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "Tranc0_1",
          "Pos.x":  -30,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  135,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "Tranc0_2",
          "Pos.x":  -30,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  136,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "Tranc1_3",
          "Pos.x":  150,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  137,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "Tranc0_3",
          "Pos.x":  40,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  138,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "StateDBKeller",
          "Pos.x":  -110,
          "Pos.y":  0,
          "Parent":  115,
          "#":  139,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "StateDBBlazer",
          "Pos.x":  -110,
          "Pos.y":  0,
          "Parent":  116,
          "#":  140,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "FreeState",
          "Pos.x":  -140,
          "Pos.y":  530,
          "Parent":  -1,
          "#":  141,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "InhibitorLanding",
          "Pos.x":  -250,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  142,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "lastShipId",
          "Pos.x":  440,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  5,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "i",
          "Pos.x":  580,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  6,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "Dom",
          "Pos.x":  680,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  7,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ReSupply",
          "Pos.x":  440,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  8,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "kMinUpgrade",
          "Pos.x":  440,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  9,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "kMaxUpgrade",
          "Pos.x":  440,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  10,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "MinGTLToDomAcrynUnlock",
          "Pos.x":  -10,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  11,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "RookieChanceUnlockSB",
          "Pos.x":  610,
          "Pos.y":  -100,
          "Parent":  -1,
          "#":  12,
          "Var.Type":  "Int",
          "Init":  "20",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ProfiChanceUnlockSB",
          "Pos.x":  610,
          "Pos.y":  -140,
          "Parent":  -1,
          "#":  13,
          "Var.Type":  "Int",
          "Init":  "40",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DomModUnlocksPerformedSB",
          "Pos.x":  780,
          "Pos.y":  -140,
          "Parent":  -1,
          "#":  14,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "discount",
          "Pos.x":  580,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  15,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DomModUnlocksPerformedCB",
          "Pos.x":  1160,
          "Pos.y":  -140,
          "Parent":  -1,
          "#":  16,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "LastTalkAboutDomAcrynsOnSB",
          "Pos.x":  -10,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  17,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DomiksStatsUpdate",
          "Pos.x":  -10,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  18,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "MaxReSup",
          "Pos.x":  440,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  19,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "MaxWSup",
          "Pos.x":  440,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  20,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "chance",
          "Pos.x":  580,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  21,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "rand",
          "Pos.x":  580,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  22,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ShuDomiksPlusInit",
          "Pos.x":  -10,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  23,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ShuEmitterInit",
          "Pos.x":  -10,
          "Pos.y":  70,
          "Parent":  -1,
          "#":  24,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ShuDomiksWinInit",
          "Pos.x":  -10,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  25,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "block_superdominator",
          "Pos.x":  -10,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  88,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  true        
        },
        {
          "Type":  "TVar",
          "Name":  "VictoryDayKeller",
          "Pos.x":  -280,
          "Pos.y":  550,
          "Parent":  -1,
          "#":  89,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "VictoryDayBlazer",
          "Pos.x":  -280,
          "Pos.y":  530,
          "Parent":  -1,
          "#":  90,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "VictoryDayTerron",
          "Pos.x":  -280,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  91,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "MinUp",
          "Pos.x":  440,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  92,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "MaxUp",
          "Pos.x":  440,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  93,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "UnknownDomAcrynsTimer",
          "Pos.x":  -10,
          "Pos.y":  130,
          "Parent":  -1,
          "#":  94,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "NextBuyInhib",
          "Pos.x":  370,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  95,
          "Var.Type":  "Int",
          "Init":  "-1",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "terronRuinsSpawnTimer",
          "Pos.x":  -430,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  96,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "kellerRuinsSpawnTimer",
          "Pos.x":  -430,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  97,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "blazerRuinsSpawnTimer",
          "Pos.x":  -430,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  98,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "WasKellerCloneSpawned",
          "Pos.x":  -310,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  99,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "TerronBertorsTimer",
          "Pos.x":  -280,
          "Pos.y":  460,
          "Parent":  -1,
          "#":  100,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "KellerBertorsTimer",
          "Pos.x":  -280,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  101,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "BlazerBertorsTimer",
          "Pos.x":  -280,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  102,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "BlazerSupersTimer",
          "Pos.x":  -280,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  103,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "KellerSupersTimer",
          "Pos.x":  -280,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  104,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "TerronSupersTimer",
          "Pos.x":  -280,
          "Pos.y":  490,
          "Parent":  -1,
          "#":  105,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GMaxInhibitorsCount",
          "Pos.x":  -280,
          "Pos.y":  -140,
          "Parent":  -1,
          "#":  187,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  true        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr1",
          "Pos.x":  780,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  188,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tdwd1",
          "Pos.x":  680,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  202,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr2",
          "Pos.x":  780,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  203,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "gunUpdateCheck",
          "Pos.x":  440,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  204,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint1",
          "Pos.x":  580,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  210,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "j",
          "Pos.x":  610,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  246,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_star",
          "Pos.x":  680,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  247,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ship",
          "Pos.x":  680,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  248,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "check",
          "Pos.x":  580,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  249,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_planet",
          "Pos.x":  680,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  250,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_item",
          "Pos.x":  680,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  251,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "flt1",
          "Pos.x":  780,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  252,
          "Var.Type":  "Float",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "flt2",
          "Pos.x":  780,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  253,
          "Var.Type":  "Float",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint2",
          "Pos.x":  580,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  254,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GralgarId",
          "Pos.x":  680,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  255,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "InhibHomeStarSpawnTimer",
          "Pos.x":  -280,
          "Pos.y":  -120,
          "Parent":  -1,
          "#":  256,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "HomeStarId",
          "Pos.x":  680,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  258,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "OrdinaryChanceUnlockSB",
          "Pos.x":  610,
          "Pos.y":  -120,
          "Parent":  -1,
          "#":  259,
          "Var.Type":  "Int",
          "Init":  "30",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cloned_item",
          "Pos.x":  680,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  263,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "InhibOnBonusNum",
          "Pos.x":  -280,
          "Pos.y":  -100,
          "Parent":  -1,
          "#":  264,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "InhibOffBonusNum",
          "Pos.x":  -280,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  265,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "credit_cost",
          "Pos.x":  580,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  266,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ShuDomiksKamikazeInit",
          "Pos.x":  -10,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  267,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "SysCountToDiffArray",
          "Pos.x":  -10,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  276,
          "Var.Type":  "Array",
          "Init":  "5",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tempArr",
          "Pos.x":  780,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  277,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint3",
          "Pos.x":  580,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  278,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "nodes_cost",
          "Pos.x":  580,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  282,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DomModUnlocksAccessCB",
          "Pos.x":  1160,
          "Pos.y":  -160,
          "Parent":  -1,
          "#":  294,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "MaxChanceUnlockCB",
          "Pos.x":  1000,
          "Pos.y":  -120,
          "Parent":  -1,
          "#":  301,
          "Var.Type":  "Int",
          "Init":  "75",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "MinChanceUnlockCB",
          "Pos.x":  1000,
          "Pos.y":  -100,
          "Parent":  -1,
          "#":  302,
          "Var.Type":  "Int",
          "Init":  "25",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "EvoArmadaInit",
          "Pos.x":  -10,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  303,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GTL",
          "Pos.x":  580,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  304,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GeneralDiffLevel",
          "Pos.x":  580,
          "Pos.y":  490,
          "Parent":  -1,
          "#":  305,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ruin",
          "Pos.x":  680,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  306,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "LastSpawnedShipyardNames",
          "Pos.x":  440,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  307,
          "Var.Type":  "Str",
          "Init":  "*",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  2,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  1,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  106,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  108,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  109,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  110,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  111,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  112,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  113,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  114,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  115,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  116,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  117,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  118,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  119,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  120,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  121,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  122,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  123,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  108,
      "End":  124,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  109,
      "End":  125,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  110,
      "End":  128,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  112,
      "End":  130,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  113,
      "End":  133,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  114,
      "End":  135,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  115,
      "End":  139,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  116,
      "End":  140,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  117,
      "End":  141,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  118,
      "End":  141,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  119,
      "End":  141,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  120,
      "End":  141,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  121,
      "End":  141,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  122,
      "End":  141,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  123,
      "End":  142,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  128,
      "End":  144,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  130,
      "End":  145,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  133,
      "End":  146,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  135,
      "End":  147,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  139,
      "End":  148,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  140,
      "End":  149,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  142,
      "End":  150,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  127,
      "End":  151,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  129,
      "End":  152,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  131,
      "End":  153,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  132,
      "End":  154,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  134,
      "End":  158,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  136,
      "End":  157,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  137,
      "End":  156,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  138,
      "End":  155,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  162,
      "End":  165,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  163,
      "End":  166,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  166,
      "End":  51,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  27,
      "End":  53,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  29,
      "End":  57,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  30,
      "End":  57,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  31,
      "End":  57,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  32,
      "End":  60,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  37,
      "End":  66,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  37,
      "End":  67,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  38,
      "End":  66,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  38,
      "End":  67,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  39,
      "End":  66,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  39,
      "End":  67,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  40,
      "End":  68,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  42,
      "End":  73,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  43,
      "End":  74,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  44,
      "End":  76,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  45,
      "End":  168,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  168,
      "End":  77,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  46,
      "End":  78,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  48,
      "End":  83,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  48,
      "End":  84,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  49,
      "End":  82,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  50,
      "End":  169,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  169,
      "End":  80,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  50,
      "End":  81,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  51,
      "End":  85,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  51,
      "End":  86,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  52,
      "End":  87,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  54,
      "End":  170,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  55,
      "End":  171,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  56,
      "End":  172,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  61,
      "End":  173,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  65,
      "End":  174,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  69,
      "End":  175,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  175,
      "End":  35,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  70,
      "End":  42,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  71,
      "End":  42,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  72,
      "End":  42,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  73,
      "End":  43,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  74,
      "End":  44,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  75,
      "End":  176,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  76,
      "End":  45,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  77,
      "End":  46,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  78,
      "End":  47,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  80,
      "End":  178,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  83,
      "End":  179,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  179,
      "End":  50,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  85,
      "End":  180,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  180,
      "End":  52,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  181,
      "End":  183,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  181,
      "End":  184,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  182,
      "End":  185,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  185,
      "End":  40,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  183,
      "End":  186,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  186,
      "End":  27,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  159,
      "End":  181,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  159,
      "End":  182,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  143,
      "End":  189,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  189,
      "End":  126,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  143,
      "End":  190,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  190,
      "End":  127,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  191,
      "End":  143,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  192,
      "End":  70,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  193,
      "End":  71,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  194,
      "End":  72,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  41,
      "End":  192,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  41,
      "End":  193,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  41,
      "End":  194,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  125,
      "End":  191,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  47,
      "End":  177,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  177,
      "End":  79,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  36,
      "End":  195,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  195,
      "End":  65,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  174,
      "End":  196,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  174,
      "End":  197,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  174,
      "End":  198,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  196,
      "End":  199,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  197,
      "End":  200,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  198,
      "End":  201,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  201,
      "End":  37,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  200,
      "End":  39,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  199,
      "End":  38,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  165,
      "End":  206,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  165,
      "End":  207,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  206,
      "End":  208,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  206,
      "End":  209,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  207,
      "End":  49,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  208,
      "End":  48,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  209,
      "End":  50,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  34,
      "End":  211,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  211,
      "End":  69,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  33,
      "End":  212,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  212,
      "End":  61,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  213,
      "End":  54,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  214,
      "End":  55,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  215,
      "End":  56,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  28,
      "End":  216,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  216,
      "End":  213,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  216,
      "End":  214,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  216,
      "End":  215,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  164,
      "End":  217,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  217,
      "End":  32,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  164,
      "End":  218,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  218,
      "End":  219,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  218,
      "End":  220,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  57,
      "End":  221,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  220,
      "End":  35,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  164,
      "End":  222,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  222,
      "End":  223,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  222,
      "End":  224,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  170,
      "End":  225,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  225,
      "End":  226,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  226,
      "End":  30,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  170,
      "End":  227,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  227,
      "End":  228,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  228,
      "End":  31,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  170,
      "End":  229,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  229,
      "End":  230,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  230,
      "End":  29,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  171,
      "End":  231,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  171,
      "End":  232,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  171,
      "End":  233,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  172,
      "End":  234,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  172,
      "End":  236,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  172,
      "End":  235,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  231,
      "End":  230,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  232,
      "End":  226,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  233,
      "End":  228,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  234,
      "End":  230,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  236,
      "End":  226,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  235,
      "End":  228,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  145,
      "End":  132,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  154,
      "End":  237,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  237,
      "End":  238,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  238,
      "End":  131,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  153,
      "End":  239,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  239,
      "End":  130,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  146,
      "End":  134,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  158,
      "End":  240,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  240,
      "End":  241,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  241,
      "End":  137,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  156,
      "End":  242,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  242,
      "End":  133,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  155,
      "End":  243,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  243,
      "End":  135,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  147,
      "End":  136,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  157,
      "End":  244,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  244,
      "End":  245,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  245,
      "End":  138,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  257,
      "End":  4,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  261,
      "End":  262,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  262,
      "End":  36,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  111,
      "End":  129,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  161,
      "End":  41,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  26,
      "End":  268,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  269,
      "End":  270,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  270,
      "End":  28,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  44,
      "End":  271,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  271,
      "End":  75,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  45,
      "End":  272,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  272,
      "End":  75,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  160,
      "End":  164,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  35,
      "End":  167,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  36,
      "End":  64,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  273,
      "End":  35,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  66,
      "End":  274,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  274,
      "End":  273,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  173,
      "End":  275,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  275,
      "End":  273,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  223,
      "End":  275,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  280,
      "End":  58,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  30,
      "End":  280,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  31,
      "End":  280,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  29,
      "End":  280,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  281,
      "End":  26,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  184,
      "End":  281,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  221,
      "End":  281,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  36,
      "End":  284,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  284,
      "End":  283,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  285,
      "End":  286,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  288,
      "End":  289,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  287,
      "End":  290,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  216,
      "End":  291,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  291,
      "End":  285,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  291,
      "End":  287,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  291,
      "End":  288,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  291,
      "End":  59,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  224,
      "End":  292,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  292,
      "End":  33,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  219,
      "End":  293,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  293,
      "End":  34,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  34,
      "End":  295,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  295,
      "End":  296,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  33,
      "End":  297,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  297,
      "End":  298,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  33,
      "End":  299,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  299,
      "End":  62,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  34,
      "End":  300,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  300,
      "End":  63,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "BlockPar.EC.Total.Strings":  72,
  "BlockPar.EC":  
  [
    {
      "#":  "19",
      "String":  "Внимание! <br>Радары дальнего действия обнаружили в пограничных системах доминаторские корабли с неизвестной по сей день сигнатурой. Аналитические группы полагают, что доминаторы используют некую новую акриновую модификацию, несовместимую с не принадлежащими их сериям кораблями. Особо бравым разведчикам удалось раздобыть несколько экземпляров не поддающегося поверхностному сканированию оборудования. Передовые умы Содружества уже взялись за детальное изучение представленных материалов, и обещают сделать определённый чёткий вывод в течении нескольких лет."    
    },
    {
      "#":  "20",
      "String":  "Демонтировать <0>"    
    },
    {
      "#":  "21",
      "String":  "Мне надо разблокировать доминаторский акрин"    
    },
    {
      "#":  "22",
      "String":  "Приобрести ингибиторы"    
    },
    {
      "#":  "23",
      "String":  "Я хочу узнать о новой антидоминаторской технологии"    
    },
    {
      "#":  "24",
      "String":  "<Player>, вам так же определённо захочется узнать о возможности вашего участия в программе бета-теста нашей <clr>новой технологии по противодействию организованным нападениям доминаторов<clrEnd>"    
    },
    {
      "#":  "25",
      "String":  "Мы лишь сравнительно недавно мобилизовали персонал для этой задачи и пока не имеем серьезных успехов."    
    },
    {
      "#":  "26",
      "String":  "Мы активно проводим исследования в этом направлении, но, все же, еще далеки от успеха."    
    },
    {
      "#":  "27",
      "String":  "Тем не менее, исследования в этом направлении идут полным ходом и в скором времени мы должны совершить прорыв."    
    },
    {
      "#":  "28",
      "String":  "Ничего я выбирать не буду"    
    },
    {
      "#":  "29",
      "String":  "Мы можем попробовать разблокировать уникальные свойства особых доминаторских модификаций, адаптировав их к коалиционному оборудованию. Мы предупреждаем вас, что эта операция проходит в рамках эксперимента и <clr>снятие блокировки не гарантировано<clrEnd>, вполне возможна <clr>частичная или полная поломка оборудования<clrEnd>. Кроме того, важно упомянуть, что с каждым экспериментом мы будем набираться опыта, и шанс на успех будет увеличиваться.<br><br>С какого оборудования вы бы хотели снять блокировку?"    
    },
    {
      "#":  "30",
      "String":  "К сожалению, нам пока не удается совместить доминаторские модификации с оборудованием Коалиции. <0>"    
    },
    {
      "#":  "31",
      "String":  "В снятии блокировки мы можем задействовать наших лучших специалистов. Они будут работать профессионально, и шанс на неудачу заметно ниже, чем при работе других мастеров. Если ваши финансы их не потянут, то работать будут обычные специалисты; они не должны взорвать ваше оборудование, но косяки в их работе вполне допустимы. А за малую сумму возьмутся работать только стажеры, которые наверняка что-нибудь да поломают.<br><br><br>Исходя из стоимости такой вещи как <0> и процентных расценок наших специалистов, получается следующее:<br><br><br>--------------------------<br>Лучшие специалисты - <1> cr. и <2> нод.<br>Шанс успеха - <3>%<br>Обычные специалисты - <4> cr. и <5> нод.<br>Шанс успеха - <6>%<br>Стажеры - <7> cr. и <8> нод.<br>Шанс успеха - <9>%<br>--------------------------<br><br><br>Кому вы доверите работу?"    
    },
    {
      "#":  "32",
      "String":  "К несчастью, при попытке снятия блокировки ученые допустили критическую ошибку, и теперь <0> годен только на металлолом.<br>Тем не менее, наши специалисты все таки учатся на ошибках и в дальнейшем попробуют не допускать такого плачевного результьтата.<br><br>Желаете повторить эксперимент с другим оборудованием?"    
    },
    {
      "#":  "33",
      "String":  "Отлично, наши специалисты уже успешно совместили <0> с вашим оборудованием. Кроме того, наши мастера приобрели дополнительный опыт, и шанс успешного снятия блокировки повысился. <br><br>Желаете повторить эксперимент с другим оборудованием?"    
    },
    {
      "#":  "34",
      "String":  "Наши специалисты уже совместили <0> с вашим оборудованием.<br><1><br>Но, не смотря на это, наши специалисты все равно набрались опыта и постараются впредь не допускать таких ошибок.<br><br>Желаете повторить эксперимент с другим оборудованием?"    
    },
    {
      "#":  "35",
      "String":  "Извиняй, братан, но мы в этой теме еще не достаточно прошарены. Прилетай через годик-другой, авось у нас и получится что-нибудь."    
    },
    {
      "#":  "36",
      "String":  "Совсем недавно наши парни научились хоть как-то работать с модифицированным доминаторами оборудованием, а именно снимать с него блокировку и приспосабливать под наши системы. Правда, ключевые слова здесь \"хоть как-то\" и мы <clr>совершенно не гарантируем успеха<clrEnd>, но попробовать ты можешь. Обучение спецов и покупка оборудования дорого нам обошлись, так что для участия в эксперименте тебе надо уплатить <0> cr. Ну, что скажешь, <Player>?"    
    },
    {
      "#":  "37",
      "String":  "Наши спецы могут попробовать поработать над оборудкой и приспособить к твоему кораблю. Успех нами не гарантируется, да и всегда есть шанс словить какой-нибудь побочный эффект, не всегда вредный. Обучение спецов и покупка оборудования дорого нам обошлись, так что для участия в эксперименте тебе надо уплатить <0> cr. Ну как, вперед?"    
    },
    {
      "#":  "38",
      "String":  "Спецы уже подготовили свое оборудование. Только укажи вещь, с которой нашим парням работать."    
    },
    {
      "#":  "39",
      "String":  "Итак, <Player>, ты хочешь доверить нам <0>. Стоимость этой операции - <1> cr и <2> нодов, но за твое пиратское звание мы сделаем скидочку в <3><clr>%<clrEnd>. Итого, с тебя <4> cr и <5> нодов. Ну как, пойдет?"    
    },
    {
      "#":  "40",
      "String":  "Спецы уже сняли все ограничения с оборудки, и теперь она может работать, как и задумано.<br><0><br>Наши мастера теперь поднабрались опыта и работают немного лучше. Еще шаманить будем?"    
    },
    {
      "#":  "41",
      "String":  "Извиняй, <Player>, но пока наши парни плясали с бубном, что-то пошло не так, и... в общем, кранты той оборудке. <br>Но не боись, мы уже изрядно наорали на них за такую оплошность и в дальнейшем спецы постараются не ошибаться. Будет еще работенка?"    
    },
    {
      "#":  "42",
      "String":  "Спецы уже сняли все ограничения с оборудки, и теперь она может работать, как и задумано.<br>Наши мастера теперь поднабрались опыта и работают немного лучше. Еще шаманить будем?"    
    },
    {
      "#":  "43",
      "String":  "Извините, рейнджер <Player>, но доминаторы побеждены, и всех специалистов по доминаторскому оборудованию распустили за ненадобностью.<br><br>Попробуйте обратиться к пиратам, возможно, у них найдутся необходимые люди."    
    },
    {
      "#":  "44",
      "String":  "Калибровка трансмиттеров завершена, пользователь <Player> успешно идентифицирован. Установлен приоритет цели А+, подлежит немедленному изучению, все задачи несистемного приоритета отложены."    
    },
    {
      "#":  "45",
      "String":  "Ответ отрицательный, данный логический модуль является независимой единицей."    
    },
    {
      "#":  "46",
      "String":  "В отличие от основной базы данных, модуль FG-42 обладает более ограниченными вычислительными возможностями и предназначался для стороннего проекта."    
    },
    {
      "#":  "47",
      "String":  "Данная информация имеет системный приоритет. Подключение к основной базе данных отсутствует, авторизация невозможна. Корабль <PlayerFull> подлежит немедленному изучению и не обладает правами перезаписи."    
    },
    {
      "#":  "48",
      "String":  "Ответ отрицательный. Текущая задача: изучить <Player> как потенциальную угрозу высшего уровня."    
    },
    {
      "#":  "49",
      "String":  "Клисаны мною еще не изучены. По плану до их изучения осталось около 50 гс. Здесь еще много интересного, хотя, надо признать, в последнее время материала для изучения стало катастрофически мало. Масса различных факторов мешает работе, и окружающее пространство стало однородным."    
    },
    {
      "#":  "50",
      "String":  "Исследования по перемещению между рукавами мною закончены более 1 гс назад.<br>Я покину данный рукав немедленно. А здесь свои задачи останутся выполнять модули для сбора информации."    
    },
    {
      "#":  "51",
      "String":  "Вы ведь заметили, что в системе почти с самого вашего вступления в рейнджеры была размещена одна интересная орудийная платформа с <clr>гиперпространственным ингибитором<clrEnd>? Так вот - это именно наше изобретение, ученых с вашей родины, <0>! Нам удалось создать устройство, которое, оставляя частоту, известную только военным Коалиции, блокирует любые попытки массированного перехода, таким образом, заставляя врага дважды подумать, прежде чем рисковать отправлять свои войска по одному кораблю, легко распиливаемую любым уважающим себя патрулём в системе. К сожалению, нам не удалось стабилизировать систему так, чтобы активировать больше <1> платформ одновременно, не обрушив при этом любую гиперпространственную связь в секторе, да и больше <clr>одной установки в год<clrEnd> мы не можем подключать просто из тактических соображений. Не желаете помочь нашему эксперименту, размещая в подконтрольных Коалиции системах новые установки? Вы лицо свободное, за вами мало какой шпион нарочно следить будет. Почему мы обращаемся именно к вам, окромя фактора неожиданности? Всё достаточно прозаично - вас порекомендовал ваш старый ректор, у которого вам повезло отличиться по молодости и который оказался тем самым ученым, который пронёс на спине большую часть нашего проекта. Да-да, как видите, порой и на войне давние связи бывают чертовски полезны.<br>Ну что, рейнджер? Если вы откажетесь участвовать, мы либо найдём другую кандидатуру, либо сконцентрируем доступные тестовые мощности на уже имеющейся защите. Так что это ваш шанс внести свою лепту.<br>К слову, ингибиторы требуют <2> месяца на активацию, так что первое время установки необходимо охранять от нежелательных вмешательств пиратов или доминаторов. Не забывайте об этом, <Player>, не создавайте брешей в обороне нашего рукава!"    
    },
    {
      "#":  "52",
      "String":  "Ресурсы нашего отдела временно исчерпались, а потому покупка ингибиторов станет доступна не ранее, чем <0>."    
    },
    {
      "#":  "53",
      "String":  "На данный момент стоимость одного ингибитора равняется <0> cr. Знаем, немало, но вы же не считаете, что надо экономить на безопасности жителей Коалиции, <Player>?"    
    },
    {
      "#":  "54",
      "String":  "<0> совершит аварийную посадку на ближайшую обитаемую планету и будет разобран. В качестве компенсации на ваш счет будет переведено <1> cr. Учтите: операцию невозможно будет отменить."    
    },
    {
      "#":  "55",
      "String":  "Энергия успешно перенаправлена на двигатели. <0> взял курс на планету <1>. Компенсация в размере <2> cr переведена на ваш счет."    
    },
    {
      "#":  "56",
      "String":  "Вот как? Ну ладно..."    
    },
    {
      "#":  "57",
      "String":  "Оплачиваю стоимость самых лучших спецов"    
    },
    {
      "#":  "58",
      "String":  "К сожалению, при совмещении оборудование вышло из строя. Впрочем, это не критично и мастера из соседнего отдела смогут устранить дефекты."    
    },
    {
      "#":  "59",
      "String":  "Но совмещение оборудования произошло с ошибками, и его технический уровень упал."    
    },
    {
      "#":  "60",
      "String":  "К несчастью, при снятии блокировки мы повредили оборудование и одна из его характеристик снизилась."    
    },
    {
      "#":  "61",
      "String":  "Пусть поработают обычные специалисты"    
    },
    {
      "#":  "62",
      "String":  "Я заплачу зеленым стажерам!"    
    },
    {
      "#":  "63",
      "String":  "Да, конечно"    
    },
    {
      "#":  "64",
      "String":  "Нет, спасибо"    
    },
    {
      "#":  "65",
      "String":  "Отказываюсь платить по таким грабительским расценкам!"    
    },
    {
      "#":  "66",
      "String":  "А почему бы и нет? Давайте начнем!"    
    },
    {
      "#":  "67",
      "String":  "Нет, спасибо. Я лучше подожду, пока вы нормально освоитесь в этом"    
    },
    {
      "#":  "68",
      "String":  "Ну уж нет, такие деньги я платить не готов!"    
    },
    {
      "#":  "69",
      "String":  "Ага. Поехали!"    
    },
    {
      "#":  "70",
      "String":  "К сожалению, при совмещении оборудование вышло из строя. Впрочем, это всё ерунда, верно?"    
    },
    {
      "#":  "71",
      "String":  "Но при совмещении всплыло несколько досадных багов, из-за которых технический уровень оборудования упал."    
    },
    {
      "#":  "72",
      "String":  "Только вот нашим парням пришлось убрать парочку мешавших деталек, так что характеристики оборудования могли слегка поменяться."    
    },
    {
      "#":  "73",
      "String":  "Э-э, чего? Келлер? Разве я тебя недавно не прикончил? Что за чертовщина здесь происходит?"    
    },
    {
      "#":  "74",
      "String":  "Келлер? Ты же прямо у меня на глазах отправился в гости к клисанам в соседний рукав! Даже ты не мог долететь туда и обратно так быстро. Прыжок сорвался?"    
    },
    {
      "#":  "75",
      "String":  "Ух, братуха, мы же договаривались, что ты не покинешь территорию Нифигаца, в чем же тогда дело?"    
    },
    {
      "#":  "76",
      "String":  "Независимой? То есть, Келлер создал себе двойника?"    
    },
    {
      "#":  "77",
      "String":  "И что же это было за дело такое, что Келлер, обладая потенциально бесконечным рематериализатором, решил создать себе двойника?"    
    },
    {
      "#":  "78",
      "String":  "И правда - вычислительные возможности у тебя куда более ограниченные, чем у папаши. Тот хотя бы у нас местным философом заделался. Давай проверим, сможешь ли ты вовремя сварганить себе собственный материализатор, дружище."    
    },
    {
      "#":  "79",
      "String":  "Так, хорошо, значит, ты сейчас лишён каких-либо целеуказаний, верно?"    
    },
    {
      "#":  "80",
      "String":  "Высшего? Я польщен. Но у меня есть более интересное предложение. Как насчет изучения клисан?"    
    },
    {
      "#":  "81",
      "String":  "У клисан полезной тебе информации просто завались! Кстати, а разве у тебя есть технология перемещения между рукавами нашей галактики? Как скоро ты сможешь улететь?"    
    },
    {
      "#":  "82",
      "String":  "Конец связи"    
    },
    {
      "#":  "83",
      "String":  "Ради общего дела ничего не жалко"    
    },
    {
      "#":  "84",
      "String":  "Для меня это неподъемная сумма"    
    },
    {
      "#":  "85",
      "String":  "Как скажете"    
    },
    {
      "#":  "86",
      "String":  "А что, давайте. Всегда рад помочь старым знакомым, причём с такой-то благородной целью"    
    },
    {
      "#":  "87",
      "String":  "Я подумаю над этим"    
    },
    {
      "#":  "88",
      "String":  "Подтвердить"    
    },
    {
      "#":  "89",
      "String":  "Отменить"    
    },
    {
      "#":  "90",
      "String":  "На мостик"    
    }  
  ]
}