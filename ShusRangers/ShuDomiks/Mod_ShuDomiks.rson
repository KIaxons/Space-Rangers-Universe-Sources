{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -373,
  "ViewPos.y":  -167,
  "ScriptName":  "Mod_ShuDomiks",
  "ScriptFileOut":  "H:\\Mod_ShuDomiks.scr",
  "ScriptTextOut":  "H:\\Mod_ShuDomiks.txt",
  "GraphPoint.Count":  302,
  "GraphLink.Count":  253,
  "GraphRectText.Count":  1,
  "Variables.Count":  76,
  "Stars.Count":  1,
  "Planets.Count":  1,
  "Ships.Count":  1,
  "States.Count":  21,
  "Groups.Count":  24,
  "Places.Count":  1,
  "Items.Count":  1,
  "Ethers.Count":  0,
  "Dialogs.Count":  7,
  "DialogMessages.Count":  27,
  "DialogAnswers.Count":  41,
  "Operations.Count":  44,
  "Statements.Count":  57,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "DialogAnswers":      
      [
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  860,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  52,
          "Msg":  "Вот как? Ну ладно...",
          "AMsg.Num":  "0"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  610,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  53,
          "Msg":  "Оплачиваю стоимость самых лучших спецов",
          "AMsg.Num":  "1"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  54,
          "Msg":  "Пусть поработают обычные специалисты",
          "AMsg.Num":  "2"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  790,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  55,
          "Msg":  "Я заплачу зеленым стажерам!",
          "AMsg.Num":  "3"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  0,
          "Parent":  -1,
          "#":  56,
          "Msg":  "Да, конечно",
          "AMsg.Num":  "4"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  610,
          "Pos.y":  0,
          "Parent":  -1,
          "#":  57,
          "Msg":  "Нет, спасибо",
          "AMsg.Num":  "5"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  860,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  58,
          "Msg":  "Отказываюсь платить по таким грабительским расценкам!",
          "AMsg.Num":  "6"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1260,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  59,
          "Msg":  "Вот как? Ну ладно...",
          "AMsg.Num":  "7"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  1200,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  60,
          "Msg":  "А почему бы и нет? Давайте начнем!",
          "AMsg.Num":  "8"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1260,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  61,
          "Msg":  "Нет, спасибо. Я лучше подожду, пока вы нормально освоитесь в этом",
          "AMsg.Num":  "9"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1110,
          "Pos.y":  0,
          "Parent":  -1,
          "#":  62,
          "Msg":  "Ну уж нет, такие деньги я платить не готов!",
          "AMsg.Num":  "10"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1000,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  63,
          "Msg":  "Отказываюсь платить по таким грабительским расценкам!",
          "AMsg.Num":  "11"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  1050,
          "Pos.y":  90,
          "Parent":  -1,
          "#":  64,
          "Msg":  "Ага. Поехали!",
          "AMsg.Num":  "12"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  1100,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  65,
          "Msg":  "Да, конечно",
          "AMsg.Num":  "13"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1260,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  66,
          "Msg":  "Нет, спасибо",
          "AMsg.Num":  "14"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  610,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  67,
          "Msg":  "Вот как? Ну ладно...",
          "AMsg.Num":  "15"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  1030,
          "Pos.y":  0,
          "Parent":  -1,
          "#":  68,
          "Msg":  "А почему бы и нет? Давайте начнем!",
          "AMsg.Num":  "16"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  200,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  69,
          "Msg":  "Э-э, чего? Келлер? Разве я тебя недавно не прикончил? Что за чертовщина здесь происходит?",
          "AMsg.Num":  "17"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  240,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  70,
          "Msg":  "Келлер? Ты же прямо у меня на глазах отправился в гости к клисанам в соседний рукав! Даже ты не мог долететь туда и обратно так быстро. Прыжок сорвался?",
          "AMsg.Num":  "18"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  280,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  71,
          "Msg":  "Ух, братуха, мы же договаривались, что ты не покинешь территорию Нифигаца, в чем же тогда дело?",
          "AMsg.Num":  "19"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  240,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  72,
          "Msg":  "Независимой? То есть, Келлер создал себе двойника?",
          "AMsg.Num":  "20"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  200,
          "Pos.y":  50,
          "Parent":  -1,
          "#":  73,
          "Msg":  "И что же это было за дело такое, что Келлер, обладая потенциально бесконечным рематериализатором, решил создать себе двойника?",
          "AMsg.Num":  "21"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  200,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  74,
          "Msg":  "И правда - вычислительные возможности у тебя куда более ограниченные, чем у папаши. Тот хотя бы у нас местным философом заделался. Давай проверим, сможешь ли ты вовремя сварганить себе собственный материализатор, дружище.",
          "AMsg.Num":  "22"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  280,
          "Pos.y":  70,
          "Parent":  -1,
          "#":  75,
          "Msg":  "Так, хорошо, значит, ты сейчас лишён каких-либо целеуказаний, верно?",
          "AMsg.Num":  "23"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  200,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  76,
          "Msg":  "Высшего? Я польщен. Но у меня есть более интересное предложение. Как насчет изучения клисан?",
          "AMsg.Num":  "24"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  280,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  77,
          "Msg":  "У клисан полезной тебе информации просто завались! Кстати, а разве у тебя есть технология перемещения между рукавами нашей галактики? Как скоро ты сможешь улететь?",
          "AMsg.Num":  "25"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "fastexit",
          "Pos.x":  200,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  78,
          "Msg":  "Конец связи",
          "AMsg.Num":  "26"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  510,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  79,
          "Msg":  "Ради общего дела ничего не жалко",
          "AMsg.Num":  "27"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  510,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  80,
          "Msg":  "Для меня это неподъемная сумма",
          "AMsg.Num":  "28"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  370,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  81,
          "Msg":  "Как скажете",
          "AMsg.Num":  "29"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  440,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  82,
          "Msg":  "А что, давайте. Всегда рад помочь старым знакомым, причём с такой-то благородной целью",
          "AMsg.Num":  "30"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  370,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  83,
          "Msg":  "Я подумаю над этим",
          "AMsg.Num":  "31"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  470,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  84,
          "Msg":  "Подтвердить",
          "AMsg.Num":  "32"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  370,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  85,
          "Msg":  "Отменить",
          "AMsg.Num":  "33"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  370,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  86,
          "Msg":  "На мостик",
          "AMsg.Num":  "34"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  1070,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  253,
          "Msg":  "Ага. Поехали!",
          "AMsg.Num":  "35"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  790,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  256,
          "Msg":  "Я заплачу зеленым стажерам!",
          "AMsg.Num":  "36"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  610,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  259,
          "Msg":  "Оплачиваю стоимость самых лучших спецов",
          "AMsg.Num":  "37"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  700,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  260,
          "Msg":  "Пусть поработают обычные специалисты",
          "AMsg.Num":  "38"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  1060,
          "Pos.y":  0,
          "Parent":  -1,
          "#":  266,
          "Msg":  "А почему бы и нет? Давайте начнем!",
          "AMsg.Num":  "39"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  1220,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  268,
          "Msg":  "А почему бы и нет? Давайте начнем!",
          "AMsg.Num":  "40"        
        }      
      ],
      "DialogMessages":      
      [
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  830,
          "Pos.y":  0,
          "Parent":  -1,
          "#":  25,
          "Msg":  "Мы можем попробовать разблокировать уникальные свойства особых доминаторских модификаций, адаптировав их к коалиционному оборудованию. Мы предупреждаем вас, что эта операция проходит в рамках эксперимента и <clr>снятие блокировки не гарантировано<clrEnd>, вполне возможна <clr>частичная или полная поломка оборудования<clrEnd>. Кроме того, важно упомянуть, что с каждым экспериментом мы будем набираться опыта, и шанс на успех будет увеличиваться.<br><br>С какого оборудования вы бы хотели снять блокировку?",
          "DMsg.Num":  "0"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  860,
          "Pos.y":  -40,
          "Parent":  -1,
          "#":  26,
          "Msg":  "К сожалению, нам пока не удается совместить доминаторские модификации с оборудованием Коалиции. <tstr1>",
          "DMsg.Num":  "1"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  830,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  27,
          "Msg":  "В снятии блокировки мы можем задействовать наших лучших специалистов. Они будут работать профессионально, и шанс на неудачу заметно ниже, чем при работе других мастеров. Если ваши финансы их не потянут, то работать будут обычные специалисты; они не должны взорвать ваше оборудование, но косяки в их работе вполне допустимы. А за малую сумму возьмутся работать только стажеры, которые наверняка что-нибудь да поломают.<br><br><br>Исходя из стоимости такой вещи как <tstr1> и процентных расценок наших специалистов, получается следующее:<br><br><br>--------------------------<br>Лучшие специалисты - <credit_cost> cr. и <nodes_cost> нод.<br>Шанс успеха - <ProfiChanceUnlockSB>%<br>Обычные специалисты - <credit_cost/2> cr. и <nodes_cost/2> нод.<br>Шанс успеха - <OrdinaryChanceUnlockSB>%<br>Стажеры - <credit_cost/4> cr. и <nodes_cost/4> нод.<br>Шанс успеха - <RookieChanceUnlockSB>%<br>--------------------------<br><br><br>Кому вы доверите работу?",
          "DMsg.Num":  "2"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "BOOM",
          "Pos.x":  770,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  28,
          "Msg":  "К несчастью, при попытке снятия блокировки ученые допустили критическую ошибку, и теперь <tstr1> годен только на металлолом.<br>Тем не менее, наши специалисты все таки учатся на ошибках и в дальнейшем попробуют не допускать такого плачевного результьтата.<br><br>Желаете повторить эксперимент с другим оборудованием?",
          "DMsg.Num":  "3"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "Success",
          "Pos.x":  630,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  29,
          "Msg":  "Отлично, наши специалисты уже успешно совместили <tstr1> с вашим оборудованием. Кроме того, наши мастера приобрели дополнительный опыт, и шанс успешного снятия блокировки повысился. <br><br>Желаете повторить эксперимент с другим оборудованием?",
          "DMsg.Num":  "4"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "Fail",
          "Pos.x":  700,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  30,
          "Msg":  "Наши специалисты уже совместили <tstr1> с вашим оборудованием.<br><tstr2><br>Но, не смотря на это, наши специалисты все равно набрались опыта и постараются впредь не допускать таких ошибок.<br><br>Желаете повторить эксперимент с другим оборудованием?",
          "DMsg.Num":  "5"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1260,
          "Pos.y":  -40,
          "Parent":  -1,
          "#":  31,
          "Msg":  "Извиняй, братан, но мы в этой теме еще не достаточно прошарены. Прилетай через годик-другой, авось у нас и получится что-нибудь.",
          "DMsg.Num":  "6"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1220,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  32,
          "Msg":  "Совсем недавно наши парни научились хоть как-то работать с модифицированным доминаторами оборудованием, а именно снимать с него блокировку и приспосабливать под наши системы. Правда, ключевые слова здесь \"хоть как-то\" и мы <clr>совершенно не гарантируем успеха<clrEnd>, но попробовать ты можешь. Обучение спецов и покупка оборудования дорого нам обошлись, так что для участия в эксперименте тебе надо уплатить <credit_cost> cr. Ну, что скажешь, <Player>?",
          "DMsg.Num":  "7"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1060,
          "Pos.y":  -40,
          "Parent":  -1,
          "#":  33,
          "Msg":  "Наши спецы могут попробовать поработать над оборудкой и приспособить к твоему кораблю. Успех нами не гарантируется, да и всегда есть шанс словить какой-нибудь побочный эффект, не всегда вредный. Обучение спецов и покупка оборудования дорого нам обошлись, так что для участия в эксперименте тебе надо уплатить <credit_cost> cr. Ну как, вперед?",
          "DMsg.Num":  "8"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1000,
          "Pos.y":  20,
          "Parent":  -1,
          "#":  34,
          "Msg":  "Спецы уже подготовили свое оборудование. Только укажи вещь, с которой нашим парням работать.",
          "DMsg.Num":  "9"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1000,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  35,
          "Msg":  "Итак, <Player>, ты хочешь доверить нам <tstr1>. Стоимость этой операции - <tint2> cr и <tint3> нодов, но за твое пиратское звание мы сделаем скидочку в <discount><clr>%<clrEnd>. Итого, с тебя <credit_cost> cr и <nodes_cost> нодов. Ну как, пойдет?",
          "DMsg.Num":  "10"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "Random",
          "Pos.x":  1180,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  36,
          "Msg":  "Спецы уже сняли все ограничения с оборудки, и теперь она может работать, как и задумано.<br><tstr2><br>Наши мастера теперь поднабрались опыта и работают немного лучше. Еще шаманить будем?",
          "DMsg.Num":  "11"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "BOOM",
          "Pos.x":  1260,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  37,
          "Msg":  "Извиняй, <Player>, но пока наши парни плясали с бубном, что-то пошло не так, и... в общем, кранты той оборудке. <br>Но не боись, мы уже изрядно наорали на них за такую оплошность и в дальнейшем спецы постараются не ошибаться. Будет еще работенка?",
          "DMsg.Num":  "12"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "Success",
          "Pos.x":  1100,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  38,
          "Msg":  "Спецы уже сняли все ограничения с оборудки, и теперь она может работать, как и задумано.<br>Наши мастера теперь поднабрались опыта и работают немного лучше. Еще шаманить будем?",
          "DMsg.Num":  "13"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  610,
          "Pos.y":  -60,
          "Parent":  -1,
          "#":  39,
          "Msg":  "Извините, рейнджер <Player>, но доминаторы побеждены, и всех специалистов по доминаторскому оборудованию распустили за ненадобностью.<br><br>Попробуйте обратиться к пиратам, возможно, у них найдутся необходимые люди.",
          "DMsg.Num":  "14"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  240,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  40,
          "Msg":  "Калибровка трансмиттеров завершена, пользователь <Player> успешно идентифицирован. Установлен приоритет цели А+, подлежит немедленному изучению, все задачи несистемного приоритета отложены.",
          "DMsg.Num":  "15"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  240,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  41,
          "Msg":  "Ответ отрицательный, данный логический модуль является независимой единицей.",
          "DMsg.Num":  "16"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  200,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  42,
          "Msg":  "В отличие от основной базы данных, модуль FG-42 обладает более ограниченными вычислительными возможностями и предназначался для стороннего проекта.",
          "DMsg.Num":  "17"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  280,
          "Pos.y":  50,
          "Parent":  -1,
          "#":  43,
          "Msg":  "Данная информация имеет системный приоритет. Подключение к основной базе данных отсутствует, авторизация невозможна. Корабль <PlayerFull> подлежит немедленному изучению и не обладает правами перезаписи.",
          "DMsg.Num":  "18"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  280,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  44,
          "Msg":  "Ответ отрицательный. Текущая задача: изучить <Player> как потенциальную угрозу высшего уровня.",
          "DMsg.Num":  "19"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  200,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  45,
          "Msg":  "Клисаны мною еще не изучены. По плану до их изучения осталось около 50 гс. Здесь еще много интересного, хотя, надо признать, в последнее время материала для изучения стало катастрофически мало. Масса различных факторов мешает работе, и окружающее пространство стало однородным.",
          "DMsg.Num":  "20"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  280,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  46,
          "Msg":  "Исследования по перемещению между рукавами мною закончены более 1 гс назад.\r\nЯ покину данный рукав немедленно. А здесь свои задачи останутся выполнять модули для сбора информации.",
          "DMsg.Num":  "21"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  440,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  47,
          "Msg":  "Вы ведь заметили, что в системе почти с самого вашего вступления в рейнджеры была размещена одна интересная орудийная платформа с <clr>гиперпространственным ингибитором<clrEnd>? Так вот - это именно наше изобретение, ученых с вашей родины, <Name(GetShipHomePlanet(Player()))>! Нам удалось создать устройство, которое, оставляя частоту, известную только военным Коалиции, блокирует любые попытки массированного перехода, таким образом, заставляя врага дважды подумать, прежде чем рисковать отправлять свои войска по одному кораблю, легко распиливаемую любым уважающим себя патрулём в системе. К сожалению, нам не удалось стабилизировать систему так, чтобы активировать больше <GMaxInhibitorsCount> платформ одновременно, не обрушив при этом любую гиперпространственную связь в секторе, да и больше <clr>одной установки в год<clrEnd> мы не можем подключать просто из тактических соображений. Не желаете помочь нашему эксперименту, размещая в подконтрольных Коалиции системах новые установки? Вы лицо свободное, за вами мало какой шпион нарочно следить будет. Почему мы обращаемся именно к вам, окромя фактора неожиданности? Всё достаточно прозаично - вас порекомендовал ваш старый ректор, у которого вам повезло отличиться по молодости и который оказался тем самым ученым, который пронёс на спине большую часть нашего проекта. Да-да, как видите, порой и на войне давние связи бывают чертовски полезны.<br>Ну что, рейнджер? Если вы откажетесь участвовать, мы либо найдём другую кандидатуру, либо сконцентрируем доступные тестовые мощности на уже имеющейся защите. Так что это ваш шанс внести свою лепту.<br>К слову, ингибиторы требуют <3> месяца на активацию, так что первое время установки необходимо охранять от нежелательных вмешательств пиратов или доминаторов. Не забывайте об этом, <Player>, не создавайте брешей в обороне нашего рукава!",
          "DMsg.Num":  "22"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  370,
          "Pos.y":  -50,
          "Parent":  -1,
          "#":  48,
          "Msg":  "Ресурсы нашего отдела временно исчерпались, а потому покупка ингибиторов станет доступна не ранее, чем <GameDateTxtByTurn(NextBuyInhib)>.",
          "DMsg.Num":  "23"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  470,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  49,
          "Msg":  "На данный момент стоимость одного ингибитора равняется <credit_cost> cr. Знаем, немало, но вы же не считаете, что надо экономить на безопасности жителей Коалиции, <Player>?",
          "DMsg.Num":  "24"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  420,
          "Pos.y":  130,
          "Parent":  -1,
          "#":  50,
          "Msg":  "<Name(cur_ship)> совершит аварийную посадку на ближайшую обитаемую планету и будет разобран. В качестве компенсации на ваш счет будет переведено <credit_cost> cr. Учтите: операцию невозможно будет отменить.",
          "DMsg.Num":  "25"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  440,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  51,
          "Msg":  "Энергия успешно перенаправлена на двигатели. <Name(cur_ship)> взял курс на планету <Name(NearCivilPlanet(cur_ship))>. Компенсация в размере <credit_cost> cr переведена на ваш счет.",
          "DMsg.Num":  "26"        
        }      
      ],
      "Dialogs":      
      [
        {
          "Type":  "TDialog",
          "Name":  "DomModUnlockSB",
          "Pos.x":  780,
          "Pos.y":  -110,
          "Parent":  -1,
          "#":  142        
        },
        {
          "Type":  "TDialog",
          "Name":  "DomModUnlockCB",
          "Pos.x":  1160,
          "Pos.y":  -110,
          "Parent":  -1,
          "#":  143        
        },
        {
          "Type":  "TDialog",
          "Name":  "KellerCloneDialog",
          "Pos.x":  240,
          "Pos.y":  -110,
          "Parent":  -1,
          "#":  144        
        },
        {
          "Type":  "TDialog",
          "Name":  "BuyInhibitor",
          "Pos.x":  420,
          "Pos.y":  -110,
          "Parent":  -1,
          "#":  145        
        },
        {
          "Type":  "TDialog",
          "Name":  "DestroyInhibitor",
          "Pos.x":  420,
          "Pos.y":  80,
          "Parent":  -1,
          "#":  146        
        },
        {
          "Type":  "TDialog",
          "Name":  "DomModUnlockCBGo",
          "Pos.x":  1000,
          "Pos.y":  60,
          "Parent":  -1,
          "#":  232        
        },
        {
          "Type":  "TDialog",
          "Name":  "DomModUnlockSBGo",
          "Pos.x":  830,
          "Pos.y":  60,
          "Parent":  -1,
          "#":  240        
        }      
      ],
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "PlayerGroup",
          "Pos.x":  -310,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  106,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "KellerClone",
          "Pos.x":  -140,
          "Pos.y":  -40,
          "Parent":  -1,
          "#":  107,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "DomRuinsTerron",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  113,
          "#":  108,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "Inhibitor",
          "Pos.x":  -140,
          "Pos.y":  -120,
          "Parent":  -1,
          "#":  109,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "Trancs2",
          "Pos.x":  190,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  110,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "Trancs1",
          "Pos.x":  80,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  111,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "Trancs0",
          "Pos.x":  -30,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  112,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "DomRuinsKeller",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  114,
          "#":  113,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "DomRuinsBlazer",
          "Pos.x":  -140,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  114,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "TerronBertors",
          "Pos.x":  -30,
          "Pos.y":  460,
          "Parent":  -1,
          "#":  115,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "TerronSupers",
          "Pos.x":  -30,
          "Pos.y":  490,
          "Parent":  -1,
          "#":  116,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "KellerBertors",
          "Pos.x":  -30,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  117,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "KellerSupers",
          "Pos.x":  -30,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  118,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "BlazerBertors",
          "Pos.x":  -30,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  119,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "BlazerSupers",
          "Pos.x":  -30,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  120,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "InhibitorDestroy",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  109,
          "#":  121,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "DomiksManualControl",
          "Pos.x":  -140,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  278,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "RattorsPack1",
          "Pos.x":  0,
          "Pos.y":  -190,
          "Parent":  1,
          "#":  288,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "RattorsPack2",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  288,
          "#":  292,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "RattorsPack3",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  292,
          "#":  293,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "RattorsPack4",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  293,
          "#":  294,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "RattorsPack5",
          "Pos.x":  0,
          "Pos.y":  80,
          "Parent":  288,
          "#":  295,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "RattorsPack6",
          "Pos.x":  0,
          "Pos.y":  100,
          "Parent":  288,
          "#":  296,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "RattorsPack7",
          "Pos.x":  0,
          "Pos.y":  120,
          "Parent":  288,
          "#":  301,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Items":      
      [
        {
          "Type":  "TItem",
          "Name":  "Semerenka",
          "Pos.x":  160,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  231,
          "Class":  5,
          "Item.Type":  0,
          "Size":  10,
          "Level":  1,
          "Radius":  150,
          "Owner":  6,
          "Useless":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  360,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  3,
          "Total.Lines":  1,
          "Code.Type":  "Global",
          "Code":          
          [
              "GRun();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  420,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  4,
          "Total.Lines":  683,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Удалить к марту 2023",
              "if(ArrayDim(RattorGroupsDataArray) < 2)",
              "{",
              "    ArrayDelete(RattorGroupsDataArray, 0);",
              "    //Интервал, с которым верфи будут спавнить новые стаи ратторов",
              "    tint1 = AdvancedAdjustmentSet(3, -1); //Сложность частоты спавна новых доминаторов",
              "    ArrayAdd(RattorGroupsDataArray, int(PortionInDiapason(tint1, 50, 500, 80, 25)), 'PackAssemblyDelay');",
              "",
              "    tint1 = AdvancedAdjustmentSet(1, -1); //Сложность уровня экипировки доминаторов",
              "    ArrayAdd(RattorGroupsDataArray, int(PortionInDiapason(tint1, 50, 500, 10, 30)), 'DebuffPower');",
              "    ArrayAdd(RattorGroupsDataArray, int(PortionInDiapason(tint1, 50, 500, 10, 30)), 'EquipDamage');",
              "",
              "    //Шансы на нейтрализацию раттора в процессе нанесении урона оборудке",
              "    tint1 = AdvancedAdjustmentSet(2, -1); //Сложность агрессивности доминаторов",
              "    ArrayAdd(RattorGroupsDataArray, int(PortionInDiapason(tint1, 50, 500, 6, 1)), 'DeadChanceCommon'); //Общий шанс смерти при нанесении урона любому предмету, кроме приведённых ниже",
              "    ArrayAdd(RattorGroupsDataArray, int(PortionInDiapason(tint1, 50, 500, 30, 5)), 'DeadChanceNanitoids');",
              "    ArrayAdd(RattorGroupsDataArray, int(PortionInDiapason(tint1, 50, 500, 75, 25)), 'DeadChanceFumigator');",
              "",
              "    ArrayAdd(RattorGroupsDataArray, newarray(1), '' + RattorsPack1);",
              "    ArrayAdd(RattorGroupsDataArray['' + RattorsPack1], 0, 'StateDone');",
              "    ArrayAdd(RattorGroupsDataArray['' + RattorsPack1], 0, 'ActCodeDone');",
              "    ArrayAdd(RattorGroupsDataArray['' + RattorsPack1], '', 'EffectsToShow');",
              "",
              "    ArrayAdd(RattorGroupsDataArray, newarray(1), '' + RattorsPack2);",
              "    ArrayAdd(RattorGroupsDataArray['' + RattorsPack2], 0, 'StateDone');",
              "    ArrayAdd(RattorGroupsDataArray['' + RattorsPack2], 0, 'ActCodeDone');",
              "    ArrayAdd(RattorGroupsDataArray['' + RattorsPack2], '', 'EffectsToShow');",
              "",
              "    ArrayAdd(RattorGroupsDataArray, newarray(1), '' + RattorsPack3);",
              "    ArrayAdd(RattorGroupsDataArray['' + RattorsPack3], 0, 'StateDone');",
              "    ArrayAdd(RattorGroupsDataArray['' + RattorsPack3], 0, 'ActCodeDone');",
              "    ArrayAdd(RattorGroupsDataArray['' + RattorsPack3], '', 'EffectsToShow');",
              "",
              "    ArrayAdd(RattorGroupsDataArray, newarray(1), '' + RattorsPack4);",
              "    ArrayAdd(RattorGroupsDataArray['' + RattorsPack4], 0, 'StateDone');",
              "    ArrayAdd(RattorGroupsDataArray['' + RattorsPack4], 0, 'ActCodeDone');",
              "    ArrayAdd(RattorGroupsDataArray['' + RattorsPack4], '', 'EffectsToShow');",
              "",
              "    ArrayAdd(RattorGroupsDataArray, newarray(1), '' + RattorsPack5);",
              "    ArrayAdd(RattorGroupsDataArray['' + RattorsPack5], 0, 'StateDone');",
              "    ArrayAdd(RattorGroupsDataArray['' + RattorsPack5], 0, 'ActCodeDone');",
              "    ArrayAdd(RattorGroupsDataArray['' + RattorsPack5], '', 'EffectsToShow');",
              "",
              "    ArrayAdd(RattorGroupsDataArray, newarray(1), '' + RattorsPack6);",
              "    ArrayAdd(RattorGroupsDataArray['' + RattorsPack6], 0, 'StateDone');",
              "    ArrayAdd(RattorGroupsDataArray['' + RattorsPack6], 0, 'ActCodeDone');",
              "    ArrayAdd(RattorGroupsDataArray['' + RattorsPack6], '', 'EffectsToShow');",
              "",
              "    ArrayAdd(RattorGroupsDataArray, newarray(1), '' + RattorsPack7);",
              "    ArrayAdd(RattorGroupsDataArray['' + RattorsPack7], 0, 'StateDone');",
              "    ArrayAdd(RattorGroupsDataArray['' + RattorsPack7], 0, 'ActCodeDone');",
              "    ArrayAdd(RattorGroupsDataArray['' + RattorsPack7], '', 'EffectsToShow');",
              "",
              "    //Разбрасываем фумигаторы по незаселёнкам",
              "    tint1 = PortionInDiapason(GalaxyDiffLevels(4), 50, 500, 10, 5);",
              "    cur_con = StarToCon(PlanetToStar(PlanetPirateClan()));",
              "    while(tint1)",
              "    {",
              "        while(1)",
              "        {",
              "            //Выбираем случайную систему, с исключением Тортугаца и Нифигаца",
              "            cur_star = GalaxyStar(Rnd(0, GalaxyStars() - 1));",
              "            if(StarToCon(cur_star) == cur_con) continue;",
              "",
              "            //Перебираем все планеты системы, ищем случайную незаселёнку",
              "            i = 0;",
              "            cur_planet = StarPlanets(cur_star, Rnd(0, StarPlanets(cur_star) - 1));",
              "            while(PlanetOwner(cur_planet) != None || i < 30)",
              "            {",
              "                cur_planet = StarPlanets(cur_star, Rnd(0, StarPlanets(cur_star) - 1));",
              "                i = i + 1;",
              "            }",
              "            break;",
              "        }",
              "",
              "        if(PlanetOwner(cur_planet) != None) continue;",
              "        //Добавляем фумигатор",
              "        j = Kling;",
              "        while(j == Kling) j = RndObject(Maloc, PirateClan, cur_planet);",
              "        cur_item = CreateCustomArt('Fumigator', CustomArtSizeCalc(int(CT('Artefacts.CustomArtefacts.Fumigator.Size'))), CustomArtCostCalc(int(CT('Artefacts.CustomArtefacts.Fumigator.Cost'))), j);",
              "        ItemDurability(cur_item, RndObject(0, 100, cur_planet));",
              "        AddItemToPlanet(cur_planet, cur_item);",
              "",
              "        tint1 = tint1 - 1;",
              "    }",
              "}",
              "",
              "//Автоматическое обновление характеристик кастомных орудий",
              "//Срабатывает, только если параметр StatsVersion для ShuDomiks был изменён",
              "if(gunUpdateCheck != CT('Items.Weapon.CustomWeapon.StatsVersion.ShuDomiks'))",
              "{",
              "    InventShuDomiksCustomGuns();",
              "    gunUpdateCheck = CT('Items.Weapon.CustomWeapon.StatsVersion.ShuDomiks');",
              "}",
              "",
              "//Запоминаем номера бонусов для переключения состояний ингибитора",
              "//Необходимо обновлять их каждый ход на случай переподключения модов (заебало, что номера бонусов сбиваются при подключении модов)",
              "InhibOnBonusNum = FindBonusByNameInCfg('ShuDomiks_InhibitorOn');",
              "InhibOffBonusNum = FindBonusByNameInCfg('ShuDomiks_InhibitorOff');",
              "//Запоминаем текущий ГТУ, который часто используется в различных функциях",
              "GTL = GalaxyTechLevel();",
              "",
              "//Выставляем маркер о том, что был подключён мод EvoArmada (может быть подключён во время партии)",
              "if(!EvoArmadaInit)",
              "{",
              "    if(CurrentMods('Evolution\\EvoArmada')) EvoArmadaInit = 1;",
              "}",
              "",
              "//MS_Terron_Crack_Submodem - глобальная переменная из модифицированного скрипта MS_Terron",
              "//Добавление переменной MS_Terron_Crack_Submodem и её установка в значение 1 при взломе, является единственным отличием того скрипта от оригинала",
              "//Если был произведён взлом Террона Сабмодемом",
              "if(MS_Terron_Crack_Submodem)",
              "{",
              "    if(Terron())",
              "    {",
              "        //Выключаем пушки у всех Терроноидов в Гралгаре",
              "        cur_star = ShipStar(Terron());",
              "        for(i = 0; i < StarShips(cur_star); i = i + 1)",
              "        {",
              "            cur_ship = StarShips(cur_star, i);",
              "            if(cur_ship == Terron()) continue;",
              "            if(ShipOwner(cur_ship) == Kling && ItemSubrace(ShipItems(cur_ship, 0)) == 2)",
              "            {",
              "                //Запускаем W-Кодер для каждого терроноида",
              "                DomikProgramm(cur_ship, 7);",
              "                DomikProgrammDate(cur_ship, CurTurn());",
              "            }",
              "        }",
              "    }",
              "}",
              "",
              "//Самоуничтожение обороняющихся в своей системе доминаторов в случае огневого превосходства игрока (мод ShuDomiksKamikaze)",
              "if(ShuDomiksKamikazeInit)",
              "{",
              "    cur_star = ShipStar(Player());",
              "    //Если игрок ведёт бой в доминаторской системе",
              "    if(StarOwner(cur_star) == 1)",
              "    {",
              "        if(StarBattle(cur_star))",
              "        {",
              "            //Производим подсчёт кораблей в системе",
              "            //Если доминаторов в системе больше двух - они не отступят",
              "            //Если суммарная сила доминаторов выше силы всех прочих кораблей - они не отступят",
              "            //Если в системе находится хотя бы один доминаторский босс, бертор, верфь или супердоминатор - доминаторы не отступят",
              "            check = 0;",
              "            credit_cost = 0;",
              "            tint1 = 0;",
              "            tint2 = 0;",
              "            ArrayClear(tarr1);",
              "            for(i = 0; i < StarShips(cur_star); i = i + 1)",
              "            {",
              "                cur_ship = StarShips(cur_star, i);",
              "                if(ShipOwner(cur_ship) != Kling)",
              "                {",
              "                    tint2 = tint2 + ShipStrengthInAverageRanger(cur_ship);",
              "                    continue;",
              "                }",
              "                if(ShipCustomFaction(cur_ship) != '')",
              "                {",
              "                    tint2 = tint2 + ShipStrengthInAverageRanger(cur_ship);",
              "                    continue;",
              "                }",
              "",
              "                credit_cost = credit_cost + 1;",
              "                if(credit_cost > 2)",
              "                {",
              "                    check = 1;",
              "                    break;",
              "                }",
              "",
              "                j = ShipSubType(cur_ship);",
              "                if(!j) //Босс",
              "                {",
              "                    check = 1;",
              "                    break;",
              "                }",
              "                if(j == 6) //Бертор",
              "                {",
              "                    check = 1;",
              "                    break;",
              "                }",
              "",
              "                tstr1 = ShipType(cur_ship);",
              "                if(tstr1 == 'DomRuins')",
              "                {",
              "                    check = 1;",
              "                    break;",
              "                }",
              "                if(tstr1 == 'Rattor')",
              "                {",
              "                    check = 1;",
              "                    break;",
              "                }",
              "",
              "                tint1 = tint1 + ShipStrengthInAverageRanger(cur_ship);",
              "                ArrayAdd(tarr1, cur_ship);",
              "            }",
              "",
              "            //Если доминаторы расценили себя проигравшей стороной, то уничтожаем все их корабли кроме скриптовых",
              "            if(!check)",
              "            {",
              "                if(tint1 < tint2)",
              "                {",
              "                    for(i = 1; i < ArrayDim(tarr1); i = i + 1)",
              "                    {",
              "                        cur_ship = tarr1[i];",
              "                        ShipDestroy(cur_ship, 1);",
              "                    }",
              "                }",
              "            }",
              "        }",
              "    }",
              "}",
              "else if(CurrentMods('ShusRangers\\ShuDomiksKamikaze')) ShuDomiksKamikazeInit = 1;",
              "",
              "//Производим планомерное увеличение коэффициентов роста статов домиков",
              "//DomiksStatsUpdate == -1 ... -8 - обозначает текущий ГТУ и \"растёт\" вместе с ним",
              "//DomiksStatsUpdate > 0 - по достижении 8 ГТУ превращается в таймер до следующего обновления статов вида: CurTurn()+N",
              "//Если ГТУ ещё не дошёл до 8",
              "if(DomiksStatsUpdate < 1)",
              "{",
              "    tint1 = GalaxyTechLevel();",
              "    if(abs(DomiksStatsUpdate) < tint1)",
              "    {",
              "        if(tint1 <= 3)",
              "        {",
              "            kMinUpgrade = 1;",
              "            kMaxUpgrade = 3;",
              "            MaxReSup = 1;",
              "            MaxWSup = 0;",
              "            DomiksStatsUpdate = -3;",
              "        }",
              "        else if(tint1 == 4)",
              "        {",
              "            kMinUpgrade = 2;",
              "            kMaxUpgrade = 4;",
              "            MaxReSup = 1;",
              "            MaxWSup = 1;",
              "            DomiksStatsUpdate = -4;",
              "        }",
              "        else if(tint1 == 5)",
              "        {",
              "            kMinUpgrade = 4;",
              "            kMaxUpgrade = 6;",
              "            MaxReSup = 2;",
              "            MaxWSup = 1;",
              "            DomiksStatsUpdate = -5;",
              "        }",
              "        else if(tint1 == 6)",
              "        {",
              "            kMinUpgrade = 5;",
              "            kMaxUpgrade = 8;",
              "            MaxReSup = 3;",
              "            MaxWSup = 2;",
              "            DomiksStatsUpdate = -6;",
              "        }",
              "        else if(tint1 == 7)",
              "        {",
              "            kMinUpgrade = 6;",
              "            kMaxUpgrade = 11;",
              "            MaxReSup = 4;",
              "            MaxWSup = 2;",
              "            DomiksStatsUpdate = -7;",
              "        }",
              "        else if(tint1 >= 8)",
              "        {",
              "            kMinUpgrade = 7;",
              "            kMaxUpgrade = 14;",
              "            MaxReSup = 4;",
              "            MaxWSup = 3;",
              "",
              "            //Далее обновление будет происходить приблизительно раз в два года",
              "            DomiksStatsUpdate = CurTurn() + Rnd(670, 750);",
              "        }",
              "    }",
              "}",
              "//Если ГТУ уже максимален",
              "else",
              "{",
              "    if(DomiksStatsUpdate <= CurTurn())",
              "    {",
              "        if(!Rnd(0, 2)) kMinUpgrade = kMinUpgrade + Rnd(0, 1);",
              "        kMaxUpgrade = kMaxUpgrade + Rnd(0, 1);",
              "        if(MaxReSup < 7)",
              "        {",
              "            if(Rnd(1, 100) <= 17) MaxReSup = MaxReSup + 1;",
              "        }",
              "        if(MaxWSup < 5)",
              "        {",
              "            if(Rnd(1, 100) <= 12) MaxWSup = MaxWSup + 1;",
              "        }",
              "        //Обновляем таймер",
              "        DomiksStatsUpdate = CurTurn() + Rnd(670, 750);",
              "    }",
              "}",
              "",
              "//Проверка на респавн ингибитора в родной системе игрока",
              "if(InhibHomeStarSpawnTimer <= CurTurn())",
              "{",
              "    cur_star = GalaxyStar(HomeStarId);",
              "    if(!StarOwner(cur_star))",
              "    {",
              "        //Если ингибитор был уничтожен",
              "        if(!StarRuins(cur_star, 'Inhibitor'))",
              "        {",
              "            //Таймер спавна ингибитора уже был взведён ранее",
              "            if(InhibHomeStarSpawnTimer)",
              "            {",
              "                cur_ship = SpawnInhibitor(cur_star);",
              "                ShipJoin(Inhibitor, cur_ship);",
              "                InhibHomeStarSpawnTimer = 0;",
              "            }",
              "            //Иначе взводим таймер спавна нового ингибитора только после того, как старый был уничтожен",
              "            else InhibHomeStarSpawnTimer = CurTurn() + Rnd(365, 547);",
              "        }",
              "        //Строительство ингибитора никак не может продолжаться в захваченной врагами системе",
              "        else InhibHomeStarSpawnTimer = 0;",
              "    }",
              "}",
              "",
              "//Проверяем, был ли побеждён Блазер",
              "if(DomiksDefeated(0))",
              "{",
              "    //Запоминаем день победы над Блазером",
              "    if(!VictoryDayBlazer) VictoryDayBlazer = CurTurn() - 1;",
              "}",
              "//Делаем проверку на спавн блазерской верфи",
              "//Если Блазер ещё не ликвидирован",
              "else",
              "{",
              "    //Если возможное время для спавна верфи уже пришло",
              "    if(blazerRuinsSpawnTimer <= CurTurn())",
              "    {",
              "        //Если блазерских верфей на данный момент в Галактике менее N",
              "        if(GroupCount(DomRuinsBlazer) < 12)",
              "        {",
              "            tdwd1 = ShipStar(Blazer());",
              "            for(j = 0; j < 15; j = j + 1)",
              "            {",
              "                cur_star = StarNearbyStars(tdwd1, j);",
              "",
              "                //Делаем исключающую проверку на нахождение в системе игрока",
              "                if(ShipStar(Player()) == cur_star) continue;",
              "",
              "                //Исключаем неблазерские системы и системы с кастомной расой",
              "                if(StarOwner(cur_star) != 1) continue;",
              "                if(StarSeries(cur_star) != 0) continue;",
              "                if(StarCustomFaction(cur_star) != '') continue;",
              "                if(CountIn(DomRuinsBlazer, cur_star)) continue; //Исключаем системы, в которых уже имеются верфи",
              "",
              "                //Спавним верфь в подходящей системе",
              "                cur_ship = SpawnDomRuins(cur_star, 0);",
              "                if(!cur_ship) continue;",
              "",
              "                //Вводим готовую верфь в скриптовую группу",
              "                ShipJoin(DomRuinsBlazer, cur_ship, '', 0, RndObject(24, 31, cur_ship), RndObject(160, 250, cur_ship));",
              "                break;",
              "            }",
              "",
              "            //Обновляем таймер до следующего возможного времени постройки верфи (интервалы чуть больше года)",
              "            blazerRuinsSpawnTimer = CurTurn() + PortionInDiapason(GeneralDiffLevel, 1, 10, 365, 120) + RndObject(0, 90, Blazer());",
              "        }",
              "        else blazerRuinsSpawnTimer = CurTurn() + PortionInDiapason(GeneralDiffLevel, 1, 10, 365, 120) + RndObject(0, 90, Blazer());",
              "    }",
              "}",
              "",
              "//Проверяем, был ли побеждён Келлер",
              "if(DomiksDefeated(1))",
              "{",
              "    //Запоминаем день победы над Келлером",
              "    if(!VictoryDayKeller) VictoryDayKeller = CurTurn() - 1;",
              "",
              "    //WasKellerCloneSpawned == 0 - клон Келлера не создан",
              "    //WasKellerCloneSpawned == 1 - клон Келлера создан / в диалоге с клоном выбран агрессивный вариант действий (клон нападает)",
              "    //WasKellerCloneSpawned == 2 - клон Келлера создан / в диалоге с клоном выбран мирный вариант действий (клон отправляется нахер)",
              "    //Спавним клона Келлера, если ранее он заспавлен не был",
              "    if(!WasKellerCloneSpawned)",
              "    {",
              "        //Со дня победы над Келлером прошло не менее 10 дней",
              "        if(CurTurn() - VictoryDayKeller >= 10)",
              "        {",
              "            //Если игрок находится на пути в другую систему",
              "            if(ShipInHyperSpace(Player()))",
              "            {",
              "                check = 0;",
              "                if(CT('ShuDomiks.ShuDomiksBoss'))",
              "                {",
              "                    for(i = GalaxyStars() - 1 ; i >= 0; i = i - 1)",
              "                    {",
              "                        cur_star = GalaxyStar(i);",
              "                        if(ShipInStar(Player(), cur_star)) continue;",
              "                        if(StarBattle(cur_star)) continue;",
              "                        if(StarOwner(cur_star) != 1) continue;",
              "                        if(StarSeries(cur_star) != 1) continue;",
              "                        if(StarCustomFaction(cur_star) != '') continue;",
              "                        check = 1;",
              "                        break;",
              "                    }",
              "",
              "                    if(check)",
              "                    {",
              "                        //Если Келлер ещё жив, то используем его для прообраза",
              "                        cur_ruin = Keller();",
              "                        if(cur_ruin) ShipDeleteCustomShipInfo(Keller(), 'KellerLastWishInfo');",
              "                        //Иначе ищем на Меркурии его транклюкатора-копию",
              "                        else",
              "                        {",
              "                            tdwd1 = GalaxyStar(2);",
              "                            for(i = 0; i < StarShips(tdwd1); i = i + 1)",
              "                            {",
              "                                cur_ruin = StarShips(tdwd1, i);",
              "                                if(Name(cur_ruin) != 'TranclucatorKeller') cur_ruin = 0;",
              "                                else break;",
              "                            }",
              "                        }",
              "",
              "                        if(cur_ruin)",
              "                        {",
              "                            cur_ship = BuyDomikExtremal(StarPlanets(cur_star, 1), 1); //Замаскированный эквентор",
              "",
              "                            //Определяем процент бафа на весь выдаваемый клоном Келлера урон",
              "                            if(GalaxyDiffLevels() <= 100)",
              "                            {",
              "                                tint1 = GalaxyDiffLevels() - 50;",
              "                                tint1 = 140 + tint1 * 1.2;",
              "                            }",
              "                            else if(GalaxyDiffLevels() <= 150)",
              "                            {",
              "                                tint1 = GalaxyDiffLevels() - 100;",
              "                                tint1 = 200 + tint1 * 0.8;",
              "                            }",
              "                            else",
              "                            {",
              "                                tint1 = GalaxyDiffLevels() - 150;",
              "                                tint1 = 240 + tint1 * 1.2;",
              "                            }",
              "",
              "                            //Добавляем клону Келлера инфошку для процентного бафа урона и обновлении уведомления при смерти",
              "                            ShipAddCustomShipInfo(cur_ship, 'KellerClone', 'NoShow', tint1);",
              "                            //Клон Келлера очищается от начального оборудования",
              "                            for(i = ShipItems(cur_ship) - 1; i > 0; i = i - 1) FreeItem(GetItemFromShip(cur_ship, i));",
              "",
              "                            Chameleon(cur_ship, 'Ruins.Keller');",
              "                            SetName(cur_ship, 'FG-42');",
              "                            ShipType(cur_ship, 'KellerClone');",
              "                            ShipSubType(cur_ship, 0); //Делаем из клона почти полноценного босса (но новым Келлером это его всё равно не сделает, просто станет лучше стрелять)",
              "                            OrderLock(cur_ship, 1); //Необходимо, чтобы была возможность выдавать ему свои приказы из стейтов (самих стейтов босс не слушается)",
              "",
              "                            NoTalkToShip(cur_ship, 1);",
              "                            //Копируем параметры корпуса Келлера на корпус клона Келлера",
              "                            ItemSize(ShipItems(cur_ship, 0), ItemSize(ShipItems(cur_ruin, 0)));",
              "                            ItemCost(ShipItems(cur_ship, 0), ItemCost(ShipItems(cur_ruin, 0)));",
              "                            //И настраиваем прочие параметры клона",
              "                            ItemLevel(ShipItems(cur_ship, 0), 8);",
              "                            ItemOwner(ShipItems(cur_ship, 0), 5);",
              "                            ItemSubrace(ShipItems(cur_ship, 0), 1);",
              "                            HullHP(cur_ship, ItemSize(ShipItems(cur_ship, 0)));",
              "                            ShipPilotRace(cur_ship, 2);",
              "                            ShipSkill(cur_ship, 0, 6);",
              "                            ShipSkill(cur_ship, 1, 6);",
              "                            ShipSkill(cur_ship, 2, 6);",
              "",
              "                            //Перебираем оборудование Келлера и создаём его дубликаты для клона Келлера",
              "                            for(i = t_FuelTanks; i <= t_DefGenerator; i = i + 1)",
              "                            {",
              "                                if(i == t_Radar || i == t_Scaner || i == t_CargoHook) continue;",
              "                                cur_item = ShipEqInSlot(cur_ruin, i);",
              "                                cloned_item = CreateEquipment(i, ItemSize(cur_item), 8, 5);",
              "                                ItemSubrace(cloned_item, 1);",
              "                                ItemCost(cloned_item, ItemCost(cur_item));",
              "                                SetEquipmentStats(cloned_item, GetEquipmentStats(cur_item, 0), 0);",
              "                                AddItemToShip(cur_ship, cloned_item);",
              "                                ItemIsInUse(cloned_item, cur_ship, 1);",
              "                            }",
              "",
              "                            //Перебираем оружие Келлера и создаём его дубликаты для клона Келлера",
              "                            for(i = 1; i <= 5; i = i + 1)",
              "                            {",
              "                                cur_item = ShipWeapon(cur_ruin,i);",
              "                                tint1 = ItemType(cur_item);",
              "                                if(tint1 < t_Weapon9 || tint1 == t_Weapon11 || tint1 == t_Weapon12 || tint1 > t_Weapon15) continue;",
              "                                cloned_item = CreateEquipment(tint1, 30, 8, 5);",
              "                                ItemSubrace(cloned_item, 1);",
              "                                //Если орудие не является торпедным аппаратом",
              "                                if(tint1 != t_Weapon15)",
              "                                {",
              "                                    ItemSize(cloned_item, ItemSize(cur_item));",
              "                                    ItemCost(cloned_item, ItemCost(cur_item));",
              "                                    SetEquipmentStats(cloned_item, GetEquipmentStats(cur_item, 0), 0);",
              "                                    SetEquipmentStats(cloned_item, GetEquipmentStats(cur_item, 1), 1);",
              "                                    SetEquipmentStats(cloned_item, GetEquipmentStats(cur_item, 2), 2);",
              "                                    AddItemToShip(cur_ship, cloned_item);",
              "                                    ItemIsInUse(cloned_item, cur_ship, 1, i);",
              "                                }",
              "                                //Иначе меняем торпедный аппарат Келлера и повышаем его статы",
              "                                else",
              "                                {",
              "                                    tstr1 = CT('Script.Mod_ShuDomiks.KellerJavelin');",
              "                                    WeaponAmmunition(cloned_item, 300);",
              "                                    WeaponMaxAmmunition(cloned_item, 300);",
              "                                    SetEquipmentStats(cloned_item, GetEquipmentStats(cur_item, 2), 2);",
              "                                    SpecialToEquipment(FindBonusByNameInCfg('ShuDomiks_KellerJavelin'), cloned_item);",
              "                                    SetName(cloned_item, tstr1);",
              "                                    AddItemToShip(cur_ship, cloned_item);",
              "                                    ItemIsInUse(cloned_item, cur_ship, 1, i);",
              "                                    NoDropItem(cloned_item, 1);",
              "                                    //После чего добавляем в гарантированный дроп идентичный торпедный аппарат",
              "                                    cur_item = cloned_item;",
              "                                    cloned_item = CreateEquipment(t_Weapon15, 1, 8, 5);",
              "                                    ItemSubrace(cloned_item, 1);",
              "                                    ItemSize(cloned_item, ItemSize(cur_item));",
              "                                    ItemCost(cloned_item, ItemCost(cur_item));",
              "                                    WeaponAmmunition(cloned_item, 300);",
              "                                    WeaponMaxAmmunition(cloned_item, 300);",
              "                                    SetEquipmentStats(cloned_item, GetEquipmentStats(cur_item, 2), 2);",
              "                                    SpecialToEquipment(EqSpecial(cur_item), cloned_item);",
              "                                    SetName(cloned_item, tstr1);",
              "                                    ShipAddDropItem(cur_ship, cloned_item);",
              "                                }",
              "                            }",
              "",
              "                            //Если подключён мод EvoArmada, то вешаем клону несколько дополнительных бафов",
              "                            if(EvoArmadaInit)",
              "                            {",
              "                                cur_item = ShipItems(cur_ship, 0);",
              "                                ItemExtraSpecialsAddByType(cur_item, FindBonusByNameInCfg('ShuDomiks_ExtraSpecialsLineBreak'));",
              "                                //Вешаем клону бонус на эффективность дроида и ГЗП, аналогичный бонусу Келлера",
              "                                tint1 = 10 * GeneralDiffLevel + 50;",
              "                                ItemExtraSpecialsAddByType(cur_item, FindBonusByNameInCfg('ShuDomiks_bonDroid'), tint1);",
              "                                tint1 = 2 * (GeneralDiffLevel / 2) + 10;",
              "                                ItemExtraSpecialsAddByType(cur_item, FindBonusByNameInCfg('ShuDomiks_bonDef'), tint1);",
              "",
              "                                //Также увеличиваем число его залпов",
              "                                ShipSpecialBonuses(cur_ship, bonAttacks, 2);",
              "                            }",
              "",
              "                            ShipJoin(KellerClone, cur_ship);",
              "                            //Выводится уведомление-задание о необходимости найти клона Келлера",
              "                            Ether(3, 'KellerCloneTask', Format(CT('Script.Mod_ShuDomiks.KellerCloneTask'), '<Star'+'>', Name(ShipStar(cur_ship)), '255,240,100'));",
              "                        }",
              "",
              "                        WasKellerCloneSpawned = 1;",
              "                    }",
              "                }",
              "            }",
              "        }",
              "    }",
              "}",
              "//Делаем проверку на спавн келлерской верфи",
              "//Если Келлер ещё не ликвидирован",
              "else",
              "{",
              "    //Если возможное время для спавна верфи уже пришло",
              "    if(kellerRuinsSpawnTimer <= CurTurn())",
              "    {",
              "        //Если келлерских верфей на данный момент в Галактике менее N",
              "        if(GroupCount(DomRuinsKeller) < 15)",
              "        {",
              "            tdwd1 = ShipStar(Keller());",
              "            for(j = 0; j < 15; j = j + 1)",
              "            {",
              "                cur_star = StarNearbyStars(tdwd1, j);",
              "                //Делаем исключающую проверку на нахождение в системе игрока",
              "                if(ShipStar(Player()) == cur_star) continue;",
              "                //Исключаем неблазерские системы и системы с кастомной расой",
              "                if(StarOwner(cur_star) != 1) continue;",
              "                if(StarSeries(cur_star) != 1) continue;",
              "                if(StarCustomFaction(cur_star) != '') continue;",
              "                if(CountIn(DomRuinsKeller, cur_star)) continue; //Исключаем системы, в которых уже имеются верфи",
              "",
              "                //Спавним верфь в подходящей системе",
              "                cur_ship = SpawnDomRuins(cur_star, 1);",
              "                if(!cur_ship) continue;",
              "",
              "                //Вводим готовую верфь в скриптовую группу",
              "                ShipJoin(DomRuinsKeller, cur_ship, '', 0, RndObject(24, 31, cur_ship), RndObject(160, 250, cur_ship));",
              "                break;",
              "            }",
              "",
              "            //Обновляем таймер до следующего возможного времени постройки верфи (интервалы чуть больше года)",
              "            kellerRuinsSpawnTimer = CurTurn() + PortionInDiapason(GeneralDiffLevel, 1, 10, 365, 120) + RndObject(0, 90, Keller());",
              "        }",
              "        else kellerRuinsSpawnTimer = CurTurn() + PortionInDiapason(GeneralDiffLevel, 1, 10, 365, 120) + RndObject(0, 90, Keller());",
              "    }",
              "}",
              "",
              "//Проверяем, был ли побеждён Террон",
              "if(DomiksDefeated(2))",
              "{",
              "    //Запоминаем день победы над Терроном",
              "    if(!VictoryDayTerron) VictoryDayTerron = CurTurn() - 1;",
              "}",
              "//Делаем проверку на спавн терроноидной верфи",
              "//Если Террон ещё не ликвидирован",
              "else",
              "{",
              "    //Если возможное время для спавна верфи уже пришло",
              "    if(terronRuinsSpawnTimer <= CurTurn())",
              "    {",
              "        //Террон застраивает верфями только ближайшие к Гралгару системы, но застраивается чуть быстрее остальных",
              "        if(GroupCount(DomRuinsTerron) < 12)",
              "        {",
              "            tdwd1 = ShipStar(Terron());",
              "            for(j = 0; j < 13; j = j + 1)",
              "            {",
              "                cur_star = StarNearbyStars(tdwd1, j);",
              "                //Делаем исключающую проверку на нахождение в системе игрока",
              "                if(ShipStar(Player()) == cur_star) continue;",
              "                //Исключаем неблазерские системы и системы с кастомной расой",
              "                if(StarOwner(cur_star) != 1) continue;",
              "                if(StarSeries(cur_star) != 2) continue;",
              "                if(StarCustomFaction(cur_star) != '') continue;",
              "                if(CountIn(DomRuinsTerron, cur_star)) continue; //Исключаем системы, в которых уже имеются верфи",
              "",
              "                //Спавним верфь в подходящей системе",
              "                cur_ship = SpawnDomRuins(cur_star, 2);",
              "                if(!cur_ship) continue;",
              "",
              "                //Вводим верфь в скриптовую группу",
              "                ShipJoin(DomRuinsTerron, cur_ship, '', 0, RndObject(24, 31, cur_ship), RndObject(160, 250, cur_ship));",
              "                break;",
              "            }",
              "",
              "            //Обновляем таймер до следующего возможного времени постройки верфи (интервалы чуть больше года)",
              "            if(CurTurn() > 300) terronRuinsSpawnTimer = CurTurn() + PortionInDiapason(GeneralDiffLevel, 1, 10, 272, 90) + RndObject(0, 90, Terron());",
              "            else terronRuinsSpawnTimer = 1394;",
              "        }",
              "        else terronRuinsSpawnTimer = CurTurn() + PortionInDiapason(GeneralDiffLevel, 1, 10, 272, 90) + RndObject(0, 90, Terron());",
              "    }",
              "}",
              "",
              "if(!DomiksDefeated())",
              "{",
              "    //Проверяем состояние таймера до начала появления доминаторов с неизвестными модификациями",
              "    if(~UnknownDomAcrynsTimer)",
              "    {",
              "        if(UnknownDomAcrynsTimer <= CurTurn())",
              "        {",
              "            AddPlanetNews(\"Внимание! <br>Радары дальнего действия обнаружили в пограничных системах доминаторские корабли с неизвестной по сей день сигнатурой. Аналитические группы полагают, что доминаторы используют некую новую акриновую модификацию, несовместимую с не принадлежащими их сериям кораблями. Особо бравым разведчикам удалось раздобыть несколько экземпляров не поддающегося поверхностному сканированию оборудования. Передовые умы Содружества уже взялись за детальное изучение представленных материалов, и обещают сделать определённый чёткий вывод в течении нескольких лет.\");",
              "            UnknownDomAcrynsTimer = -1;",
              "        }",
              "    }",
              "",
              "    //Проверка на подключение мода ShuDomiksPlus",
              "    if(!ShuDomiksPlusInit)",
              "    {",
              "        if(CurrentMods('ShusRangers\\ShuDomiksPlus')) ShuDomiksPlusInit = 1;",
              "    }",
              "",
              "    //Проверка на подключение мода ShuDomiksWin",
              "    if(!ShuDomiksWinInit)",
              "    {",
              "        if(CurrentMods('ShusRangers\\ShuDomiksWin')) ShuDomiksWinInit = 1;",
              "    }",
              "",
              "    //Проверка на подключение мода ShuEmitter",
              "    if(!ShuEmitterInit)",
              "    {",
              "        if(CurrentMods('ShusRangers\\ShuEmitter')) ShuEmitterInit = 1;",
              "    }",
              "}",
              "",
              "//Ужасающий цикл, обновляющий оборудование новорождённых доминаторов и рейнджеров",
              "if(GalaxyShipId() > lastShipId)",
              "{",
              "    tint1 = BuildListOfNewShips(tarr1, lastShipId, 1+2, 1+2+4+8+16+32, 1, '', '');",
              "    //if(!EvoArmadaInit) tint1 = BuildListOfNewShips(tarr1, lastShipId, 1+2, 1+2+4+8+16+32, 1, '', '');",
              "    //else tint1 = BuildListOfNewShips(tarr1, lastShipId, 2, 1+2+4+8+16, 1, '', '');",
              "    //Если нашли хоть одного нового",
              "    if(tint1)",
              "    {",
              "        for(tint1 = 0; tint1 < ArrayDim(tarr1); tint1 = tint1 + 1)",
              "        {",
              "            cur_ship = tarr1[tint1];",
              "            //Сразу исключаем все скриптовые корабли",
              "            if(ShipInScript(cur_ship, 0)) continue;",
              "",
              "            ShuDomiksMainUpgrade(cur_ship, ShipOwner(cur_ship), ShipType(cur_ship), ShipSubType(cur_ship));",
              "        }",
              "    }",
              "",
              "    lastShipId = GalaxyShipId();",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  380,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  105,
          "Total.Lines":  2419,
          "Code.Type":  "Init",
          "Code":          
          [
              "//Впервые объявляем кастомные орудия",
              "InventShuDomiksCustomGuns();",
              "gunUpdateCheck = CT('Items.Weapon.CustomWeapon.StatsVersion.ShuDomiks');",
              "",
              "ArrayDelete(RattorGroupsDataArray, 0);",
              "//Интервал, с которым верфи будут спавнить новые стаи ратторов",
              "tint1 = AdvancedAdjustmentSet(3, -1); //Сложность частоты спавна новых доминаторов",
              "ArrayAdd(RattorGroupsDataArray, int(PortionInDiapason(tint1, 50, 500, 80, 25)), 'PackAssemblyDelay');",
              "",
              "tint1 = AdvancedAdjustmentSet(1, -1); //Сложность уровня экипировки доминаторов",
              "ArrayAdd(RattorGroupsDataArray, int(PortionInDiapason(tint1, 50, 500, 10, 30)), 'DebuffPower');",
              "ArrayAdd(RattorGroupsDataArray, int(PortionInDiapason(tint1, 50, 500, 10, 30)), 'EquipDamage');",
              "",
              "//Шансы на нейтрализацию раттора в процессе нанесении урона оборудке",
              "tint1 = AdvancedAdjustmentSet(2, -1); //Сложность агрессивности доминаторов",
              "ArrayAdd(RattorGroupsDataArray, int(PortionInDiapason(tint1, 50, 500, 6, 1)), 'DeadChanceCommon'); //Общий шанс смерти при нанесении урона любому предмету, кроме приведённых ниже",
              "ArrayAdd(RattorGroupsDataArray, int(PortionInDiapason(tint1, 50, 500, 30, 5)), 'DeadChanceNanitoids');",
              "ArrayAdd(RattorGroupsDataArray, int(PortionInDiapason(tint1, 50, 500, 75, 25)), 'DeadChanceFumigator');",
              "",
              "ArrayAdd(RattorGroupsDataArray, newarray(1), '' + RattorsPack1);",
              "ArrayAdd(RattorGroupsDataArray['' + RattorsPack1], 0, 'StateDone');",
              "ArrayAdd(RattorGroupsDataArray['' + RattorsPack1], 0, 'ActCodeDone');",
              "ArrayAdd(RattorGroupsDataArray['' + RattorsPack1], '', 'EffectsToShow');",
              "",
              "ArrayAdd(RattorGroupsDataArray, newarray(1), '' + RattorsPack2);",
              "ArrayAdd(RattorGroupsDataArray['' + RattorsPack2], 0, 'StateDone');",
              "ArrayAdd(RattorGroupsDataArray['' + RattorsPack2], 0, 'ActCodeDone');",
              "ArrayAdd(RattorGroupsDataArray['' + RattorsPack2], '', 'EffectsToShow');",
              "",
              "ArrayAdd(RattorGroupsDataArray, newarray(1), '' + RattorsPack3);",
              "ArrayAdd(RattorGroupsDataArray['' + RattorsPack3], 0, 'StateDone');",
              "ArrayAdd(RattorGroupsDataArray['' + RattorsPack3], 0, 'ActCodeDone');",
              "ArrayAdd(RattorGroupsDataArray['' + RattorsPack3], '', 'EffectsToShow');",
              "",
              "ArrayAdd(RattorGroupsDataArray, newarray(1), '' + RattorsPack4);",
              "ArrayAdd(RattorGroupsDataArray['' + RattorsPack4], 0, 'StateDone');",
              "ArrayAdd(RattorGroupsDataArray['' + RattorsPack4], 0, 'ActCodeDone');",
              "ArrayAdd(RattorGroupsDataArray['' + RattorsPack4], '', 'EffectsToShow');",
              "",
              "ArrayAdd(RattorGroupsDataArray, newarray(1), '' + RattorsPack5);",
              "ArrayAdd(RattorGroupsDataArray['' + RattorsPack5], 0, 'StateDone');",
              "ArrayAdd(RattorGroupsDataArray['' + RattorsPack5], 0, 'ActCodeDone');",
              "ArrayAdd(RattorGroupsDataArray['' + RattorsPack5], '', 'EffectsToShow');",
              "",
              "ArrayAdd(RattorGroupsDataArray, newarray(1), '' + RattorsPack6);",
              "ArrayAdd(RattorGroupsDataArray['' + RattorsPack6], 0, 'StateDone');",
              "ArrayAdd(RattorGroupsDataArray['' + RattorsPack6], 0, 'ActCodeDone');",
              "ArrayAdd(RattorGroupsDataArray['' + RattorsPack6], '', 'EffectsToShow');",
              "",
              "ArrayAdd(RattorGroupsDataArray, newarray(1), '' + RattorsPack7);",
              "ArrayAdd(RattorGroupsDataArray['' + RattorsPack7], 0, 'StateDone');",
              "ArrayAdd(RattorGroupsDataArray['' + RattorsPack7], 0, 'ActCodeDone');",
              "ArrayAdd(RattorGroupsDataArray['' + RattorsPack7], '', 'EffectsToShow');",
              "",
              "//Функция для объявления и обновления кастомных орудий",
              "function InventShuDomiksCustomGuns()",
              "{",
              "    for(int i = 1; i <= CT('Items.Weapon.CustomWeapon.ShuDomiks.Count'); i = i + 1)",
              "    {",
              "        //По очереди выбираем системное название каждой новой пушки из Lang",
              "        str tstr1 = CT('Items.Weapon.CustomWeapon.ShuDomiks.' + i);",
              "        str tstr2 = 'Items.Weapon.CustomWeapon.';",
              "        //Прописываем пушку/сбрасываем уже прописанную пушку до уровня базовой из оригинальной игры",
              "        dword tdwd1 = InventNewCustomWeapon(tstr1, t_Weapon1 - 1 + CT('Items.Weapon.OriginalWeaponType.' + CT(tstr2 + tstr1 + '.BaseGun')));",
              "        //Задаём характеристики оружия",
              "        SetCustomWeaponShotData(tdwd1, CT(tstr2 + tstr1 + '.ShotType'), CT(tstr2 + tstr1 + '.Speed'), CT(tstr2 + tstr1 + '.AverageRadius'), CT(tstr2 + tstr1 + '.SecondaryDamageRadius'), CT(tstr2 + tstr1 + '.MiningFactor'), CT(tstr2 + tstr1 + '.ShotsPerTurn'));",
              "        SetCustomWeaponDamageData(tdwd1, CT(tstr2 + tstr1 + '.MinDamage'), CT(tstr2 + tstr1 + '.MaxDamage'), CT(tstr2 + tstr1 + '.DamageSet'), CT(tstr2 + tstr1 + '.mWeaponDamage'));",
              "        SetCustomMissileWeaponStats(tdwd1, CT(tstr2 + tstr1 + '.MissileRadius'), CT(tstr2 + tstr1 + '.MissileMaxSpeed'), CT(tstr2 + tstr1 + '.MissileMinSpeed'), CT(tstr2 + tstr1 + '.MissileChanceToBeHit'));",
              "        SetCustomWeaponPrimaryData(tdwd1, CT(tstr2 + tstr1 + '.TechLevel'), t_Weapon1 - 1 + CT('Items.Weapon.OriginalWeaponType.' + CT(tstr2 + tstr1 + '.InventTechLevel')), t_Weapon1 - 1 + CT('Items.Weapon.OriginalWeaponType.' + CT(tstr2 + tstr1 + '.ArcadeType')));",
              "        SetCustomWeaponSizeAndCost(tdwd1, CT(tstr2 + tstr1 + '.kCost'), CT(tstr2 + tstr1 + '.AverageSize'));",
              "        SetCustomWeaponAvailability(tdwd1, CT(tstr2 + tstr1 + '.StoreAvailability'));",
              "        SetCustomWeaponSE(tdwd1, CT(tstr2 + tstr1 + '.ShotEffectPath'), CT(tstr2 + tstr1 + '.SplashEffectPath'), CT(tstr2 + tstr1 + '.MissileExplosionEffectPath'), CT(tstr2 + tstr1 + '.ShotEffectPalette'));",
              "    }",
              "}",
              "",
              "HomeStarId = Id(PlanetToStar(GetShipHomePlanet(Player()))) - 1;",
              "if(Terron()) GralgarId = Id(ShipStar(Terron())) - 1;",
              "else",
              "{",
              "    tstr1 = CT('Star.Terron');",
              "    for(i = 0; i < GalaxyStars(); i = i + 1)",
              "    {",
              "        if(Name(GalaxyStar(i)) == tstr1)",
              "        {",
              "            GralgarId = i;",
              "            break;",
              "        }",
              "    }",
              "}",
              "",
              "//Разбрасываем фумигаторы по незаселёнкам",
              "tint1 = PortionInDiapason(GalaxyDiffLevels(4), 50, 500, 10, 5);",
              "cur_con = StarToCon(PlanetToStar(PlanetPirateClan()));",
              "while(tint1)",
              "{",
              "    while(1)",
              "    {",
              "        //Выбираем случайную систему, с исключением Тортугаца и Нифигаца",
              "        cur_star = GalaxyStar(Rnd(0, GalaxyStars() - 1));",
              "        if(StarToCon(cur_star) == cur_con) continue;",
              "",
              "        //Перебираем все планеты системы, ищем случайную незаселёнку",
              "        i = 0;",
              "        cur_planet = StarPlanets(cur_star, Rnd(0, StarPlanets(cur_star) - 1));",
              "        while(PlanetOwner(cur_planet) != None || i < 30)",
              "        {",
              "            cur_planet = StarPlanets(cur_star, Rnd(0, StarPlanets(cur_star) - 1));",
              "            i = i + 1;",
              "        }",
              "        break;",
              "    }",
              "",
              "    if(PlanetOwner(cur_planet) != None) continue;",
              "    //Добавляем фумигатор",
              "    j = Kling;",
              "    while(j == Kling) j = RndObject(Maloc, PirateClan, cur_planet);",
              "    cur_item = CreateCustomArt('Fumigator', CustomArtSizeCalc(int(CT('Artefacts.CustomArtefacts.Fumigator.Size'))), CustomArtCostCalc(int(CT('Artefacts.CustomArtefacts.Fumigator.Cost'))), j);",
              "    ItemDurability(cur_item, RndObject(0, 100, cur_planet));",
              "    AddItemToPlanet(cur_planet, cur_item);",
              "",
              "    tint1 = tint1 - 1;",
              "}",
              "",
              "//Запоминаем текущий ГТУ, который часто используется в различных функциях",
              "GTL = GalaxyTechLevel();",
              "//Также запоминаем общий уровень сложности, который будет использован в функции усиления доминаторов",
              "GeneralDiffLevel = GalaxyDiffLevels() / 50;",
              "",
              "//Выставляем маркер о том, что был подключён мод EvoArmada",
              "if(CurrentMods('Evolution\\EvoArmada')) EvoArmadaInit = 1;",
              "",
              "//Запоминаем уровень интеллекта учёных (соответственно сложности)",
              "//Влияет на то, насколько рано учёные смогут начать разблокировать доминаторские акрины",
              "if(GalaxyDiffLevels(2) <= 100) MinGTLToDomAcrynUnlock = 5;",
              "else if(GalaxyDiffLevels(2) <= 200) MinGTLToDomAcrynUnlock = 6;",
              "else MinGTLToDomAcrynUnlock = 7;",
              "",
              "//Запоминаем минимальное число систем (пока хз для чего именно это используется в функции)",
              "if(GalaxyDiffLevels() <= 100)",
              "{",
              "    SysCountToDiffArray[0] = 50;",
              "    SysCountToDiffArray[1] = 40;",
              "    SysCountToDiffArray[2] = 30;",
              "    SysCountToDiffArray[3] = 20;",
              "    SysCountToDiffArray[4] = 10;",
              "}",
              "else if(GalaxyDiffLevels() <= 150)",
              "{",
              "    SysCountToDiffArray[0] = 40;",
              "    SysCountToDiffArray[1] = 32;",
              "    SysCountToDiffArray[2] = 24;",
              "    SysCountToDiffArray[3] = 16;",
              "    SysCountToDiffArray[4] = 8;",
              "}",
              "else if(GalaxyDiffLevels() <= 200)",
              "{",
              "    SysCountToDiffArray[0] = 28;",
              "    SysCountToDiffArray[1] = 22;",
              "    SysCountToDiffArray[2] = 16;",
              "    SysCountToDiffArray[3] = 10;",
              "    SysCountToDiffArray[4] = 4;",
              "}",
              "else if(GalaxyDiffLevels() <= 250)",
              "{",
              "    SysCountToDiffArray[0] = 15;",
              "    SysCountToDiffArray[1] = 10;",
              "    SysCountToDiffArray[2] = 7;",
              "    SysCountToDiffArray[3] = 4;",
              "    SysCountToDiffArray[4] = 2;",
              "}",
              "else if(GalaxyDiffLevels() <= 350)",
              "{",
              "    SysCountToDiffArray[0] = 10;",
              "    SysCountToDiffArray[1] = 8;",
              "    SysCountToDiffArray[2] = 6;",
              "    SysCountToDiffArray[3] = 4;",
              "    SysCountToDiffArray[4] = 2;",
              "}",
              "else if(GalaxyDiffLevels() <= 450)",
              "{",
              "    SysCountToDiffArray[0] = 8;",
              "    SysCountToDiffArray[1] = 6;",
              "    SysCountToDiffArray[2] = 4;",
              "    SysCountToDiffArray[3] = 2;",
              "    SysCountToDiffArray[4] = 1;",
              "}",
              "else",
              "{",
              "    SysCountToDiffArray[0] = 6;",
              "    SysCountToDiffArray[1] = 4;",
              "    SysCountToDiffArray[2] = 3;",
              "    SysCountToDiffArray[3] = 2;",
              "    SysCountToDiffArray[4] = 1;",
              "}",
              "",
              "//Добавляем Келлеру инфошку для создания своей копии в виде транклюкатора перед смертью",
              "//Требуется для последующего создания клона Келлера",
              "ShipAddCustomShipInfo(Keller(), 'KellerLastWishInfo', 'NoShow');",
              "",
              "//Устанавливаем ограничение на максимально допустимое число ингибиторов в Галактике",
              "if(GalaxyDiffLevels(2) <= 50) GMaxInhibitorsCount = 7;",
              "else if(GalaxyDiffLevels(2) <= 100) GMaxInhibitorsCount = 6;",
              "else if(GalaxyDiffLevels(2) <= 150) GMaxInhibitorsCount = 5;",
              "else if(GalaxyDiffLevels(2) <= 200) GMaxInhibitorsCount = 4;",
              "else GMaxInhibitorsCount = 3;",
              "//Запоминаем номера бонусов для переключения состояний ингибитора",
              "InhibOnBonusNum = FindBonusByNameInCfg('ShuDomiks_InhibitorOn');",
              "InhibOffBonusNum = FindBonusByNameInCfg('ShuDomiks_InhibitorOff');",
              "",
              "//Заводим таймер до начала появления доминаторов с неизвестными акринами",
              "UnknownDomAcrynsTimer = CurTurn() + Rnd(730, 1642); //От полутора до четырёх лет",
              "",
              "//Первый раз заводим таймеры до спавна верфей в системах с доминаторскими боссами",
              "//Не ранее, чем через 7 лет со старта игры",
              "blazerRuinsSpawnTimer = 2855 - CurTurn();",
              "//Не ранее, чем через 5 лет со старта игры",
              "kellerRuinsSpawnTimer = 2125 - CurTurn();",
              "//Не ранее, чем через 3 года со старта игры, но первая верфь в Гралгаре строится сразу",
              "terronRuinsSpawnTimer = 1; //1395 - CurTurn();",
              "",
              "//Спавним стартовый ингибитор в родной системе игрока",
              "cur_ship = SpawnInhibitor(GalaxyStar(HomeStarId));",
              "//Эта инфошка автоматически добавит стартовый ингибитор в скриптовую группу на Step 0, после чего самоудалится",
              "ShipAddCustomShipInfo(cur_ship, 'FirstInhibitorJoinsGroup', 'NoShow');",
              "//Заводим таймер спавна ингибиторов в родной системе игрока",
              "//Если таймер равен 0, значит ингибитор в родной системе всё ещё существует",
              "//и таймер до спавна нового ещё не начал свой отсчёт",
              "InhibHomeStarSpawnTimer = 0;",
              "",
              "//Добавляем доминаторским боссам особые пушки в случае подключения мода ShuDomiksBoss",
              "if(CT('ShuDomiks.ShuDomiksBoss'))",
              "{",
              "    //Блазер получает Массакри",
              "    cur_ship = Blazer();",
              "    SetName(ShipItems(cur_ship, 0), CT('Script.Mod_ShuDomiks.BlazerHull'));",
              "",
              "    if(cur_ship)",
              "    {",
              "        //Также накладываем особый экстра-акрин на корпус Блазера (повышает резисты)",
              "        ItemExtraSpecialsAddByType(ShipItems(cur_ship, 0), FindBonusByNameInCfg('ShuDomiks_BlazerHull'));",
              "        //Лочим выпадение пикселита Блазера с кучей защиты (если общая сложность выше 200%)",
              "        if(GeneralDiffLevel > 4) NoDropItem(ShipEqInSlot(cur_ship, t_DefGenerator), 1);",
              "",
              "        //Перебираем оружие Блазера",
              "        for(i = 1; i <= 5; i = i + 1)",
              "        {",
              "            cur_item = ShipWeapon(cur_ship, i);",
              "",
              "            //Если нашли турбогравир, вешаем на него акрин (если турбогравира не нашли, то выдаём ему Массакри всё равно)",
              "            if(ItemType(cur_item) == t_Weapon12 || i == 5)",
              "            {",
              "                FreeItem(GetItemFromShip(cur_ship, i));",
              "                cur_item = CreateEquipment(t_Weapon12, 50 + 10 * (GalaxyDiffLevels(4) / 50), 8, 5);",
              "                tstr1 = CT('Script.Mod_ShuDomiks.BlazerMassacre');",
              "                SetEquipmentStats(cur_item, 120, 0);",
              "                SetEquipmentStats(cur_item, 400, 2);",
              "                SpecialToEquipment(FindBonusByNameInCfg('ShuDomiks_BlazerMassacre'), cur_item);",
              "                SetName(cur_item, tstr1);",
              "                AddItemToShip(cur_ship, cur_item);",
              "                ItemIsInUse(cur_item, cur_ship, 1, i);",
              "                NoDropItem(cur_item, 1);",
              "                //Создаём копию особой пушки и добавляем её в гарантированный дроп Блазера",
              "                cloned_item = CreateEquipment(t_Weapon12, 1, 8, 5);",
              "                ItemSubrace(cloned_item, 0);",
              "                ItemSize(cloned_item, ItemSize(cur_item));",
              "                ItemCost(cloned_item, ItemCost(cur_item));",
              "                SetEquipmentStats(cur_item, 120, 0);",
              "                SetEquipmentStats(cur_item, 400, 2);",
              "                SpecialToEquipment(EqSpecial(cur_item), cloned_item);",
              "                SetName(cloned_item, tstr1);",
              "                ShipAddDropItem(cur_ship, cloned_item);",
              "                break;",
              "            }",
              "        }",
              "    }",
              "    //Келлер получает Жавелин",
              "    cur_ship = Keller();",
              "    SetName(ShipItems(cur_ship, 0), CT('Script.Mod_ShuDomiks.KellerHull'));",
              "",
              "    if(cur_ship)",
              "    {",
              "        //Перебираем оружие Келлера",
              "        for(i = 1; i <= 5; i = i + 1)",
              "        {",
              "            cur_item = ShipWeapon(cur_ship, i);",
              "            //Если нашли торпедный аппарат, вешаем на него акрин",
              "            if(ItemType(cur_item) == t_Weapon15 || i == 5)",
              "            {",
              "                //Особую пушку в дроп Келлер не получает по понятным причинам",
              "                //В дроп её получит только его клон",
              "                SpecialToEquipment(FindBonusByNameInCfg('ShuDomiks_KellerJavelin'), cur_item);",
              "                WeaponAmmunition(cur_item, 300);",
              "                WeaponMaxAmmunition(cur_item, 300);",
              "                ItemSize(cur_item, 30 + 6 * (GalaxyDiffLevels(4) / 50));",
              "                SetName(cur_item, CT('Script.Mod_ShuDomiks.KellerJavelin'));",
              "                break;",
              "            }",
              "        }",
              "    }",
              "    //Террон получает Рейлган",
              "    cur_ship = Terron();",
              "    SetName(ShipItems(cur_ship, 0), CT('Script.Mod_ShuDomiks.TerronHull'));",
              "",
              "    if(cur_ship)",
              "    {",
              "        for(i = 1; i <= 5; i = i + 1)",
              "        {",
              "            //Перебираем оружие Террона",
              "            cur_item = ShipWeapon(cur_ship, i);",
              "            //Если нашли мультирезонатор, то удаляем его и меняем на кастомную пушку",
              "            if(ItemType(cur_item) == t_Weapon9 || i == 5)",
              "            {",
              "                FreeItem(GetItemFromShip(cur_ship, i));",
              "                cur_item = CreateEquipment(t_Weapon11, 45 + 9 * (GalaxyDiffLevels(4) / 50), 8, 5);",
              "                ItemSubrace(cur_item, 2);",
              "                tstr1 = CT('Script.Mod_ShuDomiks.TerronRailgun');",
              "                SetEquipmentStats(cur_item, 90, 0);",
              "                SetEquipmentStats(cur_item, 700, 2);",
              "                SpecialToEquipment(FindBonusByNameInCfg('ShuDomiks_TerronRailgun'), cur_item);",
              "                SetName(cur_item, tstr1);",
              "                AddItemToShip(cur_ship, cur_item);",
              "                ItemIsInUse(cur_item, cur_ship, 1, i);",
              "                NoDropItem(cur_item, 1);",
              "                //Создаём копию особой пушки и добавляем её в гарантированный дроп Террона",
              "                cloned_item = CreateEquipment(t_Weapon11, 45 + 9 * (GalaxyDiffLevels(4) / 50), 8, 5);",
              "                ItemSubrace(cloned_item, 2);",
              "                ItemSize(cloned_item, ItemSize(cur_item));",
              "                ItemCost(cloned_item, ItemCost(cur_item));",
              "                SetEquipmentStats(cloned_item, 90, 0);",
              "                SetEquipmentStats(cloned_item, 700, 2);",
              "                SpecialToEquipment(EqSpecial(cur_item), cloned_item);",
              "                SetName(cloned_item, tstr1);",
              "                ShipAddDropItem(cur_ship, cloned_item);",
              "                break;",
              "            }",
              "        }",
              "    }",
              "}",
              "",
              "//Функция для создания ингибитора (возвращает ингибитор)",
              "function SpawnInhibitor(dword star)",
              "{",
              "    dword inhib;",
              "    if(StarOwner(star) == 0) inhib = BuildCustomRuins(star, 'Inhibitor', 2);",
              "    else if(StarOwner(star) == 2) inhib = BuildCustomRuins(star, 'Inhibitor', 7);",
              "    //Чистим магазин товаров на ингибиторе",
              "    for(int i = 0; i <= 7; i = i + 1)",
              "    {",
              "        //Запоминаем количество уже имеющегося в магазине товара",
              "        int goods = GoodsAdd(inhib, i, 0);",
              "        //И обнуляем его",
              "        GoodsAdd(inhib, i, -goods);",
              "    }",
              "    //Чистим магазин оборудования на ингибиторе",
              "    for(i = ShopItems(inhib) - 1; i >= 0; i = i - 1) FreeItem(GetItemFromShop(inhib, i));",
              "    NoShopUpdate(inhib, 1);",
              "    NoLanding(inhib, 1);",
              "    HullHP(inhib, Rnd(200, 500) + GTL * 75);",
              "    ItemSize(ShipItems(inhib, 0), HullHP(inhib));",
              "    ItemCost(ShipItems(inhib, 0), 0);",
              "    ShipSpecialBonuses(inhib, bonSpeed, -10000);",
              "    SetName(inhib, '#' + Rnd(1, 9999));",
              "    SpecialToEquipment(InhibOnBonusNum, ShipItems(inhib, 0));",
              "    //SpecialToEquipment(InhibOffBonusNum, ShipItems(inhib, 0));",
              "    Chameleon(inhib);",
              "",
              "    int ship_owner = ShipOwner(inhib);",
              "    AddItemToShip(inhib, CreateEquipment(t_Weapon3, 25, GTL, ship_owner));",
              "    AddItemToShip(inhib, CreateEquipment(t_Weapon3, 25, GTL, ship_owner));",
              "    AddItemToShip(inhib, CreateEquipment(t_Weapon3, 25, GTL, ship_owner));",
              "    AddItemToShip(inhib, CreateEquipment(t_Weapon3, 25, GTL, ship_owner));",
              "    AddItemToShip(inhib, CreateEquipment(t_Weapon3, 25, GTL, ship_owner));",
              "    AddItemToShip(inhib, CreateEquipment(t_DefGenerator, 20, GTL, ship_owner));",
              "    AddItemToShip(inhib, CreateEquipment(t_RepairRobot, 20, GTL, ship_owner));",
              "",
              "    ShipImproveItems(inhib, 20);",
              "",
              "    ShipSpecialBonuses(inhib, bonWEnergy, 10 + 5 * GTL);",
              "    ShipSpecialBonuses(inhib, bonWSplinter, 14 + 7 * GTL);",
              "    ShipSpecialBonuses(inhib, bonWMissile, 12 + 6 * GTL);",
              "    ShipSpecialBonuses(inhib, bonDef, 2 * GTL);",
              "    ShipSpecialBonuses(inhib, bonWRadius, 200);",
              "",
              "    result = inhib;",
              "}",
              "",
              "//Функция для создания верфи в указанной системе (возвращает верфь или 0, если создать верфь не получилось)",
              "function SpawnDomRuins(dword star, int sub_race)",
              "{",
              "    for(int i = 0; i < StarPlanets(star); i = i + 1)",
              "    {",
              "        dword planet = StarPlanets(star, i);",
              "        if(PlanetOwner(planet) == None) continue;",
              "",
              "        dword ruin = BuyDomikExtremal(planet, 1, sub_race);",
              "        //NoScanToShip(ruin, 1);",
              "        NoTalkToShip(ruin, 1);",
              "",
              "        //Устанавливаем размер корпуса верфи",
              "        dword hull = ShipItems(ruin, 0);",
              "        if(!sub_race) int hull_size_mod = 825; //Блазерская верфь толще",
              "        else hull_size_mod = 625;",
              "        ItemSize(hull, hull_size_mod * GTL + round(4.80 * GalaxyDiffLevels()) + RndObject(-165, 211, ruin));",
              "        if(ItemSize(hull) < 1200) ItemSize(hull, 1200 + RndObject(-63, 79, ruin));",
              "        ItemLevel(hull, min(ItemLevel(hull) + 1, 8));",
              "",
              "        //Устанавливаем строковый тип",
              "        ShipType(ruin, 'DomRuins');",
              "        //Выдаём верфи аЭгис",
              "        dword item = CreateArt(t_ArtPDTurret, None);",
              "        AddItemToShip(ruin, item);",
              "        ItemIsInUse(item, ruin, 1, 1);",
              "        NoDropItem(item, 1);",
              "",
              "        //Выбираем неповторяющееся имя (вплоть до N уникальных имён подряд, потом могут начать повторяться)",
              "        int names_count = CT('ShipName.Kling.Shipyards.Count');",
              "        str shipyard_name = CT('ShipName.Kling.Shipyards.' + RndObject(1, names_count, ruin));",
              "        while(~findsubstr(LastSpawnedShipyardNames, '*' + shipyard_name + '*')) shipyard_name = CT('ShipName.Kling.Shipyards.' + RndObject(1, names_count, ruin));",
              "        LastSpawnedShipyardNames = LastSpawnedShipyardNames + shipyard_name + '*';",
              "        //Если имён в строке скопилось слишком много, подчищаем её с конца",
              "        if(ParsCountFromString(LastSpawnedShipyardNames, '*') > (names_count - 8 + 2)) //В строке запоминается на 8 имён меньше от их максимального числа в списке",
              "        {",
              "            LastSpawnedShipyardNames = SetParFromString(LastSpawnedShipyardNames, '*', 1, '');",
              "            LastSpawnedShipyardNames = substr(LastSpawnedShipyardNames, 1);",
              "        }",
              "        shipyard_name = shipyard_name + ' -' + RndObject(1, 99, ruin) + '-';",
              "        SetName(ruin, shipyard_name);",
              "",
              "        //Обязательно выдаём всем верфям радар и дроида",
              "        if(!ShipEqInSlot(ruin, t_Radar))",
              "        {",
              "            item = CreateEquipment(t_Radar, RndObject(45, 90, ruin), min(GTL + 1, 8), Kling);",
              "            ItemSubrace(item, sub_race);",
              "            AddItemToShip(ruin, item);",
              "            ItemIsInUse(item, ruin, 1);",
              "        }",
              "        if(!ShipEqInSlot(ruin, t_RepairRobot))",
              "        {",
              "            item = CreateEquipment(t_RepairRobot, RndObject(45, 90, ruin), min(GTL + 1, 8), Kling);",
              "            ItemSubrace(item, sub_race);",
              "            AddItemToShip(ruin, item);",
              "            ItemIsInUse(item, ruin, 1);",
              "        }",
              "",
              "        //Доп. бонусы, если подключена EvoArmada",
              "        if(EvoArmadaInit)",
              "        {",
              "            int hull_level = ItemLevel(hull);",
              "            if(!sub_race) //Блазерская верфь будет ощутимо сильнее",
              "            {",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "                int tint = round((3 * GeneralDiffLevel) + (5 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
              "                tint = GeneralDiffLevel + PortionInDiapason(hull_level, 1, 8, 8, 20);",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
              "",
              "                ShipSpecialBonuses(ruin, bonAttacks, 5);",
              "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
              "                ShipAddCustomShipInfo(ruin, 'EvoArmada_CapitalShipInfos', 'NoShow', 5);",
              "            }",
              "            else",
              "            {",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "                tint = round((3 * GeneralDiffLevel) + (3 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
              "                tint = GeneralDiffLevel + PortionInDiapason(hull_level, 1, 8, 6, 15);",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
              "",
              "                ShipSpecialBonuses(ruin, bonAttacks, 3);",
              "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
              "                ShipAddCustomShipInfo(ruin, 'EvoArmada_CapitalShipInfos', 'NoShow', 3);",
              "            }",
              "",
              "            //Увеличиваем размер корпуса",
              "            ItemSize(hull, round(ItemSize(hull) * (1.0 + (0.8 * GeneralDiffLevel))));",
              "        }",
              "",
              "        //Выравниваем количество HP корпуса",
              "        HullHP(ruin, 'To100');",
              "",
              "        //Случайным образом вычисляем координаты появления верфи",
              "        //Для местоположения верфи вычисляем случайную точку в пределах радиуса системы",
              "        //Вычислили угол",
              "        float angle = 0.01 * RndObject(0, 200, ruin);",
              "        //Вычислили радиус",
              "        int coordY = RndObject(600, 1000, ruin);//Расстояние от звезды",
              "        float tflt = round(sin(angle * pi) * coordY);",
              "        int coordX = tflt; //Координата X",
              "        tflt = round(cos(angle * pi) * coordY);",
              "        coordY = tflt; //Координата Y",
              "",
              "        //Переносим верфь в определённую выше точку",
              "        ShipSetCoords(ruin, coordX, coordY);",
              "        TransferShip(ruin, star);",
              "",
              "        //Определяем серию верфи и задаём её особенности и характеристики",
              "        if(!sub_race) //Блазерская",
              "        {",
              "            while(ShipCntWeapon(ruin)) FreeItem(GetItemFromShip(ruin, ShipWeapon(ruin, 1)));",
              "            for(int j = GetEquipmentStats(hull, 1); j >= 1; j = j - 1)",
              "            {",
              "                if(j <= 3) item = CreateEquipment(t_Weapon15, RndObject(25, 90, ruin), min(GTL + 1, 8), Kling); //Торпедный аппарат",
              "                else item = CreateEquipment(t_Weapon14, RndObject(45, 165, ruin), min(GTL + 1, 8), Kling); //Вертикс",
              "                ItemSubrace(item, sub_race);",
              "                AddItemToShip(ruin, item);",
              "                ItemIsInUse(item, ruin, 1);",
              "            }",
              "",
              "            Chameleon(ruin, 'Ruins.BlazerShipyard');",
              "        }",
              "        else if(sub_race == 1) //Келлерская",
              "        {",
              "            while(ShipCntWeapon(ruin)) FreeItem(GetItemFromShip(ruin, ShipWeapon(ruin, 1)));",
              "            for(j = GetEquipmentStats(hull, 1); j >= 1; j = j - 1)",
              "            {",
              "                if(j <= 3) item = CreateEquipment(t_Weapon12, RndObject(25, 90, ruin), min(GTL + 1, 8), Kling); //Турбогравир",
              "                else item = CreateEquipment(t_Weapon14, RndObject(45, 165, ruin), min(GTL + 1, 8), Kling); //Вертикс",
              "                ItemSubrace(item, sub_race);",
              "                AddItemToShip(ruin, item);",
              "                ItemIsInUse(item, ruin, 1);",
              "            }",
              "",
              "            Chameleon(ruin, 'Ruins.KellerShipyard');",
              "        }",
              "        else /*if(sub_race == 2)*/ //Терроноидная",
              "        {",
              "            while(ShipCntWeapon(ruin)) FreeItem(GetItemFromShip(ruin, ShipWeapon(ruin, 1)));",
              "            for(j = GetEquipmentStats(hull, 1); j >= 1; j = j - 1)",
              "            {",
              "                if(j <= 3) item = CreateEquipment(t_Weapon13, RndObject(25, 90, ruin), min(GTL + 1, 8), Kling); //ИМХО-9000",
              "                else item = CreateEquipment(t_Weapon14, RndObject(45, 165, ruin), min(GTL + 1, 8), Kling); //Вертикс",
              "                ItemSubrace(item, sub_race);",
              "                AddItemToShip(ruin, item);",
              "                ItemIsInUse(item, ruin, 1);",
              "            }",
              "",
              "            item = ShipEqInSlot(ruin, t_CargoHook);",
              "            if(!item)",
              "            {",
              "                item = CreateEquipment(t_CargoHook, RndObject(20, 80, ruin), min(GTL + 1, 8), Kling);",
              "                ItemSubrace(item, sub_race);",
              "                AddItemToShip(ruin, item);",
              "                ItemIsInUse(item, ruin, 1);",
              "            }",
              "            else ItemLevel(item, min(GTL + 1, 8));",
              "",
              "            //Минимальный радиус подбора предметов для терроноиодной верфи - 400",
              "            if(ShipHookRange(ruin) < 400) ShipSpecialBonuses(ruin, bonHookRadius, 400 - ShipHookRange(ruin));",
              "",
              "            Chameleon(ruin, 'Ruins.TerronShipyard');",
              "        }",
              "",
              "        //Выдаём верфи ММ и прочие бафы",
              "        ShipImproveItems(ruin, RndObject(GeneralDiffLevel / 2 * 2, GeneralDiffLevel / 2 * 4, ruin));",
              "",
              "        //Повышаем число выпадающих с верфи ошмётков",
              "        int remains_max = 13; //CT('UselessItems.CntRemains');",
              "        int remains_count = RndObject(11, 22, ruin);",
              "        for(i = 0; i < remains_count; i = i + 1)",
              "        {",
              "            //Подбираем ошмёток, который ещё не выпадал в дроп данному клисану",
              "            int rand = RndObject(0, remains_max, ruin);",
              "            if(rand > 8) rand = rand + (5 * sub_race); //Если выпал не общий, а уникальный для серии ошмёток (по 5 уникальных для каждой серии)",
              "            //Добавляемый созданный ошмёток в дроп верфи",
              "            item = CreateQuestItem('Remains_' + rand, Kling);",
              "            ItemSubrace(item, sub_race);",
              "            ShipAddDropItem(ruin, item);",
              "        }",
              "",
              "        OrderLock(ruin, 1); //Нужно, чтобы верфи не начали летать по системе, ведь стейт None полностью блочит доминаторам не только передвижение, но и стрельбу",
              "        break;",
              "    }",
              "",
              "    if(ruin) result = ruin;",
              "    else result = 0;",
              "}",
              "",
              "function DomRuinsActCode() //t_OnStep_11, t_OnDeath (плюс только для терроноидной t_OnStep_0, t_OnItemPickUp)",
              "{",
              "    //Data0 - номер хода, на котором станет возможно заспавнить следующую стаю ратторов",
              "    //Data1 - место для персональных данных верфи, зависящих от её серии",
              "    //Data2 - номер хода от которого отсчитываем дни для проведения очередного авторемонта (каждые 70 дней) и автообновления верфи (каждые 210 дней)",
              "    //Data3 - маркер наличия в системе с верфью отрисованной инфошки верфи, т.к. прилетел игрок",
              "",
              "    dword shipyard = ScriptItemActShip();",
              "    if(ScriptItemActionType(t_OnStep))",
              "    {",
              "        dword cur_star = ShipStar(shipyard);",
              "        int is_player_here = (ShipStar(Player()) == cur_star);",
              "        if(!ScriptItemActParam())",
              "        {",
              "            if(!is_player_here) exit;",
              "            //if(ShipSubrace(shipyard, -1) != 2) exit;",
              "",
              "            //Собираем все предметы вокруг терроноидной верфи, если игрок может увидеть",
              "            for(int i = StarItems(cur_star) - 1; i >= 0; i = i - 1)",
              "            {",
              "                dword cur_item = StarItems(cur_star, i);",
              "                if(Dist(shipyard, cur_item) > ShipHookRange(shipyard)) continue;",
              "                if(ItemInScript(cur_item) == 1) continue;",
              "                ShipPicksItem(shipyard, cur_item, 1);",
              "",
              "                for(int j = ShipCntWeapon(shipyard); j >= 1; j = j - 1)",
              "                {",
              "                    dword gun = ShipWeapon(shipyard, j);",
              "                    if(WeaponTarget(gun) == cur_item) WeaponTarget(gun, 0);",
              "                }",
              "            }",
              "        }",
              "        else",
              "        {",
              "            if(is_player_here)",
              "            {",
              "                if(!GetData(3, shipyard)) //Игрок влетел в систему с верфью, а инфошка верфи ещё не добавлена",
              "                {",
              "                    SetData(1, 3, shipyard);",
              "                    if(!ShipSubrace(shipyard, -1))",
              "                    {",
              "                        //StarAddCustomStarInfo(cur_star, 'DomRuins_' + Id(shipyard), CT('ShipType.TypeName.DomRuins'), Dist(shipyard, cur_star), 'Bm.Ruins.BlazerShipyardi', CT('ShipType.Dominator.DomRuins.StarInfoSuffixBlazer'));",
              "",
              "                        StarAddCustomStarInfo(cur_star, 'DomRuins_' + Id(shipyard), CT('ShipType.TypeName.DomRuins'), Dist(shipyard, cur_star), 'Bm.Ruins.BlazerShipyardi', 'RGBA:Bm.Race.Emblem.2Blazer');",
              "                    }",
              "                    else if(ShipSubrace(shipyard, -1) == 1)",
              "                    {",
              "                        //StarAddCustomStarInfo(cur_star, 'DomRuins_' + Id(shipyard), CT('ShipType.TypeName.DomRuins'), Dist(shipyard, cur_star), 'Bm.Ruins.KellerShipyardi', CT('ShipType.Dominator.DomRuins.StarInfoSuffixKeller'));",
              "",
              "                        StarAddCustomStarInfo(cur_star, 'DomRuins_' + Id(shipyard), CT('ShipType.TypeName.DomRuins'), Dist(shipyard, cur_star), 'Bm.Ruins.KellerShipyardi', 'RGBA:Bm.Race.Emblem.2Keller');",
              "                    }",
              "                    else //if(ShipSubrace(shipyard, -1) == 2)",
              "                    {",
              "                        //StarAddCustomStarInfo(cur_star, 'DomRuins_' + Id(shipyard), CT('ShipType.TypeName.DomRuins'), Dist(shipyard, cur_star), 'Bm.Ruins.TerronShipyardi', CT('ShipType.Dominator.DomRuins.StarInfoSuffixTerron'));",
              "",
              "                        StarAddCustomStarInfo(cur_star, 'DomRuins_' + Id(shipyard), CT('ShipType.TypeName.DomRuins'), Dist(shipyard, cur_star), 'Bm.Ruins.TerronShipyardi', 'RGBA:Bm.Race.Emblem.2Terron');",
              "                    }",
              "                }",
              "            }",
              "            else if(GetData(3, shipyard)) StarDeleteCustomStarInfo(cur_star, 'DomRuins_' + Id(shipyard));",
              "",
              "            //Свёл оба таймера в одну переменную для экономии места в скриптовом объекте станции",
              "            //Таймер до автоматического ремонта оборудования",
              "            //int RepairTime = abs(GetData(2, shipyard) - CurTurn());",
              "            //Таймер до автообновления",
              "            int UpdateTime = abs(GetData(2, shipyard) - CurTurn());",
              "            if(!(UpdateTime % 70))",
              "            {",
              "                //Чиним оборудование и артефакты верфи",
              "                for(j = ShipItems(shipyard) - 1; j >= 1; j = j - 1)",
              "                {",
              "                    cur_item = ShipItems(shipyard, j);",
              "                    if(!ItemIsInUse(cur_item)) continue;",
              "                    int item_type = ItemType(cur_item);",
              "                    if(item_type < t_FuelTanks) continue;",
              "                    if(item_type > t_CustomWeapon) continue;",
              "                    if(ItemDurability(cur_item) < 100) ItemDurability(cur_item, 100);",
              "                }",
              "",
              "                //Чиним экипированные арты (если есть, лол)",
              "                for(j = ShipArts(shipyard) - 1; j >= 0; j = j - 1)",
              "                {",
              "                    cur_item = ShipArts(shipyard, j);",
              "                    if(!ItemIsInUse(cur_item)) continue;",
              "                    if(ItemDurability(cur_item) < 100) ItemDurability(cur_item, 100);",
              "                }",
              "            }",
              "",
              "            if(UpdateTime == 210)",
              "            {",
              "                //Если верфь находится в прямой видимости игрока, то пока что откладываем её обновление на несколько дней",
              "                if(is_player_here)",
              "                {",
              "                    if(ShipInNormalSpace(Player()))",
              "                    {",
              "                        SetData(GetData(2, shipyard) + 3, 2, shipyard);",
              "                        exit;",
              "                    }",
              "                }",
              "",
              "                SetData(CurTurn(), 2, shipyard); //Обновляем отсчётный номер хода до следующего ремонта/обновления",
              "",
              "                for(j = ShipItems(shipyard) - 1; j >= 0; j = j - 1)",
              "                {",
              "                    cur_item = ShipItems(shipyard, j);",
              "                    if(!ItemIsInUse(cur_item)) continue;",
              "                    item_type = ItemType(cur_item);",
              "                    if(item_type < t_Hull) continue;",
              "                    if(item_type > t_CustomWeapon) continue;",
              "                    if(ItemLevel(cur_item) < GTL) ItemLevel(cur_item, GTL);",
              "                    if(!ItemImprovement(cur_item)) ItemImprovement(cur_item, 2, 0);",
              "                }",
              "",
              "                //Если в текущей системе не идёт бой, то восстанавливаем HP верфи до максимума",
              "                int fullHP = ItemSize(ShipItems(shipyard, 0));",
              "                if(!StarBattle(cur_star)) HullHP(shipyard, fullHP);",
              "",
              "                //Заставляем верфь разобрать свои вещи, а все лишние из трюма удаляем",
              "                ArrangeItems(shipyard);",
              "                for(j = ShipItems(shipyard) - 1; j > 0; j = j - 1)",
              "                {",
              "                    if(!ItemIsInUse(ShipItems(shipyard, j))) FreeItem(GetItemFromShip(shipyard, j));",
              "                }",
              "",
              "                for(j = ShipArts(shipyard) - 1; j > 0; j = j - 1)",
              "                {",
              "                    if(!ItemIsInUse(ShipArts(shipyard, j))) FreeItem(GetArtFromShip(shipyard, j));",
              "                }",
              "            }",
              "        }",
              "    }",
              "    //Терроноидная верфь подобрала предмет",
              "    else if(ScriptItemActionType(t_OnItemPickUp))",
              "    {",
              "        item_type = ItemType(ScriptItemActObject1());",
              "        if(item_type > t_Narcotics) ScriptItemActParam(-1); //Если это не товар, то сразу удаляем его",
              "        else ShipGoods(shipyard, item_type, -ItemSize(ScriptItemActObject1())); //Иначе просто зануляем счётчик товара в трюме",
              "    }",
              "    //Если верфь была уничтожена",
              "    else //if(ScriptItemActionType(t_OnDeath))",
              "    {",
              "        cur_star = ShipStar(shipyard);",
              "",
              "        if(ShipSubrace(shipyard, -1) == 1) //Если уничтожили келлероидную верфь",
              "        {",
              "           //Как оригинальный движок определяет число домиков для вызова маяком:",
              "            /*",
              "            k := PortionInDiapason(art.FPower, MinTransmitterPower, MaxTransmitterPower, 1, 3);",
              "            ...",
              "            if(cnt > RndOut(10, 12, FRndOut) * k) or ((cnt > 8 * k) and (strenth > 8 * k)) then break;",
              "            (strenth это сумма ShipStrengthInBestRanger для призываемых кораблей)",
              "            */",
              "",
              "            //Отправку через ЧД заменил на способ, схожий с вызовом доминаторов трансфакторным маяком",
              "            int doms_to_send = PortionInDiapason(GeneralDiffLevel, 1, 10, 27, 12); //Определяем минимальное число келлероидов, которые прибудут на вызов",
              "",
              "            unknown temp_arr = newarray(1);",
              "            for(i = 1; i < GalaxyStars(); i = i + 1)",
              "            {",
              "                dword star = StarNearbyStars(cur_star, i);",
              "                int min_left = RndObject(3, 5, star); //Минимальный остаток кораблей в системе",
              "",
              "                ArrayClear(temp_arr);",
              "                for(j = 0; j < StarShips(star); j = j + 1)",
              "                {",
              "                    dword ship = StarShips(star, j);",
              "                    if(ShipOwner(ship) != Kling) continue;",
              "                    if(ShipSubrace(ship, -1) != 1) continue; //Только келлероиды",
              "                    if(ShipInScript(ship)) continue;",
              "                    if(ShipCustomFaction(ship) != '') continue;",
              "                    if(!ShipInNormalSpace(ship)) continue;",
              "",
              "                    ArrayAdd(temp_arr, ship);",
              "                }",
              "",
              "                int from_cur_star = ArrayDim(temp_arr) - min_left - 1;",
              "                for(j = 1; j < from_cur_star; j = j + 1)",
              "                {",
              "                    //Мобилизуем келлероида в атаку на систему, в которой была уничтожена верфь",
              "                    ShipJoin('DomiksManualControl', temp_arr[j], 'DomikJumpToStar', Id(cur_star));",
              "                    doms_to_send = doms_to_send - 1;",
              "                }",
              "",
              "                if(doms_to_send <= 0) break;",
              "            }",
              "",
              "            if(ShipStar(Player()) == cur_star)",
              "            {",
              "                if(ShipInNormalSpace(Player()))",
              "                {",
              "                    ShowStaticEffect('KellerShipyardExplode', CoordX(shipyard), CoordY(shipyard)); //Прописан в Main в \"Data.SE.Effect\"",
              "                    FilmSound('Sound.KellerShipyardExplode', shipyard);",
              "                }",
              "            }",
              "        }",
              "",
              "        //Проверяем, не запускала ли эта верфь недавно ратторов и если да, ликвидируем все запущенные ею стаи",
              "        for(i = 1; i <= 6; i = i + 1)",
              "        {",
              "            int group = GetValueFromScript('Mod_ShuDomiks', 'RattorsPack' + i);",
              "            int group_count = GroupCount(group);",
              "            if(!group_count) continue;",
              "            if(GetData(1, GroupToShip(group)) != Id(shipyard)) continue; //Этих ратторов запустила другая верфь",
              "",
              "            for(j = group_count - 1; j >= 0; j = j - 1)",
              "            {",
              "                dword rattor = GroupShip(group, j);",
              "",
              "                if(ShipInNormalSpace(rattor)) //Самодетонация, иначе простой подрыв",
              "                {",
              "                    SetData(-1, 1, rattor); //Маркер, что родная верфь раттора была уничтожена (выставляем уже после вызова DealDamageToShip())",
              "                    ShipSetBad(rattor, rattor);",
              "                    OrderFollowShip(rattor, rattor, 3);",
              "                    ItemDurability(ShipEqInSlot(rattor, t_Engine), 100); //Иногда самоподрыв не срабатывает из-за выхода из строя двигателя и, как следствие, невозможности подрубить форсаж",
              "                    OrderForsage(rattor, 1);",
              "                }",
              "                else",
              "                {",
              "                    NoDropToShip(rattor, 1); //Иначе будет дропать",
              "                    ShipSubrace(shipyard, 3); //Маркер",
              "                    DealDamageToShip(rattor, shipyard, 1000000, 1);",
              "                }",
              "            }",
              "        }",
              "",
              "        //Удаляем инфошку верфи из системы, если она там есть",
              "        if(GetData(3, shipyard)) StarDeleteCustomStarInfo(cur_star, 'DomRuins_' + Id(shipyard));",
              "    }",
              "}",
              "",
              "function PlayerActCode() //t_OnEnteringForm, t_OnShowingStarInfo, t_OnLeavingForm",
              "{",
              "    if(CurrentForm() == 'Galaxy')",
              "    {",
              "        if(!ArtefactTypeInUse(Player(), t_ArtefactRadar)) exit; //Для отображения информации по верфям на галакарте у игрока должен быть установлен Пролонгер",
              "",
              "        if(ScriptItemActionType(t_OnEnteringForm)) ArrayClear(tarr1); //Готовим временный массив",
              "        else if(ScriptItemActionType(t_OnShowingStarInfo)) //Игрок просматривает инфошку системы с формы галакарты",
              "        {",
              "            dword star = ScriptItemActObject1();",
              "            if(ShipStar(Player()) == star) exit; //В системе, в которой находится игрок, инфошки развесят сами верфи (их акткод)",
              "",
              "            //Сперва удаляем старые инфошки, которые могли быть повешены на прошлой (либо текущей, но в прошлый просмотр) просмотренной звезде",
              "            for(int i = 1; i < ArrayDim(tarr1); i = i + 1) StarDeleteCustomStarInfo(tarr1[i], GetVariableName(tarr1[i]));",
              "            ArrayClear(tarr1); //Готовим временный массив",
              "",
              "            //Проверяем наличие верфей в системе и вешаем их инфошки",
              "            for(i = 0; i < StarShips(star); i = i + 1)",
              "            {",
              "                dword ship = StarShips(star, i);",
              "                if(ShipType(ship) != 'DomRuins') continue;",
              "",
              "                if(!ShipSubrace(ship, -1))",
              "                {",
              "                    //StarAddCustomStarInfo(star, 'DomRuins_' + Id(ship), CT('ShipType.TypeName.DomRuins'), Dist(ship, star), 'Bm.Ruins.BlazerShipyardi', CT('ShipType.Dominator.DomRuins.StarInfoSuffixBlazer'));",
              "",
              "                    StarAddCustomStarInfo(star, 'DomRuins_' + Id(ship), CT('ShipType.TypeName.DomRuins'), Dist(ship, star), 'Bm.Ruins.BlazerShipyardi', 'RGBA:Bm.Race.Emblem.2Blazer');",
              "                }",
              "                else if(ShipSubrace(ship, -1) == 1)",
              "                {",
              "                    //StarAddCustomStarInfo(star, 'DomRuins_' + Id(ship), CT('ShipType.TypeName.DomRuins'), Dist(ship, star), 'Bm.Ruins.KellerShipyardi', CT('ShipType.Dominator.DomRuins.StarInfoSuffixKeller'));",
              "",
              "                    StarAddCustomStarInfo(star, 'DomRuins_' + Id(ship), CT('ShipType.TypeName.DomRuins'), Dist(ship, star), 'Bm.Ruins.KellerShipyardi', 'RGBA:Bm.Race.Emblem.2Keller');",
              "                }",
              "                else //if(ShipSubrace(ship, -1) == 2)",
              "                {",
              "                    //StarAddCustomStarInfo(star, 'DomRuins_' + Id(ship), CT('ShipType.TypeName.DomRuins'), Dist(ship, star), 'Bm.Ruins.TerronShipyardi', CT('ShipType.Dominator.DomRuins.StarInfoSuffixTerron'));",
              "",
              "                    StarAddCustomStarInfo(star, 'DomRuins_' + Id(ship), CT('ShipType.TypeName.DomRuins'), Dist(ship, star), 'Bm.Ruins.TerronShipyardi', 'RGBA:Bm.Race.Emblem.2Terron');",
              "                }",
              "",
              "                ArrayAdd(tarr1, star, 'DomRuins_' + Id(ship));",
              "            }",
              "        }",
              "        else //if(ScriptItemActionType(t_OnLeavingForm)) //Игрок закрыл галакарту",
              "        {",
              "            for(i = 1; i < ArrayDim(tarr1); i = i + 1) StarDeleteCustomStarInfo(tarr1[i], GetVariableName(tarr1[i]));",
              "        }",
              "    }",
              "}",
              "",
              "function GroupSetData(int group_num, int data_num, dword data)",
              "{",
              "    int cnt = GroupCount(group_num);",
              "    for(int i = 0; i < cnt; i = i + 1)",
              "    {",
              "        dword ship = GroupShip(group_num, i);",
              "        SetData(data, data_num, ship);",
              "    }",
              "}",
              "",
              "function SpawnRattorsPack(dword planet, int sub_race, dword dom_ruins, dword target)",
              "{",
              "    int hull_size = PortionInDiapason(GTL, 3, 8, 30, 75) + PortionInDiapason(CurTurn(), 2855, 11250, 1, 50); //Корпуса растут в зависимости от ГТУ, плюс в период с 3307 по 3330 годы",
              "    int bon_hull = FindBonusByNameInCfg('ShuDomiks_RattorDomHull');",
              "    int bon_fragile = FindBonusByNameInCfg('ShuDomiks_FragileEquipment');",
              "    int bon_fragility_count = AdvancedAdjustmentSet(1, -1) / 50; //Сложность экипировки доминаторов",
              "    int bon_fragility = FindBonusByNameInCfg('bonHullFragilityReduced');",
              "    int add_speed = PortionInDiapason(GTL, 3, 8, 400, 1200);",
              "    if(!sub_race) str skin_path = 'Ship.Blazer.Rattor';",
              "    else if(sub_race == 1) skin_path = 'Ship.Keller.Rattor';",
              "    else skin_path = 'Ship.Terron.Rattor';",
              "",
              "    for(int i = 1; i <= 5; i = i + 1)",
              "    {",
              "        dword rattor = BuyDomikExtremal(planet, 7, sub_race); //Базовый тип - Клиг (будет автоматически детонировать от ЭМП бомбы)",
              "        ShipType(rattor, 'Rattor');",
              "",
              "        dword item = ShipItems(rattor, 0); //Корпус",
              "        int cur_hull_size = hull_size + RndObject(0, 7, rattor);",
              "        ItemSize(item, cur_hull_size);",
              "        HullHP(item, 'To100');",
              "        Chameleon(rattor, skin_path);",
              "        SetEquipmentStats(item, 0, 0); //Никакой брони у ратторов нет",
              "        SpecialToEquipment(bon_hull, item);",
              "        ItemExtraSpecialsAddByType(item, bon_fragility, bon_fragility_count); //Дополнительно снижаем восприимчивость корпуса в зависимости от сложности эквипа доминаторов",
              "",
              "        for(int j = ShipItems(rattor) - 1; j >= 1; j = j - 1)",
              "        {",
              "            item = ShipItems(rattor, j);",
              "            int item_type = ItemType(item);",
              "            if(item_type != t_Engine && item_type != t_FuelTanks) FreeItem(GetItemFromShip(rattor, item));",
              "        }",
              "",
              "        //Ратторы получают ГЗП, начиная с 5 ГТУ",
              "        dword engine = ShipEqInSlot(rattor, t_Engine);",
              "        int eng_level = ItemLevel(engine);",
              "        int is_def = 0;",
              "        if(GTL > 4)",
              "        {",
              "            if(RndObject(1, 100, rattor) <= 50 + 17 * (GTL - 5)) //На 8 ГТУ шанс 101%",
              "            {",
              "                item = CreateEquipment(t_DefGenerator, RndObject(20, 60, rattor), eng_level, Kling);",
              "                ItemSubrace(item, sub_race);",
              "                AddItemToShip(rattor, item);",
              "                ItemIsInUse(item, rattor, 1);",
              "                is_def = 1;",
              "            }",
              "        }",
              "",
              "        ShipSpecialBonuses(rattor, bonSpeed, add_speed);",
              "",
              "        //Если в результате оборудование не влезает в корпус (что вероятно), то равномерно уменьшаем его размер до тех пор, пока не влезет (и заодно пересчитываем его цену)",
              "        //Если при этом размер оборудования становится ниже минимального - вешаем на него \"ограничитель использования\" только на транках",
              "        ShipCalcParam(rattor);",
              "        if(ShipFreeSpace(rattor) < 0)",
              "        {",
              "            if(!is_def) int new_size = int(0.5 * cur_hull_size);",
              "            else new_size = int(0.333 * cur_hull_size);",
              "",
              "            item = engine;",
              "            int new_cost = round(sqr(eng_level) * PortionInDiapason(20.0 / new_size, 0.5, 2.0, 1.0, 2.0) * 500, 10);",
              "            ItemCost(item, new_cost);",
              "            ItemSize(item, new_size);",
              "            if(new_size < 20) ItemExtraSpecialsAddByType(item, bon_fragile);",
              "",
              "            item = ShipEqInSlot(rattor, t_FuelTanks);",
              "            new_cost = round(sqr(ItemLevel(item)) * (20.0 / new_size) * 500, 10);",
              "            ItemCost(item, new_cost);",
              "            ItemSize(item, new_size);",
              "            if(new_size < 20) ItemExtraSpecialsAddByType(item, bon_fragile);",
              "",
              "            if(is_def) //Если раттор имеет ГЗП",
              "            {",
              "                item = ShipEqInSlot(rattor, t_DefGenerator);",
              "                new_cost = round(sqr(eng_level) * PortionInDiapason(20.0 / new_size, 0.5, 2.0, 1.0, 2.0) * 500, 10);",
              "                ItemCost(item, new_cost);",
              "                ItemSize(item, new_size);",
              "                if(new_size < 20) ItemExtraSpecialsAddByType(item, bon_fragile);",
              "            }",
              "",
              "            ShipCalcParam(rattor);",
              "        }",
              "",
              "        ShipSpecialBonuses(rattor, bonSlotWeapon, -1000); //Ратторы должны быть полностью безоружны",
              "        ShipSpecialBonuses(rattor, bonSlotArt, -1000);",
              "        ShipSpecialBonuses(rattor, bonSlotRadar, -1000);",
              "        ShipSpecialBonuses(rattor, bonSlotScaner, -1000);",
              "        ShipSpecialBonuses(rattor, bonSlotDroid, -1000);",
              "        ShipSpecialBonuses(rattor, bonSlotHook, -1000);",
              "",
              "        ShipSkill(rattor, 0, 0);",
              "        ShipSkill(rattor, 1, 6);",
              "        ShipSkill(rattor, 2, 6);",
              "",
              "        //Создаём специальный скрытый промлазер, необходимый для измерения безопасной дистанции до цели",
              "        item = CreateEquipment(t_Weapon1, 0, 1, Kling);",
              "        ItemSubrace(item, sub_race);",
              "        ItemCost(item, 0);",
              "        //ItemDurability(item, -1000000); //Чтобы раттор точно не мог из него стрелять (и так не будет)",
              "        SetEquipmentStats(item, 0, 0); //Зануляем урон только для корректного вывода атаки в карточке",
              "        SetEquipmentStats(item, 0, 1);",
              "        SetEquipmentStats(item, ShipSpeed(rattor) - 35, 2);",
              "        AddItemToShip(rattor, item);",
              "        ItemIsInUse(item, rattor, 1);",
              "        NoDropItem(item, 1);",
              "",
              "        ShipJoinToScript(rattor, 'Mod_ShuDomiks.RattorsPack1');",
              "",
              "        OrderLock(rattor, 1); //Раздавать раттору все приказы будет стейт",
              "        SetData(Id(target), 0, rattor);",
              "        SetData(Id(dom_ruins), 1, rattor);",
              "        TransferShip(rattor, dom_ruins);",
              "        OrderTakeOff(rattor);",
              "    }",
              "}",
              "",
              "//Подибраем цели из установленной оборудки (согласно приоритету) для приземлившейся стаи ратторов",
              "function FindEquipTargetForRattors(int cur_group, dword target, int max_per_item, ref rattors_arr, int try_set = 1023, ref hull_was_damaged) //1+2+4+8+16+32+64+128+256+512",
              "{",
              "    //max_per_item - означает минимально допустимое число ратторов, которые уже выбрали данное оборудование в качестве цели",
              "    //rattors_arr - массив ратторов из группы, у которых в данный момент отсутствует цель",
              "",
              "    //Приоритет выбора эквипа ратторами для слома:",
              "    //1  - двигатель",
              "    //2  - нанитоиды и чёрная жижа, если имеются",
              "    //3  - ГЗП",
              "    //4  - дроид",
              "    //5  - дроид младший, если имеется",
              "    //6  - орудия, начиная с самых мощных",
              "    //7  - радар",
              "    //8  - топливный бак",
              "    //9  - сканер",
              "    //10 - захват",
              "    //11 - корпус",
              "",
              "    //Используем try_set и new_try_set (в качестве возврата уже проверенного) с целью ускорить повторные переборы оборудки (если FindEquipTargetForRattors() вызывается несколько раз подряд) на корабле, которая там точно есть и ещё не сломана",
              "    int new_try_set = 0;",
              "",
              "    if((try_set & 1))",
              "    {",
              "        dword item = ShipEqInSlot(target, t_Engine);",
              "        if(item)",
              "        {",
              "            if(!ItemIsBroken(item))",
              "            {",
              "                int current = ItemExtraSpecialsCountByType(item, bon_num);",
              "                while(current < max_per_item)",
              "                {",
              "                    dword rattor = rattors_arr[1];",
              "                    //Для ратторов, получивших свои новые цели только что, сразу вызываем функцию нанесения урона (поскольку в текущий ход они цель ещё не дамажили)",
              "                    if(int(GetData(2, rattor)) == -1) DealDamageToItem(item, target, rattor, 0, hull_was_damaged);",
              "                    if(rattor) //Раттора могут убить, пока он наносит урон предмету",
              "                    {",
              "                        SetData(t_Engine, 2, rattor);",
              "                        ItemExtraSpecialsAddByType(item, bon_num, 1);",
              "                        current = current + 1;",
              "                    }",
              "                    ArrayDelete(rattors_arr, 1);",
              "",
              "                    //Все ратторы распределены",
              "                    if(ArrayDim(rattors_arr) == 1)",
              "                    {",
              "                        //Добавляем в проверочный сет все типы оборудки ниже по списку, которые не были проверены в текущем проходе",
              "                        //new_try_set = 1023; //1+2+4+8+16+32+64+128+256+512",
              "                        result = 0;",
              "                        exit;",
              "                    }",
              "                }",
              "",
              "                new_try_set = new_try_set + 1;",
              "            }",
              "        }",
              "    }",
              "",
              "    if((try_set & 2) || (try_set & 16))",
              "    {",
              "        //Заранее точное число артов нам неизвестно, так что придётся вызывать ArrayAdd из цикла перебора",
              "        unknown arts = newarray(1);",
              "        arts[0] = 0;",
              "        unknown arts_prior = newarray(1);",
              "        arts_prior[0] = 0;",
              "        int arts_cnt_1 = 0;",
              "        int arts_cnt_2 = 0;",
              "        for(int i = 0; i < ShipArts(target); i = i + 1)",
              "        {",
              "            dword art = ShipArts(target, i);",
              "            if(ItemIsBroken(art)) continue;",
              "            int slot = ItemIsInUse(art, target);",
              "            if(!slot) continue;",
              "",
              "            //Сортируем арты в составленном массиве по приоритету их ценности для уничтожения ратторами",
              "            int item_type = ItemType(art);",
              "            if(item_type == t_ArtefactNano)",
              "            {",
              "                ArrayAdd(arts, art);",
              "                ArrayAdd(arts_prior, 1);",
              "                arts_cnt_1 = arts_cnt_1 + 1;",
              "            }",
              "            else if(item_type == t_ArtefactFuel)",
              "            {",
              "                ArrayAdd(arts, art);",
              "                ArrayAdd(arts_prior, 2);",
              "                arts_cnt_1 = arts_cnt_1 + 1;",
              "            }",
              "            else if(item_type == t_ArtefactDroid)",
              "            {",
              "                ArrayAdd(arts, art);",
              "                ArrayAdd(arts_prior, 3);",
              "                arts_cnt_2 = arts_cnt_2 + 1;",
              "            }",
              "        }",
              "",
              "        ArraySort(arts_prior, arts);",
              "        arts_cnt_2 = arts_cnt_2 + arts_cnt_1;",
              "    }",
              "",
              "    if((try_set & 2))",
              "    {",
              "        //Распределяем ратторов на артефакты из приоритета первого порядка",
              "        if(arts_cnt_1)",
              "        {",
              "            for(i = 1; i <= arts_cnt_1; i = i + 1)",
              "            {",
              "                art = arts[i];",
              "                current = ItemExtraSpecialsCountByType(art, bon_num);",
              "                while(current < max_per_item)",
              "                {",
              "                    rattor = rattors_arr[1];",
              "                    //Для ратторов, получивших свои новые цели только что, сразу вызываем функцию нанесения урона (поскольку в текущий ход они цель ещё не дамажили)",
              "                    if(int(GetData(2, rattor)) == -1) DealDamageToItem(arts[i], target, rattor, 0, hull_was_damaged);",
              "                    if(rattor) //Раттора могут убить, пока он наносит урон предмету",
              "                    {",
              "                        SetData(ItemIsInUse(arts[i], target) + 5, 2, rattor);",
              "                        ItemExtraSpecialsAddByType(art, bon_num, 1);",
              "                        current = current + 1;",
              "                    }",
              "                    ArrayDelete(rattors_arr, 1);",
              "",
              "                    //Все ратторы распределены",
              "                    if(ArrayDim(rattors_arr) == 1)",
              "                    {",
              "                        //new_try_set = new_try_set + 1022; //2+4+8+16+32+64+128+256+512",
              "                        result = 0;",
              "                        exit;",
              "                    }",
              "                }",
              "",
              "                new_try_set = new_try_set + 2;",
              "            }",
              "        }",
              "    }",
              "",
              "    if((try_set & 4))",
              "    {",
              "        item = ShipEqInSlot(target, t_DefGenerator);",
              "        if(item)",
              "        {",
              "            if(!ItemIsBroken(item))",
              "            {",
              "                current = ItemExtraSpecialsCountByType(item, bon_num);",
              "                while(current < max_per_item)",
              "                {",
              "                    rattor = rattors_arr[1];",
              "                    //Для ратторов, получивших свои новые цели только что, сразу вызываем функцию нанесения урона (поскольку в текущий ход они цель ещё не дамажили)",
              "                    if(int(GetData(2, rattor)) == -1) DealDamageToItem(item, target, rattor, 0, hull_was_damaged);",
              "                    if(rattor) //Раттора могут убить, пока он наносит урон предмету",
              "                    {",
              "                        SetData(t_DefGenerator, 2, rattor);",
              "                        ItemExtraSpecialsAddByType(item, bon_num, 1);",
              "                        current = current + 1;",
              "                    }",
              "                    ArrayDelete(rattors_arr, 1);",
              "",
              "                    //Все ратторы распределены",
              "                    if(ArrayDim(rattors_arr) == 1)",
              "                    {",
              "                        //new_try_set = new_try_set + 1020; //4+8+16+32+64+128+256+512",
              "                        result = 0;",
              "                        exit;",
              "                    }",
              "                }",
              "",
              "                new_try_set = new_try_set + 4;",
              "            }",
              "        }",
              "    }",
              "",
              "    if((try_set & 8))",
              "    {",
              "        item = ShipEqInSlot(target, t_RepairRobot);",
              "        if(item)",
              "        {",
              "            if(!ItemIsBroken(item))",
              "            {",
              "                current = ItemExtraSpecialsCountByType(item, bon_num);",
              "                while(current < max_per_item)",
              "                {",
              "                    rattor = rattors_arr[1];",
              "                    //Для ратторов, получивших свои новые цели только что, сразу вызываем функцию нанесения урона (поскольку в текущий ход они цель ещё не дамажили)",
              "                    if(int(GetData(2, rattor)) == -1) DealDamageToItem(item, target, rattor, 0, hull_was_damaged);",
              "                    if(rattor) //Раттора могут убить, пока он наносит урон предмету",
              "                    {",
              "                        SetData(t_RepairRobot, 2, rattor);",
              "                        ItemExtraSpecialsAddByType(item, bon_num, 1);",
              "                        current = current + 1;",
              "                    }",
              "                    ArrayDelete(rattors_arr, 1);",
              "",
              "                    //Все ратторы распределены",
              "                    if(ArrayDim(rattors_arr) == 1)",
              "                    {",
              "                        //new_try_set = new_try_set + 1016; //8+16+32+64+128+256+512",
              "                        result = 0;",
              "                        exit;",
              "                    }",
              "                }",
              "",
              "                new_try_set = new_try_set + 8;",
              "            }",
              "        }",
              "    }",
              "",
              "    if((try_set & 16))",
              "    {",
              "        //Распределяем ратторов на артефакты из приоритета второго порядка",
              "        if(arts_cnt_2)",
              "        {",
              "            for(i = arts_cnt_1 + 1; i <= arts_cnt_2; i = i + 1)",
              "            {",
              "                art = arts[i];",
              "                current = ItemExtraSpecialsCountByType(art, bon_num);",
              "                while(current < max_per_item)",
              "                {",
              "                    rattor = rattors_arr[1];",
              "                    //Для ратторов, получивших свои новые цели только что, сразу вызываем функцию нанесения урона (поскольку в текущий ход они цель ещё не дамажили)",
              "                    if(int(GetData(2, rattor)) == -1) DealDamageToItem(arts[i], target, rattor, 0, hull_was_damaged);",
              "                    if(rattor) //Раттора могут убить, пока он наносит урон предмету",
              "                    {",
              "                        SetData(ItemIsInUse(arts[i], target) + 5, 2, rattor);",
              "                        ItemExtraSpecialsAddByType(art, bon_num, 1);",
              "                        current = current + 1;",
              "                    }",
              "                    ArrayDelete(rattors_arr, 1);",
              "",
              "                    //Все ратторы распределены",
              "                    if(ArrayDim(rattors_arr) == 1)",
              "                    {",
              "                        //new_try_set = new_try_set + 1008; //16+32+64+128+256+512",
              "                        result = 0;",
              "                        exit;",
              "                    }",
              "                }",
              "",
              "                new_try_set = new_try_set + 16;",
              "            }",
              "        }",
              "    }",
              "",
              "    if((try_set & 32))",
              "    {",
              "        int guns_cnt = ShipCntWeapon(target);",
              "        if(guns_cnt)",
              "        {",
              "            //Сперва составляем список и сортируем орудия по мощности",
              "            int bon_En = ShipSpecialBonuses(target, bonWEnergy, 'Total');",
              "            int bon_Sp = ShipSpecialBonuses(target, bonWSplinter, 'Total');",
              "            int bon_Mi = ShipSpecialBonuses(target, bonWMissile, 'Total');",
              "            unknown top_guns_dmg = newarray(6);",
              "            unknown top_guns = newarray(6);",
              "            int added_guns_cnt = 0;",
              "            for(i = guns_cnt; i >= 1; i = i - 1)",
              "            {",
              "                dword gun = ShipWeapon(target, i);",
              "                if(ItemIsBroken(gun))",
              "                {",
              "                    guns_cnt = guns_cnt - 1;",
              "                    continue;",
              "                }",
              "                top_guns_dmg[i] = GetEquipmentStats(gun, 0);",
              "                top_guns[i] = gun;",
              "                added_guns_cnt = added_guns_cnt + 1;",
              "                if(!GetEquipmentStats(gun, 3)) top_guns_dmg[i] = top_guns_dmg[i] + bon_En;",
              "                else if(GetEquipmentStats(gun, 3) == 1) top_guns_dmg[i] = top_guns_dmg[i] + bon_Sp;",
              "                else top_guns_dmg[i] = top_guns_dmg[i] + bon_Mi;",
              "            }",
              "",
              "            if(added_guns_cnt)",
              "            {",
              "                ArraySort(top_guns_dmg, top_guns);",
              "",
              "                //Затем выбираем наиболее мощную пушку и устанавливаем её в качестве цели, если она ещё не была выбрана избыточным числом ратторов",
              "                //Сортировка массива откидывает пушки с большим уроном вверх, поэтому приходится перебирать с конца,",
              "                //а если при этом у корабля установлено менее 5 пушек, то элементы массива ближе к началу окажутся пустыми",
              "                //Можно было бы также обойти это с помощью вызовов ArrayAdd для заполнения массивов в цикле выше, но это неоптимально",
              "                for(i = 5; i > 5 - guns_cnt; i = i - 1)",
              "                {",
              "                    gun = top_guns[i];",
              "                    current = ItemExtraSpecialsCountByType(gun, bon_num);",
              "                    while(current < max_per_item)",
              "                    {",
              "                        rattor = rattors_arr[1];",
              "                        //Для ратторов, получивших свои новые цели только что, сразу вызываем функцию нанесения урона (поскольку в текущий ход они цель ещё не дамажили)",
              "                        if(int(GetData(2, rattor)) == -1) DealDamageToItem(top_guns[i], target, rattor, 0, hull_was_damaged);",
              "                        if(rattor) //Раттора могут убить, пока он наносит урон предмету",
              "                        {",
              "                            SetData(ItemIsInUse(top_guns[i], target), 2, rattor);",
              "                            ItemExtraSpecialsAddByType(gun, bon_num, 1);",
              "                            current = current + 1;",
              "                        }",
              "                        ArrayDelete(rattors_arr, 1);",
              "",
              "                        //Все ратторы распределены",
              "                        if(ArrayDim(rattors_arr) == 1)",
              "                        {",
              "                            //new_try_set = new_try_set + 992; //32+64+128+256+512",
              "                            result = 0;",
              "                            exit;",
              "                        }",
              "                    }",
              "",
              "                    new_try_set = new_try_set + 32;",
              "                }",
              "            }",
              "        }",
              "    }",
              "",
              "    if((try_set & 64))",
              "    {",
              "        item = ShipEqInSlot(target, t_Radar);",
              "        if(item)",
              "        {",
              "            if(!ItemIsBroken(item))",
              "            {",
              "                current = ItemExtraSpecialsCountByType(item, bon_num);",
              "                while(current < max_per_item)",
              "                {",
              "                    rattor = rattors_arr[1];",
              "                    //Для ратторов, получивших свои новые цели только что, сразу вызываем функцию нанесения урона (поскольку в текущий ход они цель ещё не дамажили)",
              "                    if(int(GetData(2, rattor)) == -1) DealDamageToItem(item, target, rattor, 0, hull_was_damaged);",
              "                    if(rattor) //Раттора могут убить, пока он наносит урон предмету",
              "                    {",
              "                        SetData(t_Radar, 2, rattor);",
              "                        ItemExtraSpecialsAddByType(item, bon_num, 1);",
              "                        current = current + 1;",
              "                    }",
              "                    ArrayDelete(rattors_arr, 1);",
              "",
              "                    //Все ратторы распределены",
              "                    if(ArrayDim(rattors_arr) == 1)",
              "                    {",
              "                        //new_try_set = new_try_set + 960; //64+128+256+512",
              "                        result = 0;",
              "                        exit;",
              "                    }",
              "                }",
              "",
              "                new_try_set = new_try_set + 64;",
              "            }",
              "        }",
              "    }",
              "",
              "    if((try_set & 128))",
              "    {",
              "        item = ShipEqInSlot(target, t_FuelTanks);",
              "        if(item)",
              "        {",
              "            if(!ItemIsBroken(item))",
              "            {",
              "                current = ItemExtraSpecialsCountByType(item, bon_num);",
              "                while(current < max_per_item)",
              "                {",
              "                    rattor = rattors_arr[1];",
              "                    //Для ратторов, получивших свои новые цели только что, сразу вызываем функцию нанесения урона (поскольку в текущий ход они цель ещё не дамажили)",
              "                    if(int(GetData(2, rattor)) == -1) DealDamageToItem(item, target, rattor, 0, hull_was_damaged);",
              "                    if(rattor) //Раттора могут убить, пока он наносит урон предмету",
              "                    {",
              "                        SetData(t_FuelTanks, 2, rattor);",
              "                        ItemExtraSpecialsAddByType(item, bon_num, 1);",
              "                        current = current + 1;",
              "                    }",
              "                    ArrayDelete(rattors_arr, 1);",
              "",
              "                    //Все ратторы распределены",
              "                    if(ArrayDim(rattors_arr) == 1)",
              "                    {",
              "                        //new_try_set = new_try_set + 896; //128+256+512",
              "                        result = 0;",
              "                        exit;",
              "                    }",
              "                }",
              "",
              "                new_try_set = new_try_set + 128;",
              "            }",
              "        }",
              "    }",
              "",
              "    if((try_set & 256))",
              "    {",
              "        item = ShipEqInSlot(target, t_Scaner);",
              "        if(item)",
              "        {",
              "            if(!ItemIsBroken(item))",
              "            {",
              "                current = ItemExtraSpecialsCountByType(item, bon_num);",
              "                while(current < max_per_item)",
              "                {",
              "                    rattor = rattors_arr[1];",
              "                    //Для ратторов, получивших свои новые цели только что, сразу вызываем функцию нанесения урона (поскольку в текущий ход они цель ещё не дамажили)",
              "                    if(int(GetData(2, rattor)) == -1) DealDamageToItem(item, target, rattor, 0, hull_was_damaged);",
              "                    if(rattor) //Раттора могут убить, пока он наносит урон предмету",
              "                    {",
              "                        SetData(t_Scaner, 2, rattor);",
              "                        ItemExtraSpecialsAddByType(item, bon_num, 1);",
              "                        current = current + 1;",
              "                    }",
              "                    ArrayDelete(rattors_arr, 1);",
              "",
              "                    //Все ратторы распределены",
              "                    if(ArrayDim(rattors_arr) == 1)",
              "                    {",
              "                        //new_try_set = new_try_set + 768; //256+512",
              "                        result = 0;",
              "                        exit;",
              "                    }",
              "                }",
              "",
              "                new_try_set = new_try_set + 256;",
              "            }",
              "        }",
              "    }",
              "",
              "    if((try_set & 512))",
              "    {",
              "        item = ShipEqInSlot(target, t_CargoHook);",
              "        if(item)",
              "        {",
              "            if(!ItemIsBroken(item))",
              "            {",
              "                current = ItemExtraSpecialsCountByType(item, bon_num);",
              "                while(current < max_per_item)",
              "                {",
              "                    rattor = rattors_arr[1];",
              "                    //Для ратторов, получивших свои новые цели только что, сразу вызываем функцию нанесения урона (поскольку в текущий ход они цель ещё не дамажили)",
              "                    if(int(GetData(2, rattor)) == -1) DealDamageToItem(item, target, rattor, 0, hull_was_damaged);",
              "                    if(rattor) //Раттора могут убить, пока он наносит урон предмету",
              "                    {",
              "                        SetData(t_CargoHook, 2, rattor);",
              "                        ItemExtraSpecialsAddByType(item, bon_num, 1);",
              "                        current = current + 1;",
              "                    }",
              "                    ArrayDelete(rattors_arr, 1);",
              "",
              "                    //Все ратторы распределены",
              "                    if(ArrayDim(rattors_arr) == 1)",
              "                    {",
              "                        //new_try_set = new_try_set + 512;",
              "                        result = 0;",
              "                        exit;",
              "                    }",
              "                }",
              "",
              "                new_try_set = new_try_set + 512;",
              "            }",
              "        }",
              "    }",
              "",
              "    //Если на корабле всё уже либо сломано, либо сброшено в трюм / за борт",
              "    if(!new_try_set)",
              "    {",
              "        item = ShipEqInSlot(target, t_Hull);",
              "        while(1)",
              "        {",
              "            rattor = rattors_arr[1];",
              "",
              "            //Для ратторов, получивших свои новые цели только что, сразу вызываем функцию нанесения урона (поскольку в текущий ход они цель ещё не дамажили)",
              "            if(int(GetData(2, rattor)) == -1) DealDamageToItem(item, target, rattor, 0, hull_was_damaged);",
              "            if(rattor) SetData(t_Hull, 2, rattor); //Раттора могут убить, пока он наносит урон предмету",
              "",
              "            ArrayDelete(rattors_arr, 1);",
              "",
              "            //Все ратторы распределены",
              "            if(ArrayDim(rattors_arr) == 1)",
              "            {",
              "                result = -1;",
              "                exit;",
              "            }",
              "        }",
              "    }",
              "",
              "    result = new_try_set;",
              "}",
              "",
              "//Наносим урон оборудованию, либо корпусу цели, которую изнутри грызёт стая ратторов (вынес в отдельную функцию для удобства вызовов)",
              "function DealDamageToItem(ref item, ref target, ref rattor, ref rattors_arr, ref hull_was_damaged)",
              "{",
              "    int type = ItemType(item);",
              "    int is_arr = (GetVariableType(rattors_arr) == 9);",
              "",
              "    if(is_arr) //Если данный урон не наносится влётом ратторов в цель",
              "    {",
              "        //Фумигатор ловит ратторов ещё до нанесения ими урона предмету",
              "        int cnt = ArtefactTypeInUse(target, 'Fumigator'); //Вялая попытка учесть возможность установки однотипных артов",
              "        if(cnt)",
              "        {",
              "            if(ShipCustomShipInfoData(target, 'ShuDomiks_RattorsTargetInfo', 2) < CurTurn())",
              "            {",
              "                if(RndObject(1, 100, rattor) <= RattorGroupsDataArray['DeadChanceFumigator'] * cnt)",
              "                {",
              "                    ItemExtraSpecialsDeleteByType(item, bon_num, 1);",
              "                    ShipCustomShipInfoData(target, 'ShuDomiks_RattorsTargetInfo', 2, CurTurn()); //Маркер об уничтожении раттора фумигатором на текущем ходу (потому что нехер уничтожить более за раз 1)",
              "",
              "                    HullHP(rattor, round(0.66 * HullHP(rattor))); //Имитируем получение раттором урона",
              "                    NoDropToShip(rattor, 1); //Иначе будет дропать",
              "                    DealDamageToShip(rattor, 0, 1000000, 1);",
              "",
              "                    if(IsPlayer(target))",
              "                    {",
              "                        str line = Format(CT('Script.Mod_ShuDomiks.RattorEvents.RattorDeadByFumigator' + RndObject(1, 5, rattor)), '<Rattor'+'>', Name(rattor), '<RattorShort'+'>', ShipName(rattor), '255,240,100');",
              "                        Ether(2, '', line);",
              "                    }",
              "",
              "                    rattor = 0; //Маркер для вызвавшего функцию кода",
              "",
              "                    for(int i = ShipArts(target) - 1; i >= 0; i = i - 1)",
              "                    {",
              "                        dword art = ShipArts(target, i);",
              "                        if(ItemType(art) != t_Artefact) continue;",
              "                        if(EquipmentImageName(art) != 'Fumigator') continue;",
              "",
              "                        //Фумигатор принимает чужой урон на себя за каждого уничтоженного раттора",
              "                        ItemDurability(art, ItemDurability(art) - (RattorGroupsDataArray['EquipDamage'] / cnt));",
              "                        if(ItemIsBroken(art))",
              "                        {",
              "                            if(IsPlayer(target)) Ether(8, '', CT('Artefacts.CustomArtefacts.Fumigator.BrokenByRattor') + '<color=' + ItemIsInUse(art, target) + ',0,0></color>');",
              "                        }",
              "",
              "                        cnt = cnt - 1;",
              "                        if(!cnt) break;",
              "                    }",
              "",
              "                    if(type == t_Hull) result = t_Hull;",
              "                    else result = None;",
              "                    exit;",
              "                }",
              "            }",
              "        }",
              "    }",
              "",
              "    if(type != t_Hull)",
              "    {",
              "        if(type != t_ArtefactNano)",
              "        {",
              "            ItemDurability(item, ItemDurability(item) - RattorGroupsDataArray['EquipDamage']);",
              "            if(RndObject(1, 100, rattor) <= RattorGroupsDataArray['DeadChanceCommon'])",
              "            {",
              "                //На одного раттора на данной оборудке стало меньше (но могут быть и другие)",
              "                ItemExtraSpecialsDeleteByType(item, bon_num, 1);",
              "",
              "                HullHP(rattor, round(0.66 * HullHP(rattor))); //Имитируем получение раттором урона",
              "                NoDropToShip(rattor, 1); //Иначе будет дропать",
              "                DealDamageToShip(rattor, 0, 1000000, 1);",
              "",
              "                if(IsPlayer(target))",
              "                {",
              "                    line = Format(CT('Script.Mod_ShuDomiks.RattorEvents.RattorDeadByDamaging'), '<Rattor'+'>', Name(rattor), '<RattorShort'+'>', ShipName(rattor), '255,240,100');",
              "                    Ether(2, '', line);",
              "                }",
              "",
              "                rattor = 0; //Маркер для вызвавшего функцию кода",
              "            }",
              "        }",
              "        //Нанитоиды ратторы ломают быстрее, но также и имеют неплохой шанс от них огрести",
              "        else",
              "        {",
              "            ItemDurability(item, ItemDurability(item) - RattorGroupsDataArray['EquipDamage'] * 2);",
              "            if(RndObject(1, 100, rattor) <= RattorGroupsDataArray['DeadChanceNanitoids'])",
              "            {",
              "                //На одного раттора на данной оборудке стало меньше (но могут быть и другие)",
              "                ItemExtraSpecialsDeleteByType(item, bon_num, 1);",
              "",
              "                HullHP(rattor, 0); //Имитируем получение раттором урона",
              "                NoDropToShip(rattor, 1); //Иначе будет дропать",
              "                DealDamageToShip(rattor, 0, 1000000, 1);",
              "",
              "                if(IsPlayer(target))",
              "                {",
              "                    line = Format(CT('Script.Mod_ShuDomiks.RattorEvents.RattorDeadByNanitoids'), '<Rattor'+'>', Name(rattor), '<RattorShort'+'>', ShipName(rattor), '255,240,100');",
              "                    Ether(2, '', line);",
              "                }",
              "",
              "                if(ItemDurability(item) < 10) ItemDurability(item, 0); //Бывает, что нанитоды вырубают сразу нескольких напавших ратторов за ход, так вот - обеспечиваем им в конце героическую гибель",
              "                rattor = 0; //Маркер для вызвавшего функцию кода",
              "            }",
              "        }",
              "",
              "        if(ItemIsBroken(item)) //Догрызли предмет",
              "        {",
              "            if(IsPlayer(target))",
              "            {",
              "                //В акрине любого предмета (включая арты) можно прописать отдельный текст поломки с помощью параметра TextBrokenByRattor",
              "                str text = '';",
              "                if(~EqSpecial(item)) text = CT('MicroModuls.' + BonusNumInCfg(EqSpecial(item)) + '.TextBrokenByRattor');",
              "                if(text == '')",
              "                {",
              "                    //Артефакт",
              "                    if(type < t_Hull)",
              "                    {",
              "                        //Можно выставить отдельный текст для каждого артефакта, либо будет использован общий, стандартный для всех",
              "                        if(type >= t_ArtefactHull) text = CT('Artefacts.' + EquipmentImageName(type) + '.BrokenByRattor');",
              "                        //Кастомные арты",
              "                        else text = CT('Artefacts.CustomArtefacts.' + EquipmentImageName(item) + '.BrokenByRattor');",
              "                        if(text == '') text = CT('Artefacts.TextBrokenByRattor');",
              "                    }",
              "                    //Оружие",
              "                    else if(type > t_DefGenerator)",
              "                    {",
              "                        //Можно выставить отдельный текст для каждого типа орудия, либо будет использован общий, стандартный для всех",
              "                        if(type != t_CustomWeapon) text = CT('Items.Weapon.Text.' + (type - t_DefGenerator) + 'BrokenByRattor');",
              "                        else text = CT('Items.Weapon.Text.' + CustomWeaponType(item) + 'BrokenByRattor');",
              "                        if(text == '') text = CT('Items.Weapon.BrokenByRattor');",
              "                    }",
              "                    //Оборудка",
              "                    else text = CT('Items.' + EquipmentImageName(type) + '.BrokenByRattor');",
              "                }",
              "",
              "                //Подставляем костыль в виде тэга цвета, чтобы при одинаковых названиях оборудования (например, пушек) разные уведомления не слипались в одно",
              "                Ether(8, '', Format(text, '<Item'+'>', ItemFullName(item) + '<color=' + ItemIsInUse(item, target) + ',0,0></color>', '<Star'+'>', Name(ShipStar(target)), '255,240,100'));",
              "            }",
              "",
              "            //Удаляем все маркеры с уже сломанной оборудки",
              "            ItemExtraSpecialsDeleteByType(item, bon_num, ItemExtraSpecialsCountByType(item, bon_num));",
              "",
              "            if(rattor) //Если раттор не помер, пока наносил урон оборудке",
              "            {",
              "                if(HullDamage(rattor)) HullHP(rattor, min(round(1.05 * HullHP(rattor)), ItemSize(ShipItems(rattor, 0)))); //От нанесённого оборудке урона раттор хилится по 5% за кусь",
              "                if(is_arr) ArrayAdd(rattors_arr, rattor);",
              "                SetData(0, 2, rattor);",
              "            }",
              "        }",
              "        else if(rattor) //Если раттор не помер, пока наносил урон оборудке",
              "        {",
              "            if(HullDamage(rattor)) HullHP(rattor, min(round(1.05 * HullHP(rattor)), ItemSize(ShipItems(rattor, 0)))); //От нанесённого оборудке урона раттор хилится по 5% за кусь",
              "        }",
              "",
              "        result = None; //Данный возврат означает, что нет нужды перепроверять корабль на наличие другой оборудки",
              "    }",
              "    //Наносим урон корпусу",
              "    else",
              "    {",
              "        int hull_damage = max(3 * RattorGroupsDataArray['EquipDamage'] - ShipArmor(target), 10);",
              "        hull_was_damaged = hull_was_damaged + hull_damage; //Первая цифра, номер эффекта взрыва, а все последующие - нанесённый ратторами урон",
              "        if(HullDamage(rattor)) HullHP(rattor, min(round(1.1 * HullHP(rattor)), ItemSize(ShipItems(rattor, 0)))); //От нанесённого корпусу урона раттор хилится по 10% за кусь",
              "        result = t_Hull; //Этот возврат вызовет внеочередное срабатывание функции распределения целей на случай, если игрок решил схитрить и спрятал всю оборудку в трюм на один ход",
              "    }",
              "}",
              "",
              "function ApplyHullDamage(ref target, ref rattor, ref cur_group, ref damage)",
              "{",
              "    dword hull = ShipItems(target, 0);",
              "",
              "    if(FilmFlags(0))",
              "    {",
              "        ShowEffect('Weapon.NoGraph', 0, target, 0, damage, 0, 0, 255,0,0); //Поскольку это не OnStep_0, рисуем эффект сразу",
              "        FilmSound('Sound.RattorDamageInside', target);",
              "    }",
              "",
              "    //Применяем урон",
              "    if(HullHP(hull) > damage)",
              "    {",
              "        HullHP(hull, HullHP(hull) - damage);",
              "        if(FilmFlags(0)) ShowEffect('Weapon.AuraEffect', 13, target, 0, 0, 0, 0, 0,0,0);",
              "    }",
              "    else",
              "    {",
              "        //Если ратторы только влетают в цель (вместо rattor получен 0), то добить её таким образом они не смогут",
              "        if(!rattor)",
              "        {",
              "            HullHP(hull, 1);",
              "            if(FilmFlags(0)) ShowEffect('Weapon.AuraEffect', 13, target, 0, 0, 0, 0, 0,0,0);",
              "            exit;",
              "        }",
              "",
              "        //Проверяем, не установлена ли на корабле спасательная шлюпка и если да, то говорим ему не отображать над собой урон посредством маркера в инфошке",
              "        if(~ShipFindCustomShipInfoByType(target, 'LifeboatLaunchInfo'))",
              "        {",
              "            ShipCustomShipInfoTextData(target, 'LifeboatLaunchInfo', 3, rattor);",
              "            DealDamageToShip(target, rattor, 1000000, 0);",
              "            OrderNone(target);",
              "        }",
              "        //Уничтожение корабля через функцию нужно для корректного отображения взрыва, ведь ебаная функция DealDamageToShip взрыв не рисует, СУКА!!!",
              "        else if(ShipFindCustomShipInfoByType(target, 'AbandonedShipInfo') == -1)",
              "        {",
              "            //И ещё одна грёбанная проверка на зануление входящего урона для важных скриптовых кораблей",
              "            NoDropToShip(target, 1);",
              "            DealDamageToShip(target, rattor, 1000000, 0);",
              "            if(HullHP(hull) <= 0)",
              "            {",
              "                OrderNone(target);",
              "",
              "                if(FilmFlags(0))",
              "                {",
              "                    //Рисуем большой взрыв",
              "                    if(ShipTypeN(target) > t_Tranclucator) ShowEffect('Weapon.NoGraph', 0, target, 0, 0, 5, 0, 0,0,0);",
              "                    else if(ShipTypeN(target) == t_Warrior && ShipSubType(target) == 1) ShowEffect('Weapon.NoGraph', 0, target, 0, 0, 5, 0, 0,0,0);",
              "                    else if(ShipSpecialBonuses(target, bonAttacks) > 3) ShowEffect('Weapon.NoGraph', 0, target, 0, 0, 5, 0, 0,0,0);",
              "                    //Рисуем обычный взрыв",
              "                    else ShowEffect('Weapon.NoGraph', 0, target, 0, 0, 1, 0, 0,0,0);",
              "                }",
              "            }",
              "            else NoDropToShip(target, 0);",
              "        }",
              "    }",
              "}",
              "",
              "",
              "//Сделать анимацию корабля-предмета в космосе!",
              "//Доделать спавн ратторов в коде станций! (убрать для келлероидной нацеливание на игрока)",
              "//Багует подгрузка анимации следа двигателя при спавне корабля",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "function RattorsPackActCode() //t_OnStep_0/1/5/11, t_OnEnteringForm, t_OnLeavingForm, t_OnTakingDamageEn, t_OnTakingDamageSp, t_OnTakingDamageMi, t_OnDeath",
              "{",
              "    if(ScriptItemActionType(t_OnStep))",
              "    {",
              "        dword cur_ship = ScriptItemActShip();",
              "",
              "        int cur_step = ScriptItemActParam();",
              "        int cur_group = ShipGroup(cur_ship);",
              "",
              "        if(RattorGroupsDataArray['' + cur_group, 'ActCodeDone'] == '' + CurTurn() + cur_step) exit; //В целях синхронизации и оптимизации управляем поведением всех кораблей стаи через код первого вызванного за ход корабля в группе",
              "        RattorGroupsDataArray['' + cur_group, 'ActCodeDone'] = '' + CurTurn() + cur_step;",
              "",
              "        //Для отладки",
              "        //if(cur_step == 11) ApplyHullDamage(Player(), cur_ship, cur_group, 100000);",
              "",
              "        if(int(GetData(1, cur_ship)) == -1) exit; //Родная верфь раттора уничтожена, и он уже находится в режиме самоликвидации, не трогаем",
              "        if(~ShipFindCustomShipInfoByType(cur_ship, 'ExpArts_ShipStunned')) exit; //Раттора оглушили, считать какую-либо логику бессмысленно",
              "",
              "        int rattors_count = GroupCount(cur_group);",
              "        if(cur_step != 5)",
              "        {",
              "            if(~int(GetData(0, cur_ship))) //Только пока раттор ещё не приземлился на цель",
              "            {",
              "                dword target = ShipOrderObj(cur_ship); //IdToShip(GetData(0, cur_ship), 1);",
              "                if(!target)",
              "                {",
              "                    //Здесь ловим момент посадки стаи ратторов на цель",
              "                    if(cur_step == 11)",
              "                    {",
              "                        if(!ShipInNormalSpace(cur_ship))",
              "                        {",
              "                            if(~int(GetData(0, cur_ship))) //Если раттор ещё не приземлился на цель",
              "                            {",
              "                                //Если любой раттор из стаи только что первым приземлился на цель",
              "                                target = GetData(0, cur_ship);",
              "                                dword sit_on = GetShipRuins(cur_ship);",
              "                                if(sit_on)",
              "                                {",
              "                                    if(Id(sit_on) == target)",
              "                                    {",
              "                                        target = IdToShip(target);",
              "                                        hull_was_damaged = 0;",
              "                                        int death_chance = min(ShipArmor(target), 50); //Шанс, с которым раттор разобьётся об броню корпуса цели при посадке",
              "",
              "                                        ArrayClear(tarr1);",
              "                                        for(i = rattors_count - 1; i >= 0; i = i - 1)",
              "                                        {",
              "                                            dword rattor = GroupShip(cur_group, i);",
              "                                            SetData(-1, 0, rattor); //Выставляем всей стае маркер нахождения на цели",
              "                                            OrderNone(rattor);",
              "",
              "                                            if(GetShipRuins(rattor) != target) //Если кто-то из ратторов по какой-то причине не успел за ведущим - пускаем его в расход",
              "                                            {",
              "                                                //Самоликвидация раттора",
              "                                                //На OnStep 11 клиги получат приказ, но не успеют самодетонироваться полноценно, поэтому создаём имитацию их самоподрыва",
              "                                                NoDropToShip(rattor, 1);",
              "                                                DealDamageToShip(rattor, 0, 1000000, 0);",
              "                                                if(FilmFlags(0)) ShowEffect('Weapon.NoGraph', 0, rattor, 0, 0, 6, 0, 0,0,0);",
              "                                                continue;",
              "                                            }",
              "",
              "                                            ShipSpecialBonuses(rattor, bonSpeed, ShipSpecialBonuses(rattor, bonSpeed) + 100000);",
              "",
              "                                            ShipStatusEffect(rattor, 0, 0); //Снимаем с раттора \"ионизацию\" и \"ЭМ помехи\", если кто-то ранее наложил",
              "                                            ShipStatusEffect(rattor, 2, 0);",
              "",
              "                                            ArrayAdd(tarr1, rattor); //Составляем массив ратторов для последующего вызова FindEquipTargetForRattors()",
              "",
              "                                            dword hull = ShipItems(rattor, 0);",
              "                                            dword rattor_item = CreateQuestItem('ShuDomiks_BoardedRattor' + ShipSubrace(rattor, -1));",
              "                                            SetName(rattor_item, Name(rattor));",
              "                                            UselessItemData(rattor_item, 1, Id(rattor));",
              "                                            ItemSize(rattor_item, ItemSize(hull));",
              "                                            ItemCost(rattor_item, ItemCost(hull));",
              "                                            ItemOwner(rattor_item, Kling);",
              "                                            ItemSubrace(rattor_item, ShipSubrace(rattor, -1));",
              "                                            NoDropItem(rattor_item, 10);",
              "",
              "                                            AddItemToShip(target, rattor_item);",
              "                                            SetData(Id(rattor_item), 3, rattor); //Также Id своего \"дубликата\" запоминает сидящий на цели раттор",
              "",
              "                                            //При влёте, ратторы наносят цели урон",
              "                                            DealDamageToItem(ShipItems(target, 0), target, rattor, -1, hull_was_damaged);",
              "",
              "                                            //Раттор считается разбившимся при внедрении в корпус",
              "                                            if(RndObject(1, 100, rattor) <= death_chance)",
              "                                            {",
              "                                                if(IsPlayer(target))",
              "                                                {",
              "                                                    line = Format(CT('Script.Mod_ShuDomiks.RattorEvents.RattorDeadByBoarding'), '<Rattor'+'>', Name(rattor), '<RattorShort'+'>', ShipName(rattor), '255,240,100');",
              "                                                    Ether(2, '', line);",
              "                                                }",
              "",
              "                                                HullHP(rattor, round(0.66 * HullHP(rattor))); //Вызов OnDeath из DealDamage не изменит количество HP вплоть до срабатывания события, так что сами делаем имитацию",
              "                                                DealDamageToShip(rattor, 0, 1000000, 0);",
              "                                                rattors_count = rattors_count - 1;",
              "                                            }",
              "                                            //Либо же просто получает небольшой урон",
              "                                            else HullHP(rattor, round(0.75 * HullHP(rattor)));",
              "                                        }",
              "",
              "                                        if(hull_was_damaged) ApplyHullDamage(target, 0, 0, hull_was_damaged);",
              "",
              "                                        //Если посадку пережил хотя бы один раттор",
              "                                        if(rattors_count)",
              "                                        {",
              "                                            //В теории, на одну цель может напасть сразу несколько групп ратторов (до 3-х)",
              "                                            //Поскольку мне крайне лень исключать такую возможность на уровне поиска целей, пусть будет так",
              "                                            if(ShipFindCustomShipInfoByType(target, 'ShuDomiks_RattorsTargetInfo') == -1) ShipAddCustomShipInfo(target, 'ShuDomiks_RattorsTargetInfo', 'NoShow', rattors_count);",
              "                                            else ShipCustomShipInfoData(target, 'ShuDomiks_RattorsTargetInfo', 1, ShipCustomShipInfoData(target, 'ShuDomiks_RattorsTargetInfo', 1) + rattors_count);",
              "",
              "                                            //Равномерно распределяем ратторов по установленной на цели оборудке согласно её приоритету",
              "                                            int retry_set = 1023; //1+2+4+8+16+32+64+128+256+512",
              "                                            //bon_num - не локалка, объявлена в заголовке скрипта!",
              "                                            bon_num = FindBonusByNameInCfg('ShuDomiks_RattorTargetEquip');",
              "                                            for(i = 1; retry_set > 0; i = i + 1) retry_set = FindEquipTargetForRattors(cur_group, target, i, tarr1, retry_set);",
              "",
              "                                            //Выводим уведомление об инфестации корабля игрока",
              "                                            if(IsPlayer(target))",
              "                                            {",
              "                                                line = Format(CT('Script.Mod_ShuDomiks.RattorEvents.InfestationDetected'), '<Star'+'>', Name(ShipStar(target)), '255,240,100');",
              "                                                Ether(2, '', line);",
              "                                                //CustomEther('GalaxyAlert', 2, '', line);",
              "                                            }",
              "                                        }",
              "                                    }",
              "                                }",
              "                            }",
              "                        }",
              "                        //Вероятно, ратторы получили приказ на посадку и штраф к скорости, но до завершения посадки цель была уничтожена, а штраф к скорости так и висит",
              "                        else if(ShipSpecialBonuses(cur_ship, bonSpeed) < -50000)",
              "                        {",
              "                            for(i = 0; i < rattors_count; i = i + 1)",
              "                            {",
              "                                rattor = GroupShip(cur_group, i);",
              "                                ShipSpecialBonuses(rattor, bonSpeed, ShipSpecialBonuses(rattor, bonSpeed) + 100000);",
              "                            }",
              "                        }",
              "                    }",
              "",
              "                    exit;",
              "                }",
              "",
              "                if(Id(target) != GetData(0, cur_ship)) exit; //Во время возврата целью приказа может быть их родная верфь",
              "",
              "                //Выдаём группе базовые приказы сближения с целью, а также избегания её огня",
              "                if(!cur_step)",
              "                {",
              "                    if(ShipStar(cur_ship) != ShipStar(target)) //Игрок может свапнуться из системы буквально в любой момент через трансфер",
              "                    {",
              "                        ShipFreeFlight(cur_ship, 2); //Ищем новую подходящую цель для стаи",
              "                        target = ShipGetBad(cur_ship);//SearchForNextRattorTarget(cur_ship);",
              "                        if(target)",
              "                        {",
              "                            GroupSetData(cur_group, 0, Id(target));",
              "                            ShipSetBad(cur_ship, 0); //Чтобы замаскированный клиг не подорвался об цель ненароком",
              "                        }",
              "                        //Если целей в системе больше нет, то все летят по домам",
              "                        else",
              "                        {",
              "                            dword home_shipyard = IdToShip(GetData(1, cur_ship));",
              "                            if(home_shipyard) for(i = 0; i < rattors_count; i = i + 1)",
              "                            {",
              "                                rattor = GroupShip(cur_group, i);",
              "                                SetData(0, 0, rattor); //Маркерно обнуляем Id цели перед возвращением домой",
              "                                OrderLanding(rattor, home_shipyard);",
              "                            }",
              "",
              "                            exit;",
              "                        }",
              "                    }",
              "",
              "                    //Если ратторы опережают цель по скорости, они будут пытаться не попадать лишний раз под её залпы",
              "                    int is_danger = 1; //Маркер, означающий, что приближаться к цели не стоит",
              "                    if(!IsPlayer(target))",
              "                    {",
              "                        //Если цель настолько слаба, что даже одного раттора за пару ходов фокусом всех орудий не завалит, то, в общем-то, плевать в какой момент с ней сближаться",
              "                        //(подразумевается, что восприимчивость ратторов к энергетическому урону выше всего, так что берём её за эталонную)",
              "                        if(ShipSkill(target, 'AccuracyCur')) int j = 2 * round(0.01 * HullDamageSuspectibility(cur_ship, 0) * ShipAverageDamage(target, 1));",
              "                        else j = 2 * round(0.01 * HullDamageSuspectibility(cur_ship, 0) * ShipAverageDamage(target, 0)); //У всех ратторов \"от природы\" максимальная манёвренность",
              "                        if(j)",
              "                        {",
              "                            is_danger = 0;",
              "                            for(i = 0; i < rattors_count; i = i + 1)",
              "                            {",
              "                                rattor = GroupShip(cur_group, i);",
              "                                if(j < HullHP(rattor)) continue;",
              "                                is_danger = 1; //Если хоть один раттор в стае имеет шансы от цели огрести",
              "                                break;",
              "                            }",
              "                        }",
              "                        else is_danger = 0;",
              "                    }",
              "",
              "                    //Если цель не лох, то переходим к более сложным проверкам",
              "                    if(is_danger)",
              "                    {",
              "                        is_danger = 0;",
              "",
              "                        if(ShipSpeed(cur_ship) - 25 > ShipSpeed(target))",
              "                        {",
              "                            //Если цель навела большинство своих неракетных пушки на стаю, приближаться не стоит",
              "                            int missile_guns = 0; //Число ракетных пушек цели, наведённых на стаю",
              "                            int rats_in_sight = 0; //Сколько ратторов в данный момент находится под пицелом ракетных орудий цели",
              "                            int rats_set = 0; //Сет ратторов, на которых наведены ракетные орудия цели",
              "                            for(i = ShipCntWeapon(target); i >= 1; i = i - 1)",
              "                            {",
              "                                dword gun = ShipWeapon(target, i);",
              "                                dword target_focus = WeaponTarget(gun);",
              "                                if(target_focus)",
              "                                {",
              "                                    for(j = 1; j <= rattors_count; j = j + 1)",
              "                                    {",
              "                                        if(target_focus == GroupShip(cur_group, j - 1))",
              "                                        {",
              "                                            if(ItemType(gun) != t_CustomWeapon) str shot_type = TrimNumbers(GetCustomWeaponData(ItemType(gun), 'ShotType'));",
              "                                            else shot_type = TrimNumbers(GetCustomWeaponData(CustomWeaponType(gun), 'ShotType'));",
              "",
              "                                            if(shot_type == 'Rocket')",
              "                                            {",
              "                                                missile_guns = missile_guns + 1;",
              "                                                if(!(rats_set & (1 << j)))",
              "                                                {",
              "                                                    rats_in_sight = rats_in_sight + 1;",
              "                                                    rats_set == rats_set + (1 << j);",
              "                                                }",
              "                                            }",
              "                                            else if(shot_type == 'Torpedo')",
              "                                            {",
              "                                                missile_guns = missile_guns + 1;",
              "                                                if(!(rats_set & (1 << j)))",
              "                                                {",
              "                                                    rats_in_sight = rats_in_sight + 1;",
              "                                                    rats_set == rats_set + (1 << j);",
              "                                                }",
              "                                            }",
              "                                            else if(shot_type == 'Missile')",
              "                                            {",
              "                                                missile_guns = missile_guns + 1;",
              "                                                if(!(rats_set & (1 << j)))",
              "                                                {",
              "                                                    rats_in_sight = rats_in_sight + 1;",
              "                                                    rats_set == rats_set + (1 << j);",
              "                                                }",
              "                                            }",
              "",
              "                                            is_danger = is_danger + 1; //Попутно запоминаем сюда общее число пушек, наведённых на стаю в текущий момент",
              "                                            break;",
              "                                        }",
              "                                    }",
              "                                }",
              "                            }",
              "",
              "                            if(is_danger)",
              "                            {",
              "                                //Если ратторы уже успели вжарить по цели разрядником и выбить ей щиты, то убегать от неё на данном этапе они не станут",
              "                                if(GetData(2, cur_ship))",
              "                                {",
              "                                    if(!ShipProtectability(target)) is_danger = -1; //Отдельный маркер, чтобы скипнуть доп. проверку ниже, означает гарантированное продолжение атаки",
              "                                }",
              "                                //Если не менее половины наведённых на стаю пушек ракетные",
              "                                else if(missile_guns && is_danger - missile_guns <= 2) is_danger = 0;",
              "                                //Если все оставшиеся корабли группы находятся под прицелом ракетных пушек цели, то ждать дальше не имеет смысла",
              "                                else if(rats_in_sight == rattors_count) is_danger = 0;",
              "                            }",
              "",
              "                            //Приближаться в целом безопасно, однако на следующем ходу цель может резко навести все орудия на ратторов, так что проводим дополнительные расчёты",
              "                            if(!is_danger)",
              "                            {",
              "                                //Если помимо ратторов и верфи в системе (в самом космосе) присутствуют другие домики, числом не менее 3, то, возможно, стоит пока что \"помариновать\" цель?",
              "                                target_focus = ShipOrderObj(target);",
              "                                if(target_focus)",
              "                                {",
              "                                    for(i = 0; i < rattors_count; i = i + 1)",
              "                                    {",
              "                                        if(target_focus == GroupShip(cur_group, i))",
              "                                        {",
              "                                            int domiks_cnt = ShipNearbyShips(cur_ship, -1, 0, 1, '', '!');",
              "                                            domiks_cnt = domiks_cnt - rattors_count - 1; //Сразу вычитаем часть кораблей в счёт самой группы ратторов и их статичной верфи",
              "                                            int cur_subrace = ShipSubrace(cur_ship, -1);",
              "                                            for(j = 1; j <= domiks_cnt; j = j + 1)",
              "                                            {",
              "                                                dword domik = ShipNearbyShips(cur_ship, j, 1, 1, '', '!');",
              "                                                if(ShipSubrace(domik, -1) != cur_subrace) domiks_cnt = domiks_cnt - 1;",
              "                                            }",
              "",
              "                                            if(domiks_cnt >= 3) is_danger = 1;",
              "                                            break;",
              "                                        }",
              "                                    }",
              "                                }",
              "                            }",
              "                        }",
              "                    }",
              "",
              "                    if(is_danger <= 0) //Цель не сфокусирована на стае ратторов (либо же они всё равно не смогут от неё убежать), можно приближаться",
              "                    {",
              "                        for(i = 0; i < rattors_count; i = i + 1)",
              "                        {",
              "                            rattor = GroupShip(cur_group, i);",
              "                            OrderForsage(rattor, 1);",
              "                            OrderFollowShip(rattor, target, 3);",
              "                        }",
              "                    }",
              "                    else //Цель сейчас сфокусирована на ратторах, приближаться опасно",
              "                    {",
              "                        for(i = 0; i < rattors_count; i = i + 1)",
              "                        {",
              "                            rattor = GroupShip(cur_group, i);",
              "                            OrderForsage(rattor, 0);",
              "                            OrderFollowShip(rattor, target, 2);",
              "                        }",
              "                    }",
              "                }",
              "",
              "                while(1) //Используем вместо goto",
              "                {",
              "                    if(!ShipInNormalSpace(cur_ship)) break; //До взлёта рассчитывать позиции вокруг цели не имеет смысла",
              "                    if(ShipOrder(cur_ship) != 6) break;",
              "                    if(ShipOrderData1(cur_ship) != 3) break; //Визуальный маркер тарана корабля",
              "",
              "                    int dist = 85;",
              "                    dword first_rattor = GroupToShip(cur_group);",
              "",
              "                    if(!cur_step)",
              "                    {",
              "                        //Считаем от первого корабля в группе",
              "                        if(Dist(first_rattor, target) > dist + 1) exit; //+1 для допуска небольшой погрешности",
              "                        if(ShipProtectability(target)) exit; //Сперва ратторы должны сбить ГЗП и броню цели до нуля",
              "",
              "                        //Проверяем, что все ратторы находятся строго на своих местах вокруг цели",
              "                        int pos_angle_step = round(360.0 / rattors_count);",
              "",
              "                        if(rattors_count == 2) float start_angle = ShipAngle(target) - 90.0;",
              "                        else if(rattors_count == 4) start_angle = ShipAngle(target) - 45.0;",
              "                        else start_angle = ShipAngle(target); //Если ратторов 1, 3 или 5",
              "",
              "                        for(i = 1; i <= rattors_count; i = i + 1)",
              "                        {",
              "                            float angle = (start_angle + pos_angle_step * i) * pi / 180;",
              "                            int coordX = round(sin(angle) * dist) + CoordX(target);",
              "                            int coordY = round(-cos(angle) * dist) + CoordY(target);",
              "                            rattor = GroupShip(cur_group, i - 1);",
              "",
              "                            if(abs(CoordX(rattor)) - abs(coordX) > 1) exit;",
              "                            if(abs(CoordY(rattor)) - abs(coordY) > 1) exit;",
              "                        }",
              "",
              "                        //Если все живые ратторы на своих местах, начинаем внедрение в цель",
              "                        for(i = 1; i <= rattors_count; i = i + 1)",
              "                        {",
              "                            rattor = GroupShip(cur_group, i - 1);",
              "                            OrderLanding(rattor, target);",
              "                            ShipSpecialBonuses(rattor, bonSpeed, ShipSpecialBonuses(rattor, bonSpeed) - 100000);",
              "                        }",
              "                    }",
              "                    else if(cur_step == 1)",
              "                    {",
              "                        //Считаем от первого корабля в группе",
              "                        int target_end_X = GetShipPath(target, 'EndCoordX');",
              "                        int target_end_Y = GetShipPath(target, 'EndCoordY');",
              "                        if(DistCoords(GetShipPath(first_rattor, 'EndCoordX'), GetShipPath(first_rattor, 'EndCoordY'), target_end_X, target_end_Y) > dist + 15) exit;",
              "",
              "                        pos_angle_step = round(360.0 / rattors_count);",
              "",
              "                        if(rattors_count == 2) start_angle = GetShipPath(target, 'EndAngle') - 90.0;",
              "                        else if(rattors_count == 4) start_angle = GetShipPath(target, 'EndAngle') - 45.0;",
              "                        else start_angle = GetShipPath(target, 'EndAngle'); //Если ратторов 1, 3 или 5",
              "",
              "                        for(i = 1; i <= rattors_count; i = i + 1)",
              "                        {",
              "                            angle = (start_angle + pos_angle_step * i) * pi / 180;",
              "                            coordX = round(sin(angle) * dist) + target_end_X;",
              "                            coordY = round(-cos(angle) * dist) + target_end_Y;",
              "                            rattor = GroupShip(cur_group, i - 1);",
              "                            SetShipPath(rattor, coordX, coordY);",
              "                        }",
              "                    }",
              "",
              "                    break;",
              "                }",
              "",
              "                if(cur_step == 11)",
              "                {",
              "                    //Под завершение хода производим залп по окружённой цели, чтобы сбить её защиту",
              "                    if(ShipInNormalSpace(cur_ship))",
              "                    {",
              "                        //Считаем от первого корабля в группе",
              "                        if(Dist(first_rattor, target) > dist + 1) exit; //+1 для допуска небольшой погрешности",
              "                        //Проверяем, что все ратторы находятся строго на своих местах вокруг цели",
              "                        pos_angle_step = round(360.0 / rattors_count);",
              "",
              "                        if(rattors_count == 2) start_angle = ShipAngle(target) - 90.0;",
              "                        else if(rattors_count == 4) start_angle = ShipAngle(target) - 45.0;",
              "                        else start_angle = ShipAngle(target); //Если ратторов 1, 3 или 5",
              "",
              "                        for(i = 1; i <= rattors_count; i = i + 1)",
              "                        {",
              "                            angle = (start_angle + pos_angle_step * i) * pi / 180;",
              "                            coordX = round(sin(angle) * dist) + CoordX(target);",
              "                            coordY = round(-cos(angle) * dist) + CoordY(target);",
              "                            rattor = GroupShip(cur_group, i - 1);",
              "",
              "                            if(abs(CoordX(rattor)) - abs(coordX) > 1) exit;",
              "                            if(abs(CoordY(rattor)) - abs(coordY) > 1) exit;",
              "                        }",
              "",
              "                        //Не имеет смысла рисовать эффекты контуров вокруг цели, если игрок не присутствует в текущей системе",
              "                        if(FilmFlags(0))",
              "                        {",
              "                            //Если все живые ратторы на своих местах, производим синхронный залп",
              "                            if(rattors_count == 5) //Рисуем звезду",
              "                            {",
              "                                ShowEffect('Weapon.3', 10, GroupShip(cur_group, 2), GroupShip(cur_group, 0), 0, 0, 1, 0,0,0, 0);",
              "                                ShowEffect('Weapon.3', 10, GroupShip(cur_group, 3), GroupShip(cur_group, 1), 0, 0, 1, 0,0,0, 0);",
              "                                ShowEffect('Weapon.3', 10, GroupShip(cur_group, 4), GroupShip(cur_group, 2), 0, 0, 1, 0,0,0, 0);",
              "                                ShowEffect('Weapon.3', 10, GroupShip(cur_group, 0), GroupShip(cur_group, 3), 0, 0, 1, 0,0,0, 0);",
              "                                ShowEffect('Weapon.3', 10, GroupShip(cur_group, 1), GroupShip(cur_group, 4), 0, 0, 1, 0,0,0, 0);",
              "                            }",
              "                            else if(rattors_count > 2) for(i = 1; i <= rattors_count; i = i + 1) //Рисуем фигуру, плюс выстрел по цели",
              "                            {",
              "                                rattor = GroupShip(cur_group, i - 1);",
              "                                if(i < rattors_count) ShowEffect('Weapon.3', 10, GroupShip(cur_group, i), rattor, 0, 0, 1, 0,0,0, 0);",
              "                                else ShowEffect('Weapon.3', 10, GroupShip(cur_group, 0), rattor, 0, 0, 1, 0,0,0, 0);",
              "                                ShowEffect('Weapon.3', 10, target, rattor, 0, 0, 1, 0,0,0);",
              "                            }",
              "                            else for(i = 1; i <= rattors_count; i = i + 1) //Просто выстрел по цели",
              "                            {",
              "                                rattor = GroupShip(cur_group, i - 1);",
              "                                ShowEffect('Weapon.3', 10, target, rattor, 0, 0, 1, 0,0,0);",
              "                            }",
              "                        }",
              "",
              "                        //Усилитель наложения здесь нужен, т.к. чем сильнее наложенный эффект, тем быстрее он сбрасывается в конце хода",
              "                        float debuff_mod = PortionInDiapason(ShipStatusEffect(target, 2), 0, 50, 1.0, 2.5);",
              "                        ShipStatusEffect(target, 2, debuff_mod * (ShipStatusEffect(target, 2) + RattorGroupsDataArray['DebuffPower'] * rattors_count)); //эффект ЭМ-помех",
              "                        GroupSetData(cur_group, 2, 1); //Маркер о начале активной атаки цели стаей ратторов",
              "                    }",
              "                }",
              "            }",
              "        }",
              "        //Если ратторы уже сидят на цели, выбираем и ломаем оборудование",
              "        else //if(cur_step == 5)",
              "        {",
              "            if(~int(GetData(0, cur_ship))) exit; //Только если раттор сидит на цели",
              "",
              "            target = GetShipRuins(cur_ship);",
              "            //bon_num - не локалка, объявлена в заголовке скрипта!",
              "            bon_num = FindBonusByNameInCfg('ShuDomiks_RattorTargetEquip');",
              "",
              "            ArrayClear(tarr1);",
              "            int hull_was_damaged = 0;",
              "            int prev_slot = -1;",
              "            int all_on_hull = 1; //Если все оставшиеся ратторы стриггерились на корпус (что маловероятно, иначе как за счёт \"шулерства\" со стороны игрока), то перепроверяем остальную оборудку каждый ход",
              "            for(i = rattors_count - 1; i >= 0; i = i - 1)",
              "            {",
              "                rattor = GroupShip(cur_group, i);",
              "                int slot = GetData(2, rattor);",
              "",
              "                if(slot != prev_slot) //Проверки на случай, если несколько ратторов \"сидят\" на одной оборудке",
              "                {",
              "                    if(slot <= 0) //Если раттор догрыз свою оборудку в конце прошлого прохода, но ещё не выбрал себе новую, то здесь будет 0",
              "                    {",
              "                        ArrayAdd(tarr1, rattor);",
              "                        SetData(-1, 2, rattor); //-1 означает, что в конце прохода и после выбора себе нового предмета, раттор \"грызнёт\" его сразу же, т.к. ещё не успел ничего \"грызнуть\" на этом ходу",
              "                        continue;",
              "                    }",
              "                    else if(slot >= t_Hull) dword item = ShipEqInSlot(target, slot);",
              "                    else if(slot <= 5) item = ShipEqInSlot(target, t_Weapon1, slot);",
              "                    else item = ShipEqInSlot(target, t_Artefact, slot - 5);",
              "",
              "                    prev_slot = slot;",
              "                }",
              "                else if(item)",
              "                {",
              "                    //Если предыдущий раттор уже доломал данный предмет",
              "                    if(ItemIsBroken(item))",
              "                    {",
              "                        item = 0;",
              "                        ArrayAdd(tarr1, rattor);",
              "                        SetData(-1, 2, rattor);",
              "                        continue;",
              "                    }",
              "",
              "                    if(DealDamageToItem(item, target, rattor, tarr1, hull_was_damaged) != t_Hull) all_on_hull = 0;",
              "                    continue;",
              "                }",
              "                else",
              "                {",
              "                    ArrayAdd(tarr1, rattor);",
              "                    SetData(-1, 2, rattor);",
              "                    continue;",
              "                }",
              "",
              "                //Если с выбранным раттором предметом что-то не так, то добавляем раттора в список на выбор нового предмета",
              "                if(!item)",
              "                {",
              "                    ArrayAdd(tarr1, rattor);",
              "                    SetData(-1, 2, rattor);",
              "                    continue;",
              "                }",
              "                //Если один из предыдущих ратторов уже доломал данный предмет",
              "                if(ItemIsBroken(item))",
              "                {",
              "                    item = 0;",
              "                    ArrayAdd(tarr1, rattor);",
              "                    SetData(-1, 2, rattor);",
              "                    continue;",
              "                }",
              "                if(slot != t_Hull) //На корпус мы спецакрины не вешаем, поскольку число ратторов, распределяемых на него в конце перебора, фактически неограниченно",
              "                {",
              "                    if(!ItemExtraSpecialsCountByType(item, bon_num))",
              "                    {",
              "                        item = 0; //На случай, если у следующего раттора будет выбран тот же слот",
              "                        ArrayAdd(tarr1, rattor);",
              "                        SetData(-1, 2, rattor);",
              "                        continue;",
              "                    }",
              "                }",
              "",
              "                if(DealDamageToItem(item, target, rattor, tarr1, hull_was_damaged) != t_Hull) all_on_hull = 0;",
              "            }",
              "",
              "            //Равномерно распределяем ратторов по установленной на цели оборудке согласно её приоритету",
              "            if(ArrayDim(tarr1) > 1)",
              "            {",
              "                retry_set = 1023; //1+2+4+8+16+32+64+128+256+512",
              "                for(i = 1; retry_set > 0; i = i + 1) retry_set = FindEquipTargetForRattors(cur_group, target, i, tarr1, retry_set, hull_was_damaged);",
              "            }",
              "            else if(all_on_hull) //Если все ратторы дружно грызут корпус (что маловероятно), перепроверяем, не закрысил ли игрок себе целую оборудку",
              "            {",
              "                rattors_count = GroupCount(cur_group); //На всякий случай, если часть ратторов поумирала в цикле выше",
              "                arraychange(tarr1, rattors_count + 1);",
              "                for(i = 0; i < rattors_count; i = i + 1) tarr1[i + 1] = GroupShip(cur_group, i);",
              "",
              "                if(rattors_count)",
              "                {",
              "                    retry_set = 1023; //1+2+4+8+16+32+64+128+256+512",
              "                    for(i = 1; retry_set > 0; i = i + 1) retry_set = FindEquipTargetForRattors(cur_group, target, i, tarr1, retry_set, hull_was_damaged);",
              "                }",
              "            }",
              "",
              "            if(hull_was_damaged) ApplyHullDamage(target, rattor, cur_group, hull_was_damaged);",
              "        }",
              "    }",
              "    else if(ScriptItemActionType(t_OnReduceEqForsage))",
              "    {",
              "        ScriptItemActParam(0);",
              "    }",
              "    else if(ScriptItemActionType(t_OnDeath))",
              "    {",
              "        cur_ship = ScriptItemActShip();",
              "        if(int(GetData(0, cur_ship)) == -1) //Если раттор сидит на цели",
              "        {",
              "            target = GetShipRuins(cur_ship);",
              "",
              "            //Обновляем название и описание предмета-раттора в трюме цели",
              "            item = FindShipItemById(target, GetData(3, cur_ship));",
              "            if(~item)",
              "            {",
              "                SetName(item, Name(item) + Format('<br>') + CT('UselessItems.' + EquipmentImageName(item) + '.NameNeutralized'));",
              "                CreateActCodeEvent(t_OnShowingItemInfo, item, target, 0, cur_ship, 0);",
              "                UselessItemData(item, 1, -1);",
              "                NoDropItem(item, 0);",
              "            }",
              "",
              "            //Выводим сообщение",
              "            if(IsPlayer(target))",
              "            {",
              "                dword dealer = ScriptItemActObject1(); //Если добившим считается корабль",
              "                if(dealer)",
              "                {",
              "                    //Раттора убила потеря родной верфи",
              "                    if(Id(dealer) == GetData(1, cur_ship))",
              "                    {",
              "                        ShipSubrace(dealer, ShipSubrace(cur_ship, -1)); //Маркер",
              "                        line = Format(CT('Script.Mod_ShuDomiks.RattorEvents.RattorDeadByShipyardOut'), '<Rattor'+'>', Name(cur_ship), '<RattorShort'+'>', ShipName(cur_ship), '255,240,100');",
              "                        Ether(2, '', line);",
              "                    }",
              "                }",
              "                //Если добившим считается ракета/взорвавшийся предмет/астероид/звезда/клиг",
              "                else",
              "                {",
              "                    dealer = ScriptItemActObject2();",
              "                    if(dealer)",
              "                    {",
              "                        if(ObjectType(dealer) == 6)",
              "                        {",
              "                            if(ItemType(dealer) == t_UselessItem)",
              "                            {",
              "                                //Раттора убила ЭМП бомба",
              "                                if(EquipmentImageName(dealer) == 'RNDbomb_3')",
              "                                {",
              "                                    line = Format(CT('Script.Mod_ShuDomiks.RattorEvents.RattorDeadByEMP'), '<Rattor'+'>', Name(cur_ship), '<RattorShort'+'>', ShipName(cur_ship), '255,240,100');",
              "                                    Ether(2, '', line);",
              "                                }",
              "                            }",
              "                        }",
              "                    }",
              "                }",
              "            }",
              "",
              "            //Если раттор сидит на цели и остался последним, удаляем с цели инфошку",
              "            //Иначе просто снижаем силу инфестации",
              "            cur_group = ShipFindCustomShipInfoByType(target, 'ShuDomiks_RattorsTargetInfo');",
              "            if(~cur_group)",
              "            {",
              "                all_on_hull = ShipCustomShipInfoData(target, cur_group, 1);",
              "                if(all_on_hull == 1) ShipDeleteCustomShipInfo(target, cur_group);",
              "                else ShipCustomShipInfoData(target, cur_group, 1, all_on_hull - 1);",
              "            }",
              "        }",
              "",
              "        ShipOut(cur_ship);",
              "    }",
              "    else if(ScriptItemActionType(t_OnEnteringForm))",
              "    {",
              "        if(CurrentForm() == 'Scaner')",
              "        {",
              "            InterfaceState('Scaner', 'BlockWeaponSlot1', 1);",
              "            InterfaceState('Scaner', 'BlockWeaponSlot1', 2);",
              "",
              "            cur_ship = FormCurShip();",
              "            if(ShipCntWeapon(cur_ship))",
              "            {",
              "                PutItemInVault('RattorGun1_' + Id(cur_ship), GetItemFromShip(cur_ship, ShipWeapon(cur_ship, 1)));",
              "            }",
              "        }",
              "    }",
              "    else if(ScriptItemActionType(t_OnLeavingForm))",
              "    {",
              "        if(CurrentForm() == 'Scaner')",
              "        {",
              "            InterfaceState('Scaner', 'BlockWeaponSlot1', 0);",
              "",
              "            cur_ship = FormCurShip();",
              "            item = GetItemFromVault('RattorGun1_' + Id(cur_ship));",
              "            if(item)",
              "            {",
              "                AddItemToShip(cur_ship, item);",
              "                ItemIsInUse(item, cur_ship, 1);",
              "                NoDropItem(item, 1);",
              "            }",
              "        }",
              "    }",
              "    else //if(ScriptItemActionType(t_OnTakingDamageEn) || ScriptItemActionType(t_OnTakingDamageSp) || ScriptItemActionType(t_OnTakingDamageMi))",
              "    {",
              "        ShipSetBad(ScriptItemActShip(), 0); //Чтобы замаскированный клиг не подорвался ненароком об атаковавший его корабль",
              "    }",
              "}",
              "",
              "//Выбирает свободную группу в указанных номерных границах, и с учётом числа уже запущенных указанной верфью групп",
              "function FindFreeRattorsPack(ref ruin_id, int groups_max, ref range_bound)",
              "{",
              "    for(int i = range_bound; i <= 7; i = i + 1)",
              "    {",
              "        int group = GetValueFromScript('Mod_ShuDomiks', 'RattorsPack' + i);",
              "        if(GroupCount(group)) //Если группа занята, то также проверяем, какая конкретно верфь её запустила",
              "        {",
              "            if(GetData(1, GroupToShip(group)) == ruin_id) groups_max = groups_max - 1;",
              "            if(!groups_max)",
              "            {",
              "                result = -1;",
              "                exit;",
              "            }",
              "",
              "            continue;",
              "        }",
              "",
              "        result = group;",
              "        exit;",
              "    }",
              "",
              "    result = -1;",
              "}",
              "",
              "function FindShipItemById(dword ship, dword id)",
              "{",
              "    for(int i = ShipItems(ship) - 1; i >= 0; i = i - 1)",
              "    {",
              "        dword item = ShipItems(ship, i);",
              "        if(Id(item) == id)",
              "        {",
              "            result = item;",
              "            exit;",
              "        }",
              "    }",
              "",
              "    result = -1;",
              "}",
              "",
              "//Функция, удаляющая из трюма корабля всё оборудование и оружие, но не удаляющая скриптовые предметы",
              "function FreeAllHoldEquipment(dword ship)",
              "{",
              "    for(int i = ShipItems(ship) - 1; i > 0; i = i - 1)",
              "    {",
              "        dword item = ShipItems(ship, i);",
              "        if(ItemIsInUse(item)) continue;",
              "        if(ItemType(item) < t_FuelTanks) continue;",
              "        if(ItemType(item) > t_CustomWeapon) continue;",
              "        if(ItemInScript(item) == 1) continue;",
              "        FreeItem(GetItemFromShip(ship, i));",
              "    }",
              "}",
              "",
              "//Начальный перебор Галактики, раздаём бонусы доминаторам",
              "tint1 = BuildListOfNewShips(tarr1, lastShipId, 1+2, 1+2+4+8+16+32, 1, '', '');",
              "//if(!EvoArmadaInit) tint1 = BuildListOfNewShips(tarr1, lastShipId, 1+2, 1+2+4+8+16+32, 1, '', '');",
              "//else tint1 = BuildListOfNewShips(tarr1, lastShipId, 2, 1+2+4+8+16, 1, '', '');",
              "//Если нашли хоть один корабль по требуемым условиям",
              "if(tint1)",
              "{",
              "    for(tint1 = 0; tint1 < ArrayDim(tarr1); tint1 = tint1 + 1)",
              "    {",
              "        cur_ship = tarr1[tint1];",
              "        //Сразу исключаем все скриптовые корабли",
              "        if(ShipInScript(cur_ship, 0)) continue;",
              "        tint2 = ShipOwner(cur_ship);",
              "        tint3 = ShipSubType(cur_ship);",
              "        //Пропускаем доминаторских боссов",
              "        if(tint2 == Kling && !tint3) continue;",
              "        ShuDomiksMainUpgrade(cur_ship, tint2, ShipType(cur_ship), tint3);",
              "    }",
              "}",
              "lastShipId = GalaxyShipId();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  123,
          "#":  135,
          "Total.Lines":  12,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Клон Келлера имеет подтип босса, а потому любой стейт для него будет работать как Free",
              "ShipFreeFlight(CurShip, 1); //Выполняем наведение орудий на подходящие окружающие цели",
              "OrderMove(CurShip, Loop);",
              "",
              "if(ShipInStar(Player(), ShipStar(CurShip)))",
              "{",
              "    if(PlayerChameleonCurType() == 1) PlayerChameleonDetected(1, 1);",
              "    Dialog(KellerCloneDialog, CurShip);",
              "",
              "    if(WasKellerCloneSpawned == 1) ChangeState('KellerCloneFree');",
              "    else if(WasKellerCloneSpawned == 2) ChangeState('KellerCloneJump');",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  126,
          "#":  136,
          "Total.Lines":  74,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Data0 - номер хода, на котором станет возможно заспавнить следующую стаю ратторов",
              "//Data1 - номер хода, после которого можно будет снова активировать \"волну клигов\"",
              "//Data2 - номер хода от которого отсчитываем дни для проведения очередного авторемонта (каждые 70 дней) и автообновления верфи (каждые 210 дней)",
              "//Data3 - маркер наличия в системе с верфью отрисованной инфошки верфи, т.к. прилетел игрок",
              "",
              "ShipFreeFlight(CurShip, 1); //Стейт None и OrderLock полностью блокируют логику доминатора не только на передвижение, но и на стрельбу - отсюда такие костыли",
              "",
              "//Верфь самоуничтожается при поражении Террона",
              "if(DomiksDefeated(2))",
              "{",
              "    ShipDestroy(CurShip);",
              "    exit;",
              "}",
              "",
              "dword cur_star = ShipStar(CurShip);",
              "if(StarBattle(cur_star))",
              "{",
              "    if(GetData(0) <= CurTurn()) //Откатился таймер до возможности спавна очередной стаи ратторов",
              "    {",
              "        //До 3 одновременно активных групп в системе с игроком, а в остальных не более 1, и только в случае, если эти группы не заняты сейчас другими верфями",
              "        if(ShipStar(Player()) != cur_star) int rattors_pack = FindFreeRattorsPack(Id(CurShip), 1, 4);",
              "        else rattors_pack = FindFreeRattorsPack(Id(CurShip), 3, 1);",
              "",
              "        if(~rattors_pack)",
              "        {",
              "            dword target = ShipGetBad(CurShip);",
              "            if(target)",
              "            {",
              "                RattorGroupsDataArray['' + rattors_pack, 'EffectsToShow'] = ''; //На случай, если по каким-либо причинам не было очищено ранее",
              "                SpawnRattorsPack(NearCivilPlanet(CurShip), 2, CurShip, target);",
              "                SetData(CurTurn() + RattorGroupsDataArray['PackAssemblyDelay'] + RndObject(-3, 9, CurShip), 0);",
              "            }",
              "        }",
              "    }",
              "}",
              "",
              "//При падении HP ниже 33% и находясь под атакой противника (который подлетел на 600 или ближе), спавним \"волну клигов\" если в данный момент можем",
              "if(HullDamage(CurShip) > 66)",
              "{",
              "    dword ship = ShipNearbyShips(CurShip, 1, 0, 0, '', '');",
              "    if(ship)",
              "    {",
              "        if(!RelationToShip(ship, CurShip))",
              "        {",
              "            if(Dist(ship, CurShip) <= 600)",
              "            {",
              "                if(GetData(1) <= CurTurn())",
              "                {",
              "                    int kligs_cnt = PortionInDiapason(GeneralDiffLevel, 1, 10, 7, 20) + RndObject(-3, 4, CurShip);",
              "                    for(int i = 1; i <= kligs_cnt; i = i + 1)",
              "                    {",
              "                        ship = BuyDomikExtremal(NearCivilPlanet(CurShip), 7, 2);",
              "                        TransferShip(ship, CurShip);",
              "                        OrderTakeOff(ship);",
              "                    }",
              "",
              "                    //Обновляем таймер",
              "                    SetData(CurTurn() + PortionInDiapason(GeneralDiffLevel, 1, 10, 75, 20), 1);",
              "                }",
              "            }",
              "        }",
              "    }",
              "}",
              "",
              "//Повышаем число доминаторов в системе до ~60 кораблей (ибо терроноиды, ёпта!)",
              "if(StarShips(cur_star) < 66)",
              "{",
              "    if(!RndObject(0, 17, CurShip))",
              "    {",
              "        ship = BuyDomikExtremal(NearCivilPlanet(CurShip));",
              "        TransferShip(ship, CurShip);",
              "        OrderTakeOff(ship);",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  131,
          "#":  137,
          "Total.Lines":  65,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Data0 - номер хода, на котором станет возможно заспавнить следующую стаю ратторов",
              "//Data1 - ---",
              "//Data2 - номер хода от которого отсчитываем дни для проведения очередного авторемонта (каждые 70 дней) и автообновления верфи (каждые 210 дней)",
              "//Data3 - маркер наличия в системе с верфью отрисованной инфошки верфи, т.к. прилетел игрок",
              "",
              "ShipFreeFlight(CurShip, 1); //Стейт None и OrderLock полностью блокируют логику доминатора не только на передвижение, но и на стрельбу - отсюда такие костыли",
              "",
              "//Верфь самоуничтожается при поражении Келлера",
              "if(DomiksDefeated(1))",
              "{",
              "    ShipDestroy(CurShip);",
              "    exit;",
              "}",
              "",
              "dword cur_star = ShipStar(CurShip);",
              "if(StarBattle(cur_star))",
              "{",
              "    if(0)//GetData(0) <= CurTurn()) //Откатился таймер до возможности спавна очередной стаи ратторов",
              "    {",
              "        //До 3 одновременно активных групп в системе с игроком, а в остальных не более 1, и только в случае, если эти группы не заняты сейчас другими верфями",
              "        if(ShipStar(Player()) != cur_star) int rattors_pack = FindFreeRattorsPack(Id(CurShip), 1, 4);",
              "        else rattors_pack = FindFreeRattorsPack(Id(CurShip), 3, 1);",
              "",
              "        if(~rattors_pack)",
              "        {",
              "            dword target = ShipGetBad(CurShip);",
              "            if(target)",
              "            {",
              "                RattorGroupsDataArray['' + rattors_pack, 'EffectsToShow'] = ''; //На случай, если по каким-либо причинам не было очищено ранее",
              "                SpawnRattorsPack(NearCivilPlanet(CurShip), 1, CurShip, target);",
              "                SetData(CurTurn() + RattorGroupsDataArray['PackAssemblyDelay'] + RndObject(-3, 9, CurShip), 0);",
              "            }",
              "        }",
              "    }",
              "",
              "    //Убрать это",
              "    if(!GroupCount(RattorsPack1))",
              "    {",
              "        target = ShipGetBad(CurShip);",
              "        if(!target)",
              "        {",
              "            ShipFreeFlight(CurShip, 2);",
              "            target = ShipGetBad(CurShip);",
              "        }",
              "",
              "        if(target)",
              "        {",
              "            SpawnRattorsPack(NearCivilPlanet(CurShip), 1, CurShip, Player());//target);",
              "            SetData(CurTurn() + RattorGroupsDataArray['PackAssemblyDelay'] + RndObject(-3, 9, CurShip), 0);",
              "            //На случай, если по каким-либо причинам не было очищено ранее",
              "            //RattorGroupsDataArray['' + cur_group, 'EffectsToShow'] = '';",
              "        }",
              "    }",
              "}",
              "",
              "//Повышаем число доминаторов в системе до ~35 кораблей",
              "if(StarShips(cur_star) < 35)",
              "{",
              "    if(!RndObject(0, 25, CurShip))",
              "    {",
              "        dword ship = BuyDomikExtremal(NearCivilPlanet(CurShip));",
              "        TransferShip(ship, CurShip);",
              "        OrderTakeOff(ship);",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  132,
          "#":  138,
          "Total.Lines":  46,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Data0 - номер хода, на котором станет возможно заспавнить следующую стаю ратторов",
              "//Data1 - ---",
              "//Data2 - номер хода от которого отсчитываем дни для проведения очередного авторемонта (каждые 70 дней) и автообновления верфи (каждые 210 дней)",
              "//Data3 - маркер наличия в системе с верфью отрисованной инфошки верфи, т.к. прилетел игрок",
              "",
              "ShipFreeFlight(CurShip, 1); //Стейт None и OrderLock полностью блокируют логику доминатора не только на передвижение, но и на стрельбу - отсюда такие костыли",
              "",
              "//Верфь самоуничтожается при поражении Блазера",
              "if(DomiksDefeated(0))",
              "{",
              "    ShipDestroy(CurShip);",
              "    exit;",
              "}",
              "",
              "//Повышаем число доминаторов в системе до ~50 кораблей",
              "dword cur_star = ShipStar(CurShip);",
              "if(StarBattle(cur_star))",
              "{",
              "    if(GetData(0) <= CurTurn()) //Откатился таймер до возможности спавна очередной стаи ратторов",
              "    {",
              "        //До 3 одновременно активных групп в системе с игроком, а в остальных не более 1, и только в случае, если эти группы не заняты сейчас другими верфями",
              "        if(ShipStar(Player()) != cur_star) int rattors_pack = FindFreeRattorsPack(Id(CurShip), 1, 4);",
              "        else rattors_pack = FindFreeRattorsPack(Id(CurShip), 3, 1);",
              "",
              "        if(~rattors_pack)",
              "        {",
              "            dword target = ShipGetBad(CurShip);",
              "            if(target)",
              "            {",
              "                RattorGroupsDataArray['' + rattors_pack, 'EffectsToShow'] = ''; //На случай, если по каким-либо причинам не было очищено ранее",
              "                SpawnRattorsPack(NearCivilPlanet(CurShip), 0, CurShip, target);",
              "                SetData(CurTurn() + RattorGroupsDataArray['PackAssemblyDelay'] + RndObject(-3, 9, CurShip), 0);",
              "            }",
              "        }",
              "    }",
              "}",
              "",
              "if(StarShips(cur_star) < 45)",
              "{",
              "    if(!RndObject(0, 25, CurShip))",
              "    {",
              "        dword ship = BuyDomikExtremal(NearCivilPlanet(CurShip));",
              "        TransferShip(ship, CurShip);",
              "        OrderTakeOff(ship);",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  134,
          "#":  139,
          "Total.Lines":  12,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(ShipInHyperSpace(CurShip)) ShipDestroy(CurShip);",
              "else if(!GetShipPlanet(CurShip))",
              "{",
              "    OrderLock(CurShip, 0);",
              "    OrderLanding(CurShip, NearCivilPlanet(CurShip));",
              "    OrderLock(CurShip, 1);",
              "}",
              "",
              "if(GroupIn(InhibitorDestroy, NearCivilPlanet(CurShip)))",
              "{",
              "    MakeShipEnterStar(CurShip, StarNearbyStars(ShipStar(Player()), 50), GalaxyStar(71), 10);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  125,
          "#":  140,
          "Total.Lines":  5,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Клон Келлера имеет подтип босса, а потому любой стейт для него будет работать как Free",
              "ShipFreeFlight(CurShip); //А это здесь нужно, чтобы перебить его OrderLock()",
              "",
              "if(ShipInNormalSpace(CurShip)) OrderJump(CurShip, StarNearbyStars(ShipStar(CurShip), 70));",
              "else ShipDestroy(CurShip);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  127,
          "#":  141,
          "Total.Lines":  121,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(BonusNumInCfg(InhibOnBonusNum) != 'ShuDomiks_InhibitorOn' || BonusNumInCfg(InhibOffBonusNum) != 'ShuDomiks_InhibitorOff')",
              "{",
              "    InhibOnBonusNum = FindBonusByNameInCfg('ShuDomiks_InhibitorOn');",
              "    InhibOffBonusNum = FindBonusByNameInCfg('ShuDomiks_InhibitorOff');",
              "}",
              "",
              "//Повреждённый ингибитор не может блокировать входящие в систему корабли",
              "if(HullDamage(CurShip))",
              "{",
              "    //Выключаем ингибитор",
              "    if(HullSpecial(CurShip) != InhibOffBonusNum)",
              "    {",
              "        //Переключение режима путём смены акрина спамит в лог варнинг",
              "        //Однако необходимо это для того, чтобы обеспечивалась моментальная смена анимации",
              "        //Без завершения предыдущей",
              "        if(ShipStar(CurShip) == ShipStar(Player()))",
              "        {",
              "            SwitchToMirrorImage(CurShip, InhibOffBonusNum);",
              "        }",
              "    }",
              "}",
              "else",
              "{",
              "    //Включаем ингибитор",
              "    if(HullSpecial(CurShip) != InhibOnBonusNum)",
              "    {",
              "        //Переключение режима путём смены акрина спамит в лог варнинг",
              "        //Однако необходимо это для того, чтобы обеспечивалась моментальная смена анимации",
              "        //Без завершения предыдущей",
              "        if(ShipStar(CurShip) == ShipStar(Player()))",
              "        {",
              "            SwitchToMirrorImage(CurShip, InhibOnBonusNum);",
              "        }",
              "    }",
              "",
              "    //Начинаем перебор системы в поисках \"нелегальных\" вторженцев",
              "    dword cur_star = ShipStar(CurShip);",
              "    int no_transfer_mark = 0;",
              "    int enemy_standing = 8;",
              "    if(StarOwner(cur_star) == 2) enemy_standing = 2;",
              "    for(int i = StarShips(cur_star) - 1; i >= 0; i = i - 1)",
              "    {",
              "        dword cur_ship = StarShips(cur_star, i);",
              "",
              "        //Только если корабль находится в гипере, но при этом не в ЧД (через ЧД нападают клисаны)",
              "        //Дошли до самого ингибитора, значит, что все корабли выше него в списке уже отработали свой код",
              "        //Если попробовать их сместить в другую систему сейчас, то пзд игре,",
              "        // так что с этого момента переносы оставшихся в списке кораблей запрещены",
              "        //(очень редкий сценарий, т.к. регулярные перемещения кораблей в систему быстро выталкивают ингибитор на первые строчки)",
              "        if(cur_ship == CurShip)",
              "        {",
              "            no_transfer_mark = 1;",
              "            continue;",
              "        }",
              "",
              "        if(IsPlayer(cur_ship)) continue; //Пропускаем игрока",
              "        if(ShipOrder(cur_ship) == 4) continue; //Если корабль прыгает через ЧД",
              "        if(!ShipInHyperSpace(cur_ship)) continue;",
              "        //Исключаем станции",
              "        if(ObjectType(cur_ship) == 4) continue;",
              "        //Исключаем всех, кроме доминаторов и кораблей с кастомной фракцией",
              "        //if(ShipOwner(cur_ship) != 5 && ShipCustomFaction(cur_ship) == '') continue;",
              "",
              "        //Ловим доминаторов, враждебные кастомные фракции, а также пиратов и военных в зависимости от того, кому сейчас принадлежит система",
              "        int standing = ShipStanding(cur_ship);",
              "        check = 0;",
              "        if(!standing)",
              "        {",
              "            //Пропускаем доминаторских боссов",
              "            if(ShipSubType(cur_ship)) check = 1;",
              "        }",
              "        else if(standing == 9)",
              "        {",
              "            //Пропускаем прочих возможных боссов",
              "            if(ShipSubType(cur_ship)) check = 1;",
              "        }",
              "        else if(standing == enemy_standing) check = 1;",
              "",
              "        if(!check) continue;",
              "",
              "        //Определяем шанс на перенаправление данного корабля",
              "        if(!no_transfer_mark)",
              "        {",
              "            if(ShipOwner(cur_ship) == 5) tint2 = 35;",
              "            if(ShipCustomFaction(cur_ship) == 'Klissan') tint2 = 40;",
              "        }",
              "        else tint2 = 0;",
              "",
              "        if(RndObject(1, 100, CurShip) <= tint2)",
              "        {",
              "            //Определяем систему, в которую будет перенаправлен корабль",
              "            dword to_star = StarNearbyStars(cur_star, RndObject(1, 10, CurShip));",
              "            int check = 0;",
              "            //Если перенаправление выпало на систему в скрытом пиратском секторе, то просто уничтожаем корабль",
              "            if(StarToCon(to_star) == StarToCon(PlanetToStar(PlanetPirateClan())))",
              "            {",
              "                if(!PirateWin()) ShipDestroy(cur_ship);",
              "                else check = 1;",
              "            }",
              "            else check = 1;",
              "",
              "            //Если корабль не попал в скрытый сектор, то производим его перенаправление",
              "            if(check)",
              "            {",
              "                //Перенаправляем корабль в другую систему",
              "                MakeShipEnterStar(cur_ship, to_star, cur_star, RndObject(7, 15, CurShip));",
              "                //Рассчитываем и применяем урон, который получил корабль в момент перенаправления",
              "                int tint1 = HullHP(cur_ship);",
              "                tint1 = tint1 / 10 * PortionInDiapason(GTL, 1, 8, 9, 2) + RndObject(-tint1 / 20, tint1 / 20, CurShip);",
              "                DealDamageToShip(cur_ship, 0, tint1, 6401 /*1+256+2048+4096*/);",
              "            }",
              "        }",
              "        //Рассчитываем и применяем урон, который получил корабль, \"прорвавшийся\" в систему через ингибитор",
              "        else",
              "        {",
              "            tint1 = HullHP(cur_ship);",
              "            tint1 = tint1 / 10 * PortionInDiapason(GTL, 1, 8, 9, 2) + RndObject(-tint1 / 20, tint1 / 20, CurShip);",
              "            DealDamageToShip(cur_ship, 0, tint1, 6401 /*1+256+2048+4096*/);",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1160,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  147,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Вычисляем пиратскую скидку в виде процента (для подстановки в диалог)",
              "discount = round(100.0 * ShipStatus(Player(), 1) / 130) + 1;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  420,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  148,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "credit_cost=GalaxyMoney(4)*7;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  420,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  149,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cur_ship = StarRuins(ShipStar(Player()), 'Inhibitor');",
              "credit_cost = ItemCost(ShipItems(cur_ship, 0)) * 30 / 100;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1000,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  150,
          "Total.Lines":  15,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tint3 = DomModUnlocksPerformedSB * 5; //Определяем коэффициент для расчёта цены следующей разблокировки",
              "for(i = 1; i < ShipItems(Player()); i = i + 1)",
              "{",
              "    cur_item = ShipItems(Player(), i);",
              "    tint1 = EqSpecial(cur_item);",
              "    if(~tint1)",
              "    {",
              "        tstr1 = BonusNumInCfg(tint1);",
              "        if(~findsubstr(tstr1, 'DomModLocked'))",
              "        {",
              "            InjectAnswer('DomModUnlockCBGo', Name(cur_item), cur_item);",
              "        }",
              "    }",
              "}",
              "DAnswer('restart~' + \"Ничего я выбирать не буду\");"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  610,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  153,
          "Total.Lines":  6,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Запоминаем возможные проценты снижения характеристики предмета в случае неудачи",
              "tint1=85;",
              "tint2=90;",
              "//Кидаем \"кости\"",
              "chance=Id(cur_item)+40;",
              "chance=abs((chance*chance*chance+chance/10)%100)+1;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  154,
          "Total.Lines":  9,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Запоминаем возможные проценты снижения характеристики предмета в случае неудачи",
              "tint1=82;",
              "tint2=87;",
              "//Запоминаем цену выбранного эксперимента",
              "credit_cost=credit_cost/2;",
              "nodes_cost=nodes_cost/2;",
              "//Кидаем \"кости\"",
              "chance=Id(cur_item)+41;",
              "chance=abs((chance*chance*chance+chance/10)%100)+1;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  790,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  155,
          "Total.Lines":  9,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Запоминаем возможные проценты снижения характеристики предмета в случае неудачи",
              "tint1=80;",
              "tint2=85;",
              "//Запоминаем цену выбранного эксперимента",
              "credit_cost=credit_cost/4;",
              "nodes_cost=nodes_cost/4;",
              "//Кидаем \"кости\"",
              "chance=Id(cur_item)+42;",
              "chance=abs((chance*chance*chance+chance/10)%100)+1;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1180,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  156,
          "Total.Lines":  3,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player(), ShipMoney(Player()) - credit_cost);",
              "DomModUnlocksAccessCB = 1;",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1180,
          "Pos.y":  90,
          "Parent":  -1,
          "#":  157,
          "Total.Lines":  20,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Случайно определяем шанс успеха (из строгого диапазона) текущего эксперимента",
              "rand=Rnd(MinChanceUnlockCB,MaxChanceUnlockCB);",
              "//Запоминаем возможные проценты снижения/повышения характеристики предмета в случае неудачи",
              "tint1=60+DomModUnlocksPerformedSB;",
              "tint2=110+DomModUnlocksPerformedSB;",
              "if(tint1>90)tint1=90;",
              "if(tint2>140)tint2=140;",
              "//Если ГТУ ещё недостаточно высок, существенно снижаем шансы успеха",
              "if(GalaxyTechLevel() == MinGTLToDomAcrynUnlock-1)",
              "{",
              "    rand=rand-25;",
              "    tint1=tint1-25;",
              "    tint2=tint2-25;",
              "}",
              "//Отнимаем у игрока требуемое количество денег и нодов",
              "ShipMoney(Player(),ShipMoney(Player())-credit_cost);",
              "GetNodesFromShip(Player(),nodes_cost);",
              "//Кидаем \"кости\"",
              "chance=Id(cur_item)+57;",
              "chance=abs((chance*chance*chance+chance/10)%100)+1;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1030,
          "Pos.y":  20,
          "Parent":  -1,
          "#":  158,
          "Total.Lines":  3,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player(), ShipMoney(Player()) - credit_cost);",
              "DomModUnlocksAccessCB = 1;",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  200,
          "Pos.y":  70,
          "Parent":  -1,
          "#":  159,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "Ether(4, 'KellerCloneTask', Format(CT('Script.Mod_ShuDomiks.KellerCloneTask'), '<Star'+'>', Name(ShipStar(GetTalkShip())), '255,240,100'));"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  200,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  160,
          "Total.Lines":  3,
          "Code.Type":  "Turn",
          "Code":          
          [
              "Ether(4, 'KellerCloneTask', Format(CT('Script.Mod_ShuDomiks.KellerCloneTask'), '<Star'+'>', Name(ShipStar(GetTalkShip())), '255,240,100'));",
              "",
              "WasKellerCloneSpawned = 2;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  470,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  161,
          "Total.Lines":  9,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player(), ShipMoney(Player()) - credit_cost);",
              "Sound('Sound.Buy');",
              "NextBuyInhib = CurTurn() + 1095;//Три года",
              "cur_item = CreateQuestItem('InhibitorPlaceBeacon', ShipPilotRace(cur_ruin));",
              "ItemSize(cur_item, 1);",
              "ItemCost(cur_item, 1);",
              "//Цена будущего ингибитора запоминается в переменной маяка",
              "UselessItemData(cur_item, 2, credit_cost);",
              "AddItemToShip(Player(), cur_item);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  470,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  162,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "NextBuyInhib = 0;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  470,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  163,
          "Total.Lines":  7,
          "Code.Type":  "Turn",
          "Code":          
          [
              "Sound('Sound.ForsageOn');",
              "ShipSpecialBonuses(cur_ship, bonDef, -10000);",
              "ShipSpecialBonuses(cur_ship, bonDroid, -10000);",
              "ShipSpecialBonuses(cur_ship, bonHull, -1);",
              "ShipSpecialBonuses(cur_ship, bonRadar, -10000);",
              "ShipMoney(Player(), ShipMoney(Player()) + credit_cost);",
              "ShipJoin(InhibitorDestroy, cur_ship);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  610,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  168,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "LastTalkAboutDomAcrynsOnSB=1;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  860,
          "Pos.y":  -60,
          "Parent":  -1,
          "#":  169,
          "Total.Lines":  3,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(MinGTLToDomAcrynUnlock-GalaxyTechLevel()==1)tstr1=\"Тем не менее, исследования в этом направлении идут полным ходом и в скором времени мы должны совершить прорыв.\";",
              "if(MinGTLToDomAcrynUnlock-GalaxyTechLevel()==2)tstr1=\"Мы активно проводим исследования в этом направлении, но, все же, еще далеки от успеха.\";",
              "if(MinGTLToDomAcrynUnlock-GalaxyTechLevel()==3)tstr1=\"Мы лишь сравнительно недавно мобилизовали персонал для этой задачи и пока не имеем серьезных успехов.\";"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1260,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  179,
          "Total.Lines":  7,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Уничтожаем предмет",
              "FreeItem(GetItemFromShip(Player(),FindItemInShip(Player(),cur_item)));",
              "//Повышаем шансы на разблокировку других акринов в будущем",
              "DomModUnlocksPerformedSB=DomModUnlocksPerformedSB+1;",
              "if(MinChanceUnlockCB<50)MinChanceUnlockCB=MinChanceUnlockCB+Rnd(0,2);",
              "if(MaxChanceUnlockCB<100)MaxChanceUnlockCB=MaxChanceUnlockCB+Rnd(0,2);",
              "Sound('Sound.QuestCancel');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1100,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  180,
          "Total.Lines":  9,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Предварительно сперва снимаем акрин, чтобы снять уже наложенные модификаторы стоимости и размера",
              "tint3=FindBonusByNameInCfg(DeleteTags(Format(BonusNumInCfg(EqSpecial(cur_item)),'Locked','Unlocked')));",
              "SpecialToEquipment(-1,cur_item);",
              "SpecialToEquipment(tint3,cur_item);",
              "//Повышаем шансы на разблокировку других акринов в будущем",
              "DomModUnlocksPerformedSB=DomModUnlocksPerformedSB+1;",
              "if(MinChanceUnlockCB<50)MinChanceUnlockCB=MinChanceUnlockCB+Rnd(0,2);",
              "if(MaxChanceUnlockCB<100)MaxChanceUnlockCB=MaxChanceUnlockCB+Rnd(0,2);",
              "Sound('Sound.Repair');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1180,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  181,
          "Total.Lines":  29,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Предварительно сперва снимаем акрин, чтобы снять уже наложенные модификаторы стоимости и размера",
              "tint3=FindBonusByNameInCfg(DeleteTags(Format(BonusNumInCfg(EqSpecial(cur_item)),'Locked','Unlocked')));",
              "SpecialToEquipment(-1,cur_item);",
              "SpecialToEquipment(tint3,cur_item);",
              "//Переходим к определению побочного ущерба/бонуса предмету",
              "chance=Rnd(1,100);",
              "if(chance>55)",
              "{",
              "    SetEquipmentStats(cur_item,GetEquipmentStats(cur_item,0)*Rnd(tint1,tint2)/100,0);",
              "    tstr2='</color>'+\"Только вот нашим парням пришлось убрать парочку мешавших деталек, так что характеристики оборудования могли слегка поменяться.\";",
              "}",
              "else",
              "{",
              "    if(chance>30 && ItemLevel(cur_item)>1)",
              "    {",
              "        ItemLevel(cur_item,ItemLevel(cur_item)-1);",
              "        tstr2='</color>'+\"Но при совмещении всплыло несколько досадных багов, из-за которых технический уровень оборудования упал.\";",
              "    }",
              "    else",
              "    {",
              "        ItemDurability(cur_item,0);",
              "        tstr2='</color>'+\"К сожалению, при совмещении оборудование вышло из строя. Впрочем, это всё ерунда, верно?\";",
              "    }",
              "}",
              "//Повышаем шансы на разблокировку других акринов в будущем",
              "DomModUnlocksPerformedSB=DomModUnlocksPerformedSB+1;",
              "if(MinChanceUnlockCB<50)MinChanceUnlockCB=MinChanceUnlockCB+Rnd(0,2);",
              "if(MaxChanceUnlockCB<100)MaxChanceUnlockCB=MaxChanceUnlockCB+Rnd(0,2);",
              "Sound('Sound.Repair');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  400,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  185,
          "Total.Lines":  48,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "cur_ruin = GetShipRuins(Player());",
              "if(cur_ruin)",
              "{",
              "    if(!PlayerBridge())",
              "    {",
              "        tstr1 = ShipType(cur_ruin);",
              "",
              "        if(tstr1 == 'SB')",
              "        {",
              "            if(!LastTalkAboutDomAcrynsOnSB)",
              "            {",
              "                if(UnknownDomAcrynsTimer == -1) AddDialogInject('DomModUnlockSB', '', \"Мне надо разблокировать доминаторский акрин\", 1);",
              "            }",
              "        }",
              "        else if(tstr1 == 'RC')",
              "        {",
              "            if(!ShipOnSidePirateClan(Player()))",
              "            {",
              "                //NextBuyInhib == -1 - игрок ещё не знает об ингибиторах",
              "                //NextBuyInhib > -1 - игрок получил информацию об ингибиторах, и эта переменная превращается в счётчик до возможности приобрести следующий ингибитор",
              "                if(NextBuyInhib < 0) AddDialogInject('BuyInhibitor', \"<Player>, вам так же определённо захочется узнать о возможности вашего участия в программе бета-теста нашей <clr>новой технологии по противодействию организованным нападениям доминаторов<clrEnd>\", \"Я хочу узнать о новой антидоминаторской технологии\", 1);",
              "                else AddDialogInject('BuyInhibitor', '', \"Приобрести ингибиторы\", 1);",
              "            }",
              "        }",
              "        else if(tstr1 == 'CB')",
              "        {",
              "            AddDialogInject('DomModUnlockCB', '', \"Мне надо разблокировать доминаторский акрин\", 1);",
              "        }",
              "    }",
              "    else",
              "    {",
              "        //Пока блокирую демонтаж, т.к. написан он хуёво",
              "        if(0)//PlayerBridge() == 1 || PlayerBridge() == 3)",
              "        {",
              "            cur_ruin = StarRuins(ShipStar(Player()), 'Inhibitor');",
              "            if(cur_ruin)",
              "            {",
              "                i = 1;",
              "                if(!ShipInScript(cur_ruin)) i = 0;",
              "                else if(ShipGroup(cur_ruin) == InhibitorDestroy) i = 0;",
              "                if(StarBattle(ShipStar(Player()))) i = 0;",
              "                if(GroupCount(InhibitorDestroy)) i = 0;",
              "                if(!ItemCost(ShipItems(cur_ruin, 0))) i = 0;",
              "                if(i) AddDialogInject('DestroyInhibitor', '', \"Демонтировать <Name(cur_ruin)>\", 1);",
              "            }",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  630,
          "Pos.y":  50,
          "Parent":  -1,
          "#":  206,
          "Total.Lines":  12,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Предварительно сперва снимаем акрин, чтобы снять уже наложенные модификаторы стоимости и размера",
              "tint3=FindBonusByNameInCfg(DeleteTags(Format(BonusNumInCfg(EqSpecial(cur_item)),'Locked','Unlocked')));",
              "SpecialToEquipment(-1,cur_item);",
              "SpecialToEquipment(tint3,cur_item);",
              "ShipMoney(Player(),ShipMoney(Player())-credit_cost);",
              "GetNodesFromShip(Player(),nodes_cost);",
              "//Повышаем шансы на разблокировку других акринов в будущем",
              "DomModUnlocksPerformedSB=DomModUnlocksPerformedSB+1;",
              "if(RookieChanceUnlockSB<60)RookieChanceUnlockSB=RookieChanceUnlockSB+Rnd(1,3);",
              "if(OrdinaryChanceUnlockSB<75)OrdinaryChanceUnlockSB=OrdinaryChanceUnlockSB+2;",
              "if(ProfiChanceUnlockSB<90)ProfiChanceUnlockSB=ProfiChanceUnlockSB+2;",
              "Sound('Sound.Repair');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  50,
          "Parent":  -1,
          "#":  208,
          "Total.Lines":  32,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Предварительно сперва снимаем акрин, чтобы снять уже наложенные модификаторы стоимости и размера",
              "tint3=FindBonusByNameInCfg(DeleteTags(Format(BonusNumInCfg(EqSpecial(cur_item)),'Locked','Unlocked')));",
              "SpecialToEquipment(-1,cur_item);",
              "SpecialToEquipment(tint3,cur_item);",
              "//Переходим к определению побочного ущерба предмету",
              "chance=Rnd(1,100);",
              "if(chance>55)",
              "{",
              "    SetEquipmentStats(cur_item,GetEquipmentStats(cur_item,0)*Rnd(tint1,tint2)/100,0);",
              "    tstr2='</color>'+\"К несчастью, при снятии блокировки мы повредили оборудование и одна из его характеристик снизилась.\";",
              "}",
              "else",
              "{",
              "    if(chance>30 && ItemLevel(cur_item)>1)",
              "    {",
              "        ItemLevel(cur_item,ItemLevel(cur_item)-1);",
              "        tstr2='</color>'+\"Но совмещение оборудования произошло с ошибками, и его технический уровень упал.\";",
              "    }",
              "    else",
              "    {",
              "        ItemDurability(cur_item,0);",
              "        tstr2='</color>'+\"К сожалению, при совмещении оборудование вышло из строя. Впрочем, это не критично и мастера из соседнего отдела смогут устранить дефекты.\";",
              "    }",
              "}",
              "ShipMoney(Player(),ShipMoney(Player())-credit_cost);",
              "GetNodesFromShip(Player(),nodes_cost);",
              "//Повышаем шансы на разблокировку других акринов в будущем",
              "DomModUnlocksPerformedSB=DomModUnlocksPerformedSB+1;",
              "if(RookieChanceUnlockSB<60)RookieChanceUnlockSB=RookieChanceUnlockSB+Rnd(1,3);",
              "if(OrdinaryChanceUnlockSB<75)OrdinaryChanceUnlockSB=OrdinaryChanceUnlockSB+2;",
              "if(ProfiChanceUnlockSB<90)ProfiChanceUnlockSB=ProfiChanceUnlockSB+2;",
              "Sound('Sound.Repair');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  770,
          "Pos.y":  50,
          "Parent":  -1,
          "#":  210,
          "Total.Lines":  10,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Уничтожаем предмет",
              "FreeItem(GetItemFromShip(Player(),FindItemInShip(Player(),cur_item)));",
              "ShipMoney(Player(),ShipMoney(Player())-credit_cost);",
              "GetNodesFromShip(Player(),nodes_cost);",
              "//Повышаем шансы на разблокировку других акринов в будущем",
              "DomModUnlocksPerformedSB=DomModUnlocksPerformedSB+1;",
              "if(RookieChanceUnlockSB<60)RookieChanceUnlockSB=RookieChanceUnlockSB+Rnd(1,3);",
              "if(OrdinaryChanceUnlockSB<75)OrdinaryChanceUnlockSB=OrdinaryChanceUnlockSB+2;",
              "if(ProfiChanceUnlockSB<90)ProfiChanceUnlockSB=ProfiChanceUnlockSB+2;",
              "Sound('Sound.QuestCancel');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1000,
          "Pos.y":  90,
          "Parent":  -1,
          "#":  233,
          "Total.Lines":  17,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cur_item=GAnswerData;",
              "tstr1=DeleteTags(Name(cur_item));",
              "credit_cost=ItemCost(cur_item)/100*45+ItemCost(cur_item)/100*tint3;",
              "if(GalaxyTechLevel<MinGTLToDomAcrynUnlock)credit_cost=credit_cost/4*2.5;",
              "else credit_cost=credit_cost/4*2;",
              "nodes_cost=credit_cost/350;",
              "if(nodes_cost<10)nodes_cost=10;",
              "//Вычитаем пиратскую скидку на кредиты",
              "tint2=credit_cost;//Запоминаем значение без скидки для диалога",
              "flt1=discount;",
              "flt1=flt1/100*credit_cost;",
              "credit_cost=round(-flt1+credit_cost);",
              "//И на ноды",
              "tint3=nodes_cost;//Запоминаем значение без скидки для диалога",
              "flt1=discount;",
              "flt1=flt1/100*nodes_cost;",
              "nodes_cost=round(-flt1+nodes_cost);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  830,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  239,
          "Total.Lines":  15,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tint3=DomModUnlocksPerformedSB*7;//Определяем коэффициент для расчёта цены следующей разблокировки",
              "for(i=1;i<ShipItems(Player());i=i+1)",
              "{",
              "    cur_item=ShipItems(Player(),i);",
              "    tint1=EqSpecial(cur_item);",
              "    if(tint1>-1)",
              "    {",
              "        tstr1=BonusNumInCfg(tint1);",
              "        if(findsubstr(tstr1,'DomModLocked')>-1)",
              "        {",
              "            InjectAnswer('DomModUnlockSBGo',Name(cur_item),cur_item);",
              "        }",
              "    }",
              "}",
              "DAnswer('restart~'+\"Ничего я выбирать не буду\");"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  830,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  241,
          "Total.Lines":  6,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cur_item=GAnswerData;",
              "tstr1=Name(cur_item);",
              "//Рассчитываем максимальную цену разблокировки в кредитах и нодах",
              "credit_cost=ItemCost(cur_item)/100*50+ItemCost(cur_item)/100*tint3;",
              "nodes_cost=credit_cost/400;",
              "if(nodes_cost<10)nodes_cost=10;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  380,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  249,
          "Total.Lines":  562,
          "Code.Type":  "Init",
          "Code":          
          [
              "//Общая функция обновления доминаторов и рейнджеров",
              "function ShuDomiksMainUpgrade(ship, own, str_type, sub_type)",
              "{",
              "    dword hull = ShipItems(ship, 0);",
              "    //Если улучшаем рейнджера",
              "    if(own < Kling)",
              "    {",
              "        if(ShipTypeN(ship) == t_Ranger)",
              "        {",
              "            //С определённым шансом бафаем рейнджера по статам и оборудке",
              "            if(RndObject(1, 100, ship) <= 33)",
              "            {",
              "                //Рандомно бафаем статы в зависимости от расы",
              "                if(!own || own == 2) ShipSkill(ship, 0, ShipSkill(ship, 0) + RndObject(0, 2, ship));",
              "                else if(own == 1) ShipSkill(ship, 1, ShipSkill(ship, 1) + RndObject(0, 2, ship));",
              "                else if(own == 3) ShipSkill(ship, 4, ShipSkill(ship, 4) + RndObject(0, 2, ship));",
              "                else if(own == 4) ShipSkill(ship, 3, ShipSkill(ship, 3) + RndObject(0, 2, ship));",
              "",
              "                //Увеличиваем стартовый капитал рейнджера",
              "                ShipMoney(ship, round(1.6 * ShipMoney(ship)));",
              "",
              "                //И производим обновлением его обвеса в случае, если он ещё не взлетел",
              "                if(GetShipPlanet(ship) || GetShipRuins(ship))",
              "                {",
              "                    ShipRefit(ship);",
              "                    ShipRefit(ship);",
              "                    ShipRefit(ship);",
              "                    //Корабль мог заменить корпус, на всякий случай обновляем указатель",
              "                    hull = ShipItems(ship, 0);",
              "",
              "                    FreeAllHoldEquipment(ship);",
              "                }",
              "                ShipImproveItems(ship, RndObject(0, 3, ship));",
              "            }",
              "        }",
              "    }",
              "    //Если улучшаем доминатора",
              "    else if(own == Kling)",
              "    {",
              "        int DegradationLevel = 0;",
              "        //Если включён мод на постепенную деградацию доминаторов после потери их босса",
              "        if(ShuDomiksWinInit)",
              "        {",
              "            //Если был побеждён хотя бы один босс",
              "            if(VictoryDayBlazer || VictoryDayKeller || VictoryDayTerron)",
              "            {",
              "                cur_item = ShipItems(ship, 0);",
              "",
              "                //Здесь происходит снижение уровня технического оснащения и навыков доминаторов, босс которых был ликвидирован",
              "                //Чем раньше босс был ликвидирован, тем сильнее будет степень деградации",
              "                tint2 = ShipSubrace(ship, -1);",
              "                if(!tint2)",
              "                {",
              "                    if(VictoryDayBlazer) DegradationLevel = PortionInDiapason(CurTurn() - VictoryDayBlazer, 182, 1095, 1, 5);",
              "                }",
              "                else if(tint2 == 1)",
              "                {",
              "                    if(VictoryDayKeller) DegradationLevel = PortionInDiapason(CurTurn() - VictoryDayKeller, 182, 1095, 1, 5);",
              "                }",
              "                else if(tint2 == 2)",
              "                {",
              "                    if(VictoryDayTerron) DegradationLevel = PortionInDiapason(CurTurn() - VictoryDayTerron, 182, 1095, 1, 5);",
              "                }",
              "",
              "                if(DegradationLevel)",
              "                {",
              "                    ShipSkill(ship, 0, 0);",
              "                    ShipSkill(ship, 1, 0);",
              "                    ShipSpecialBonuses(ship, bonSkill1, -300);",
              "                    ShipSpecialBonuses(ship, bonSkill2, -300);",
              "                    //Снижается ТУ оборудования доминаторов",
              "                    for(j = 0; j < ShipItems(ship); j = j + 1)",
              "                    {",
              "                        cur_item = ShipItems(ship, j);",
              "                        if(ItemType(cur_item) < t_Hull || ItemType(cur_item) > t_CustomWeapon) continue;",
              "                        if(ItemLevel(cur_item) <= 3) continue;",
              "                        ItemLevel(cur_item, max(3, ItemLevel(cur_item) - DegradationLevel));",
              "                        //Также пропорционально снижаем и стоимость вещи при снижении её уровня",
              "                        ItemCost(cur_item, 0.125 * ItemCost(cur_item) * ItemLevel(cur_item));",
              "                    }",
              "                }",
              "            }",
              "        }",
              "        //Доминаторы получают оружие из мода ShuDomiksPlus (если он подключён)",
              "        if(ShuDomiksPlusInit)",
              "        {",
              "            //Перебираем орудия доминатора, ищем что можно заменить",
              "            for(j = 1; j <= ShipCntWeapon(ship); j = j + 1)",
              "            {",
              "                cur_item = ShipWeapon(ship, j);",
              "                //При подключённом моде ShuDomiksWin и побеждённом соответствующем боссе, шансы доминатора на получение новой пушки снижаются",
              "                if(ShuDomiksWinInit) rand = RndObject(1, PortionInDiapason(DegradationLevel, 0, 5, 100, 300), ship);",
              "                else rand = RndObject(1, 100, ship);",
              "",
              "                tstr1 = '';",
              "                tstr2 = 'Items.Weapon.CustomWeapon.ShuDomiksPlus.';",
              "                tint3 = ItemType(cur_item);",
              "                credit_cost = ControlledSystems(1);",
              "                //Чем больше систем контролируют доминаторы, тем меньше их шансы получить новые пушки",
              "                if(credit_cost <= 15)",
              "                {",
              "                    if(sub_type == 1 && rand <= 15) tstr1 = CT(tstr2 + 5); //Энергопакетный разрядник",
              "                    else if(sub_type == 2 && rand <= 15) tstr1 = CT(tstr2 + 6); //Миниган",
              "                    else if(tint3 == t_Weapon4 && rand <= 65) tstr1 = CT(tstr2 + 4); //Револьверный торпедомет",
              "                    else if((tint3 == t_Weapon1 || tint3 == t_Weapon5) && rand <= 75) tstr1 = CT(tstr2 + 1); //Импульсный бластер",
              "                    else if(tint3 == t_Weapon3 && rand <= 75) tstr1 = CT(tstr2 + 2); //Спаренный турболазер",
              "                    else if(tint3 == t_Weapon2 && rand <= 85) tstr1 = CT(tstr2 + 3); //Магнитный сепаратор",
              "                }",
              "                else if(credit_cost <= 35)",
              "                {",
              "                    if(sub_type == 1 && rand <= 11) tstr1 = CT(tstr2 + 5); //Энергопакетный разрядник",
              "                    else if(sub_type == 2 && rand <= 11) tstr1 = CT(tstr2 + 6); //Миниган",
              "                    else if(tint3 == t_Weapon4 && rand <= 40) tstr1 = CT(tstr2 + 4); //Револьверный торпедомет",
              "                    else if((tint3 == t_Weapon1 || tint3 == t_Weapon5) && rand <= 50) tstr1 = CT(tstr2 + 1); //Импульсный бластер",
              "                    else if(tint3 == t_Weapon3 && rand <= 50) tstr1 = CT(tstr2 + 2); //Спаренный турболазер",
              "                    else if(tint3 == t_Weapon2 && rand <= 55) tstr1 = CT(tstr2 + 3); //Магнитный сепаратор",
              "                }",
              "                else if(credit_cost <= 55)",
              "                {",
              "                    if(sub_type == 1 && rand <= 9) tstr1 = CT(tstr2 + 5); //Энергопакетный разрядник",
              "                    else if(sub_type == 2 && rand <= 9) tstr1 = CT(tstr2 + 6); //Миниган",
              "                    else if(tint3 == t_Weapon4 && rand <= 30) tstr1 = CT(tstr2 + 4); //Револьверный торпедомет",
              "                    else if((tint3 == t_Weapon1 || tint3 == t_Weapon5) && rand <= 35) tstr1 = CT(tstr2 + 1); //Импульсный бластер",
              "                    else if(tint3 == t_Weapon3 && rand <= 35) tstr1 = CT(tstr2 + 2); //Спаренный турболазер",
              "                    else if(tint3 == t_Weapon2 && rand <= 40) tstr1 = CT(tstr2 + 3); //Магнитный сепаратор",
              "                }",
              "                else",
              "                {",
              "                    if(sub_type == 1 && rand <= 8) tstr1 = CT(tstr2 + 5); //Энергопакетный разрядник",
              "                    else if(sub_type == 2 && rand <= 7) tstr1 = CT(tstr2 + 6); //Миниган",
              "                    else if(tint3 == t_Weapon4 && rand <= 25) tstr1 = CT(tstr2 + 4); //Револьверный торпедомет",
              "                    else if((tint3 == t_Weapon1 || tint3 == t_Weapon5) && rand <= 30) tstr1 = CT(tstr2 + 1); //Импульсный бластер",
              "                    else if(tint3 == t_Weapon3 && rand <= 30) tstr1 = CT(tstr2 + 2); //Спаренный турболазер",
              "                    else if(tint3 == t_Weapon2 && rand <= 30) tstr1 = CT(tstr2 + 3); //Магнитный сепаратор",
              "                }",
              "                //Если было подобрано орудие на замену",
              "                if(tstr1 != '')",
              "                {",
              "                    tint3 = ItemLevel(cur_item);",
              "                    if(sub_type == 1) cloned_item = CreateCustomWeapon(tstr1, RndObject(90, 150, ship), tint3, Kling);",
              "                    else if(sub_type == 2) cloned_item = CreateCustomWeapon(tstr1, RndObject(60, 100, ship), tint3, Kling);",
              "                    else cloned_item = CreateCustomWeapon(tstr1, RndObject(30, 60, ship), tint3, Kling);",
              "                    ItemSubrace(cloned_item, ShipSubrace(ship, -1));",
              "",
              "                    //В миниган вставляется затычка вместо ММ",
              "                    if(tstr1 == CT(tstr2 + 6)) SpecialToEquipment(FindBonusByNameInCfg('ShuDomiks_MMBlockAcryn'), cloned_item);",
              "                    FreeItem(GetItemFromShip(ship, FindItemInShip(ship, cur_item)));",
              "                    AddItemToShip(ship, cloned_item);",
              "                    ItemIsInUse(cloned_item, ship, 1, j);",
              "                    ShipImproveItems(ship, 0); //Снимаем возможный перегруз",
              "                }",
              "            }",
              "        }",
              "",
              "        //Если подключён мод ShuEmitter",
              "        if(ShuEmitterInit)",
              "        {",
              "            //Если доминатор является меноком или штипом",
              "            if(sub_type == 4 || sub_type == 5)",
              "            {",
              "                tint3 = ShipCntWeapon(ship);",
              "                if(!tint3)",
              "                {",
              "                    HullHP(hull, ItemSize(hull));",
              "                    ShipImproveItems(ship, 0); //Снимаем возможный перегруз",
              "                    exit;",
              "                }",
              "                //Если менок",
              "                if(sub_type == 4) chance = 12 + 6 * tint3;",
              "                //Если штип",
              "                else chance = 9 + 5 * tint3;",
              "                //Крутим цикл и заменяем случайные пушки меноков/штипов на сплэшевые лазеры",
              "                //Потому что это логично и полезно, я полагаю. шу ведь хуйни не напишет, так?",
              "                rand = RndObject(1, 100, ship);",
              "                while(rand <= chance)",
              "                {",
              "                    chance = chance - RndObject(4, 7, ship);",
              "                    j = RndObject(1, tint3, ship);",
              "                    if(ItemType(ShipWeapon(ship, j)) == t_CustomWeapon)",
              "                    {",
              "                        j = RndObject(1, tint3, ship);",
              "                        if(ItemType(ShipWeapon(ship, j)) == t_CustomWeapon)",
              "                        {",
              "                            j = RndObject(1, tint3, ship);",
              "                            if(ItemType(ShipWeapon(ship, j)) == t_CustomWeapon)",
              "                            {",
              "                                //rand = RndObject(1, 100, ship);",
              "                                break;",
              "                            }",
              "                        }",
              "                    }",
              "",
              "                    cur_item = ShipWeapon(ship, j);",
              "",
              "                    //Определяем ТУ будущего лазера",
              "                    credit_cost = ItemLevel(cur_item);",
              "                    if(credit_cost <= 6) credit_cost = credit_cost + RndObject(0, 1, ship);",
              "                    else if(credit_cost == 7) credit_cost = RndObject(7, 8, ship);",
              "                    else credit_cost = 8;",
              "",
              "                    //Создаём сплэшевый лазер",
              "                    if(sub_type == 4) cloned_item = CreateCustomWeapon(CT('Items.Weapon.CustomWeapon.ShuEmitter.4'), RndObject(23, 50, ship), credit_cost, Kling);",
              "                    else cloned_item = CreateCustomWeapon(CT('Items.Weapon.CustomWeapon.ShuEmitter.4'), RndObject(20, 45, ship), credit_cost, Kling);",
              "                    ItemSubrace(cloned_item, ShipSubrace(ship, -1));",
              "",
              "                    FreeItem(GetItemFromShip(ship, FindItemInShip(ship, cur_item)));",
              "                    AddItemToShip(ship, cloned_item);",
              "                    ItemIsInUse(cloned_item, ship, 1, j);",
              "                    ShipImproveItems(ship, 0); //Снимаем возможный перегруз",
              "",
              "                    rand = RndObject(1, 100, ship);",
              "                }",
              "            }",
              "        }",
              "",
              "        //Вешаем особые бонусы на корпуса всех доминаторов",
              "        //Добавляем общий акрин с описанием и Fragility, а также \"динамические\" спецакрины в зависимости от общего уровня сложности и ТУ доминатора",
              "        int hull_level = ItemLevel(hull);",
              "        str bon_mod = 'ShuDomiks';",
              "        if(EvoArmadaInit) bon_mod = 'EvoArmada';",
              "",
              "        //Клиг",
              "        if(sub_type == 7)",
              "        {",
              "            //Проводим всю эту хероборию чтобы не вешать на доминатора валидный акрин и не ломать его скин",
              "            tint3 = FindBonusByNameInCfg(bon_mod + '_KligDomHull');",
              "            ModuleToEquipment(tint3, hull);",
              "            EqModule(hull, -1);",
              "            HullSpecial(hull, tint3);",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_ExtraSpecialsLineBreak'));",
              "            //Клигу вешаем бонус на скорость",
              "            tint3 = (10 * GeneralDiffLevel) + (10 * PortionInDiapason(hull_level, 1, 8, 1, 10));",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_bonSpeed'), tint3);",
              "            ShipSkill(ship, 'Mobility', ShipSkill(ship, 'Mobility') + 4);",
              "        }",
              "        //Штип",
              "        else if(sub_type == 5)",
              "        {",
              "            tint3 = FindBonusByNameInCfg(bon_mod + '_ShtipDomHull');",
              "            ModuleToEquipment(tint3, hull);",
              "            EqModule(hull, -1);",
              "            HullSpecial(hull, tint3);",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_ExtraSpecialsLineBreak'));",
              "            //Штипу вешаем бонус на скорость и повышаем навык манёвренности",
              "            tint3 = (10 * GeneralDiffLevel) + (10 * PortionInDiapason(hull_level, 1, 8, 1, 10));",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_bonSpeed'), tint3);",
              "            ShipSkill(ship, 'Mobility', ShipSkill(ship, 'Mobility') + 3);",
              "        }",
              "        //Менок",
              "        else if(sub_type == 4)",
              "        {",
              "            tint3 = FindBonusByNameInCfg(bon_mod + '_MenocDomHull');",
              "            ModuleToEquipment(tint3, hull);",
              "            EqModule(hull, -1);",
              "            HullSpecial(hull, tint3);",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_ExtraSpecialsLineBreak'));",
              "            //Менку вешаем бонусы на силу энергетического и ракетного оружия, а также повышаем навык точности",
              "            tint3 = GeneralDiffLevel + PortionInDiapason(hull_level, 1, 8, 1, 10);",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_bonWEnergy'), tint3);",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_bonWMissile'), tint3);",
              "            ShipSkill(ship, 'Accuracy', ShipSkill(ship, 'Accuracy') + 1);",
              "            ShipSkill(ship, 'Mobility', ShipSkill(ship, 'Mobility') + 2);",
              "        }",
              "        //Смерш",
              "        else if(sub_type == 3)",
              "        {",
              "            tint3 = FindBonusByNameInCfg(bon_mod + '_SmershDomHull');",
              "            ModuleToEquipment(tint3, hull);",
              "            EqModule(hull, -1);",
              "            HullSpecial(hull, tint3);",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_ExtraSpecialsLineBreak'));",
              "            //Смершу вешаем бонус на силу ракетных орудий и дальность стрельбы, а также повышаем навык точности",
              "            tint3 = GeneralDiffLevel + PortionInDiapason(hull_level, 1, 8, 1, 10);",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_bonWMissile'), tint3);",
              "            tint3 = (5 * GeneralDiffLevel) + (5 * PortionInDiapason(hull_level, 1, 8, 1, 10));",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_bonWRadius'), tint3);",
              "            ShipSkill(ship, 'Accuracy', ShipSkill(ship, 'Accuracy') + 2);",
              "        }",
              "        //Ургант",
              "        else if(sub_type == 2)",
              "        {",
              "            tint3 = FindBonusByNameInCfg(bon_mod + '_UrgantDomHull');",
              "            ModuleToEquipment(tint3, hull);",
              "            EqModule(hull, -1);",
              "            HullSpecial(hull, tint3);",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_ExtraSpecialsLineBreak'));",
              "            //Урганту вешаем бонус на силу осколочных орудий и ГЗП",
              "            tint3 = round((1.8 * GeneralDiffLevel / 2) + (1.8 * PortionInDiapason(hull_level, 1, 8, 1, 10) / 2));",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_bonWSplinter'), tint3);",
              "            tint3 = round((1.5 * GeneralDiffLevel / 2) + (1.5 * PortionInDiapason(hull_level, 1, 8, 1, 10) / 2));",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_bonDef'), tint3);",
              "            ShipSkill(ship, 'Accuracy', ShipSkill(ship, 'Accuracy') + 2);",
              "",
              "            //Если подключён мод EvoArmada, добавляем дополнительные залпы кораблю в этом же цикле (чтоб два раза не перебирать доминаторов в разных модах)",
              "            if(EvoArmadaInit) ShipSpecialBonuses(ship, bonAttacks, 1);",
              "        }",
              "        //Эквентор",
              "        else if(sub_type == 1)",
              "        {",
              "            tint3 = FindBonusByNameInCfg(bon_mod + '_EquantorDomHull');",
              "            ModuleToEquipment(tint3, hull);",
              "            EqModule(hull, -1);",
              "            HullSpecial(hull, tint3);",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_ExtraSpecialsLineBreak'));",
              "            //Эквентору вешаем бонус на силу энергетических орудий и броню",
              "            tint3 = round((1.8 * GeneralDiffLevel / 2) + (1.8 * PortionInDiapason(hull_level, 1, 8, 1, 10) / 2));",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_bonWEnergy'), tint3);",
              "            tint3 = round((0.8 * GeneralDiffLevel / 2) + (0.8 * PortionInDiapason(hull_level, 1, 8, 1, 10) / 2));",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_bonHull'), tint3);",
              "",
              "            //Если подключён мод EvoArmada, добавляем дополнительные залпы кораблю в этом же цикле (чтоб два раза не перебирать доминаторов в разных модах)",
              "            if(EvoArmadaInit)",
              "            {",
              "                ShipSpecialBonuses(ship, bonAttacks, 3);",
              "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
              "                ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 3);",
              "                //Ограничиваем максимальный уровень навыка атаки (чтобы не так сильно нагибал)",
              "                if(ShipSkill(ship, 'Accuracy') > 2) ShipSkill(ship, 'Accuracy', RndObject(2, 3, ship));",
              "            }",
              "        }",
              "        //Бертор",
              "        else if(sub_type == 6)",
              "        {",
              "            tint3 = FindBonusByNameInCfg(bon_mod + '_BertorDomHull');",
              "            ModuleToEquipment(tint3, hull);",
              "            EqModule(hull, -1);",
              "            HullSpecial(hull, tint3);",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_ExtraSpecialsLineBreak'));",
              "            //Бертору вешаем бонус на броню",
              "            tint3 = round((1.2 * GeneralDiffLevel / 2) + (1.2 * PortionInDiapason(hull_level, 1, 8, 1, 10) / 2));",
              "            ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('ShuDomiks_bonHull'), tint3);",
              "",
              "            //Если подключён мод EvoArmada, добавляем дополнительные залпы кораблю в этом же цикле (чтоб два раза не перебирать доминаторов в разных модах)",
              "            if(EvoArmadaInit)",
              "            {",
              "                ShipSpecialBonuses(ship, bonAttacks, 4);",
              "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
              "                ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 4);",
              "                //Ограничиваем максимальный уровень навыка атаки (чтобы не так сильно нагибал)",
              "                if(ShipSkill(ship, 'Accuracy') > 1) ShipSkill(ship, 'Accuracy', RndObject(1, 2, ship));",
              "            }",
              "        }",
              "",
              "        //Далее пропускаем клигов",
              "        if(sub_type == 7)",
              "        {",
              "            HullHP(hull, ItemSize(hull));",
              "            ShipImproveItems(ship, 0); //Снимаем возможный перегруз",
              "            exit;",
              "        }",
              "",
              "        //Если доминаторы после гибели босса уже деградировали слишком сильно, то неизвестных модификаций они больше не получат",
              "        if(DegradationLevel == 5)",
              "        {",
              "            HullHP(hull, ItemSize(hull));",
              "            ShipImproveItems(ship, 0); //Снимаем возможный перегруз",
              "            exit;",
              "        }",
              "",
              "        //Если таймер появления неизвестных доминаторских модификаций уже сработал",
              "        //Добавляем доминаторам неизвестные модификации",
              "        //DegradationLevel здесь может принимать значения от 0 до 4",
              "        if(UnknownDomAcrynsTimer == -1)",
              "        {",
              "            ReSupply = 0;",
              "            check = 0;",
              "            credit_cost = 0;",
              "",
              "            //Для рандомизации выборки модифицируемого оружия на корабле используется while",
              "            while(!check)",
              "            {",
              "                if(!ShipCntWeapon(ship)) break;",
              "                cur_item = ShipWeapon(ship, RndObject(1, ShipCntWeapon(ship), ship));",
              "                if(cur_item)",
              "                {",
              "                    if(EqSpecial(cur_item) == -1)",
              "                    {",
              "                        tint3 = ItemType(cur_item);",
              "                        if(tint3 != t_Weapon16 && tint3 != t_Weapon17 && tint3 != t_Weapon18)",
              "                        {",
              "                            //Доминатор получит тем меньше модифицированных пушек, чем выше его уровень деградации после смерти босса",
              "                            if(RndObject(1, 3, ship) == 2) check = 1;",
              "                            if(ReSupply == MaxWSup - max(DegradationLevel - 1, 0)) check = 1;",
              "",
              "                            if(tint3 == t_CustomWeapon)",
              "                            {",
              "                                //Если попалось кастомное орудие, но оно не сплэшевый фазер",
              "                                if(CustomWeaponType(cur_item) != CT('Items.Weapon.CustomWeapon.ShuEmitter.4')) break;",
              "                            }",
              "",
              "                            //Проверки на ММ, чтобы не дублировать имя модуля в названии предмета",
              "                            int module = EqModule(cur_item);",
              "                            if(~module) ModuleToEquipment(-1, cur_item);",
              "                            tstr2 = '<color=255,167,84>' + Name(cur_item) + '</color>';",
              "                            if(~module) ModuleToEquipment(module, cur_item);",
              "",
              "                            rand = RndObject(1, 100, ship);",
              "                            //Штип",
              "                            if(sub_type == 5)",
              "                            {",
              "                                if(rand <= 45) tstr1 = 'SpeedDrop';",
              "                                else if(rand <= 80) tstr1 = 'Strike';",
              "                                else tstr1 = 'Quickshot';",
              "                            }",
              "                            //Менок",
              "                            else if(sub_type == 4)",
              "                            {",
              "                                if(rand <= 25) tstr1 = 'SpeedDrop';",
              "                                else if(rand <= 75) tstr1 = 'Strike';",
              "                                else tstr1 = 'Quickshot';",
              "                            }",
              "                            //Смерш",
              "                            else if(sub_type == 3)",
              "                            {",
              "                                if(rand <= 50) tstr1 = 'SpeedDrop';",
              "                                else if(rand <= 75) tstr1 = 'Strike';",
              "                                else tstr1 = 'Quickshot';",
              "                            }",
              "                            //Ургант",
              "                            else if(sub_type == 2)",
              "                            {",
              "                                if(rand <= 20) tstr1 = 'SpeedDrop';",
              "                                else if(rand <= 60) tstr1 = 'Strike';",
              "                                else tstr1 = 'Quickshot';",
              "                            }",
              "                            //Эквентор",
              "                            else if(sub_type == 1)",
              "                            {",
              "                                if(rand <= 22) tstr1 = 'SpeedDrop';",
              "                                else if(rand <= 45) tstr1 = 'Strike';",
              "                                else tstr1 = 'Quickshot';",
              "                            }",
              "                            //Бертор",
              "                            else if(sub_type == 6) tstr1 = 'Quickshot';",
              "",
              "                            //Убрал проверку, т.к. теперь если максимальный урон орудия не может опуститься ниже минимального",
              "                            //if(tstr1 == 'Quickshot')",
              "                            //{",
              "                                //Не накладываем квикшот на орудие в том случае, если дебаф квикшота полностью обнулит его максимальный урон",
              "                                //if(GetEquipmentStats(cur_item, 0) + CT('MicroModuls.ShuDomiks_' + tstr1 + 'WDomModLocked.bonWMissile') <= 0) continue;",
              "                            //}",
              "",
              "                            if(tint3 == t_CustomWeapon) SpecialToEquipment(FindBonusByNameInCfg('ShuDomiks_' + tstr1 + 'CWDomModLocked'), cur_item);",
              "                            else SpecialToEquipment(FindBonusByNameInCfg('ShuDomiks_' + tstr1 + 'WDomModLocked'), cur_item);",
              "",
              "                            //Не знаю нахера оно тут, пока что просто выключу",
              "                            //if(GetEquipmentStats(cur_item, 0) < GetEquipmentStats(cur_item, 1)) SetEquipmentStats(cur_item, GetEquipmentStats(cur_item, 1), 0);",
              "                            SetName(cur_item, tstr2);",
              "                            ReSupply = ReSupply + 1;",
              "                        }",
              "                    }",
              "                }",
              "                credit_cost = credit_cost + 1;",
              "                if(credit_cost >= 10) break;",
              "            }",
              "",
              "            ReSupply = 0;",
              "            check = 0;",
              "            credit_cost = 0;",
              "            //Для рандомизации выборки модифицируемого оборудования на корабле используется while",
              "            while(!check)",
              "            {",
              "                cur_item = ShipEqInSlot(ship, RndObject(t_FuelTanks, t_DefGenerator, ship));",
              "                if(cur_item)",
              "                {",
              "                    if(EqSpecial(cur_item) == -1)",
              "                    {",
              "                        //Доминатор получит тем меньше модифицированных вещей, чем выше его уровень деградации после смерти босса",
              "                        if(RndObject(1, 3, ship) == 2) check = 1;",
              "                        if(ReSupply == MaxReSup - DegradationLevel) check = 1;",
              "",
              "                        //Проверки на ММ, чтобы не дублировать имя модуля в названии предмета",
              "                        module = EqModule(cur_item);",
              "                        if(~module) ModuleToEquipment(-1, cur_item);",
              "                        tstr2 = '<color=255,167,84>' + Name(cur_item) + '</color>';",
              "                        if(~module) ModuleToEquipment(module, cur_item);",
              "",
              "                        //Штип",
              "                        rand = RndObject(1, 100, ship);",
              "                        if(sub_type == 5)",
              "                        {",
              "                            if(rand <= 17) tstr1 = 'Energize';",
              "                            else if(rand <= 65) tstr1 = 'Glue';",
              "                            else if(rand <= 87) tstr1 = 'Detriment';",
              "                            else tstr1 = 'RocketLauncher';",
              "                        }",
              "                        //Менок",
              "                        else if(sub_type == 4)",
              "                        {",
              "                            if(rand <= 15) tstr1 = 'Energize';",
              "                            else if(rand <= 30) tstr1 = 'Glue';",
              "                            else if(rand <= 70) tstr1 = 'Detriment';",
              "                            else tstr1 = 'RocketLauncher';",
              "                        }",
              "                        //Смерш",
              "                        else if(sub_type == 3)",
              "                        {",
              "                            if(rand <= 13) tstr1 = 'Energize';",
              "                            else if(rand <= 43) tstr1 = 'Glue';",
              "                            else if(rand <= 60) tstr1 = 'Detriment';",
              "                            else tstr1 = 'RocketLauncher';",
              "                        }",
              "                        //Ургант",
              "                        else if(sub_type == 2)",
              "                        {",
              "                            if(rand <= 24) tstr1 = 'Energize';",
              "                            else if(rand <= 42) tstr1 = 'Glue';",
              "                            else if(rand <= 73) tstr1 = 'Detriment';",
              "                            else tstr1 = 'RocketLauncher';",
              "                        }",
              "                        //Эквентор",
              "                        else if(sub_type == 1)",
              "                        {",
              "                            if(rand <= 20) tstr1 = 'Energize';",
              "                            else if(rand <= 60) tstr1 = 'Glue';",
              "                            else if(rand <= 90) tstr1 = 'Detriment';",
              "                            else tstr1 = 'RocketLauncher';",
              "                        }",
              "                        //Бертор",
              "                        else if(sub_type == 6)",
              "                        {",
              "                            if(rand <= 20) tstr1 = 'Energize';",
              "                            else if(rand <= 50) tstr1 = 'Glue';",
              "                            else if(rand <= 80) tstr1 = 'Detriment';",
              "                            else tstr1 = 'RocketLauncher';",
              "                        }",
              "",
              "                        SpecialToEquipment(FindBonusByNameInCfg('ShuDomiks_' + tstr1 + 'EqDomModLocked'), cur_item);",
              "",
              "                        tint3 = ItemType(cur_item);",
              "                        if(tint3 == t_Engine) EquipmentImageName(cur_item, 'EngineDomMod');",
              "                        else if(tint3 == t_FuelTanks) EquipmentImageName(cur_item, 'FuelTanksDomMod');",
              "                        else if(tint3 == t_RepairRobot) EquipmentImageName(cur_item, 'RepairRobotDomMod');",
              "                        else if(tint3 == t_CargoHook) EquipmentImageName(cur_item, 'CargoHookDomMod');",
              "                        else if(tint3 == t_DefGenerator) EquipmentImageName(cur_item, 'DefGeneratorDomMod');",
              "                        else if(tint3 == t_Radar) EquipmentImageName(cur_item, 'RadarDomMod');",
              "                        else if(tint3 == t_Scaner) EquipmentImageName(cur_item, 'ScanerDomMod');",
              "",
              "                        SetName(cur_item, tstr2);",
              "                        ReSupply = ReSupply + 1;",
              "                    }",
              "                }",
              "",
              "                credit_cost = credit_cost + 1;",
              "                if(credit_cost >= 10) break;",
              "            }",
              "        }",
              "",
              "        //А здесь происходит случайное улучшение оборудования доминатора",
              "        //Случайное оборудование и оружие получает случайные улучшения и микромодули",
              "        //Да-да, именно здесь в доминаторов и попадают все микромодули",
              "        //Вставляем их уже после установки неизвестных модификаций,",
              "        //иначе при переустановке имени предмета в него может попасть удвоенное имя установленного ММ",
              "        MaxUp = round(PortionInDiapason(DegradationLevel, 0, 4, 1.0, 0.25) * kMaxUpgrade);",
              "        MinUp = kMinUpgrade;",
              "        if(MinUp > MaxUp) MinUp = MaxUp;",
              "        ShipImproveItems(ship, RndObject(MinUp, MaxUp, ship));",
              "    }",
              "",
              "    HullHP(hull, ItemSize(hull));",
              "    ShipImproveItems(ship, 0); //Снимаем возможный перегруз",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1220,
          "Pos.y":  -40,
          "Parent":  -1,
          "#":  262,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Рассчитываем стоимость начального платежа за открытие доступа к разблокировке доминаторских акринов на доминионах",
              "credit_cost = GalaxyMoney(2) + GalaxyMoney(0) * ShipStatistic(Player(), 1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1060,
          "Pos.y":  -60,
          "Parent":  -1,
          "#":  263,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Рассчитываем стоимость начального платежа за открытие доступа к разблокировке доминаторских акринов на доминионах",
              "credit_cost=GalaxyMoney(3)+GalaxyMoney(0)*ShipStatistic(Player(),1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  279,
          "#":  280,
          "Total.Lines":  21,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//В этом стейте доминаторы совершают обычное нападение на указанную систему, совершают прыжок",
              "",
              "if(ShipInHyperSpace(CurShip)) exit;",
              "//Для автоматического выбора целей вокруг корабля",
              "ShipFreeFlight(CurShip);",
              "",
              "dword cur_star = ShipStar(CurShip);",
              "dword target_star = GalaxyStar(GetData(0) - 1);",
              "if(cur_star != target_star)",
              "{",
              "    OrderLock(CurShip, 1);",
              "    OrderJump(CurShip, target_star);",
              "}",
              "else //Долетел до указанной системы",
              "{",
              "    OrderLock(CurShip, 0);",
              "    SetData(0, 0);",
              "    ShipOut(CurShip);",
              "    ShipFreeFlight(CurShip);",
              "    exit;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  30,
          "Pos.y":  320,
          "Parent":  -1,
          "#":  287,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipOut();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  289,
          "#":  290,
          "Total.Lines":  84,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//У всех ратторов от рождения выставлен OrderLock()",
              "",
              "//Data0 - Id последней заданной стае ратторов цели (запоминается для каждого раттора стаи), если равно -1 (при проверке конвертируйте в int), значит раттор прямо сейчас сидит на цели, не выгоняем его",
              "//Data1 - Id родной верфи, на которую раттор вернётся, если в системе не останется враждебных целей, если равно -1, значит верфь была уничтожена (выставляется из акткода OnDeath верфи) и раттор уже вошёл в режим самоликвидации",
              "//Data2 - маркер о начале фазы атаки цели (0-1, но только если ратторы ещё не сели на цель), либо номер слота оборудования, к которому был \"приписан\" раттор для его постепенного слома, для слотов оружия это номера 1-5, для артефактов 6-21, а для прочей оборудки это номер типа слота, аля t_Hull, t_Engine и т.д.",
              "//Data3 - Id раттора-предмета в трюме у цели",
              "",
              "if(int(GetData(0)) == -1) exit; //Раттор сидит на цели, скипаем всю лишнюю логику",
              "if(int(GetData(1)) == -1) exit; //Родная верфь раттора уничтожена, и он уже находится в режиме самоликвидации, не трогаем",
              "",
              "if(!ShipInNormalSpace(CurShip))",
              "{",
              "    if(!GetData(0)) //Раттор вернулся на верфь, поскольку враждебных целей в системе не осталось",
              "    {",
              "        OrderNone(CurShip);",
              "        ShipDestroy(CurShip, 1);",
              "",
              "        //Сокращаем время КД до спавна новой стаи на 1/5 за каждого вернувшегося обратно на верфь раттора",
              "        SetData(max(GetData(0, IdToShip(GetData(1))) - round(0.20 * RattorGroupsDataArray['PackAssemblyDelay']), 0), 0, home_shipyard);",
              "    }",
              "    else OrderTakeOff(CurShip);",
              "    exit; //До взлёта им всё равно больше делать нечего",
              "}",
              "",
              "int cur_group = ShipGroup(CurShip);",
              "if(RattorGroupsDataArray['' + cur_group, 'StateDone'] == CurTurn()) exit; //В целях синхронизации и оптимизации управляем поведением всех кораблей стаи через код первого вызванного за ход корабля в группе",
              "RattorGroupsDataArray['' + cur_group, 'StateDone'] = CurTurn();",
              "int group_count = GroupCount(cur_group);",
              "",
              "dword cur_star = ShipStar(CurShip);",
              "if(GetData(0)) //Проверка на валидность текущей цели",
              "{",
              "    dword target = IdToShip(GetData(0));",
              "    if(!target)",
              "    {",
              "        ShipFreeFlight(CurShip, 2); //Ищем новую подходящую цель для стаи",
              "        target = ShipGetBad(CurShip);//SearchForNextRattorTarget(CurShip);",
              "        if(target)",
              "        {",
              "            GroupSetData(cur_group, 0, Id(target));",
              "            ShipSetBad(CurShip, 0); //Чтобы замаскированный клиг не подорвался об цель ненароком",
              "        }",
              "    }",
              "    else",
              "    {",
              "        if(ShipStar(target) != cur_star) target = 0;",
              "        else if(!ShipInNormalSpace(target)) target = 0;",
              "    }",
              "}",
              "else //Даже если в системе не осталось враждебных целей (и активной цели нет), всё равно проверяем их на всякий случай вплоть до возвращения раттора обратно на верфь",
              "{",
              "    ShipFreeFlight(CurShip, 2); //Ищем новую подходящую цель для данного раттора",
              "    target = ShipGetBad(CurShip);//SearchForNextRattorTarget(CurShip);",
              "    if(target)",
              "    {",
              "        GroupSetData(cur_group, 0, Id(target));",
              "        ShipSetBad(CurShip, 0); //Чтобы замаскированный клиг не подорвался об цель ненароком",
              "    }",
              "}",
              "",
              "if(target) //Для стаи имеется подходящая цель",
              "{",
              "    if(ShipOrderObj(CurShip) != target)",
              "    {",
              "        for(i = 0; i < group_count; i = i + 1)",
              "        {",
              "            dword rattor = GroupShip(cur_group, i);",
              "            OrderFollowShip(rattor, target, 3);",
              "        }",
              "    }",
              "}",
              "else",
              "{",
              "    if(ShipOrder(CurShip) != 2) //В системе не осталось враждебных целей, возвращаем стаю ратторов на их родную верфь (если они уже и так не на пути туда)",
              "    {",
              "        dword home_shipyard = IdToShip(GetData(1));",
              "        if(home_shipyard) for(i = 0; i < group_count; i = i + 1)",
              "        {",
              "            rattor = GroupShip(cur_group, i);",
              "            SetData(0, 0, rattor); //Маркерно обнуляем Id цели перед возвращением домой",
              "            OrderLanding(rattor, home_shipyard);",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  124,
          "#":  297,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Клон Келлера имеет подтип босса, а потому любой стейт для него будет работать как Free",
              "ShipFreeFlight(CurShip); //А это здесь нужно, чтобы перебить его OrderLock()"          
          ]        
        }      
      ],
      "Places":      
      [
        {
          "Type":  "TPlace",
          "Name":  "Loop",
          "Pos.x":  -210,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  104,
          "Place.Type":  0,
          "Angle":  "0",
          "Dist":  "0",
          "Radius":  350,
          "Obj1":  -1,
          "Obj2":  -1        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "InitPlanet",
          "Pos.x":  -140,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  1,
          "Race":  62,
          "Owner":  62,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  -210,
          "Pos.y":  260,
          "Parent":  -1,
          "#":  2,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "InitStar",
          "Pos.x":  -210,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  0,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "Statements":      
      [
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  280,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  151,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "DomiksDefeated(1) != 2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  510,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  152,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) >= credit_cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  830,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  164,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!DomiksDefeated()"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  730,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  165,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "DomiksDefeated()"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  860,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  166,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GalaxyTechLevel()<MinGTLToDomAcrynUnlock"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  830,
          "Pos.y":  -60,
          "Parent":  -1,
          "#":  167,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GalaxyTechLevel()>=MinGTLToDomAcrynUnlock"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  200,
          "Pos.y":  -50,
          "Parent":  -1,
          "#":  172,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "DomiksDefeated(1) == 1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  240,
          "Pos.y":  -50,
          "Parent":  -1,
          "#":  173,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "DomiksDefeated(1) == 2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  280,
          "Pos.y":  -50,
          "Parent":  -1,
          "#":  174,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "DomiksDefeated(1) == 3"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1050,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  175,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) >= credit_cost && GetNodesFromShip(Player()) >= nodes_cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1260,
          "Pos.y":  130,
          "Parent":  -1,
          "#":  176,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1100,
          "Pos.y":  130,
          "Parent":  -1,
          "#":  177,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "chance <= rand"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1180,
          "Pos.y":  130,
          "Parent":  -1,
          "#":  178,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "chance > rand"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  470,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  186,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "CurTurn()>=NextBuyInhib"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  370,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  187,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "CurTurn()<NextBuyInhib"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  440,
          "Pos.y":  -50,
          "Parent":  -1,
          "#":  188,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "NextBuyInhib < 0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  470,
          "Pos.y":  -50,
          "Parent":  -1,
          "#":  189,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "NextBuyInhib >= 0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1030,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  191,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) >= credit_cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1200,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  192,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) >= credit_cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  610,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  193,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player())>=credit_cost && GetNodesFromShip(Player())>=nodes_cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  194,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player())>=credit_cost/2 && GetNodesFromShip(Player())>=nodes_cost/2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  790,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  195,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player())>=credit_cost/4 && GetNodesFromShip(Player())>=nodes_cost/4"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  830,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  196,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1260,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  197,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GalaxyTechLevel() < MinGTLToDomAcrynUnlock - 1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1000,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  198,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GalaxyTechLevel() >= MinGTLToDomAcrynUnlock"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1030,
          "Pos.y":  -60,
          "Parent":  -1,
          "#":  199,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!DomModUnlocksAccessCB"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1000,
          "Pos.y":  -60,
          "Parent":  -1,
          "#":  200,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "DomModUnlocksAccessCB"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  201,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1160,
          "Pos.y":  -60,
          "Parent":  -1,
          "#":  202,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GalaxyTechLevel() == MinGTLToDomAcrynUnlock - 1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1160,
          "Pos.y":  -40,
          "Parent":  -1,
          "#":  203,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "DomModUnlocksAccessCB"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1190,
          "Pos.y":  -40,
          "Parent":  -1,
          "#":  204,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!DomModUnlocksAccessCB"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  610,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  205,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "chance<=ProfiChanceUnlockSB"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  680,
          "Pos.y":  80,
          "Parent":  -1,
          "#":  207,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "chance>ProfiChanceUnlockSB"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  750,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  209,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  770,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  211,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  630,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  212,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "chance<=OrdinaryChanceUnlockSB"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  80,
          "Parent":  -1,
          "#":  213,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "chance>OrdinaryChanceUnlockSB"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  790,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  214,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  720,
          "Pos.y":  80,
          "Parent":  -1,
          "#":  215,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "chance>RookieChanceUnlockSB"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  650,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  216,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "chance<=RookieChanceUnlockSB"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  420,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  228,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!ShipIsTakeoff(Player())"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  250,
          "Pos.y":  70,
          "Parent":  -1,
          "#":  242,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  250,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  243,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1030,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  244,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1030,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  245,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1160,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  246,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  610,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  250,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  830,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  251,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1070,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  254,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) < credit_cost || GetNodesFromShip(Player()) < nodes_cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  790,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  255,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player())<credit_cost/4 || GetNodesFromShip(Player())<nodes_cost/4"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  257,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player())<credit_cost/2 || GetNodesFromShip(Player())<nodes_cost/2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  610,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  258,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player())<credit_cost || GetNodesFromShip(Player())<nodes_cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  830,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  261,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1060,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  265,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) < credit_cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1220,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  267,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) < credit_cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1260,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  269,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1110,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  270,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "PlayerState",
          "Pos.x":  -310,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  122,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "[t_OnEnteringForm,t_OnShowingStarInfo,t_OnLeavingForm|]\r\nPlayerActCode();",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "KellerCloneWait",
          "Pos.x":  -110,
          "Pos.y":  0,
          "Parent":  107,
          "#":  123,
          "Move":  1,
          "MoveObj":  104,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "KellerCloneFree",
          "Pos.x":  -110,
          "Pos.y":  -20,
          "Parent":  135,
          "#":  124,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "KellerCloneJump",
          "Pos.x":  -110,
          "Pos.y":  0,
          "Parent":  135,
          "#":  125,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "StateDBTerron",
          "Pos.x":  -100,
          "Pos.y":  0,
          "Parent":  108,
          "#":  126,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "[t_OnItemPickUp,t_OnDeath,t_OnStep|0,11]\r\nDomRuinsActCode();",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "InhibitorState",
          "Pos.x":  -110,
          "Pos.y":  0,
          "Parent":  109,
          "#":  127,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "Tranc2_1",
          "Pos.x":  190,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  128,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "Tranc1_1",
          "Pos.x":  80,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  129,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "Tranc0_1",
          "Pos.x":  -30,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  130,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "StateDBKeller",
          "Pos.x":  -100,
          "Pos.y":  0,
          "Parent":  113,
          "#":  131,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "[t_OnDeath,t_OnStep|11]\r\nDomRuinsActCode();",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "StateDBBlazer",
          "Pos.x":  -100,
          "Pos.y":  0,
          "Parent":  114,
          "#":  132,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "[t_OnDeath,t_OnStep|11]\r\nDomRuinsActCode();",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "FreeState",
          "Pos.x":  -30,
          "Pos.y":  520,
          "Parent":  -1,
          "#":  133,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "InhibitorLanding",
          "Pos.x":  -110,
          "Pos.y":  0,
          "Parent":  121,
          "#":  134,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "DomikJumpToStar",
          "Pos.x":  -120,
          "Pos.y":  0,
          "Parent":  278,
          "#":  279,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "StateNew4",
          "Pos.x":  160,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  281,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "StateNew5",
          "Pos.x":  160,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  282,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "StateNew2",
          "Pos.x":  110,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  283,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "StateNew3",
          "Pos.x":  110,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  284,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "StateNew0",
          "Pos.x":  0,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  285,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "StateNew1",
          "Pos.x":  0,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  286,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "RattorsPack_State",
          "Pos.x":  -120,
          "Pos.y":  0,
          "Parent":  288,
          "#":  289,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "[t_OnEnteringForm,t_OnLeavingForm,t_OnTakingDamageEn,t_OnTakingDamageSp,t_OnTakingDamageMi,t_OnReduceEqForsage,t_OnDeath,t_OnStep|0,1,5,11]\r\nRattorsPackActCode();",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "lastShipId",
          "Pos.x":  440,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  5,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "i",
          "Pos.x":  580,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  6,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ReSupply",
          "Pos.x":  440,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  7,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "kMinUpgrade",
          "Pos.x":  440,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  8,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "kMaxUpgrade",
          "Pos.x":  440,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  9,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "MinGTLToDomAcrynUnlock",
          "Pos.x":  0,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  10,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "RookieChanceUnlockSB",
          "Pos.x":  610,
          "Pos.y":  -100,
          "Parent":  -1,
          "#":  11,
          "Var.Type":  "Int",
          "Init":  "20",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ProfiChanceUnlockSB",
          "Pos.x":  610,
          "Pos.y":  -140,
          "Parent":  -1,
          "#":  12,
          "Var.Type":  "Int",
          "Init":  "40",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DomModUnlocksPerformedSB",
          "Pos.x":  780,
          "Pos.y":  -140,
          "Parent":  -1,
          "#":  13,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "discount",
          "Pos.x":  580,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  14,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DomModUnlocksPerformedCB",
          "Pos.x":  1160,
          "Pos.y":  -140,
          "Parent":  -1,
          "#":  15,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "LastTalkAboutDomAcrynsOnSB",
          "Pos.x":  0,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  16,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DomiksStatsUpdate",
          "Pos.x":  0,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  17,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "MaxReSup",
          "Pos.x":  440,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  18,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "MaxWSup",
          "Pos.x":  440,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  19,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "chance",
          "Pos.x":  580,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  20,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "rand",
          "Pos.x":  580,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  21,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ShuDomiksPlusInit",
          "Pos.x":  0,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  22,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ShuEmitterInit",
          "Pos.x":  0,
          "Pos.y":  70,
          "Parent":  -1,
          "#":  23,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ShuDomiksWinInit",
          "Pos.x":  0,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  24,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "VictoryDayKeller",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  88,
          "#":  87,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "VictoryDayBlazer",
          "Pos.x":  -100,
          "Pos.y":  -200,
          "Parent":  -1,
          "#":  88,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "VictoryDayTerron",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  87,
          "#":  89,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "MinUp",
          "Pos.x":  440,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  90,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "MaxUp",
          "Pos.x":  440,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  91,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "UnknownDomAcrynsTimer",
          "Pos.x":  0,
          "Pos.y":  130,
          "Parent":  -1,
          "#":  92,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "NextBuyInhib",
          "Pos.x":  370,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  93,
          "Var.Type":  "Int",
          "Init":  "-1",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "terronRuinsSpawnTimer",
          "Pos.x":  -150,
          "Pos.y":  0,
          "Parent":  136,
          "#":  94,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "kellerRuinsSpawnTimer",
          "Pos.x":  -150,
          "Pos.y":  0,
          "Parent":  137,
          "#":  95,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "blazerRuinsSpawnTimer",
          "Pos.x":  -150,
          "Pos.y":  0,
          "Parent":  138,
          "#":  96,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "WasKellerCloneSpawned",
          "Pos.x":  -20,
          "Pos.y":  -20,
          "Parent":  123,
          "#":  97,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "TerronBertorsTimer",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  102,
          "#":  98,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "KellerBertorsTimer",
          "Pos.x":  70,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  99,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "BlazerBertorsTimer",
          "Pos.x":  70,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  100,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "BlazerSupersTimer",
          "Pos.x":  70,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  101,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "KellerSupersTimer",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  99,
          "#":  102,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "TerronSupersTimer",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  98,
          "#":  103,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GMaxInhibitorsCount",
          "Pos.x":  -130,
          "Pos.y":  -80,
          "Parent":  109,
          "#":  170,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  true        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr1",
          "Pos.x":  780,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  171,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tdwd1",
          "Pos.x":  680,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  182,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr2",
          "Pos.x":  780,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  183,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "gunUpdateCheck",
          "Pos.x":  440,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  184,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint1",
          "Pos.x":  580,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  190,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "j",
          "Pos.x":  30,
          "Pos.y":  0,
          "Parent":  6,
          "#":  217,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_star",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  299,
          "#":  218,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ship",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  276,
          "#":  219,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "check",
          "Pos.x":  580,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  220,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_planet",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  218,
          "#":  221,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_item",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  219,
          "#":  222,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "flt1",
          "Pos.x":  780,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  223,
          "Var.Type":  "Float",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "flt2",
          "Pos.x":  780,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  224,
          "Var.Type":  "Float",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint2",
          "Pos.x":  580,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  225,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GralgarId",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  234,
          "#":  226,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "InhibHomeStarSpawnTimer",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  170,
          "#":  227,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "HomeStarId",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  226,
          "#":  229,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "OrdinaryChanceUnlockSB",
          "Pos.x":  610,
          "Pos.y":  -120,
          "Parent":  -1,
          "#":  230,
          "Var.Type":  "Int",
          "Init":  "30",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cloned_item",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  222,
          "#":  234,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "InhibOnBonusNum",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  227,
          "#":  235,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "InhibOffBonusNum",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  235,
          "#":  236,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "credit_cost",
          "Pos.x":  580,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  237,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ShuDomiksKamikazeInit",
          "Pos.x":  0,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  238,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "SysCountToDiffArray",
          "Pos.x":  0,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  247,
          "Var.Type":  "Array",
          "Init":  "5",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint3",
          "Pos.x":  580,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  248,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "nodes_cost",
          "Pos.x":  580,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  252,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DomModUnlocksAccessCB",
          "Pos.x":  1160,
          "Pos.y":  -160,
          "Parent":  -1,
          "#":  264,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "MaxChanceUnlockCB",
          "Pos.x":  1000,
          "Pos.y":  -120,
          "Parent":  -1,
          "#":  271,
          "Var.Type":  "Int",
          "Init":  "75",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "MinChanceUnlockCB",
          "Pos.x":  1000,
          "Pos.y":  -100,
          "Parent":  -1,
          "#":  272,
          "Var.Type":  "Int",
          "Init":  "25",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "EvoArmadaInit",
          "Pos.x":  0,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  273,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GTL",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  300,
          "#":  274,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GeneralDiffLevel",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  14,
          "#":  275,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ruin",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  221,
          "#":  276,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "LastSpawnedShipyardNames",
          "Pos.x":  440,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  277,
          "Var.Type":  "Str",
          "Init":  "*",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "RattorGroupsDataArray",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  290,
          "#":  291,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  true        
        },
        {
          "Type":  "TVar",
          "Name":  "tarr1",
          "Pos.x":  780,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  298,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_con",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  182,
          "#":  299,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "bon_num",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  275,
          "#":  300,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  2,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  1,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  104,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  106,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  107,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  108,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  109,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  110,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  111,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  112,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  113,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  114,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  115,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  116,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  117,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  118,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  119,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  120,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  121,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  106,
      "End":  122,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  107,
      "End":  123,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  108,
      "End":  126,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  110,
      "End":  128,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  111,
      "End":  129,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  112,
      "End":  130,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  113,
      "End":  131,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  114,
      "End":  132,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  115,
      "End":  133,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  116,
      "End":  133,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  117,
      "End":  133,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  118,
      "End":  133,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  119,
      "End":  133,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  120,
      "End":  133,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  121,
      "End":  134,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  126,
      "End":  136,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  131,
      "End":  137,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  132,
      "End":  138,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  134,
      "End":  139,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  125,
      "End":  140,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  127,
      "End":  141,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  145,
      "End":  148,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  146,
      "End":  149,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  149,
      "End":  50,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  26,
      "End":  52,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  28,
      "End":  56,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  29,
      "End":  56,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  30,
      "End":  56,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  31,
      "End":  59,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  36,
      "End":  65,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  36,
      "End":  66,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  37,
      "End":  65,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  37,
      "End":  66,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  38,
      "End":  65,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  38,
      "End":  66,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  39,
      "End":  67,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  41,
      "End":  72,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  42,
      "End":  73,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  43,
      "End":  75,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  44,
      "End":  151,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  151,
      "End":  76,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  45,
      "End":  77,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  47,
      "End":  82,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  47,
      "End":  83,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  48,
      "End":  81,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  49,
      "End":  152,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  152,
      "End":  79,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  49,
      "End":  80,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  50,
      "End":  84,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  50,
      "End":  85,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  51,
      "End":  86,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  53,
      "End":  153,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  54,
      "End":  154,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  55,
      "End":  155,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  60,
      "End":  156,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  64,
      "End":  157,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  68,
      "End":  158,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  158,
      "End":  34,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  69,
      "End":  41,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  70,
      "End":  41,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  71,
      "End":  41,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  72,
      "End":  42,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  73,
      "End":  43,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  74,
      "End":  159,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  75,
      "End":  44,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  76,
      "End":  45,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  77,
      "End":  46,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  79,
      "End":  161,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  82,
      "End":  162,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  162,
      "End":  49,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  84,
      "End":  163,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  163,
      "End":  51,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  164,
      "End":  166,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  164,
      "End":  167,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  165,
      "End":  168,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  168,
      "End":  39,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  166,
      "End":  169,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  169,
      "End":  26,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  142,
      "End":  164,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  142,
      "End":  165,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  172,
      "End":  69,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  173,
      "End":  70,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  174,
      "End":  71,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  40,
      "End":  172,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  40,
      "End":  173,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  40,
      "End":  174,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  46,
      "End":  160,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  160,
      "End":  78,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  35,
      "End":  175,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  175,
      "End":  64,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  157,
      "End":  176,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  157,
      "End":  177,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  157,
      "End":  178,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  176,
      "End":  179,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  177,
      "End":  180,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  178,
      "End":  181,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  181,
      "End":  36,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  180,
      "End":  38,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  179,
      "End":  37,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  148,
      "End":  186,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  148,
      "End":  187,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  186,
      "End":  188,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  186,
      "End":  189,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  187,
      "End":  48,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  188,
      "End":  47,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  189,
      "End":  49,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  33,
      "End":  191,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  191,
      "End":  68,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  32,
      "End":  192,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  192,
      "End":  60,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  193,
      "End":  53,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  194,
      "End":  54,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  195,
      "End":  55,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  27,
      "End":  196,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  196,
      "End":  193,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  196,
      "End":  194,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  196,
      "End":  195,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  147,
      "End":  197,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  197,
      "End":  31,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  147,
      "End":  198,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  198,
      "End":  199,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  198,
      "End":  200,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  56,
      "End":  201,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  200,
      "End":  34,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  147,
      "End":  202,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  202,
      "End":  203,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  202,
      "End":  204,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  153,
      "End":  205,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  205,
      "End":  206,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  206,
      "End":  29,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  153,
      "End":  207,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  207,
      "End":  208,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  208,
      "End":  30,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  153,
      "End":  209,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  209,
      "End":  210,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  210,
      "End":  28,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  154,
      "End":  211,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  154,
      "End":  212,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  154,
      "End":  213,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  155,
      "End":  214,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  155,
      "End":  216,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  155,
      "End":  215,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  211,
      "End":  210,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  212,
      "End":  206,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  213,
      "End":  208,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  214,
      "End":  210,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  216,
      "End":  206,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  215,
      "End":  208,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  228,
      "End":  4,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  232,
      "End":  233,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  233,
      "End":  35,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  109,
      "End":  127,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  144,
      "End":  40,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  25,
      "End":  239,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  240,
      "End":  241,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  241,
      "End":  27,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  43,
      "End":  242,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  242,
      "End":  74,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  44,
      "End":  243,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  243,
      "End":  74,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  143,
      "End":  147,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  34,
      "End":  150,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  35,
      "End":  63,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  244,
      "End":  34,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  65,
      "End":  245,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  245,
      "End":  244,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  156,
      "End":  246,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  246,
      "End":  244,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  203,
      "End":  246,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  250,
      "End":  57,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  29,
      "End":  250,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  30,
      "End":  250,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  28,
      "End":  250,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  251,
      "End":  25,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  167,
      "End":  251,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  201,
      "End":  251,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  35,
      "End":  254,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  254,
      "End":  253,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  255,
      "End":  256,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  258,
      "End":  259,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  257,
      "End":  260,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  196,
      "End":  261,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  261,
      "End":  255,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  261,
      "End":  257,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  261,
      "End":  258,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  261,
      "End":  58,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  204,
      "End":  262,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  262,
      "End":  32,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  199,
      "End":  263,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  263,
      "End":  33,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  33,
      "End":  265,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  265,
      "End":  266,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  32,
      "End":  267,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  267,
      "End":  268,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  32,
      "End":  269,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  269,
      "End":  61,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  33,
      "End":  270,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  270,
      "End":  62,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  278,
      "End":  279,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  279,
      "End":  280,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  278,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TStateLink",
      "Begin":  130,
      "End":  285,
      "Nom":  0,
      "Arrow":  true,
      "Expr":  "0",
      "Priority":  0    
    },
    {
      "Type":  "TStateLink",
      "Begin":  285,
      "End":  286,
      "Nom":  0,
      "Arrow":  true,
      "Expr":  "0",
      "Priority":  0    
    },
    {
      "Type":  "TStateLink",
      "Begin":  129,
      "End":  283,
      "Nom":  0,
      "Arrow":  true,
      "Expr":  "0",
      "Priority":  0    
    },
    {
      "Type":  "TStateLink",
      "Begin":  283,
      "End":  284,
      "Nom":  0,
      "Arrow":  true,
      "Expr":  "0",
      "Priority":  0    
    },
    {
      "Type":  "TStateLink",
      "Begin":  128,
      "End":  281,
      "Nom":  0,
      "Arrow":  true,
      "Expr":  "0",
      "Priority":  0    
    },
    {
      "Type":  "TStateLink",
      "Begin":  281,
      "End":  282,
      "Nom":  0,
      "Arrow":  true,
      "Expr":  "0",
      "Priority":  0    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  285,
      "End":  287,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  286,
      "End":  287,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  283,
      "End":  287,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  284,
      "End":  287,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  129,
      "End":  287,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  130,
      "End":  287,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  281,
      "End":  287,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  282,
      "End":  287,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  128,
      "End":  287,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  133,
      "End":  287,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  288,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  289,
      "End":  290,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  288,
      "End":  289,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  294,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  293,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  292,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  296,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  295,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  292,
      "End":  289,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  293,
      "End":  289,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  294,
      "End":  289,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  295,
      "End":  289,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  296,
      "End":  289,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  123,
      "End":  135,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  124,
      "End":  297,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  301,
      "End":  289,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  301,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "Rect.Text":  
  [
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  -50,
      "Rect.Top":  256,
      "Rect.Right":  259,
      "Rect.Bottom":  539,
      "FStyle":  0,
      "FColor":  10710818,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0,300000011920929",
      "AlignX":  0,
      "AlignY":  -1,
      "AlignRect":  false,
      "Text":  " Удалить нахуй к октябрю 2022",
      "Color":  16777215,
      "Font":  "Arial",
      "FontSize":  10,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    }  
  ],
  "BlockPar.EC.Total.Strings":  72,
  "BlockPar.EC":  
  [
    {
      "#":  "19",
      "String":  "Внимание! <br>Радары дальнего действия обнаружили в пограничных системах доминаторские корабли с неизвестной по сей день сигнатурой. Аналитические группы полагают, что доминаторы используют некую новую акриновую модификацию, несовместимую с не принадлежащими их сериям кораблями. Особо бравым разведчикам удалось раздобыть несколько экземпляров не поддающегося поверхностному сканированию оборудования. Передовые умы Содружества уже взялись за детальное изучение представленных материалов, и обещают сделать определённый чёткий вывод в течении нескольких лет."    
    },
    {
      "#":  "20",
      "String":  "Демонтировать <0>"    
    },
    {
      "#":  "21",
      "String":  "Мне надо разблокировать доминаторский акрин"    
    },
    {
      "#":  "22",
      "String":  "Приобрести ингибиторы"    
    },
    {
      "#":  "23",
      "String":  "Я хочу узнать о новой антидоминаторской технологии"    
    },
    {
      "#":  "24",
      "String":  "<Player>, вам так же определённо захочется узнать о возможности вашего участия в программе бета-теста нашей <clr>новой технологии по противодействию организованным нападениям доминаторов<clrEnd>"    
    },
    {
      "#":  "25",
      "String":  "Мы лишь сравнительно недавно мобилизовали персонал для этой задачи и пока не имеем серьезных успехов."    
    },
    {
      "#":  "26",
      "String":  "Мы активно проводим исследования в этом направлении, но, все же, еще далеки от успеха."    
    },
    {
      "#":  "27",
      "String":  "Тем не менее, исследования в этом направлении идут полным ходом и в скором времени мы должны совершить прорыв."    
    },
    {
      "#":  "28",
      "String":  "Ничего я выбирать не буду"    
    },
    {
      "#":  "29",
      "String":  "Мы можем попробовать разблокировать уникальные свойства особых доминаторских модификаций, адаптировав их к коалиционному оборудованию. Мы предупреждаем вас, что эта операция проходит в рамках эксперимента и <clr>снятие блокировки не гарантировано<clrEnd>, вполне возможна <clr>частичная или полная поломка оборудования<clrEnd>. Кроме того, важно упомянуть, что с каждым экспериментом мы будем набираться опыта, и шанс на успех будет увеличиваться.<br><br>С какого оборудования вы бы хотели снять блокировку?"    
    },
    {
      "#":  "30",
      "String":  "К сожалению, нам пока не удается совместить доминаторские модификации с оборудованием Коалиции. <0>"    
    },
    {
      "#":  "31",
      "String":  "В снятии блокировки мы можем задействовать наших лучших специалистов. Они будут работать профессионально, и шанс на неудачу заметно ниже, чем при работе других мастеров. Если ваши финансы их не потянут, то работать будут обычные специалисты; они не должны взорвать ваше оборудование, но косяки в их работе вполне допустимы. А за малую сумму возьмутся работать только стажеры, которые наверняка что-нибудь да поломают.<br><br><br>Исходя из стоимости такой вещи как <0> и процентных расценок наших специалистов, получается следующее:<br><br><br>--------------------------<br>Лучшие специалисты - <1> cr. и <2> нод.<br>Шанс успеха - <3>%<br>Обычные специалисты - <4> cr. и <5> нод.<br>Шанс успеха - <6>%<br>Стажеры - <7> cr. и <8> нод.<br>Шанс успеха - <9>%<br>--------------------------<br><br><br>Кому вы доверите работу?"    
    },
    {
      "#":  "32",
      "String":  "К несчастью, при попытке снятия блокировки ученые допустили критическую ошибку, и теперь <0> годен только на металлолом.<br>Тем не менее, наши специалисты все таки учатся на ошибках и в дальнейшем попробуют не допускать такого плачевного результьтата.<br><br>Желаете повторить эксперимент с другим оборудованием?"    
    },
    {
      "#":  "33",
      "String":  "Отлично, наши специалисты уже успешно совместили <0> с вашим оборудованием. Кроме того, наши мастера приобрели дополнительный опыт, и шанс успешного снятия блокировки повысился. <br><br>Желаете повторить эксперимент с другим оборудованием?"    
    },
    {
      "#":  "34",
      "String":  "Наши специалисты уже совместили <0> с вашим оборудованием.<br><1><br>Но, не смотря на это, наши специалисты все равно набрались опыта и постараются впредь не допускать таких ошибок.<br><br>Желаете повторить эксперимент с другим оборудованием?"    
    },
    {
      "#":  "35",
      "String":  "Извиняй, братан, но мы в этой теме еще не достаточно прошарены. Прилетай через годик-другой, авось у нас и получится что-нибудь."    
    },
    {
      "#":  "36",
      "String":  "Совсем недавно наши парни научились хоть как-то работать с модифицированным доминаторами оборудованием, а именно снимать с него блокировку и приспосабливать под наши системы. Правда, ключевые слова здесь \"хоть как-то\" и мы <clr>совершенно не гарантируем успеха<clrEnd>, но попробовать ты можешь. Обучение спецов и покупка оборудования дорого нам обошлись, так что для участия в эксперименте тебе надо уплатить <0> cr. Ну, что скажешь, <Player>?"    
    },
    {
      "#":  "37",
      "String":  "Наши спецы могут попробовать поработать над оборудкой и приспособить к твоему кораблю. Успех нами не гарантируется, да и всегда есть шанс словить какой-нибудь побочный эффект, не всегда вредный. Обучение спецов и покупка оборудования дорого нам обошлись, так что для участия в эксперименте тебе надо уплатить <0> cr. Ну как, вперед?"    
    },
    {
      "#":  "38",
      "String":  "Спецы уже подготовили свое оборудование. Только укажи вещь, с которой нашим парням работать."    
    },
    {
      "#":  "39",
      "String":  "Итак, <Player>, ты хочешь доверить нам <0>. Стоимость этой операции - <1> cr и <2> нодов, но за твое пиратское звание мы сделаем скидочку в <3><clr>%<clrEnd>. Итого, с тебя <4> cr и <5> нодов. Ну как, пойдет?"    
    },
    {
      "#":  "40",
      "String":  "Спецы уже сняли все ограничения с оборудки, и теперь она может работать, как и задумано.<br><0><br>Наши мастера теперь поднабрались опыта и работают немного лучше. Еще шаманить будем?"    
    },
    {
      "#":  "41",
      "String":  "Извиняй, <Player>, но пока наши парни плясали с бубном, что-то пошло не так, и... в общем, кранты той оборудке. <br>Но не боись, мы уже изрядно наорали на них за такую оплошность и в дальнейшем спецы постараются не ошибаться. Будет еще работенка?"    
    },
    {
      "#":  "42",
      "String":  "Спецы уже сняли все ограничения с оборудки, и теперь она может работать, как и задумано.<br>Наши мастера теперь поднабрались опыта и работают немного лучше. Еще шаманить будем?"    
    },
    {
      "#":  "43",
      "String":  "Извините, рейнджер <Player>, но доминаторы побеждены, и всех специалистов по доминаторскому оборудованию распустили за ненадобностью.<br><br>Попробуйте обратиться к пиратам, возможно, у них найдутся необходимые люди."    
    },
    {
      "#":  "44",
      "String":  "Калибровка трансмиттеров завершена, пользователь <Player> успешно идентифицирован. Установлен приоритет цели А+, подлежит немедленному изучению, все задачи несистемного приоритета отложены."    
    },
    {
      "#":  "45",
      "String":  "Ответ отрицательный, данный логический модуль является независимой единицей."    
    },
    {
      "#":  "46",
      "String":  "В отличие от основной базы данных, модуль FG-42 обладает более ограниченными вычислительными возможностями и предназначался для стороннего проекта."    
    },
    {
      "#":  "47",
      "String":  "Данная информация имеет системный приоритет. Подключение к основной базе данных отсутствует, авторизация невозможна. Корабль <PlayerFull> подлежит немедленному изучению и не обладает правами перезаписи."    
    },
    {
      "#":  "48",
      "String":  "Ответ отрицательный. Текущая задача: изучить <Player> как потенциальную угрозу высшего уровня."    
    },
    {
      "#":  "49",
      "String":  "Клисаны мною еще не изучены. По плану до их изучения осталось около 50 гс. Здесь еще много интересного, хотя, надо признать, в последнее время материала для изучения стало катастрофически мало. Масса различных факторов мешает работе, и окружающее пространство стало однородным."    
    },
    {
      "#":  "50",
      "String":  "Исследования по перемещению между рукавами мною закончены более 1 гс назад.<br>Я покину данный рукав немедленно. А здесь свои задачи останутся выполнять модули для сбора информации."    
    },
    {
      "#":  "51",
      "String":  "Вы ведь заметили, что в системе почти с самого вашего вступления в рейнджеры была размещена одна интересная орудийная платформа с <clr>гиперпространственным ингибитором<clrEnd>? Так вот - это именно наше изобретение, ученых с вашей родины, <0>! Нам удалось создать устройство, которое, оставляя частоту, известную только военным Коалиции, блокирует любые попытки массированного перехода, таким образом, заставляя врага дважды подумать, прежде чем рисковать отправлять свои войска по одному кораблю, легко распиливаемую любым уважающим себя патрулём в системе. К сожалению, нам не удалось стабилизировать систему так, чтобы активировать больше <1> платформ одновременно, не обрушив при этом любую гиперпространственную связь в секторе, да и больше <clr>одной установки в год<clrEnd> мы не можем подключать просто из тактических соображений. Не желаете помочь нашему эксперименту, размещая в подконтрольных Коалиции системах новые установки? Вы лицо свободное, за вами мало какой шпион нарочно следить будет. Почему мы обращаемся именно к вам, окромя фактора неожиданности? Всё достаточно прозаично - вас порекомендовал ваш старый ректор, у которого вам повезло отличиться по молодости и который оказался тем самым ученым, который пронёс на спине большую часть нашего проекта. Да-да, как видите, порой и на войне давние связи бывают чертовски полезны.<br>Ну что, рейнджер? Если вы откажетесь участвовать, мы либо найдём другую кандидатуру, либо сконцентрируем доступные тестовые мощности на уже имеющейся защите. Так что это ваш шанс внести свою лепту.<br>К слову, ингибиторы требуют <2> месяца на активацию, так что первое время установки необходимо охранять от нежелательных вмешательств пиратов или доминаторов. Не забывайте об этом, <Player>, не создавайте брешей в обороне нашего рукава!"    
    },
    {
      "#":  "52",
      "String":  "Ресурсы нашего отдела временно исчерпались, а потому покупка ингибиторов станет доступна не ранее, чем <0>."    
    },
    {
      "#":  "53",
      "String":  "На данный момент стоимость одного ингибитора равняется <0> cr. Знаем, немало, но вы же не считаете, что надо экономить на безопасности жителей Коалиции, <Player>?"    
    },
    {
      "#":  "54",
      "String":  "<0> совершит аварийную посадку на ближайшую обитаемую планету и будет разобран. В качестве компенсации на ваш счет будет переведено <1> cr. Учтите: операцию невозможно будет отменить."    
    },
    {
      "#":  "55",
      "String":  "Энергия успешно перенаправлена на двигатели. <0> взял курс на планету <1>. Компенсация в размере <2> cr переведена на ваш счет."    
    },
    {
      "#":  "56",
      "String":  "Вот как? Ну ладно..."    
    },
    {
      "#":  "57",
      "String":  "Оплачиваю стоимость самых лучших спецов"    
    },
    {
      "#":  "58",
      "String":  "К сожалению, при совмещении оборудование вышло из строя. Впрочем, это не критично и мастера из соседнего отдела смогут устранить дефекты."    
    },
    {
      "#":  "59",
      "String":  "Но совмещение оборудования произошло с ошибками, и его технический уровень упал."    
    },
    {
      "#":  "60",
      "String":  "К несчастью, при снятии блокировки мы повредили оборудование и одна из его характеристик снизилась."    
    },
    {
      "#":  "61",
      "String":  "Пусть поработают обычные специалисты"    
    },
    {
      "#":  "62",
      "String":  "Я заплачу зеленым стажерам!"    
    },
    {
      "#":  "63",
      "String":  "Да, конечно"    
    },
    {
      "#":  "64",
      "String":  "Нет, спасибо"    
    },
    {
      "#":  "65",
      "String":  "Отказываюсь платить по таким грабительским расценкам!"    
    },
    {
      "#":  "66",
      "String":  "А почему бы и нет? Давайте начнем!"    
    },
    {
      "#":  "67",
      "String":  "Нет, спасибо. Я лучше подожду, пока вы нормально освоитесь в этом"    
    },
    {
      "#":  "68",
      "String":  "Ну уж нет, такие деньги я платить не готов!"    
    },
    {
      "#":  "69",
      "String":  "Ага. Поехали!"    
    },
    {
      "#":  "70",
      "String":  "К сожалению, при совмещении оборудование вышло из строя. Впрочем, это всё ерунда, верно?"    
    },
    {
      "#":  "71",
      "String":  "Но при совмещении всплыло несколько досадных багов, из-за которых технический уровень оборудования упал."    
    },
    {
      "#":  "72",
      "String":  "Только вот нашим парням пришлось убрать парочку мешавших деталек, так что характеристики оборудования могли слегка поменяться."    
    },
    {
      "#":  "73",
      "String":  "Э-э, чего? Келлер? Разве я тебя недавно не прикончил? Что за чертовщина здесь происходит?"    
    },
    {
      "#":  "74",
      "String":  "Келлер? Ты же прямо у меня на глазах отправился в гости к клисанам в соседний рукав! Даже ты не мог долететь туда и обратно так быстро. Прыжок сорвался?"    
    },
    {
      "#":  "75",
      "String":  "Ух, братуха, мы же договаривались, что ты не покинешь территорию Нифигаца, в чем же тогда дело?"    
    },
    {
      "#":  "76",
      "String":  "Независимой? То есть, Келлер создал себе двойника?"    
    },
    {
      "#":  "77",
      "String":  "И что же это было за дело такое, что Келлер, обладая потенциально бесконечным рематериализатором, решил создать себе двойника?"    
    },
    {
      "#":  "78",
      "String":  "И правда - вычислительные возможности у тебя куда более ограниченные, чем у папаши. Тот хотя бы у нас местным философом заделался. Давай проверим, сможешь ли ты вовремя сварганить себе собственный материализатор, дружище."    
    },
    {
      "#":  "79",
      "String":  "Так, хорошо, значит, ты сейчас лишён каких-либо целеуказаний, верно?"    
    },
    {
      "#":  "80",
      "String":  "Высшего? Я польщен. Но у меня есть более интересное предложение. Как насчет изучения клисан?"    
    },
    {
      "#":  "81",
      "String":  "У клисан полезной тебе информации просто завались! Кстати, а разве у тебя есть технология перемещения между рукавами нашей галактики? Как скоро ты сможешь улететь?"    
    },
    {
      "#":  "82",
      "String":  "Конец связи"    
    },
    {
      "#":  "83",
      "String":  "Ради общего дела ничего не жалко"    
    },
    {
      "#":  "84",
      "String":  "Для меня это неподъемная сумма"    
    },
    {
      "#":  "85",
      "String":  "Как скажете"    
    },
    {
      "#":  "86",
      "String":  "А что, давайте. Всегда рад помочь старым знакомым, причём с такой-то благородной целью"    
    },
    {
      "#":  "87",
      "String":  "Я подумаю над этим"    
    },
    {
      "#":  "88",
      "String":  "Подтвердить"    
    },
    {
      "#":  "89",
      "String":  "Отменить"    
    },
    {
      "#":  "90",
      "String":  "На мостик"    
    }  
  ]
}