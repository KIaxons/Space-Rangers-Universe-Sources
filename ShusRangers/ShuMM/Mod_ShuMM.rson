{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -566,
  "ViewPos.y":  -192,
  "ScriptName":  "Mod_ShuMM",
  "ScriptFileOut":  "H:\\Mod_ShuMM.scr",
  "ScriptTextOut":  "H:\\Mod_ShuMM.txt",
  "GraphPoint.Count":  58,
  "GraphLink.Count":  28,
  "GraphRectText.Count":  0,
  "Variables.Count":  23,
  "Stars.Count":  1,
  "Planets.Count":  1,
  "Ships.Count":  1,
  "States.Count":  1,
  "Groups.Count":  1,
  "Places.Count":  0,
  "Items.Count":  1,
  "Ethers.Count":  0,
  "Dialogs.Count":  2,
  "DialogMessages.Count":  5,
  "DialogAnswers.Count":  7,
  "Operations.Count":  10,
  "Statements.Count":  5,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "DialogAnswers":      
      [
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  38,
          "#":  6,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "0"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  37,
          "#":  7,
          "Msg":  "<tstr3>",
          "AMsg.Num":  "1"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  15,
          "#":  8,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "2"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  19,
          "#":  9,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "3"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  31,
          "#":  10,
          "Msg":  "<tstr3>",
          "AMsg.Num":  "4"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  13,
          "#":  11,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "5"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  10,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  57,
          "Msg":  "",
          "AMsg.Num":  "6"        
        }      
      ],
      "DialogMessages":      
      [
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  4,
          "#":  5,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "0"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  12,
          "#":  13,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "1"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  14,
          "#":  15,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "2"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  17,
          "#":  18,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "3"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  10,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  56,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "4"        
        }      
      ],
      "Dialogs":      
      [
        {
          "Type":  "TDialog",
          "Name":  "DTauhitFound",
          "Pos.x":  110,
          "Pos.y":  20,
          "Parent":  -1,
          "#":  3        
        },
        {
          "Type":  "TDialog",
          "Name":  "DTauhitBuy",
          "Pos.x":  10,
          "Pos.y":  20,
          "Parent":  -1,
          "#":  16        
        }      
      ],
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "PlayerGroup",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  27,
          "#":  24,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Items":      
      [
        {
          "Type":  "TItem",
          "Name":  "HiddenDisc",
          "Pos.x":  110,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  23,
          "Class":  5,
          "Item.Type":  0,
          "Size":  10,
          "Level":  1,
          "Radius":  150,
          "Owner":  6,
          "Useless":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  110,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  0,
          "Total.Lines":  1,
          "Code.Type":  "Global",
          "Code":          
          [
              "GRun();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  130,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  1,
          "Total.Lines":  65,
          "Code.Type":  "Init",
          "Code":          
          [
              "//Значения переменной TauhitEventStatus:",
              "//-2 - событие завершилось уничтожением диска, получением корпуса, уничтожением ЦР, на котором изучали диск, либо получением альтернативной награды в кредитах;",
              "//-1 - стартовое значение переменной, скрипт запущен, идёт определение планеты для закапывания диска;",
              "// 0 - диск закопан и ждёт игрока на планете, либо уже раскопан игроком и должен быть доставлен в ЦР;",
              "// 1+ - диск сдан на ЦР и начата постройка корпуса, значение переменной превращается в таймер (CurTurn() + N) вплоть до завершения постройки;",
              "",
              "//Создаём диск с чертежом корпуса \"Таухито\"",
              "cur_item = CreateQuestItem('Old_Disk', 2);",
              "ItemCost(cur_item, ItemCost(cur_item) * 3.5);",
              "//Заносим диск в скрипт",
              "LinkItemToScript(cur_item, HiddenDisc);",
              "//И вешаем на него акткод, который завершит квест в случае уничтожения диска",
              "//Впрочем, пофиг, не вешаем, т.к. будет ещё каждый ход все события чекать, а без этой проверки ничего страшного не случится всё равно",
              "//ItemOnActCode(cur_item, 'if(ScriptItemActionType(t_OnItemDestroy)) TauhitEventStatus = -2;');",
              "",
              "while(TauhitEventStatus <= -1)",
              "{",
              "    //Выбираем случайную (не из скрытого сектора) систему для закапывания диска",
              "    cur_star = StarNearbyStars(InitStar, Rnd(35, 60));",
              "    while(StarToCon(cur_star) == StarToCon(PlanetToStar(PlanetPirateClan()))) cur_star = StarNearbyStars(InitStar, Rnd(35, 55));",
              "",
              "    //Перебираем её планеты и ищем первую незаселёнку",
              "    tint1 = 0;",
              "    ArrayClear(tarr1);",
              "    for(i = 0; i < StarPlanets(cur_star); i = i + 1)",
              "    {",
              "        cur_planet = StarPlanets(cur_star, i);",
              "        if(PlanetOwner(cur_planet) != 6) continue;",
              "        ArrayAdd(tarr1, cur_planet);",
              "        tint1 = tint1 + 1;",
              "    }",
              "",
              "    //Случайно определяем одну из незаселённых планет системы",
              "    if(tint1)",
              "    {",
              "        cur_planet = tarr1[RndObject(1, tint1, cur_star)];",
              "        AddItemToPlanet(cur_planet, cur_item);",
              "        TauhitEventStatus = 0;",
              "    }",
              "}",
              "",
              "//Объявляем новое орудие (Ракетомет с модификацией \"Торпедо\")",
              "InventShuMMCustomGuns();",
              "gunUpdateCheck = CT('Items.Weapon.CustomWeapon.StatsVersion.ShuMM');",
              "",
              "//Функция для объявления и обновления кастомных орудий",
              "function InventShuMMCustomGuns()",
              "{",
              "    for(i = 1; i <= CT('Items.Weapon.CustomWeapon.ShuMM.Count'); i = i + 1)",
              "    {",
              "        //По очереди выбираем системное название каждой новой пушки из Lang",
              "        tstr1 = CT('Items.Weapon.CustomWeapon.ShuMM.' + i);",
              "        tstr2 = 'Items.Weapon.CustomWeapon.';",
              "        //Прописываем пушку/сбрасываем уже прописанную пушку до уровня базовой из оригинальной игры",
              "        cur_item = InventNewCustomWeapon(tstr1, t_Weapon1 - 1 + CT('Items.Weapon.OriginalWeaponType.' + CT(tstr2 + tstr1 + '.BaseGun')));",
              "        //Задаём характеристики оружия",
              "        SetCustomWeaponShotData(cur_item, CT(tstr2 + tstr1 + '.ShotType'), CT(tstr2 + tstr1 + '.Speed'), CT(tstr2 + tstr1 + '.AverageRadius'), CT(tstr2 + tstr1 + '.SecondaryDamageRadius'), CT(tstr2 + tstr1 + '.MiningFactor'), CT(tstr2 + tstr1 + '.ShotsPerTurn'));",
              "        SetCustomWeaponDamageData(cur_item, CT(tstr2 + tstr1 + '.MinDamage'), CT(tstr2 + tstr1 + '.MaxDamage'), CT(tstr2 + tstr1 + '.DamageSet'), CT(tstr2 + tstr1 + '.mWeaponDamage'));",
              "        SetCustomMissileWeaponStats(cur_item, CT(tstr2 + tstr1 + '.MissileRadius'), CT(tstr2 + tstr1 + '.MissileMaxSpeed'), CT(tstr2 + tstr1 + '.MissileMinSpeed'), CT(tstr2 + tstr1 + '.MissileChanceToBeHit'));",
              "        SetCustomWeaponPrimaryData(cur_item, CT(tstr2 + tstr1 + '.TechLevel'), t_Weapon1 - 1 + CT('Items.Weapon.OriginalWeaponType.' + CT(tstr2+tstr1+'.InventTechLevel')), t_Weapon1 - 1 + CT('Items.Weapon.OriginalWeaponType.' + CT(tstr2 + tstr1 + '.ArcadeType')));",
              "        SetCustomWeaponSizeAndCost(cur_item, CT(tstr2 + tstr1 + '.kCost'), CT(tstr2 + tstr1 + '.AverageSize'));",
              "        SetCustomWeaponAvailability(cur_item, CT(tstr2 + tstr1 + '.StoreAvailability'));",
              "        SetCustomWeaponSE(cur_item, CT(tstr2 + tstr1 + '.ShotEffectPath'), CT(tstr2 + tstr1 + '.SplashEffectPath'), CT(tstr2 + tstr1 + '.MissileExplosionEffectPath'), CT(tstr2 + tstr1 + '.ShotEffectPalette'));",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  170,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  2,
          "Total.Lines":  215,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Автоматическое обновление характеристик кастомных орудий",
              "//Срабатывает, только если параметр StatsVersion для ShuMM был изменён",
              "if(gunUpdateCheck != CT('Items.Weapon.CustomWeapon.StatsVersion.ShuMM'))",
              "{",
              "    InventShuMMCustomGuns();",
              "    gunUpdateCheck = CT('Items.Weapon.CustomWeapon.StatsVersion.ShuMM');",
              "}",
              "",
              "GTL = GalaxyTechLevel();",
              "if(GTL >= 4)",
              "{",
              "    //Раскидываем по НБ и ВБ ракетометы с модификацией \"Торпедо\"",
              "    if(countTorpedoMods <= CurTurn())",
              "    {",
              "        //Ищем все подходящие корабли и станции в Галактике, и начинаем их подробный перебор",
              "        tint1 = BuildListOfNewShips(tarr1, 0, 2+16+64+256+512, 1+2+4+8+16, 1, '');",
              "        if(tint1) //Если был обнаружен хотя бы один новый корабль, подходящий по заданным фильтрам",
              "        {",
              "            for(i = 0; i < ArrayDim(tarr1); i = i + 1)",
              "            {",
              "                cur_ship = tarr1[i];",
              "",
              "                if(ShipInScript(cur_ship, 0)) continue;",
              "",
              "                //Пропускаем корабли, которые не находятся на планете/станции",
              "                tint1 = ObjectType(cur_ship);",
              "                if(tint1 == 3)",
              "                {",
              "                    if(!GetShipPlanet(cur_ship))",
              "                    {",
              "                        if(!GetShipRuins(cur_ship)) continue;",
              "                    }",
              "                }",
              "",
              "                //Если выпал корабль",
              "                if(tint1 == 3)",
              "                {",
              "                    if(RndObject(1, 100, cur_ship) <= 30)",
              "                    {",
              "                        //Определяем ТУ будущего ракетомета",
              "                        tint1 = RndObject(1, 5, cur_ship);",
              "                        if(tint1 <= 3) tint1 = 0;",
              "                        else tint1 = 1;",
              "                        if(GTL - tint1 < 1) tint1 = 1;",
              "                        else tint1 = GTL - tint1;",
              "",
              "                        //Случайно определяем расу",
              "                        tint2 = PlanetOwner(NearCivilPlanet(cur_ship));",
              "                        if(tint2 > 4) tint2 = ShipOwner(cur_ship);",
              "",
              "                        //И вес будущего ракетомета",
              "                        j = GetCustomWeaponData('MissileLauncherTorpedo', 'AverageSize');",
              "                        j = j * RndObject(50, 200, cur_ship) / 100;",
              "                        if(j <= 0) j = 1;",
              "",
              "                        //Создаём, акринируем, после чего, наконец, добавляем ракетомет на корабль",
              "                        cur_item = CreateCustomWeapon('MissileLauncherTorpedo', j, tint1, tint2);",
              "                        SpecialToEquipment(FindBonusByNameInCfg('ShuMM_Torpedo'), cur_item);",
              "                        AddItemToShip(cur_ship, cur_item);",
              "                        ArrangeItems(cur_ship);",
              "                    }",
              "                }",
              "                //Если выпала станция",
              "                else",
              "                {",
              "                    if(RndObject(1, 100, cur_ship) <= 25)",
              "                    {",
              "                        //Определяем ТУ будущего ракетомета",
              "                        tint1 = RndObject(1, 6, cur_ship);",
              "                        if(tint1 <= 3) tint1 = 0;",
              "                        else if(tint1 <= 5) tint1 = 1;",
              "                        else tint1 = 2;",
              "                        if(GTL - tint1 < 1) tint1 = 1;",
              "                        else tint1 = GTL - tint1;",
              "",
              "                        //Случайно определяем расу",
              "                        tint2 = PlanetOwner(NearCivilPlanet(cur_ship));",
              "                        if(tint2 > 4) tint2 = RndObject(0, 4, cur_ship);",
              "",
              "                        //И вес будущего ракетомета",
              "                        j = GetCustomWeaponData('MissileLauncherTorpedo', 'AverageSize');",
              "                        j = j * RndObject(50, 200, cur_ship) / 100;",
              "                        if(j <= 0) j = 1;",
              "",
              "                        //Создаём, акринируем, после чего, наконец, добавляем ракетомет в магазин",
              "                        cur_item = CreateCustomWeapon('MissileLauncherTorpedo', j, tint1, tint2);",
              "                        SpecialToEquipment(FindBonusByNameInCfg('ShuMM_Torpedo'), cur_item);",
              "                        AddItemToShop(cur_ship, cur_item);",
              "                    }",
              "                }",
              "            }",
              "        }",
              "",
              "        countTorpedoMods = CurTurn() + Rnd(75, 150);",
              "    }",
              "",
              "    //Раскидываем по магазинам субреакторы",
              "    if(GTL >= 5)",
              "    {",
              "        if(countSubreactors <= CurTurn())",
              "        {",
              "            //Начинаем перебирать все системы и станции в них - ищем ВБ",
              "            ArrayClear(tarr1);",
              "            for(i = 0; i < GalaxyStars(); i = i + 1)",
              "            {",
              "                cur_star = GalaxyStar(i);",
              "                //Пропускаем доминаторские и \"кастомные\" системы",
              "                if(StarOwner(cur_star) == 1) continue;",
              "                if(StarCustomFaction(cur_star) != '') continue;",
              "",
              "                //Ищем среди станций системы подходящие для продажи субреакторов",
              "                for(j = 0; j < StarRuins(cur_star); j = j + 1)",
              "                {",
              "                    cur_ruin = StarRuins(cur_star, j);",
              "                    tstr1 = ShipType(cur_ruin);",
              "",
              "                    check = 0;",
              "                    if(tstr1 == 'RC') check = 1;",
              "                    else if(tstr1 == 'TC') check = 1;",
              "                    else if(tstr1 == 'PB') check = 1;",
              "                    else if(tstr1 == 'BK') check = 1;",
              "",
              "                    //Проверяем, имеется в продаже станции схожий акрин и если да, то удаляем его",
              "                    if(check)",
              "                    {",
              "                        //Имеется случайный шанс, что в этот раз на данную станцию акрин добавлен не будет",
              "                        if(RndObject(1, 100, cur_ruin) <= 30) continue;",
              "",
              "                        for(k = 0; k < ShopItems(cur_ruin); k = k + 1)",
              "                        {",
              "                            cur_item = ShopItems(cur_ruin, k);",
              "",
              "                            check = EqSpecial(cur_item);",
              "                            if(check > -1)",
              "                            {",
              "                                tstr1 = BonusNumInCfg(check);",
              "                                if(!findsubstr(tstr1, 'ShuMM_AuxiliarySubreactor'))",
              "                                {",
              "                                    FreeItem(GetItemFromShop(cur_ruin, k));",
              "                                }",
              "                            }",
              "                        }",
              "",
              "                        ArrayAdd(tarr1, cur_ruin);",
              "                    }",
              "                }",
              "            }",
              "",
              "            //Если нашли, то выбираем из общего числа найденных станций несколько случайных",
              "            tint1 = ArrayDim(tarr1) - 1;",
              "            if(tint1)",
              "            {",
              "                j = RndObject(2, 4, cur_star);",
              "                if(j > tint1) j = tint1;",
              "                while(j)",
              "                {",
              "                    //Случайно определяем станцию, на которую будет добавлен субреактор",
              "                    tint1 = RndObject(1, j, cur_star);",
              "                    cur_ruin = tarr1[tint1];",
              "                    //После чего удаляем её из списка",
              "                    ArrayDelete(tarr1, tint1);",
              "",
              "                    //Определяем ТУ будущего субреактора",
              "                    tint1 = RndObject(1, 6, cur_ruin);",
              "                    if(tint1 <= 3) tint1 = 0;",
              "                    else if(tint1 <= 5) tint1 = 1;",
              "                    else tint1 = 2;",
              "                    if(GTL - tint1 < 5) tint1 = 5;",
              "                    else tint1 = GTL - tint1;",
              "",
              "                    //Определяем расу",
              "                    tint2 = PlanetOwner(NearCivilPlanet(cur_ruin));",
              "                    if(tint2 == 5 || tint2 == 6)",
              "                    {",
              "                        j = j - 1;",
              "                        continue;",
              "                    }",
              "                    //И вес будущего субреактора",
              "                    //Малоки",
              "                    if(tint2 == 0) i = round(1.6 * CT('Items.DefGenerator.AverageSize')) + RndObject(-5, 4, cur_ruin);",
              "                    //Пеленги",
              "                    else if(tint2 == 1) i = round(1.2 * CT('Items.DefGenerator.AverageSize')) + RndObject(-3, 4, cur_ruin);",
              "                    //Люди",
              "                    else if(tint2 == 2) i = round(1.0 * CT('Items.DefGenerator.AverageSize')) + RndObject(-3, 5, cur_ruin);",
              "                    //Фэяне",
              "                    else if(tint2 == 3) i = round(0.6 * CT('Items.DefGenerator.AverageSize')) + RndObject(-1, 6, cur_ruin);",
              "                    //Гаальцы",
              "                    else if(tint2 == 4) i = round(0.8 * CT('Items.DefGenerator.AverageSize')) + RndObject(-2, 6, cur_ruin);",
              "                    //Пираты",
              "                    else i = round(1.3 * CT('Items.DefGenerator.AverageSize')) + RndObject(-3, 4, cur_ruin);",
              "                    if(j <= 0) i = 1;",
              "",
              "                    //Создаём, акринируем, после чего, наконец, добавляем субреактор в магазин",
              "                    cur_item = CreateEquipment(t_DefGenerator, i, tint1, tint2);",
              "                    SetEquipmentStats(cur_item, 0, 0);",
              "                    SpecialToEquipment(FindBonusByNameInCfg('ShuMM_AuxiliarySubreactor' + tint1), cur_item);",
              "                    AddItemToShop(cur_ruin, cur_item);",
              "",
              "                    j = j - 1;",
              "                }",
              "            }",
              "",
              "            countSubreactors = CurTurn() + Rnd(75, 150);",
              "        }",
              "    }",
              "}",
              "",
              "if(TauhitEventStatus > 0)",
              "{",
              "    cur_ruin = IdToShip(TauhitStationId);",
              "    //Завершаем квест если ЦР, на который игрок стал диск, был уничтожен",
              "    if(!cur_ruin) TauhitEventStatus = -2;",
              "    //Выводим уведомление, если постройка \"Таухито\" успешно завершилась",
              "    else if(TauhitEventStatus == CurTurn()) NewsAdd(Format(CT('Script.Mod_ShuMM.TauhitReadyNotification'), '<Station'+'>', ShipName(cur_ruin), '<Star'+'>', Name(ShipStar(cur_ruin)), '255,240,100'));",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  3,
          "#":  4,
          "Total.Lines":  6,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Определяем сумму альтернативной денежной награды за доставку диска",
              "cost = ItemCost(HiddenDisc) * 5 + GalaxyMoney(0);",
              "",
              "tstr1 = '</color>' + Format(CT('Script.Mod_ShuMM.DiskFoundOffer'), '<Cost'+'>', cost);",
              "tstr2 = '</color>' + CT('Script.Mod_ShuMM.PlayerWantTauhit');",
              "tstr3 = '</color>' + Format(CT('Script.Mod_ShuMM.PlayerWantMoney'), '<Cost'+'>', cost);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  6,
          "#":  12,
          "Total.Lines":  14,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Игрок решил дождаться сборки корпуса для дальнейшей его покупки",
              "//Заводим таймер до завершения постройки корпуса \"Таухито\" и запоминаем нужный ЦР",
              "tint1 = RndObject(32, 64, cur_ruin) + PortionInDiapason(GalaxyTechLevel(), 1, 8, 256, 32);",
              "TauhitEventStatus = CurTurn() + tint1;",
              "TauhitStationId = Id(cur_ruin);",
              "",
              "//Удаляем из трюма диск с чертежом",
              "cur_item = ScriptItemToItem(HiddenDisc);",
              "//Сперва выводим диск из скрипта, чтобы не сработало его событие",
              "ReleaseItemFromScript(HiddenDisc);",
              "FreeItem(GetItemFromShip(Player(), cur_item));",
              "",
              "tstr1 = '</color>' + Format(CT('Script.Mod_ShuMM.TauhitConstructionStarted'), '<TimeLeft'+'>', tint1);",
              "tstr2 = '</color>' + CT('Script.Mod_ShuMM.PlayerOnTauhitConstructionStarted');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  7,
          "#":  14,
          "Total.Lines":  15,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Игрок решил взять награду в кредитах",
              "ShipMoney(Player(), ShipMoney(Player()) + cost);",
              "Sound('Sound.Buy');",
              "",
              "//Удаляем из трюма диск с чертежом",
              "cur_item = ScriptItemToItem(HiddenDisc);",
              "//Сперва выводим диск из скрипта, чтобы не сработало его событие",
              "ReleaseItemFromScript(HiddenDisc);",
              "FreeItem(GetItemFromShip(Player(), cur_item));",
              "",
              "//Завершаем событие с поиском диска и получением корпуса \"Таухито\"",
              "TauhitEventStatus = -2;",
              "",
              "tstr1 = '</color>' + Format(CT('Script.Mod_ShuMM.TauhitDesignSold'), '<Cost'+'>', cost);",
              "tstr2 = '</color>' + CT('Script.Mod_ShuMM.PlayerOnTauhitDesignSold');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  16,
          "#":  17,
          "Total.Lines":  27,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Определяем цену корпуса \"Таухито\"",
              "bonus = FindBonusByNameInCfg('ShuMM_TauhitHull');",
              "tint1 = 175 * GalaxyTechLevel() + 100; //Размер корпуса зависит от ГТУ (максимальный - 1500)",
              "cur_item = CreateHull(0, tint1, GalaxyTechLevel(), 2);",
              "SpecialToEquipment(bonus, cur_item);",
              "cost = ItemCost(cur_item);",
              "",
              "if(GetGameOptions('FontDialog') == '0') tstr1 = '</color>-----------------------------------------------------------';",
              "else if(GetGameOptions('FontDialog') == '1') tstr1 = '</color>------------------------------------------';",
              "else if(GetGameOptions('FontDialog') == '2') tstr1 = '</color>-------------------------------------------';",
              "else tstr1 = '</color>--------------------------------------';",
              "tstr2 = Format('<color=0,50,200>' + BonusName(bonus) + '</color> [<color=0,132,15>' + ItemSize(cur_item) + '</color>]:' + \"<br>\" + BonusText(bonus), '<color=248,252,248>', '', '<color=255,240,100>', '<color=0,50,200>', '');",
              "tstr1 = '</color>' + Format(CT('Script.Mod_ShuMM.TauhitPrice'),",
              "                               '<DefBreak'+'>', tstr1,",
              "                               '<TauhitTechStats'+'>', '</color>' + tstr2,",
              "                               '<Cost'+'>', cost);",
              "",
              "//Удаляем \"расчётный\" корпус во избежание утечки памяти",
              "FreeItem(cur_item);",
              "",
              "tstr2 = '</color>' + CT('Script.Mod_ShuMM.PlayerBuyTauhit');",
              "if(ShipMoney(Player()) < cost)",
              "{",
              "    DeleteTags(tstr2);",
              "    AddDialogBlock(tstr2, 1);",
              "}",
              "tstr3 = '</color>' + CT('Script.Mod_ShuMM.PlayerRefuseToBuyTauhit');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  9,
          "#":  20,
          "Total.Lines":  14,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Определяем цену корпуса \"Таухито\"",
              "cur_item = CreateHull(0, tint1, GalaxyTechLevel(), 2);",
              "SpecialToEquipment(bonus, cur_item);",
              "//На всякий случай выставляем пересозданному корпусу уже подсчитанную ранее цену",
              "ItemCost(cur_item, cost);",
              "AddItemToStorage(cur_ruin, cur_item);",
              "",
              "ShipMoney(Player(), ShipMoney(Player()) - cost);",
              "Sound('Sound.Buy');",
              "",
              "//Завершаем событие с поиском диска и получением корпуса \"Таухито\"",
              "TauhitEventStatus = -2;",
              "",
              "tstr1 = '</color>' + CT('Script.Mod_ShuMM.AfterBuyTauhit');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  150,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  33,
          "Total.Lines":  26,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "if(TauhitEventStatus >= 0)",
              "{",
              "    cur_ruin = GetShipRuins(Player());",
              "    if(cur_ruin)",
              "    {",
              "        tstr1 = ShipType(cur_ruin);",
              "        //Если игрок находится в центре рейнджеров",
              "        if(tstr1 == 'RC')",
              "        {",
              "            //Если событие на поиск чертежей и получение корпуса \"Таухито\" ещё не было завершено ни одним из способов",
              "            if(!TauhitEventStatus)",
              "            {",
              "                if(ItemIn(HiddenDisc, Player()))",
              "                {",
              "                    tstr1 = CT('Script.Mod_ShuMM.PlayerDiskFound');",
              "                    AddDialogInject('DTauhitFound', '', tstr1, 1);",
              "                }",
              "            }",
              "            else if(TauhitEventStatus <= CurTurn() && Id(cur_ruin) == TauhitStationId)",
              "            {",
              "                tstr1 = CT('Script.Mod_ShuMM.PlayerWantToBuyTauhit');",
              "                AddDialogInject('DTauhitBuy', '', tstr1, 2);",
              "            }",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  30,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  55,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1 = '</color>' + CT('Script.Mod_ShuMM.AfterRefuseToBuyTauhit');"          
          ]        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "InitPlanet",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  26,
          "#":  27,
          "Race":  62,
          "Owner":  62,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  10,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  22,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "InitStar",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  22,
          "#":  26,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "Statements":      
      [
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  18,
          "#":  19,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  170,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  28,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!ShipIsTakeoff(Player())"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  18,
          "#":  31,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  5,
          "#":  37,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  5,
          "#":  38,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "PlayerState",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  24,
          "#":  25,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "i",
          "Pos.x":  240,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  21,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_item",
          "Pos.x":  320,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  29,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint1",
          "Pos.x":  240,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  30,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ruin",
          "Pos.x":  320,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  32,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cost",
          "Pos.x":  240,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  34,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr1",
          "Pos.x":  410,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  35,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "TauhitEventStatus",
          "Pos.x":  110,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  36,
          "Var.Type":  "Int",
          "Init":  "-1",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_star",
          "Pos.x":  320,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  39,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_planet",
          "Pos.x":  320,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  40,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tarr1",
          "Pos.x":  470,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  41,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "countSubreactors",
          "Pos.x":  110,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  42,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "check",
          "Pos.x":  240,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  43,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "j",
          "Pos.x":  240,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  44,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GTL",
          "Pos.x":  240,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  45,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint2",
          "Pos.x":  240,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  46,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "gunUpdateCheck",
          "Pos.x":  110,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  47,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr2",
          "Pos.x":  410,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  48,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "countTorpedoMods",
          "Pos.x":  110,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  49,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ship",
          "Pos.x":  320,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  50,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "bonus",
          "Pos.x":  240,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  51,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "k",
          "Pos.x":  270,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  52,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "TauhitStationId",
          "Pos.x":  110,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  53,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr3",
          "Pos.x":  410,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  54,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  3,
      "End":  4,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  4,
      "End":  5,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  6,
      "End":  12,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  12,
      "End":  13,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  13,
      "End":  11,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  7,
      "End":  14,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  14,
      "End":  15,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  15,
      "End":  8,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  16,
      "End":  17,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  17,
      "End":  18,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  18,
      "End":  19,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  19,
      "End":  9,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  9,
      "End":  20,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  24,
      "End":  25,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  24,
      "End":  27,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  22,
      "End":  26,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  27,
      "End":  26,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  28,
      "End":  2,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  18,
      "End":  31,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  31,
      "End":  10,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  5,
      "End":  37,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  37,
      "End":  7,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  5,
      "End":  38,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  38,
      "End":  6,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  20,
      "End":  56,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  10,
      "End":  55,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  55,
      "End":  56,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  56,
      "End":  57,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "BlockPar.EC.Total.Strings":  2,
  "BlockPar.EC":  
  [
    {
      "#":  "10",
      "String":  "<0>"    
    },
    {
      "#":  "18",
      "String":  "<br>"    
    }  
  ]
}