{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  476,
  "ViewPos.y":  342,
  "ScriptName":  "Mod_ShuBounty",
  "ScriptFileOut":  "H:\\Mod_ShuBounty.scr",
  "ScriptTextOut":  "H:\\Mod_ShuBounty.txt",
  "GraphPoint.Count":  121,
  "GraphLink.Count":  79,
  "GraphRectText.Count":  5,
  "Variables.Count":  29,
  "Stars.Count":  1,
  "Planets.Count":  1,
  "Ships.Count":  1,
  "States.Count":  1,
  "Groups.Count":  1,
  "Places.Count":  0,
  "Items.Count":  0,
  "Ethers.Count":  0,
  "Dialogs.Count":  13,
  "DialogMessages.Count":  21,
  "DialogAnswers.Count":  19,
  "Operations.Count":  18,
  "Statements.Count":  16,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "DialogAnswers":      
      [
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  41,
          "#":  31,
          "Msg":  "Далее",
          "AMsg.Num":  "0"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  45,
          "#":  32,
          "Msg":  "Вас понял",
          "AMsg.Num":  "1"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  43,
          "#":  33,
          "Msg":  "Спасибо!",
          "AMsg.Num":  "2"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  44,
          "#":  34,
          "Msg":  "Далее",
          "AMsg.Num":  "3"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  46,
          "#":  35,
          "Msg":  "Ясно",
          "AMsg.Num":  "4"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  47,
          "#":  36,
          "Msg":  "Спасибо!",
          "AMsg.Num":  "5"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1200,
          "Pos.y":  600,
          "Parent":  -1,
          "#":  37,
          "Msg":  "И вам спасибо!",
          "AMsg.Num":  "6"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1230,
          "Pos.y":  580,
          "Parent":  -1,
          "#":  38,
          "Msg":  "Вот как? Ну ладно...",
          "AMsg.Num":  "7"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1160,
          "Pos.y":  600,
          "Parent":  -1,
          "#":  39,
          "Msg":  "Вот как? Ну ладно...",
          "AMsg.Num":  "8"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  970,
          "Pos.y":  820,
          "Parent":  -1,
          "#":  40,
          "Msg":  "Рад был помочь",
          "AMsg.Num":  "9"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1090,
          "Pos.y":  820,
          "Parent":  -1,
          "#":  80,
          "Msg":  "Вот как? Ну ладно...",
          "AMsg.Num":  "10"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1620,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  81,
          "Msg":  "Сдать кристаллы",
          "AMsg.Num":  "11"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1670,
          "Pos.y":  520,
          "Parent":  -1,
          "#":  82,
          "Msg":  "Не сейчас",
          "AMsg.Num":  "12"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1560,
          "Pos.y":  560,
          "Parent":  -1,
          "#":  83,
          "Msg":  "Понял",
          "AMsg.Num":  "13"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1810,
          "Pos.y":  560,
          "Parent":  -1,
          "#":  84,
          "Msg":  "Понял",
          "AMsg.Num":  "14"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  1740,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  85,
          "Msg":  "Оформляй перевод",
          "AMsg.Num":  "15"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  87,
          "#":  86,
          "Msg":  "Я не буду ничего продавать",
          "AMsg.Num":  "16"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  115,
          "#":  116,
          "Msg":  "",
          "AMsg.Num":  "17"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  111,
          "#":  117,
          "Msg":  "<tstr1>",
          "AMsg.Num":  "18"        
        }      
      ],
      "DialogMessages":      
      [
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  56,
          "#":  41,
          "Msg":  "Как вам прекрасно известно, <Player>, на дворе идет война с пиратами, а пытающиеся воевать с интервентами рейнджеры, как правило, получают сплошные убытки, из-за чего престиж борьбы с кланом сильно падает.<br><br>КВСМК приняло решение о выплачивании вольным пилотам премий за головы пиратов. На данный момент ставка за голову бандита составляет <GalaxyMoney(1,0)*GalaxyTechLevel()/3> cr., но награда может варьироваться в зависимости от силы пирата. За помощь в ликвидации пирата выплачивается скромная сумма - <GalaxyMoney(0,4)/3> cr.",
          "DMsg.Num":  "0"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  30,
          "Pos.y":  0,
          "Parent":  31,
          "#":  42,
          "Msg":  "Деньги, выплачиваемые Командованием за уничтожение пиратов, для удобства можно получать также и через платежный сервис <clr>West-Uni<clrEnd>, доступ к нему вы можете получить с мостика своего корабля. В качестве комиссии сервис взимает лишь <12+GalaxyTechLevel()>% от суммы перевода.<br><br>К вашему сведению, при вступлении в пиратский клан на ваш счет прекращает поступать награда за головы пиратов, а уже накопленная сумма обнуляется. Командование не любит предателей.",
          "DMsg.Num":  "1"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  57,
          "#":  43,
          "Msg":  "Так держать, <Player>! Гонорар за сбитых пиратов в размере <WasPir> уже переведен на ваш счет.",
          "DMsg.Num":  "2"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  22,
          "#":  44,
          "Msg":  "Как ты, конечно, знаешь, <Player>, пираты сейчас воюют с Коалицией. Только вот проблема в том, что многие пираты, в особенности мелкие бандиты и рейнджеры-перебежчики, еще несколько лет назад считали своим священным долгом грабить мирняк, а на такой риск, как борьба с вояками, идти никто не хотел.<br><br>Наши авторитеты между собой покумекали, да и порешили, что так, мол, не пойдет. Для повышения престижа \"военного пиратства\", мы ввели небольшую премию за убийство военных и рейнджеров. Сейчас она составляет <GalaxyMoney(0,3)*GalaxyTechLevel()/3> cr. за голову солдафона и <GalaxyMoney(0,2)*GalaxyTechLevel()/3> cr. за одного рейнджера, но \"ценник\" может изменяться в зависимости от силы пристреленного. За помощь в убийстве военного мы накидываем <GalaxyMoney(0,3)/3> cr., рейнджера - <GalaxyMoney(0,2)/3> cr.",
          "DMsg.Num":  "3"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  55,
          "#":  45,
          "Msg":  "На данный момент нами не замечено серьезной активности со стороны пиратов, и поэтому Командованием было принято решение временно приостановить выплату наград за головы пиратов. Вы свободны.",
          "DMsg.Num":  "4"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  34,
          "#":  46,
          "Msg":  "Бабки, которые мы отстегиваем за головы прислужников фараонов, ты, для удобства, можешь получить не только на нашей базе, но и мгновенно, с помощью сервиса <clr>West-Uni<clrEnd>. Доступ к нему ты можешь получить с мостика корабля. Правда, они хапают себе <12+GalaxyTechLevel()>% от награды, так что иногда лучше не полениться и забрать всю сумму.<br><br>А, да, чуть не забыл: при переходе на другую сторону, денежки за расстрел \"хороших парней\" на твой кошелечек больше не капают. Пираты не рады предателям.",
          "DMsg.Num":  "5"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  58,
          "#":  47,
          "Msg":  "Классная работа, <Player>. Бабки, <WasWar> cr., уже на твоем счету.",
          "DMsg.Num":  "6"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1200,
          "Pos.y":  560,
          "Parent":  -1,
          "#":  48,
          "Msg":  "Извиняй, кореш, но от Коалиции уже и не осталось-то ничего, так что мы решили остановить выдачу премий за борьбу с фараонами. Если и остались какие-то рейнджеры-одиночки, то они все равно уже не представляют угрозы.<br><br>Тем, у кого еще оставались не получены награды, мы решили вернуть половину от их суммы. В твоем случае, это составляет <WarriorBounty/2> cr. Забирай эти деньги, и спасибо тебе от всего нашего братства за помощь в войне.",
          "DMsg.Num":  "7"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1230,
          "Pos.y":  560,
          "Parent":  -1,
          "#":  49,
          "Msg":  "Извиняй, кореш, но от Коалиции уже и не осталось-то ничего, так что мы решили остановить выдачу премий за борьбу с фараонами. Если и остались какие-то рейнджеры-одиночки, то они все равно уже не представляют угрозы.",
          "DMsg.Num":  "8"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1160,
          "Pos.y":  560,
          "Parent":  -1,
          "#":  50,
          "Msg":  "Извиняй, кореш, но клан-то наш все былое величие порастерял, и на награды бабки больше не выделяются. Ты пока сам за себя, брат.",
          "DMsg.Num":  "9"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1050,
          "Pos.y":  800,
          "Parent":  -1,
          "#":  51,
          "Msg":  "Вы, <Player>, не задумывались о том, что космос все чаще засоряется обломками, бесхозным оборудованием, минералами?<br>Наиболее часто в космосе встречаются цистерны, поэтому нами и гаальской космосозащитной организацией \"Гринспейс\" было решено начать их сбор. Таким образом, мы получаем и топливо для переработки, и куда более чистый космос.<br>Для сбора цистерн по всему рукаву Галактики активно привлекаются рейнджеры, как наиболее свободные и многозадачные пилоты. Цистерны обмениваются по курсу \"<2> ед. вместительности к <1> ед. нод-счета\". <br>В связи с невозможностью обеспечить нодами всех желающих, нами установлен лимит в <150> нд., который сбрасывается в среднем каждый год. Кроме того, при достижении рейнджером лимита, ему выдается микромодуль. Ближайший сброс лимита запланирован на <GameDateTxtByTurn(timerCis + 1)>.<br>На данный момент вы можете получить еще <150 - CisCount> нд.<br>Не желаете ли вы, рейнджер, сдать нам несколько цистерн?",
          "DMsg.Num":  "10"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1010,
          "Pos.y":  800,
          "Parent":  -1,
          "#":  52,
          "Msg":  "Вы сдали цистерну вместительностью <cis_fuel> ед., на ваш нод-счет начислено <tint1> нд. Вы уже получили <CisCount> позволенных вам нд., осталось <150 - CisCount> нд.<br>Не желаете ли вы, рейнджер, сдать нам еще несколько цистерн?",
          "DMsg.Num":  "11"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  970,
          "Pos.y":  800,
          "Parent":  -1,
          "#":  53,
          "Msg":  "Благодарим вас, рейнджер, за помощь нашему делу. В этом году вы сдали нам <how_cis> цистерн общим объемом <fuel_total> ед. топлива.<br>В награду мы вручаем вам микромодуль <Name(cur_item)>. Не забудьте принять участие в акции в следующем году!",
          "DMsg.Num":  "12"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1090,
          "Pos.y":  800,
          "Parent":  -1,
          "#":  54,
          "Msg":  "Так-так... Дайте свериться с базой данных...<br>...<br>Прошу прощения, ваш лимит на данный момент исчерпан. Ближайший сброс лимита намечен на <GameDateTxtByTurn(timerCis + 1)>, прилетайте позже.",
          "DMsg.Num":  "13"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1620,
          "Pos.y":  520,
          "Parent":  -1,
          "#":  68,
          "Msg":  "Кристаллы? Очень хорошо! Самые различные драгоценные камни и образования всегда находятся в цене. Так, сейчас посмотрим, что у вас есть...<br>...<br>У вас на борту находится <tint1> кристаллов. С учетом наценки из уважения к вашей торговой репутации (<tint2>%), мы готовы взять товар за <cost> cr. Ну что, по рукам?",
          "DMsg.Num":  "14"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1560,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  69,
          "Msg":  "<Player>, у вас на борту нет подходящих для сдачи кристаллов. Приходите в следующий раз, когда найдете что-нибудь на незаселенных планетах.",
          "DMsg.Num":  "15"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1740,
          "Pos.y":  520,
          "Parent":  -1,
          "#":  70,
          "Msg":  "Кредитку разблокировать, говоришь? Что ж, у нас есть спецы на это дело, щас посмотрим, много ли у тебя этого добраа...<br>...<br>Мы отрыли на твоем корыте <tint1> карт, сумма сбережений на них - <tint2> cr. Комиссия нашего доминиона равна <2 * GalaxyTechLevel()>%, в итоге тебе на счет <cost> cr. Переводить?",
          "DMsg.Num":  "16"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  1810,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  71,
          "Msg":  "Наши лучшие парни нашли на твоем корабле только одну карту, оформленную на имя <Player>. Возвращайся, когда раздобудешь еще карт.",
          "DMsg.Num":  "17"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  29,
          "#":  72,
          "Msg":  "Мы отметили в вашем трюме те предметы, которые представляют для нас особенный интерес. Каждый мы готовы приобрести по утроенной цене.",
          "DMsg.Num":  "18"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  107,
          "#":  108,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "19"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  117,
          "#":  118,
          "Msg":  "<tstr2>",
          "DMsg.Num":  "20"        
        }      
      ],
      "Dialogs":      
      [
        {
          "Type":  "TDialog",
          "Name":  "AboutPirates",
          "Pos.x":  940,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  20        
        },
        {
          "Type":  "TDialog",
          "Name":  "TakeForPirates",
          "Pos.x":  910,
          "Pos.y":  610,
          "Parent":  -1,
          "#":  21        
        },
        {
          "Type":  "TDialog",
          "Name":  "AboutWars",
          "Pos.x":  1040,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  22        
        },
        {
          "Type":  "TDialog",
          "Name":  "TakeForWars",
          "Pos.x":  1040,
          "Pos.y":  610,
          "Parent":  -1,
          "#":  23        
        },
        {
          "Type":  "TDialog",
          "Name":  "NoWarReward",
          "Pos.x":  1180,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  24        
        },
        {
          "Type":  "TDialog",
          "Name":  "Cistern",
          "Pos.x":  1070,
          "Pos.y":  760,
          "Parent":  -1,
          "#":  25        
        },
        {
          "Type":  "TDialog",
          "Name":  "Cistern2",
          "Pos.x":  990,
          "Pos.y":  760,
          "Parent":  -1,
          "#":  26        
        },
        {
          "Type":  "TDialog",
          "Name":  "Crystal",
          "Pos.x":  1580,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  27        
        },
        {
          "Type":  "TDialog",
          "Name":  "Card",
          "Pos.x":  1790,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  28        
        },
        {
          "Type":  "TDialog",
          "Name":  "SellItems",
          "Pos.x":  1380,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  29        
        },
        {
          "Type":  "TDialog",
          "Name":  "SellItems2",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  29,
          "#":  30        
        },
        {
          "Type":  "TDialog",
          "Name":  "HandOverEscapePod",
          "Pos.x":  1400,
          "Pos.y":  770,
          "Parent":  -1,
          "#":  106        
        },
        {
          "Type":  "TDialog",
          "Name":  "EscapePodOff",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  106,
          "#":  110        
        }      
      ],
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "PlayerGroup",
          "Pos.x":  590,
          "Pos.y":  650,
          "Parent":  -1,
          "#":  16,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  590,
          "Pos.y":  560,
          "Parent":  -1,
          "#":  0,
          "Total.Lines":  1,
          "Code.Type":  "Global",
          "Code":          
          [
              "GRun();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  650,
          "Pos.y":  560,
          "Parent":  -1,
          "#":  18,
          "Total.Lines":  78,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GTL = GalaxyTechLevel();",
              "",
              "if(!IsShuMercsHQEnabled)",
              "{",
              "    if(CurrentMods('ShusRangers\\ShuMercsHQ')) IsShuMercsHQEnabled = 1;",
              "}",
              "",
              "//Раздаём случайные юзлесы всем новым кораблям",
              "if(GalaxyShipId() > lastShipId)",
              "{",
              "    AddDropUselessToShips();",
              "    //Обновляем Id последнего рождённого корабля",
              "    lastShipId = GalaxyShipId();",
              "}",
              "",
              "//Сброс статистики по сданным цистернам",
              "if(CurTurn() >= timerCis)",
              "{",
              "    timerCis = CurTurn() + Rnd(300, 420);",
              "    fuel_total = 0;",
              "    how_cis = 0;",
              "    CisCount = 0;",
              "}",
              "",
              "//Начисление награды за пиратов/военных и рейнджеров",
              "for(i = GalaxyEvents() - 1; i >= 0; i = i - 1)",
              "{",
              "    if(GalaxyEventDate(i) < CurTurn()) break;",
              "",
              "    tstr1 = GalaxyEventType(i);",
              "    if(tstr1 == 'PlayerKillsShip')",
              "    {",
              "        if(ShipOwner(Player()) != PirateClan)",
              "        {",
              "            if(GalaxyEventData(i,0) == t_Pirate && ControlledSystems(2)>2 && ControlledSystems(0)>0)",
              "            {",
              "                PirateBounty=PirateBounty+GalaxyMoney(1,0)*GalaxyTechLevel()/3/85*GalaxyEventData(i,4);",
              "            }",
              "        }",
              "        else",
              "        {",
              "            if(GalaxyEventData(i,0) == t_Warrior)",
              "            {",
              "                if(ControlledSystems(2)>0 && ControlledSystems(0)>0) WarriorBounty=WarriorBounty+GalaxyMoney(0,3)*GalaxyTechLevel()/3/110*GalaxyEventData(i,4);",
              "            }",
              "            else if(GalaxyEventData(i,0) == t_Ranger)",
              "            {",
              "                if(GalaxyEventData(i,3)<5 && ControlledSystems(0)>2 && ControlledSystems(2)>2 && ControlledSystems(0)>0) WarriorBounty=WarriorBounty+GalaxyMoney(0,2)*GalaxyTechLevel()/2.7/85*GalaxyEventData(i,4);",
              "            }",
              "        }",
              "    }",
              "    else if(tstr1 == 'PlayerAssistKillsShip')",
              "    {",
              "        if(ShipOwner(Player()) != PirateClan)",
              "        {",
              "            if(GalaxyEventData(i, 0) == t_Pirate && ControlledSystems(2) > 2 && ControlledSystems(0) > 0)",
              "            {",
              "                PirateBounty = PirateBounty + GalaxyMoney(0, 4) / 3;",
              "            }",
              "        }",
              "        else",
              "        {",
              "            if(GalaxyEventData(i, 0) == t_Warrior)",
              "            {",
              "                if(ControlledSystems(2) > 0 && ControlledSystems(0) > 0) WarriorBounty = WarriorBounty + GalaxyMoney(0, 3) / 3;",
              "            }",
              "            else if(GalaxyEventData(i, 0) == t_Ranger)",
              "            {",
              "                if(ControlledSystems(2) > 0 && ControlledSystems(0) > 0) WarriorBounty = WarriorBounty + GalaxyMoney(0, 2) / 3;",
              "            }",
              "        }",
              "    }",
              "    else if(tstr1 == 'PlayerChangesSide')",
              "    {",
              "        if(!GalaxyEventData(i, 0)) WarriorBounty = 0;",
              "        else PirateBounty = 0;",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  630,
          "Pos.y":  560,
          "Parent":  -1,
          "#":  19,
          "Total.Lines":  107,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "cur_ruin = GetShipRuins(Player());",
              "if(cur_ruin)",
              "{",
              "    cur_ruin_type = ShipType(cur_ruin);",
              "    if(cur_ruin_type == 'SB')",
              "    {",
              "        AddDialogInject('SellItems', '', \"Сдать уникальные предметы\", 0);",
              "    }",
              "    else if(cur_ruin_type == 'RC')",
              "    {",
              "        //Ищем капсулы с рейнджерами и изменниками",
              "        int pods_found = FindEscapePodsInStock(cur_ruin, (1 << t_Ranger)); //В данной функции заполняется tarr1",
              "        if(pods_found) AddDialogInject('HandOverEscapePod', CT('Script.Mod_ShuBounty.EscapePodsDialog.AskToHandOverRC'), CT('Script.Mod_ShuBounty.EscapePodsDialog.PlayerHandOver'), 0);",
              "",
              "        if(!ShipOnSidePirateClan(Player())) AddDialogInject('SellItems', '', \"Сдать уникальные предметы\", 0);",
              "        AddDialogInject('Cistern', \"Также мы предлагаем рейнджерам и прочим пилотам обмен цистерн на единицы нод-счета.\", \"Я хочу обменять цистерны\", 0);",
              "    }",
              "    else if(cur_ruin_type == 'PB')",
              "    {",
              "        //Ищем капсулы с пиратами, изменниками и военными",
              "        pods_found = FindEscapePodsInStock(cur_ruin, (1 << t_Pirate) + (1 << t_Warrior), 'RangerPirate'); //В данной функции заполняется tarr1",
              "        if(pods_found) AddDialogInject('HandOverEscapePod', CT('Script.Mod_ShuBounty.EscapePodsDialog.AskToHandOverPB'), CT('Script.Mod_ShuBounty.EscapePodsDialog.PlayerHandOver'), 0);",
              "",
              "        if(ShipOnSidePirateClan(Player()))",
              "        {",
              "            if(!ControlledSystems(0) || !ControlledSystems(2))",
              "            {",
              "                AddDialogInject('NoWarReward', '', \"Почему я не могу забрать деньги за убийства?\", 0);",
              "            }",
              "            else",
              "            {",
              "                if(WarriorBounty)",
              "                {",
              "                    AddDialogInject('TakeForWars', \"Кстати говоря, братан, у нас тут для тебя залежались <WarriorBounty> cr., как премия за борьбу с фараонами. Не желаешь ли забрать денежки?\", \"Я хочу получить свою награду\", 0);",
              "                    AddDialogInject('AboutWars', '', \"Расскажите подробнее о награде\", 0);",
              "                }",
              "                else",
              "                {",
              "                    AddDialogInject('AboutWars', \"К твоему сведению, нами введена награда за головы военных и рейнджеров. Не упусти свой шанс заработать.\", \"Расскажите подробнее о награде\", 0);",
              "                }",
              "            }",
              "",
              "            AddDialogInject('SellItems', '', \"Сдать уникальные предметы\", 0);",
              "        }",
              "    }",
              "    else if(cur_ruin_type == 'WB')",
              "    {",
              "        if(!ShipOnSidePirateClan(Player()))",
              "        {",
              "            if(ShipRank(Player()) < 7) //Если игрок ещё не адмирал (нет подходящих диалогов, да и глуповато было бы как-то)",
              "            {",
              "                //Ищем капсулы с военными, пиратами и изменниками",
              "                pods_found = FindEscapePodsInStock(cur_ruin, (1 << t_Warrior) + (1 << t_Pirate), 'RangerPirate'); //В данной функции заполняется tarr1",
              "                if(pods_found) AddDialogInject('HandOverEscapePod', CT('Script.Mod_ShuBounty.EscapePodsDialog.AskToHandOverWB'), CT('Script.Mod_ShuBounty.EscapePodsDialog.PlayerHandOver'), 0);",
              "            }",
              "",
              "            if(ControlledSystems(2) <= 2) AddDialogInject('AboutPirates', '', \"Почему я не могу забрать награду за пиратов?\", 0);",
              "            else",
              "            {",
              "                if(PirateBounty)",
              "                {",
              "                    AddDialogInject('TakeForPirates', \"По приказу КВСМК, мы награждаем рейнджеров за убийство пиратов. Для вас сейчас имеется премия в размере <PirateBounty> cr.\", \"Я хочу получить награду за пиратов\", 0);",
              "                    AddDialogInject('AboutPirates', '', \"Расскажите о награде за пиратов\", 2);",
              "                }",
              "                else",
              "                {",
              "                    AddDialogInject('AboutPirates', \"По приказу КВСМК, мы награждаем рейнджеров за убийство пиратов. Вы тоже имеете возможность получить премию за головы этих негодяев.\", \"Расскажите подробнее о награде\", 0);",
              "                }",
              "            }",
              "",
              "            AddDialogInject('SellItems', '', \"Сдать уникальные предметы\", 0);",
              "        }",
              "    }",
              "    else if(cur_ruin_type == 'MC')",
              "    {",
              "        if(StarOwner(ShipStar(cur_ruin)) == 2) cur_ruin_type = 'PMC';",
              "",
              "        //Ищем любые капсулы",
              "        pods_found = FindEscapePodsInStock(cur_ruin, (1 << t_Ranger) + (1 << t_Transport) + (1 << t_Pirate) + (1 << t_Warrior)); //В данной функции заполняется tarr1",
              "        //Различные добавочные реплики для коалиционных, либо пиратских МЦ",
              "        if(pods_found) AddDialogInject('HandOverEscapePod', CT('Script.Mod_ShuBounty.EscapePodsDialog.AskToHandOver' + cur_ruin_type), CT('Script.Mod_ShuBounty.EscapePodsDialog.PlayerHandOver'), 0);",
              "",
              "        AddDialogInject('SellItems', '', \"Сдать уникальные предметы\", 0);",
              "    }",
              "    else if(cur_ruin_type == 'BK')",
              "    {",
              "        //Ищем капсулы с транспортами, лайнерами, дипломатами и контрабандистами",
              "        //В данной функции заполняется tarr1",
              "        pods_found = FindEscapePodsInStock(cur_ruin, (1 << t_Transport));",
              "        if(pods_found) AddDialogInject('HandOverEscapePod', CT('Script.Mod_ShuBounty.EscapePodsDialog.AskToHandOverBK'), CT('Script.Mod_ShuBounty.EscapePodsDialog.PlayerHandOver'), 0);",
              "",
              "        AddDialogInject('Crystal', '', \"Я хочу сдать кристаллы\", 0);",
              "        AddDialogInject('SellItems', '', \"Сдать уникальные предметы\", 0);",
              "    }",
              "    else if(cur_ruin_type == 'CB')",
              "    {",
              "        if(GetShipPirateRank(Player()) < 7) //Если игрок ещё не барон (нет подходящих диалогов, да и глуповато было бы как-то)",
              "        {",
              "            //Ищем капсулы с пиратами, изменниками и военными",
              "            pods_found = FindEscapePodsInStock(cur_ruin, (1 << t_Pirate) + (1 << t_Warrior), 'RangerPirate'); //В данной функции заполняется tarr1",
              "            if(pods_found) AddDialogInject('HandOverEscapePod', CT('Script.Mod_ShuBounty.EscapePodsDialog.AskToHandOverCB'), CT('Script.Mod_ShuBounty.EscapePodsDialog.PlayerHandOver'), 0);",
              "        }",
              "",
              "        AddDialogInject('Card', '', \"Разблокируйте кредитные карты\", 0);",
              "        AddDialogInject('SellItems', '', \"Сдать уникальные предметы\", 0);",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  21,
          "#":  57,
          "Total.Lines":  4,
          "Code.Type":  "Turn",
          "Code":          
          [
              "WasPir=PirateBounty;",
              "ShipMoney(Player(),ShipMoney(Player())+PirateBounty);",
              "PirateBounty=0;",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  23,
          "#":  58,
          "Total.Lines":  4,
          "Code.Type":  "Turn",
          "Code":          
          [
              "WasWar=WarriorBounty;",
              "ShipMoney(Player(),ShipMoney(Player())+WarriorBounty);",
              "WarriorBounty=0;",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  990,
          "Pos.y":  780,
          "Parent":  -1,
          "#":  65,
          "Total.Lines":  39,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cur_item = GAnswerData;",
              "",
              "//Смотрим объем цистерны",
              "cis_fuel = GetEquipmentStats(cur_item, 0);",
              "//Считаем, на сколько увеличится нод-счет игрока после сдачи цистерны",
              "tint1 = cis_fuel / 2;",
              "//Пополняем нод-счет игрока",
              "RangerBaseNodes(Player(), RangerBaseNodes(Player()) + tint1);",
              "//Изымаем цистерну из трюма",
              "FreeItem(GetItemFromShip(Player(), cur_item));",
              "",
              "CisCount = CisCount + tint1;",
              "if(CisCount < 150)",
              "{",
              "    Sound('Sound.Sell');",
              "    i = 0;",
              "}",
              "//Если игрок выполнил или перевыполнил план по сдаче цистерн на этот год, выдаем ему наградной ММ",
              "else //if(CisCount >= 150)",
              "{",
              "    if(GTL < 3) BuildListOfMMByPriority(tarr1, 90, 100);",
              "    else if(GTL == 3) BuildListOfMMByPriority(tarr1, 75, 100);",
              "    else if(GTL == 4) BuildListOfMMByPriority(tarr1, 70, 100);",
              "    else if(GTL == 5) BuildListOfMMByPriority(tarr1, 65, 90);",
              "    else if(GTL == 6) BuildListOfMMByPriority(tarr1, 60, 90);",
              "    else if(GTL == 7) BuildListOfMMByPriority(tarr1, 55, 80);",
              "    else BuildListOfMMByPriority(tarr1, 50, 75);",
              "",
              "    ArrayRandomize(50, tarr1);",
              "    cur_item = CreateMM(tarr1[0]);",
              "    AddItemToShip(Player(), cur_item);",
              "    ArrayClear(tarr1);",
              "",
              "    Sound('Sound.QuestOk');",
              "    i = 1;",
              "}",
              "",
              "how_cis = how_cis + 1;",
              "fuel_total = fuel_total + cis_fuel;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1580,
          "Pos.y":  520,
          "Parent":  -1,
          "#":  73,
          "Total.Lines":  40,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Ищем в трюме корабля кристаллы",
              "cost = 0;",
              "",
              "tint1 = 0;",
              "tint2 = 0;",
              "",
              "for(i = 0; i < ShipItems(Player()); i = i + 1)",
              "{",
              "    cur_item = ShipItems(Player(), i);",
              "    if(ItemType(cur_item) != t_UselessItem) continue;",
              "    if(EquipmentImageName(cur_item) != 'ShuBounty_Crystals') continue;",
              "",
              "    //Считаем стоимость всех кристаллов",
              "    cost = cost + 0.5 * ItemCost(cur_item) * GalaxyTechLevel();",
              "    //Считаем количество кристаллов",
              "    tint1 = tint1 + ItemSize(cur_item);",
              "}",
              "",
              "//Считаем наценку на кристаллы, исходя из навыков и торгового рейтинга игрока",
              "if(tint1)",
              "{",
              "    tint2 = 5.0 * ShipSkill(Player(), 3);",
              "    tint2 = tint2 + ShipSkill(Player(), 4) * 2;",
              "",
              "    if(StatusPlayer() == 1) tint2 = tint2 + 10;",
              "    else if(StatusPlayer() == -1) tint2 = tint2 - 5;",
              "",
              "    if(ShipOnSidePirateClan(Player())) tint2 = tint2 - 5;",
              "",
              "    if(ShipStatistic(Player(), 4) > 20) tint2 = tint2 - 3;",
              "    if(ShipStatistic(Player(), 4) > 50) tint2 = tint2 - 3;",
              "    if(ShipStatistic(Player(), 4) > 100) tint2 = tint2 - 5;",
              "    if(ShipStatistic(Player(), 1) > 25) tint2 = tint2 + 3;",
              "    if(ShipStatistic(Player(), 1) > 60) tint2 = tint2 + 5;",
              "",
              "    if(tint2 > 75) tint2 = 75;",
              "    else if(tint2 < -25) tint2 = -25;",
              "",
              "    cost = cost * (tint2 + 100) / 100;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1790,
          "Pos.y":  520,
          "Parent":  -1,
          "#":  76,
          "Total.Lines":  18,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Ищем в трюме игрока кредитки",
              "tint1 = 0;",
              "cost = 0;",
              "for(i = 0; i < ShipItems(Player()); i = i + 1)",
              "{",
              "    cur_item = ShipItems(Player(), i);",
              "    if(Name(cur_item) == \"Заблокированная карта с кредитами\")",
              "    {",
              "        //Если нашли - определяем, сколько на них денег",
              "        cost = cost + ItemCost(cur_item) * RndObject(3, 5, cur_ruin);",
              "        tint1 = tint1 + 1;",
              "    }",
              "}",
              "",
              "//Общая сумма сбережений",
              "tint2 = cost;",
              "//Сумма с комиссией",
              "cost = cost * (100 - 2 * GalaxyTechLevel()) / 100;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  30,
          "#":  79,
          "Total.Lines":  10,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Запоминаем выбор игрока",
              "cur_item = ShipItems(Player(), GAnswerData);",
              "",
              "//БЦ дает двойную цену, остальные станции - тройную",
              "if(cur_ruin_type == 'BK') ShipMoney(Player(), ShipMoney(Player()) + ItemCost(cur_item) * 2);",
              "else ShipMoney(Player(), ShipMoney(Player()) + ItemCost(cur_item) * 3);",
              "",
              "//Изымаем предмет из трюма",
              "FreeItem(GetItemFromShip(Player(), cur_item));",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  72,
          "#":  87,
          "Total.Lines":  227,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Ищем в трюме корабля юзлессы",
              "for(i = 0; i < ShipItems(Player()); i = i + 1)",
              "{",
              "    cur_item = ShipItems(Player(), i);",
              "    if(ItemType(cur_item) != t_UselessItem) continue;",
              "    if(ItemOwner(cur_item) == Kling) continue;",
              "    if(EqCustomFaction(cur_item) != '') continue;",
              "    if(ItemInScript(cur_item) == 1) continue;",
              "    if(ItemIsInUse(cur_item)) continue; //А мало-ли",
              "",
              "    tstr1 = EquipmentImageName(cur_item);",
              "    j = 0;",
              "    //Военная база",
              "    if(cur_ruin_type == 'WB')",
              "    {",
              "        if(tstr1 == 'Usl_11') j = 1;",
              "        else if(tstr1 == 'Usl_12') j = 1;",
              "        else if(tstr1 == 'Usl_27') j = 1;",
              "        else if(tstr1 == 'Usl_35') j = 1;",
              "        else if(tstr1 == 'Usl_39') j = 1;",
              "        else if(tstr1 == 'Usl_42') j = 1;",
              "        else if(tstr1 == 'Usl_47') j = 1;",
              "        else if(tstr1 == 'Usl_56') j = 1;",
              "        else if(tstr1 == 'Usl_6') j = 1;",
              "        else if(tstr1 == 'Usl_Drugs') j = 1;",
              "        else if(tstr1 == 'Usl_Bomber') j = 1;",
              "        else if(tstr1 == 'Usl_MemoryModule') j = 1;",
              "        else if(tstr1 == 'Usl_70') j = 1;",
              "        else if(tstr1 == 'Usl_71') j = 1;",
              "        else if(tstr1 == 'Usl_RandomItem_02') j = 1;",
              "        else if(tstr1 == 'Usl_RandomItem_03') j = 1;",
              "        else if(tstr1 == 'Usl_RandomItem_04') j = 1;",
              "        else if(tstr1 == 'Usl_PTQ68') j = 1;",
              "        else if(tstr1 == 'Usl_PTQn64') j = 1;",
              "        else if(tstr1 == 'Usl_Svarokok') j = 1;",
              "        else if(tstr1 == 'ReScripter') j = 1;",
              "        else if(tstr1 == 'TrankMod') j = 1;",
              "        else if(tstr1 == 'Ultrascan') j = 1;",
              "        else if(tstr1 == 'secret_loot1') j = 1;",
              "        else if(tstr1 == 'secret_loot3') j = 1;",
              "    }",
              "    //Пиратская база",
              "    else if(cur_ruin_type == 'PB')",
              "    {",
              "        //удалить: Usl_19, Usl_21, Usl_37, Usl_40, Usl_63, Usl_73, Usl_Faruk, Usl_PTQ70",
              "        if(tstr1 == 'Usl_11') j = 1;",
              "        //if (tstr1 == 'Usl_12') j = 1;",
              "        else if(tstr1 == 'Usl_19') j = 1;",
              "        else if(tstr1 == 'Usl_21') j = 1;",
              "        else if(tstr1 == 'Usl_27') j = 1;",
              "        else if(tstr1 == 'Usl_35') j = 1;",
              "        else if(tstr1 == 'Usl_37') j = 1;",
              "        //if (tstr1 == 'Usl_39') j = 1;",
              "        else if(tstr1 == 'Usl_40') j = 1;",
              "        else if(tstr1 == 'Usl_42') j = 1;",
              "        else if(tstr1 == 'Usl_47') j = 1;",
              "        //if (tstr1 == 'Usl_56') j = 1;",
              "        //if (tstr1 == 'Usl_6') j = 1;",
              "        else if(tstr1 == 'Usl_63') j = 1;",
              "        else if(tstr1 == 'Usl_73') j = 1;",
              "        else if(tstr1 == 'Usl_Faruk') j = 1;",
              "        else if(tstr1 == 'Usl_Drugs') j = 1;",
              "        else if(tstr1 == 'Usl_PTQ70') j = 1;",
              "        //if (tstr1 == 'Usl_Bomber') j = 1;",
              "        else if(tstr1 == 'Usl_MemoryModule') j = 1;",
              "        else if(tstr1 == 'Usl_70') j = 1;",
              "        else if(tstr1 == 'Usl_71') j = 1;",
              "        else if(tstr1 == 'Usl_RandomItem_02') j = 1;",
              "        else if(tstr1 == 'Usl_RandomItem_03') j = 1;",
              "        else if(tstr1 == 'Usl_RandomItem_04') j = 1;",
              "        else if(tstr1 == 'Usl_PTQ68') j = 1;",
              "        else if(tstr1 == 'Usl_PTQn64') j = 1;",
              "        else if(tstr1 == 'secret_loot1') j = 1;",
              "        else if(tstr1 == 'secret_loot2') j = 1;",
              "        else if(tstr1 == 'secret_loot3') j = 1;",
              "        else if(tstr1 == 'secret_loot4') j = 1;",
              "    }",
              "    //Научная база",
              "    else if(cur_ruin_type == 'SB')",
              "    {",
              "        if(tstr1 == 'OperatedProbe') j = 1;",
              "        else if(tstr1 == 'Usl_21') j = 1;",
              "        else if(tstr1 == 'Usl_25') j = 1;",
              "        else if(tstr1 == 'Usl_26') j = 1;",
              "        else if(tstr1 == 'Usl_33') j = 1;",
              "        else if(tstr1 == 'Usl_34') j = 1;",
              "        else if(tstr1 == 'Usl_37') j = 1;",
              "        else if(tstr1 == 'Usl_39') j = 1;",
              "        else if(tstr1 == 'Usl_40') j = 1;",
              "        else if(tstr1 == 'Usl_45') j = 1;",
              "        else if(tstr1 == 'Usl_47') j = 1;",
              "        else if(tstr1 == 'Usl_48') j = 1;",
              "        else if(tstr1 == 'Usl_56') j = 1;",
              "        else if(tstr1 == 'Usl_57') j = 1;",
              "        else if(tstr1 == 'Usl_60') j = 1;",
              "        else if(tstr1 == 'Usl_66') j = 1;",
              "        else if(tstr1 == 'Usl_67') j = 1;",
              "        else if(tstr1 == 'Usl_MemoryModule') j = 1;",
              "        else if(tstr1 == 'Usl_70') j = 1;",
              "        else if(tstr1 == 'Usl_71') j = 1;",
              "        else if(tstr1 == 'Usl_RandomItem_02') j = 1;",
              "        else if(tstr1 == 'Usl_RandomItem_03') j = 1;",
              "        else if(tstr1 == 'Usl_RandomItem_04') j = 1;",
              "        else if(tstr1 == 'Usl_PTQ68') j = 1;",
              "        else if(tstr1 == 'Usl_PTQn64') j = 1;",
              "        else if(tstr1 == 'Chrono') j = 1;",
              "        else if(tstr1 == 'Mater') j = 1;",
              "        else if(tstr1 == 'ReScripter') j = 1;",
              "        else if(tstr1 == 'TrankMod') j = 1;",
              "        else if(tstr1 == 'Ultrascan') j = 1;",
              "        else if(tstr1 == 'Vacuum') j = 1;",
              "        else if(tstr1 == 'secret_loot1') j = 1;",
              "        else if(tstr1 == 'secret_loot2') j = 1;",
              "        else if(tstr1 == 'secret_loot3') j = 1;",
              "        else if(tstr1 == 'secret_loot4') j = 1;",
              "        else if(tstr1 == 'secret_loot5') j = 1;",
              "    }",
              "    //Доминион",
              "    else if(cur_ruin_type == 'CB')",
              "    {",
              "        if(tstr1 == 'OperatedProbe') j = 1;",
              "        else if(tstr1 == 'Usl_21') j = 1;",
              "        else if(tstr1 == 'Usl_25') j = 1;",
              "        else if(tstr1 == 'Usl_26') j = 1;",
              "        else if(tstr1 == 'Usl_33') j = 1;",
              "        else if(tstr1 == 'Usl_34') j = 1;",
              "        else if(tstr1 == 'Usl_37') j = 1;",
              "        else if(tstr1 == 'Usl_39') j = 1;",
              "        else if(tstr1 == 'Usl_40') j = 1;",
              "        else if(tstr1 == 'Usl_45') j = 1;",
              "        else if(tstr1 == 'Usl_47') j = 1;",
              "        else if(tstr1 == 'Usl_48') j = 1;",
              "        else if(tstr1 == 'Usl_56') j = 1;",
              "        //if (tstr1 == 'Usl_57') j = 1;",
              "        //if (tstr1 == 'Usl_60') j = 1;",
              "        //if (tstr1 == 'Usl_66') j = 1;",
              "        //if (tstr1 == 'Usl_67') j = 1;",
              "        else if(tstr1 == 'Usl_MemoryModule') j = 1;",
              "        else if(tstr1 == 'Chrono') j = 1;",
              "        else if(tstr1 == 'Mater') j = 1;",
              "        else if(tstr1 == 'ReScripter') j = 1;",
              "        else if(tstr1 == 'TrankMod') j = 1;",
              "        else if(tstr1 == 'Ultrascan') j = 1;",
              "        else if(tstr1 == 'Vacuum') j = 1;",
              "        //if (tstr1 == 'Usl_70') j = 1;",
              "        //if (tstr1 == 'Usl_71') j = 1;",
              "        //if (tstr1 == 'Usl_RandomItem_02') j = 1;",
              "        //if (tstr1 == 'Usl_RandomItem_03') j = 1;",
              "        //if (tstr1 == 'Usl_RandomItem_04') j = 1;",
              "        //if (tstr1 == 'Usl_PTQ68') j = 1;",
              "        //if (tstr1 == 'Usl_PTQn64') j = 1;",
              "    }",
              "    //Медицинский центр",
              "    else if(cur_ruin_type == 'MC')",
              "    {",
              "        if(tstr1 == 'Usl_1') j = 1;",
              "        else if(tstr1 == 'Usl_11') j = 1;",
              "        else if(tstr1 == 'Usl_22') j = 1;",
              "        else if(tstr1 == 'Usl_30') j = 1;",
              "        else if(tstr1 == 'Usl_4') j = 1;",
              "        else if(tstr1 == 'Usl_41') j = 1;",
              "        else if(tstr1 == 'Usl_68') j = 1;",
              "        else if(tstr1 == 'Usl_75') j = 1;",
              "        else if(tstr1 == 'Usl_AnimalCase') j = 1;",
              "        else if(tstr1 == 'Usl_Cactus') j = 1;",
              "        else if(tstr1 == 'Usl_CapsuleStukach') j = 1;",
              "        else if(tstr1 == 'Usl_LasosCup') j = 1;",
              "        else if(tstr1 == 'Usl_RandomItem_01') j = 1;",
              "        else if(tstr1 == 'Usl_Svarokok') j = 1;",
              "        else if(tstr1 == 'Banana') j = 1;",
              "        else if(tstr1 == 'secret_loot2') j = 1;",
              "    }",
              "    //Центр рейнджеров",
              "    else if(cur_ruin_type == 'RC')",
              "    {",
              "        if(tstr1 == 'Usl_Svarokok') j = 1;",
              "        else if(tstr1 == 'Usl_12') j = 1;",
              "        else if(tstr1 == 'Usl_13') j = 1;",
              "        else if(tstr1 == 'Usl_18') j = 1;",
              "        else if(tstr1 == 'Usl_2') j = 1;",
              "        else if(tstr1 == 'Usl_20') j = 1;",
              "        else if(tstr1 == 'Usl_22') j = 1;",
              "        else if(tstr1 == 'Usl_28') j = 1;",
              "        else if(tstr1 == 'Usl_29') j = 1;",
              "        else if(tstr1 == 'Usl_37') j = 1;",
              "        else if(tstr1 == 'Usl_39') j = 1;",
              "        else if(tstr1 == 'Usl_40') j = 1;",
              "        else if(tstr1 == 'Usl_45') j = 1;",
              "        else if(tstr1 == 'Usl_51') j = 1;",
              "        else if(tstr1 == 'Usl_60') j = 1;",
              "        else if(tstr1 == 'Usl_63') j = 1;",
              "        else if(tstr1 == 'Usl_67') j = 1;",
              "        else if(tstr1 == 'Usl_70') j = 1;",
              "        else if(tstr1 == 'Usl_71') j = 1;",
              "        else if(tstr1 == 'Usl_RandomItem_02') j = 1;",
              "        else if(tstr1 == 'Usl_RandomItem_03') j = 1;",
              "        else if(tstr1 == 'Usl_RandomItem_04') j = 1;",
              "        else if(tstr1 == 'Usl_PTQ68') j = 1;",
              "        else if(tstr1 == 'Usl_PTQ63') j = 1;",
              "        else if(tstr1 == 'Usl_PTQn64') j = 1;",
              "        else if(tstr1 == 'ReScripter') j = 1;",
              "        else if(tstr1 == 'TrankMod') j = 1;",
              "        else if(tstr1 == 'Ultrascan') j = 1;",
              "        else if(tstr1 == 'secret_loot4') j = 1;",
              "        else if(tstr1 == 'secret_loot5') j = 1;",
              "    }",
              "    //Бизнес-центр",
              "    else if(cur_ruin_type == 'BK')",
              "    {",
              "        if(tstr1 == 'OperatedProbe') j = 1;",
              "        else if(tstr1 == 'Banana') j = 1;",
              "        else if(tstr1 == 'Chrono') j = 1;",
              "        else if(tstr1 == 'Mater') j = 1;",
              "        else if(tstr1 == 'ReScripter') j = 1;",
              "        else if(tstr1 == 'TrankMod') j = 1;",
              "        else if(tstr1 == 'Ultrascan') j = 1;",
              "        else if(tstr1 == 'Vacuum') j = 1;",
              "        else if(tstr1 == 'Usl_72') j = 1;",
              "    }",
              "",
              "    //Если нашли хоть один предмет, добавляем его в список сдачи",
              "    if(j)",
              "    {",
              "        if(cur_ruin_type == 'BK') InjectAnswer('SellItems2', '<Name(cur_item)> (<ItemCost(cur_item) * 2> cr)', i);",
              "        else InjectAnswer('SellItems2', '<Name(cur_item)> (<ItemCost(cur_item) * 3> cr)', i);",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1030,
          "Pos.y":  820,
          "Parent":  -1,
          "#":  88,
          "Total.Lines":  19,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Ищем в трюме игрока цистерны и добавляем в диалог",
              "for(i = ShipItems(Player()) - 1; i >= 1; i = i - 1)",
              "{",
              "    cur_item = ShipItems(Player(), i);",
              "    if(ItemType(cur_item) != t_Cistern) continue;",
              "",
              "    j = ItemOwner(cur_item);",
              "    if(j == Maloc) tstr1 = \"Малокская\";",
              "    else if(j == Peleng) tstr1 = \"Пеленгская\";",
              "    else if(j == People) tstr1 = \"Человеческая\";",
              "    else if(j == Fei) tstr1 = \"Фэянская\";",
              "    else if(j == Gaal) tstr1 = \"Гаальская\";",
              "    else if(j == Kling) tstr1 = \"Доминаторская\";",
              "    else if(j == None) tstr1 = \"Неизвестная\";",
              "    else if(j == PirateClan) tstr1 = \"Пиратская\";",
              "    InjectAnswer('Cistern2', \"<tstr1> цистерна объемом <GetEquipmentStats(cur_item, 0)> тонн\", cur_item);",
              "}",
              "",
              "DAnswer('restart~' + \"Нет, спасибо\");"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1200,
          "Pos.y":  620,
          "Parent":  -1,
          "#":  89,
          "Total.Lines":  3,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player(),ShipMoney(Player())+WarriorBounty/2);",
              "Sound('Sound.Buy');",
              "TalkToPirs=1;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1620,
          "Pos.y":  560,
          "Parent":  -1,
          "#":  90,
          "Total.Lines":  12,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Изымаем кристаллы из трюма корабля",
              "for(i = ShipItems(Player()) - 1; i >= 1; i = i - 1)",
              "{",
              "    cur_item = ShipItems(Player(), i);",
              "    if(ItemType(cur_item) != t_UselessItem) continue;",
              "    if(EquipmentImageName(cur_item) != 'ShuBounty_Crystals') continue;",
              "    FreeItem(GetItemFromShip(Player(), i));",
              "}",
              "",
              "//Переводим деньги на счет игрока",
              "ShipMoney(Player(), ShipMoney(Player()) + cost);",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  1740,
          "Pos.y":  560,
          "Parent":  -1,
          "#":  91,
          "Total.Lines":  10,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Удаляем кредитки из трюма",
              "for(i = 0; i < ShipItems(Player()); i = i + 1)",
              "{",
              "    cur_item = ShipItems(Player(), i);",
              "    if(Name(cur_item) == \"Заблокированная карта с кредитами\") FreeItem(GetItemFromShip(Player(), i));",
              "}",
              "",
              "//Переводим деньги на счет игрока",
              "ShipMoney(Player(), ShipMoney(Player()) + cost);",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  610,
          "Pos.y":  560,
          "Parent":  -1,
          "#":  92,
          "Total.Lines":  816,
          "Code.Type":  "Init",
          "Code":          
          [
              "GTL = GalaxyTechLevel();",
              "",
              "AddDropUselessToShips();",
              "//Запоминаем Id последнего рождённого корабля",
              "lastShipId = GalaxyShipId();",
              "",
              "if(CurrentMods('ShusRangers\\ShuMercsHQ')) IsShuMercsHQEnabled = 1;",
              "",
              "//Перебираем все системы Галактики",
              "ArrayAdd(tarr1,  1, 'ShuBounty_Hotporn');",
              "ArrayAdd(tarr1,  1, 'ShuBounty_Necronomicron');",
              "ArrayAdd(tarr1,  1, 'ShuBounty_Foolter');",
              "ArrayAdd(tarr1, -1, 'ShuBounty_SneerEngine'); //-1 означает, что базовый размер после генерации менять не нужно",
              "ArrayAdd(tarr1,  1, 'ShuBounty_TheSkullOfCaarDan');",
              "tint1 = 7; //Стартовый шанс на дроп очередного уникального предмета на незаселёнку",
              "",
              "if(CurrentMods('Expansion\\ExpTC')) check = 1;",
              "for(i = 1; i <= GalaxyStars(); i = i + 1)",
              "{",
              "    cur_star = StarNearbyStars(ShipStar(Player()), i - 1); //Сместил для упрощения расчётов в коде ниже",
              "    for(j = 0; j < StarPlanets(cur_star); j = j + 1)",
              "    {",
              "        //Ищем в системе незаселенные планеты",
              "        cur_planet = StarPlanets(cur_star, j);",
              "        if(PlanetOwner(cur_planet) != None) continue;",
              "",
              "        //С шансом 25% закапываем на планету кристалл",
              "        if(RndObject(1, 100, cur_planet) <= 25)",
              "        {",
              "            cur_item = CreateQuestItem('ShuBounty_Crystals', None);",
              "            ItemSize(cur_item, 1);",
              "            ItemCost(cur_item, RndObject(5000, 12500, cur_planet));",
              "            AddItemToPlanet(cur_planet, cur_item);",
              "        }",
              "",
              "        //Случайно разбрасываем уникальные предметы из tarr1 по незаселёнкам",
              "        if(ArrayDim(tarr1) > 1 && i > 20)",
              "        {",
              "            if(RndObject(1, 100, cur_star) <= tint1)",
              "            {",
              "                tint2 = RndObject(1, ArrayDim(tarr1) - 1, cur_star);",
              "                cur_item = CreateQuestItem(GetVariableName(tarr1[tint2]));",
              "                if(~tarr1[tint2]) ItemSize(cur_item, tarr1[tint2]);",
              "                ArrayDelete(tarr1, tint2);",
              "                AddItemToPlanet(cur_planet, cur_item);",
              "            }",
              "            else tint1 = PortionInDiapason(i, 21, GalaxyStars() - 20 - (ArrayDim(tarr1) - 1), 7, 100); //Шанс повышается с каждой неудачей",
              "        }",
              "",
              "        //Если у игрока подключён мод ExpTC, то также закапываем ценную руду и самородки",
              "        if(check)",
              "        {",
              "            //Их цены лучше считать, исходя из стоимости обычных минералов",
              "            //С шансом в 66% закапываем ещё одну партию драгоценных минералов",
              "            if(RndObject(1, 100, cur_planet) <= 66)",
              "            {",
              "                rand = RndObject(1, 9, cur_planet);",
              "                cur_item = CreateCustomCountableItem('NuggetAsteroid', rand);",
              "                ItemCost(cur_item, rand * (RndObject(10, 15, cur_planet) * 7));",
              "                AddItemToPlanet(cur_planet, cur_item);",
              "            }",
              "",
              "            //С дополнительным шансом в 33% закапываем ещё одну партию драгоценных минералов",
              "            if(RndObject(1, 100, cur_planet) <= 33)",
              "            {",
              "                rand = RndObject(3, 33, cur_planet);",
              "                cur_item = CreateCustomCountableItem('NuggetAsteroid', rand);",
              "                ItemCost(cur_item, rand * (RndObject(10, 15, cur_planet) * 7));",
              "                AddItemToPlanet(cur_planet, cur_item);",
              "            }",
              "",
              "            //С ещё более дополнительным шансом в 9% закапываем партию драгоценных минералов",
              "            if(RndObject(1, 100, cur_planet) <= 9)",
              "            {",
              "                rand = RndObject(6, 66, cur_planet);",
              "                cur_item = CreateCustomCountableItem('NuggetAsteroid', rand);",
              "                ItemCost(cur_item, rand * (RndObject(10, 15, cur_planet) * 7));",
              "                AddItemToPlanet(cur_planet, cur_item);",
              "            }",
              "        }",
              "    }",
              "}",
              "",
              "function AddDropUselessToShips()",
              "{",
              "    unknown ships_arr;",
              "    int arr_count = BuildListOfNewShips(ships_arr, lastShipId, 2+4+8+16, 1+2+4+8+16+128, 1, '',  ',Militiaman1,Militiaman2,Militiaman3,Rebel,PirateRunner,RangerPirate,RangerExplorer,RangerPirateExplorer,Smuggler,EliteWarrior,Thug,Khan');",
              "    //Если найден хотя бы один корабль, выдаем юзлессы",
              "    if(arr_count)",
              "    {",
              "        for(int i = 0; i < arr_count; i = i + 1)",
              "        {",
              "            //Выбираем корабль",
              "            dword ship = ships_arr[i];",
              "            if(IsPlayer(ship)) continue;",
              "",
              "            //Устанавливаем шанс на выдачу какого-либо иного юзлесса",
              "            int chance_items = 0;",
              "            int chance_escape_pod = 0;",
              "            int max_items_count = 0;",
              "",
              "            //Рейнджеры",
              "            str ship_type = TrimNumbers(ShipType(ship));",
              "            if(ship_type == 'Ranger' || ship_type == 'FemRanger' || ship_type == 'RangerExplorer' || ship_type == 'RangerPirate' || ship_type == 'RangerPirateExplorer')",
              "            {",
              "                int ship_main_type = t_Ranger;",
              "                chance_items = 40;",
              "                chance_escape_pod = 25; //FemRanger будут в любом случае отсеиваться проверкой на определённые скрипты",
              "                max_items_count = 2;",
              "            }",
              "            //Гражданские корабли",
              "            else if(ship_type == 'Transport' || ship_type == 'Liner' || ship_type == 'Diplomat' || ship_type == 'Smuggler')",
              "            {",
              "                ship_main_type = t_Transport;",
              "                chance_items = 30;",
              "                if(ship_type == 'Diplomat') chance_escape_pod = 25;",
              "                else chance_escape_pod = 10;",
              "                if(ship_type != 'Liner' && ship_type != 'Diplomat') max_items_count = 3;",
              "                else max_items_count = 1;",
              "            }",
              "            //Пираты",
              "            else if(ship_type == 'Pirate' || ship_type == 'Rebel' || ship_type == 'PirateRunner' || ship_type == 'Thug' || ship_type == 'Khan')",
              "            {",
              "                ship_main_type = t_Pirate;",
              "                chance_items = 25;",
              "                chance_escape_pod = 15;",
              "                max_items_count = 1;",
              "            }",
              "            //Военные (в том числе сюда попадают и флагманы, т.к. у них нет отдельного типа)",
              "            else if(ship_type == 'Warrior' || ship_type == 'EliteWarrior' || ship_type == 'Militiaman')",
              "            {",
              "                ship_main_type = t_Warrior;",
              "                chance_items = 25;",
              "                if(!ShipSubType(ship)) chance_escape_pod = 20;",
              "                else chance_escape_pod = 0; //Спасательные капсулы не для флагманов",
              "                max_items_count = 1;",
              "            }",
              "",
              "            int ship_race = ShipPilotRace(ship);",
              "            int ship_owner = ShipOwner(ship);",
              "            //Случайно определяем шанс выдачи",
              "            if(RndObject(1, 100, ship) <= chance_items)",
              "            {",
              "                //Формируется массив из всех возможных юзлессов для данного корабля",
              "                unknown give_list = newarray(1);",
              "",
              "                ArrayAdd(give_list, ship_owner, 'Usl_30'); //Зубная щетка (Зубная щетка служит для восстановления ротовой полости.)",
              "                ArrayAdd(give_list, ship_owner, 'Usl_63'); //Письмо (Самое обыкновенное несекретное письмо от одного человека другому в типовом бумажном конверте)",
              "                ArrayAdd(give_list, ship_owner, 'Usl_72'); //Конверт с кредитами (Плотный конверт, под завязку набитой денежной наличностью. Не для отправки почтой Карагона!)",
              "                ArrayAdd(give_list, ship_owner, 'Usl_70'); //Носитель информации (Емкое, но довольно хрупкое хранилище данных. На разъеме для подключения к информационному терминалу надпись \"Не той стороной втыкать запрещается!\")",
              "",
              "                if(ship_main_type == t_Ranger)",
              "                {",
              "                    ArrayAdd(give_list, None, 'Usl_PTQ68'); //Секретные документы (Конверт с секретными данными)",
              "                    ArrayAdd(give_list, None, 'Usl_PTQn60'); //Диск (Диск с важной информацией)",
              "                    ArrayAdd(give_list, None, 'Usl_PTQn64'); //Важные документы (Важные документы. На барахолке не толкать!)",
              "                    if(!RndObject(0, 1, ship)) ArrayAdd(give_list, None, 'Usl_DataArchive'); //Секретный архив (Архив правителя, содержащий зашифрованную информацию.)",
              "                    if(!RndObject(0, 2, ship)) ArrayAdd(give_list, None, 'Usl_LasosCup'); //Чашка (Керамическая чашка, на которой изображена какая-то рыба.)",
              "                    if(!RndObject(0, 2, ship)) ArrayAdd(give_list, ship_owner, 'Usl_23'); //Часовой механизм (Механизм для знаменитых аморфных часов.)",
              "                    if(!RndObject(0, 2, ship)) ArrayAdd(give_list, Peleng, 'Usl_46'); //Биоконтейнер (В контейнере низшее пеленгское животное, Дряхлоуст.)",
              "                    if(!RndObject(0, 2, ship)) ArrayAdd(give_list, RndObject(Peleng, Gaal, ship), 'Usl_58'); //Раритетный ковер (Раритетный ковер. Требуется доставить в химчистку.)",
              "                    if(!RndObject(0, 2, ship)) ArrayAdd(give_list, ship_owner, 'Usl_Faruk'); //Фарюки (Шесть мерзкопахнущих фруктов в воздухонепроницаемом кейсе.)",
              "                    if(!RndObject(0, 15, ship)) ArrayAdd(give_list, RndObject(Peleng, Gaal, ship), 'ShuBounty_Hyperdust'); //Гиперпыль (Сильнодействующее стимулирующее вещество.)",
              "",
              "                    if(ship_type == 'RangerPirate')",
              "                    {",
              "                        ArrayAdd(give_list, PirateClan, 'Usl_11'); //Контейнер \"Хавас\" (В контейнере находится бактериологическое оружие.)",
              "                        ArrayAdd(give_list, ship_owner, 'Usl_71'); //Секретная записка с паролем (Небольшой документ со списком ключевых фраз для голосового замка.)",
              "                        if(!RndObject(0, 2, ship)) ArrayAdd(give_list, PirateClan, 'Usl_MemoryModule'); //Модуль памяти (Пиратский модуль памяти.)",
              "",
              "                        //Звание выше шкипера",
              "                        if(GetShipPirateRank(ship) > 3)",
              "                        {",
              "                            if(!RndObject(0, 1, ship)) ArrayAdd(give_list, None, 'Usl_DataArchive'); //Секретный архив (Архив правителя, содержащий зашифрованную информацию.)",
              "                        }",
              "                    }",
              "",
              "                    if(ship_race == Maloc)",
              "                    {",
              "                        ArrayAdd(give_list, Maloc, 'Usl_7'); //Спортивный талисман (Красный ограненный камень с золотой надписью \"СИЛА и ЧЕСТЬ\".)",
              "                        ArrayAdd(give_list, Maloc, 'Usl_Svarokok'); //Сварококс (Народное малокское лекарство для лечения ожогов от бластера.)",
              "                        ArrayAdd(give_list, Maloc, 'Usl_2'); //Малокский флаг (Малокский флаг, укрепленный на странном древке.)",
              "                    }",
              "                    else",
              "                    {",
              "                        if(!RndObject(0, 3, ship)) ArrayAdd(give_list, Maloc, 'Usl_Svarokok'); //Сварококс (Народное малокское лекарство для лечения ожогов от бластера.)",
              "                    }",
              "",
              "                    if(ship_race == Peleng)",
              "                    {",
              "                        ArrayAdd(give_list, Peleng, 'Usl_46'); //Биоконтейнер (В контейнере низшее пеленгское животное, Дряхлоуст.)",
              "                        ArrayAdd(give_list, Peleng, 'Usl_16'); //Одежда (Комплект меняющих цвет пеленгских плащей.)",
              "                        ArrayAdd(give_list, Peleng, 'Usl_12'); //Парадные черпала (Комплект боевых расписных черпал, для парадных выступлений.)",
              "                        ArrayAdd(give_list, ship_owner, 'Usl_40'); //Жучки (Специальный кейс с набором шпионских жучков. Жучки временно парализованы.)",
              "                        if(!RndObject(0, 2, ship)) ArrayAdd(give_list, ship_owner, 'Usl_28'); //Пластиковый короб (Коробка с шифром шифра для агента.)",
              "                    }",
              "                    else",
              "                    {",
              "                        if(!RndObject(0, 3, ship)) ArrayAdd(give_list, ship_owner, 'Usl_40'); //Жучки (Специальный кейс с набором шпионских жучков. Жучки временно парализованы.)",
              "                    }",
              "",
              "                    if(ship_race == People)",
              "                    {",
              "                        if(!RndObject(0, 1, ship)) ArrayAdd(give_list, RndObject(People, Fei, ship), 'Usl_29'); //Кассета (Запись гимна, объединяющего людей и фэян.)",
              "                    }",
              "",
              "                    if(ship_race == Fei)",
              "                    {",
              "                        ArrayAdd(give_list, RndObject(People, Fei, ship), 'Usl_29'); //Кассета (Запись гимна, объединяющего людей и фэян.)",
              "                        if(!RndObject(0, 2, ship)) ArrayAdd(give_list, Fei, 'Usl_35'); //Пси-оружие (Партия фэянского психотропного оружия. Опасно! Запрещено к использованию в большинстве миров.)",
              "                        if(IsShuMercsHQEnabled)",
              "                        {",
              "                            if(!RndObject(0, 1, ship)) ArrayAdd(give_list, Fei, 'ShuMercsHQ_AgedEkupBottle'); //Бутылка выдержанного янвелба (Вкус, достойный королей.)",
              "                        }",
              "                    }",
              "                    else",
              "                    {",
              "                        if(IsShuMercsHQEnabled)",
              "                        {",
              "                            if(!RndObject(0, 5, ship)) ArrayAdd(give_list, Fei, 'ShuMercsHQ_AgedEkupBottle'); //Бутылка выдержанного янвелба (Вкус, достойный королей.)",
              "                        }",
              "                    }",
              "",
              "                    if(ship_race == Gaal)",
              "                    {",
              "                        ArrayAdd(give_list, ship_owner, 'Usl_Cactus'); //Контейнер с кактусами (Контейнер, через прозрачную крышку которого виднеются горшочки с кактусами.)",
              "                        ArrayAdd(give_list, Gaal, 'Usl_56'); //Детектор лжи (Новейшая модель детектора лжи)",
              "                        if(!RndObject(0, 3, ship)) ArrayAdd(give_list, Maloc, 'Usl_Svarokok'); //Сварококс (Народное малокское лекарство для лечения ожогов от бластера.)",
              "                    }",
              "                }",
              "",
              "                if(ship_main_type == t_Warrior)",
              "                {",
              "                    ArrayAdd(give_list, ship_owner, 'Usl_Rvk'); //Военная форма (Парадная военная форма. На груди золотыми буквами вышито имя \"ShipName\".)",
              "                    if(!RndObject(0, 25, ship)) ArrayAdd(give_list, RndObject(Peleng, Gaal, ship), 'ShuBounty_Hyperdust'); //Гиперпыль (Сильнодействующее стимулирующее вещество.)",
              "",
              "                    if(!RndObject(0, 2, ship))",
              "                    {",
              "                        ArrayAdd(give_list, None, 'Usl_PTQ68'); //Секретные документы (Конверт с секретными данными)",
              "                        ArrayAdd(give_list, None, 'Usl_PTQn60'); //Диск (Диск с важной информацией)",
              "                        ArrayAdd(give_list, None, 'Usl_PTQn64'); //Важные документы (Важные документы. На барахолке не толкать!)",
              "                    }",
              "",
              "                    if(ship_race == Maloc)",
              "                    {",
              "                        ArrayAdd(give_list, Maloc, 'Usl_7'); //Спортивный талисман (Красный ограненный камень с золотой надписью \"СИЛА и ЧЕСТЬ\".)",
              "                        ArrayAdd(give_list, Maloc, 'Usl_Svarokok'); //Сварококс (Народное малокское лекарство для лечения ожогов от бластера.)",
              "                        ArrayAdd(give_list, Maloc, 'Usl_2'); //Малокский флаг (Малокский флаг, укрепленный на странном древке.)",
              "                    }",
              "                    else if(ship_race == Peleng)",
              "                    {",
              "                        ArrayAdd(give_list, Peleng, 'Usl_46'); //Биоконтейнер (В контейнере низшее пеленгское животное, Дряхлоуст.)",
              "                        ArrayAdd(give_list, Peleng, 'Usl_16'); //Одежда (Комплект меняющих цвет пеленгских плащей.)",
              "                        ArrayAdd(give_list, Peleng, 'Usl_12'); //Парадные черпала (Комплект боевых расписных черпал, для парадных выступлений.)",
              "                        if(!RndObject(0, 2, ship)) ArrayAdd(give_list, Maloc, 'Usl_Svarokok'); //Сварококс (Народное малокское лекарство для лечения ожогов от бластера.)",
              "                    }",
              "                    else if(ship_race == People)",
              "                    {",
              "                        if(!RndObject(0, 1, ship)) ArrayAdd(give_list, RndObject(People, Fei, ship), 'Usl_29'); //Кассета (Запись гимна, объединяющего людей и фэян.)",
              "                    }",
              "                    else if(ship_race == Fei)",
              "                    {",
              "                        ArrayAdd(give_list, RndObject(People, Fei, ship), 'Usl_29'); //Кассета (Запись гимна, объединяющего людей и фэян.)",
              "                        if(IsShuMercsHQEnabled)",
              "                        {",
              "                            if(!RndObject(0, 2, ship)) ArrayAdd(give_list, Fei, 'ShuMercsHQ_AgedEkupBottle'); //Бутылка выдержанного янвелба (Вкус, достойный королей.)",
              "                        }",
              "                    }",
              "                }",
              "                else //if(ship_main_type != t_Warrior)",
              "                {",
              "                    ArrayAdd(give_list, ship_owner, 'Usl_74'); //Заблокированная карта с кредитами (Кредитная карта, которой невозможно воспользоваться, не активировав ее.)",
              "                    ArrayAdd(give_list, ship_owner, 'Usl_8'); //Коробка подарочная (Красочная коробка с неизвестным содержимым.)",
              "                    if(ship_type != 'Diplomat') ArrayAdd(give_list, ship_owner, 'Usl_37'); //Комплект биоигр (Приставки с биоиграми, которые подключаются непосредственно в мозг.)",
              "",
              "                    if(ship_race == Maloc)",
              "                    {",
              "                        ArrayAdd(give_list, Maloc, 'Usl_64'); //Малокский табурет (Малокский табурет на экспертизу)",
              "                        if(!RndObject(0, 3, ship)) ArrayAdd(give_list, Peleng, 'Usl_14'); //Прозрачная амфора (Резервуар с дорогим алкогольным пеленгским пойлом.)",
              "",
              "                        if(IsShuMercsHQEnabled)",
              "                        {",
              "                            if(!RndObject(0, 4, ship)) ArrayAdd(give_list, Fei, 'ShuMercsHQ_AgedEkupBottle'); //Бутылка выдержанного янвелба (Вкус, достойный королей.)",
              "                        }",
              "                    }",
              "",
              "                    if(ship_race == Maloc)",
              "                    {",
              "                        ArrayAdd(give_list, Maloc, 'Usl_Soberisam'); //Набор \"Собери доминатора\" (Конструктор, из которого можно собрать миниатюрную модель доминатора.)",
              "                    }",
              "",
              "                    if(ship_race == Fei)",
              "                    {",
              "                        if(!RndObject(0, 2, ship)) ArrayAdd(give_list, Fei, 'Usl_35'); //Пси-оружие (Партия фэянского психотропного оружия. Опасно! Запрещено к использованию в большинстве миров.)",
              "                    }",
              "",
              "                    if(ship_race == Peleng)",
              "                    {",
              "                        ArrayAdd(give_list, Peleng, 'Usl_46'); //Биоконтейнер (В контейнере низшее пеленгское животное, Дряхлоуст.)",
              "                        ArrayAdd(give_list, Peleng, 'Usl_14'); //Прозрачная амфора (Резервуар с дорогим алкогольным пеленгским пойлом.)",
              "                        if(!RndObject(0, 3, ship)) ArrayAdd(give_list, Peleng, 'Usl_18'); //Призовые кубки (Кубки и почетный орден \"ВЛ\" для победителей соревнований по киданию грязи.)",
              "                    }",
              "                    else",
              "                    {",
              "                        if(!RndObject(0, 3, ship)) ArrayAdd(give_list, Peleng, 'Usl_14'); //Прозрачная амфора (Резервуар с дорогим алкогольным пеленгским пойлом.)",
              "                    }",
              "                }",
              "",
              "                if(ship_main_type == t_Pirate)",
              "                {",
              "                    ArrayAdd(give_list, PirateClan, 'Usl_11'); //Контейнер \"Хавас\" (В контейнере находится бактериологическое оружие.)",
              "                    if(!RndObject(0, 1, ship)) ArrayAdd(give_list, ship_owner, 'Usl_71'); //Секретная записка с паролем (Небольшой документ со списком ключевых фраз для голосового замка.)",
              "                    if(!RndObject(0, 3, ship)) ArrayAdd(give_list, ship_owner, 'Usl_Faruk'); //Фарюки (Шесть мерзкопахнущих фруктов в воздухонепроницаемом кейсе.)",
              "                    if(!RndObject(0, 10, ship)) ArrayAdd(give_list, RndObject(Peleng, Gaal, ship), 'ShuBounty_Hyperdust'); //Гиперпыль (Сильнодействующее стимулирующее вещество.)",
              "                    if(IsShuMercsHQEnabled)",
              "                    {",
              "                        if(!RndObject(0, 5, ship)) ArrayAdd(give_list, Fei, 'ShuMercsHQ_AgedEkupBottle'); //Бутылка выдержанного янвелба (Вкус, достойный королей.)",
              "                    }",
              "",
              "                    if(ship_owner == PirateClan)",
              "                    {",
              "                        if(!RndObject(0, 2, ship)) ArrayAdd(give_list, PirateClan, 'Usl_MemoryModule'); //Модуль памяти (Пиратский модуль памяти.)",
              "",
              "                        //Звание выше шкипера",
              "                        if(GetShipPirateRank(ship) > 3)",
              "                        {",
              "                            if(!RndObject(0, 1, ship)) ArrayAdd(give_list, None, 'Usl_DataArchive'); //Секретный архив (Архив правителя, содержащий зашифрованную информацию.)",
              "                        }",
              "                    }",
              "",
              "                    if(ship_race == Maloc)",
              "                    {",
              "                        ArrayAdd(give_list, Maloc, 'Usl_Svarokok'); //Сварококс (Народное малокское лекарство для лечения ожогов от бластера.)",
              "                    }",
              "                    else if(ship_race == Fei)",
              "                    {",
              "                        if(!RndObject(0, 1, ship)) ArrayAdd(give_list, Fei, 'Usl_35'); //Пси-оружие (Партия фэянского психотропного оружия. Опасно! Запрещено к использованию в большинстве миров.)",
              "                        if(IsShuMercsHQEnabled)",
              "                        {",
              "                            if(!RndObject(0, 1, ship)) ArrayAdd(give_list, Fei, 'ShuMercsHQ_AgedEkupBottle'); //Бутылка выдержанного янвелба (Вкус, достойный королей.)",
              "                        }",
              "                    }",
              "                    else if(ship_race == Peleng)",
              "                    {",
              "                        ArrayAdd(give_list, Peleng, 'Usl_46'); //Биоконтейнер (В контейнере низшее пеленгское животное, Дряхлоуст.)",
              "                        ArrayAdd(give_list, Peleng, 'Usl_16'); //Одежда (Комплект меняющих цвет пеленгских плащей.)",
              "                        ArrayAdd(give_list, ship_owner, 'Usl_40'); //Жучки (Специальный кейс с набором шпионских жучков. Жучки временно парализованы.)",
              "                        if(!RndObject(0, 2, ship)) ArrayAdd(give_list, Maloc, 'Usl_Svarokok'); //Сварококс (Народное малокское лекарство для лечения ожогов от бластера.)",
              "                    }",
              "                }",
              "                else //if(ship_main_type != t_Pirate)",
              "                {",
              "                    if(!RndObject(0, 2, ship)) ArrayAdd(give_list, ship_owner, 'Usl_Cactus'); //Контейнер с кактусами (Контейнер, через прозрачную крышку которого виднеются горшочки с кактусами.)",
              "                }",
              "",
              "                if(ship_main_type == t_Transport)",
              "                {",
              "                    if(!RndObject(0, 20, ship)) ArrayAdd(give_list, RndObject(Peleng, Gaal, ship), 'ShuBounty_Hyperdust'); //Гиперпыль (Сильнодействующее стимулирующее вещество.)",
              "",
              "                    if(ship_type == 'Transport')",
              "                    {",
              "                        ArrayAdd(give_list, ship_owner, 'Usl_19'); //Упаковка сигарет (Коробка сигарет всевозможных марок.)",
              "                        ArrayAdd(give_list, Peleng, 'Usl_16'); //Одежда (Комплект меняющих цвет пеленгских плащей.)",
              "                        ArrayAdd(give_list, RndObject(Maloc, Gaal, ship), 'Usl_Stroyka'); //Контейнер со стройматериалами (Универсальный набор для внутренней отделки жилища.)",
              "                        ArrayAdd(give_list, RndObject(Maloc, Gaal, ship), 'Usl_22'); //Контейнер с религиозными сувенирами (Большое количество всевозможного религиозного инвентаря различных религий.)",
              "                        ArrayAdd(give_list, RndObject(Maloc, Gaal, ship), 'Usl_26'); //Процессоры (Процессоры многоуровневой архитектуры для планетарных рекламных щитов.)",
              "                        ArrayAdd(give_list, Peleng, 'Usl_46'); //Биоконтейнер (В контейнере низшее пеленгское животное, Дряхлоуст.)",
              "                        if(!RndObject(0, 1, ship)) ArrayAdd(give_list, Fei, 'Usl_Faruk'); //Фарюки (Шесть мерзкопахнущих фруктов в воздухонепроницаемом кейсе.)",
              "                        if(IsShuMercsHQEnabled)",
              "                        {",
              "                            if(!RndObject(0, 3, ship)) ArrayAdd(give_list, Fei, 'ShuMercsHQ_AgedEkupBottle'); //Бутылка выдержанного янвелба (Вкус, достойный королей.)",
              "                        }",
              "                    }",
              "",
              "                    if(ship_type == 'Liner')",
              "                    {",
              "                        ArrayAdd(give_list, RndObject(Maloc, Gaal, ship), 'Usl_22'); //Контейнер с религиозными сувенирами (Большое количество всевозможного религиозного инвентаря различных религий.)",
              "                        if(!RndObject(0, 2, ship)) ArrayAdd(give_list, RndObject(Peleng, Gaal, ship), 'Usl_58'); //Раритетный ковер (Раритетный ковер. Требуется доставить в химчистку.)",
              "                    }",
              "",
              "                    if(ship_type == 'Diplomat')",
              "                    {",
              "                        ArrayAdd(give_list, None, 'Usl_DataArchive'); //Секретный архив (Архив правителя, содержащий зашифрованную информацию.)",
              "                        if(!RndObject(0, 2, ship)) ArrayAdd(give_list, ship_owner, 'Usl_23'); //Часовой механизм (Механизм для знаменитых аморфных часов.)",
              "                        if(!RndObject(0, 3, ship)) ArrayAdd(give_list, ship_owner, 'Usl_40'); //Жучки (Специальный кейс с набором шпионских жучков. Жучки временно парализованы.)",
              "",
              "                        if(ship_race == Maloc)",
              "                        {",
              "                            ArrayAdd(give_list, Maloc, 'Usl_7'); //Спортивный талисман (Красный ограненный камень с золотой надписью \"СИЛА и ЧЕСТЬ\".)",
              "                            ArrayAdd(give_list, Maloc, 'Usl_2'); //Малокский флаг (Малокский флаг, укрепленный на странном древке.)",
              "                        }",
              "                        else if(ship_race == People)",
              "                        {",
              "                            ArrayAdd(give_list, RndObject(People, Fei, ship), 'Usl_29'); //Кассета (Запись гимна, объединяющего людей и фэян.)",
              "                        }",
              "                        else if(ship_race == Fei)",
              "                        {",
              "                            ArrayAdd(give_list, RndObject(People, Fei, ship), 'Usl_29'); //Кассета (Запись гимна, объединяющего людей и фэян.)",
              "                        }",
              "                        else if(ship_race == Gaal)",
              "                        {",
              "                            ArrayAdd(give_list, Gaal, 'Usl_56'); //Детектор лжи (Новейшая модель детектора лжи)",
              "                        }",
              "",
              "                        if(ship_race == Peleng)",
              "                        {",
              "                            ArrayAdd(give_list, ship_owner, 'Usl_28'); //Пластиковый короб (Коробка с шифром шифра для агента.)",
              "                            ArrayAdd(give_list, Peleng, 'Usl_25'); //Дизодан (Ценная минеральная порода. Воздействует на психику биологических организмов.)",
              "                        }",
              "                        else",
              "                        {",
              "                            if(!RndObject(0, 5, ship)) ArrayAdd(give_list, ship_owner, 'Usl_28'); //Пластиковый короб (Коробка с шифром шифра для агента.)",
              "                        }",
              "                    }",
              "                    else",
              "                    {",
              "                        ArrayAdd(give_list, ship_owner, 'Usl_33'); //Три гинирных емкости (Смазочный материал, гиниромасло для робототехнических ресурсов.)",
              "                        ArrayAdd(give_list, ship_owner, 'Usl_Pilot'); //Сертификат (Юридически заверенная бумага, дающая право вождения большегрузных кораблей.)",
              "                        if(!RndObject(0, 2, ship)) ArrayAdd(give_list, RndObject(Peleng, Gaal, ship), 'Usl_LasosCup'); //Чашка (Керамическая чашка, на которой изображена какая-то рыба.)",
              "",
              "                        if(ship_race == Fei)",
              "                        {",
              "                            if(IsShuMercsHQEnabled)",
              "                            {",
              "                                if(!RndObject(0, 2, ship)) ArrayAdd(give_list, Fei, 'ShuMercsHQ_AgedEkupBottle'); //Бутылка выдержанного янвелба (Вкус, достойный королей.)",
              "                            }",
              "                        }",
              "                    }",
              "",
              "                    if(ship_type == 'Smuggler')",
              "                    {",
              "                        ArrayAdd(give_list, ship_owner, 'Usl_19'); //Упаковка сигарет (Коробка сигарет всевозможных марок.)",
              "                        ArrayAdd(give_list, Peleng, 'Usl_46'); //Биоконтейнер (В контейнере низшее пеленгское животное, Дряхлоуст.)",
              "                        ArrayAdd(give_list, Fei, 'Usl_Faruk'); //Фарюки (Шесть мерзкопахнущих фруктов в воздухонепроницаемом кейсе.)",
              "                        ArrayAdd(give_list, ship_owner, 'Usl_25'); //Дизодан (Ценная минеральная порода. Воздействует на психику биологических организмов.)",
              "                        ArrayAdd(give_list, Fei, 'Usl_35'); //Пси-оружие (Партия фэянского психотропного оружия. Опасно! Запрещено к использованию в большинстве миров.)",
              "                        ArrayAdd(give_list, Maloc, 'Usl_Svarokok'); //Сварококс (Народное малокское лекарство для лечения ожогов от бластера.)",
              "                        if(!RndObject(0, 5, ship)) ArrayAdd(give_list, RndObject(Peleng, Gaal, ship), 'ShuBounty_Hyperdust'); //Гиперпыль (Сильнодействующее стимулирующее вещество.)",
              "                        if(IsShuMercsHQEnabled)",
              "                        {",
              "                            if(!RndObject(0, 1, ship)) ArrayAdd(give_list, Fei, 'ShuMercsHQ_AgedEkupBottle'); //Бутылка выдержанного янвелба (Вкус, достойный королей.)",
              "                        }",
              "                    }",
              "",
              "                    if(!RndObject(0, 4, ship))",
              "                    {",
              "                        ArrayAdd(give_list, None, 'Usl_PTQ68'); //Секретные документы (Конверт с секретными данными)",
              "                        ArrayAdd(give_list, None, 'Usl_PTQn60'); //Диск (Диск с важной информацией)",
              "                        ArrayAdd(give_list, None, 'Usl_PTQn64'); //Важные документы (Важные документы. На барахолке не толкать!)",
              "                    }",
              "",
              "                    if(ship_race == Maloc)",
              "                    {",
              "                        ArrayAdd(give_list, Maloc, 'Usl_Svarokok'); //Сварококс (Народное малокское лекарство для лечения ожогов от бластера.)",
              "                    }",
              "                    else if(ship_race == Peleng)",
              "                    {",
              "                        ArrayAdd(give_list, ship_owner, 'Usl_40'); //Жучки (Специальный кейс с набором шпионских жучков. Жучки временно парализованы.)",
              "                    }",
              "                    else if(ship_race == Gaal)",
              "                    {",
              "                        ArrayAdd(give_list, ship_owner, 'Usl_Cactus'); //Контейнер с кактусами (Контейнер, через прозрачную крышку которого виднеются горшочки с кактусами.)",
              "                    }",
              "                }",
              "",
              "                //Из сформированного массива рандомно выбирается один или несколько предметов",
              "                if(max_items_count > 1) max_items_count = RndObject(1, max_items_count, ship);",
              "                for(int j = 1; j <= max_items_count; j = j + 1)",
              "                {",
              "                    if(ArrayDim(give_list) > 2) int num = RndObject(1, ArrayDim(give_list) - 1, ship);",
              "                    else num = 1;",
              "                    dword item = CreateQuestItem(GetVariableName(give_list[num]), give_list[num]);",
              "                    str common_text = CT('UselessItems.' + GetVariableName(give_list[num]) + '.CommonText');",
              "                    if(common_text != '') UselessItemText(item, Format(common_text, '<ShipName'+'>', ShipName(ship), '255,240,100'));",
              "                    ShipAddDropItem(ship, item);",
              "                    ArrayDelete(give_list, num);",
              "                }",
              "            }",
              "",
              "            //Раздача спасательных капсул",
              "            if(ShipInScript(ship, 0))",
              "            {",
              "                //Проверка на стандартные скрипты, точно не являющиеся квестовыми",
              "                num = 0;",
              "                str script_name = GetShipScriptName(ship, 3);",
              "                if(script_name == 'Mod_ExpTraitors.Traitors') num = 1; //RangerPirate",
              "                else if(script_name == 'Mod_ShuSmugglers.Smugglers') num = 1; //Smuggler",
              "",
              "                if(!num) continue;",
              "            }",
              "",
              "            if(RndObject(1, 100, ship) <= chance_escape_pod)",
              "            {",
              "                item = CreateQuestItem('ShuBounty_EscapePod', ship_owner);",
              "                ItemCost(item, 0); //Используем это как маркер, что цену (а заодно и прочие статы корабля) нужно перерассчитать перед дропом",
              "                LinkItemToScript(item);",
              "                ItemOnActCode(item, 'EscapePodActCode();', 't_OnDropItem,t_OnItemHit,t_OnStep|11');",
              "",
              "                //Заполняем информацию о гуманоиде внутри капсулы (только самое общее, остальное заполняется непосредственно при дропе капсулы)",
              "                UselessItemData(item, 1, ship_main_type);",
              "",
              "                ShipAddDropItem(ship, item);",
              "            }",
              "        }",
              "    }",
              "}",
              "",
              "function EscapePodActCode() //t_OnDropItem, t_OnItemHit, t_OnStep_11",
              "{",
              "    dword cur_item = CurItem();",
              "",
              "    //Тикает таймер времени жизни гуманоида в капсуле",
              "    if(ScriptItemActionType(t_OnStep))",
              "    {",
              "        int time_left = UselessItemData(cur_item, 3);",
              "        //Система жизнеобеспечения отключается, гуманоид внутри погибает",
              "        if(time_left == 1)",
              "        {",
              "            str pilot_name = ScriptItemTextData(cur_item, 3);",
              "            UselessItemText(cur_item, Format(CT('UselessItems.ShuBounty_EscapePod.Description.PilotDead'), '<Name'+'>', lowercase(substr(pilot_name, 0, 1)) + substr(pilot_name, 1), '<TimeOfDeath'+'>', '<color=255,240,100>' + GameDateTxtByTurn(CurTurn()) + '</color>', ''));",
              "            UselessItemData(cur_item, 3, 0);",
              "            ItemCost(cur_item, max(round(0.15 * ItemCost(cur_item)), 100));",
              "            ItemOnActCode(cur_item, ''); //Больше нет смысла крутить этот акткод",
              "        }",
              "        else UselessItemData(cur_item, 3, time_left - 1);",
              "    }",
              "    //Если капсулу расстрелял игрок",
              "    else if(ScriptItemActionType(t_OnItemHit))",
              "    {",
              "        dword ship = ScriptItemActShip();",
              "        if(IsPlayer(ship))",
              "        {",
              "            dword cur_star = ScriptItemActObject2();",
              "            str ship_type = ScriptItemTextData(cur_item, 1);",
              "            if(ship_type == 'RangerPirate') int relation_change = 10; //Обижает клан",
              "            else if(ship_type == 'Smuggler') relation_change = 5; //Слегка обижает клан",
              "            else if(UselessItemData(cur_item, 1) != t_Pirate) relation_change = -15;  //Сильно обижает Коалицию",
              "            else relation_change = 10; //Обижает клан",
              "",
              "            //Игрок выстрелил капсулой с не пиратом / не контрабандистом внутри, обижается Коалиция",
              "            if(relation_change < 0)",
              "            {",
              "                relation_change = abs(relation_change);",
              "",
              "                for(int i = 0; i < StarPlanets(cur_star); i = i + 1)",
              "                {",
              "                    dword planet = StarPlanets(cur_star, i);",
              "                    if(PlanetOwner(planet) != None) RelationToRanger(planet, Player(), max(RelationToRanger(planet, Player()) - relation_change, 0));",
              "                }",
              "                //Если подключён мод ExpTraitors, то также портим отношения с не пиратскими станциями",
              "                if(CurrentMods('Expansion\\ExpTraitors'))",
              "                {",
              "                    for(i = 0; i < StarRuins(cur_star); i = i + 1)",
              "                    {",
              "                        dword ruin = StarRuins(cur_star, i);",
              "                        if(ShipOwner(ruin) != PirateClan && ShipType(ruin) != 'PB')",
              "                        {",
              "                            RelationToRanger(ruin, Player(), max(RelationToRanger(ruin, Player()) - relation_change, 10));",
              "                        }",
              "                    }",
              "                }",
              "            }",
              "            //Игрок выстрелил капсулой с пиратом / контрабандистом внутри, обижается клан",
              "            else",
              "            {",
              "                RelationToRanger(PlanetPirateClan(), Player(), max(RelationToRanger(PlanetPirateClan(), Player()) - relation_change, 0));",
              "                //Если подключён мод ExpTraitors, то также портим отношения с не пиратскими станциями",
              "                if(CurrentMods('Expansion\\ExpTraitors'))",
              "                {",
              "                    for(i = 0; i < StarRuins(cur_star); i = i + 1)",
              "                    {",
              "                        ruin = StarRuins(cur_star, i);",
              "                        if(ShipOwner(ruin) == PirateClan || ShipType(ruin) == 'PB')",
              "                        {",
              "                            RelationToRanger(ruin, Player(), max(RelationToRanger(ruin, Player()) - relation_change, 10));",
              "                        }",
              "                    }",
              "                }",
              "            }",
              "        }",
              "    }",
              "    //Срабатывает один раз, при смерти корабля из которого выпадает предмет (точнее, срабатывает чаще, но остальное отсекаем проверкой на цену)",
              "    else //if(ScriptItemActionType(t_OnDropItem))",
              "    {",
              "        if(!ItemCost(cur_item))",
              "        {",
              "            ship = ScriptItemActShip();",
              "            //Если за время своей жизни корабль попал в какой-то скрипт, то отменяем дроп капсулы во избежание кринжа",
              "            if(ShipInScript(ship, 0))",
              "            {",
              "                //Проверка на стандартные скрипты, точно не являющиеся квестовыми",
              "                int check = 0;",
              "                str script_name = GetShipScriptName(ship, 3);",
              "                if(script_name == 'Mod_ExpTraitors.Traitors') check = 1; //RangerPirate",
              "                else if(script_name == 'Mod_ShuSmugglers.Smugglers') check = 1; //Smuggler",
              "",
              "                if(!check)",
              "                {",
              "                    ScriptItemActParam(-1);",
              "                    exit;",
              "                }",
              "            }",
              "",
              "            int owner = ShipOwner(ship);",
              "            dword temp_item = CreateQuestItem('ShuBounty_EscapePod', owner);",
              "            ItemCost(cur_item, ItemCost(temp_item)); //Обновляем цену капсулы, чтобы та соответствовала текущему этапу игры",
              "            FreeItem(temp_item);",
              "            ItemOwner(cur_item, owner);",
              "            UselessItemData(cur_item, 2, ShipPilotRace(ship));",
              "            ScriptItemData(cur_item, 3, owner);",
              "",
              "            ScriptItemData(cur_item, 1, ShipFace(ship));",
              "            ScriptItemData(cur_item, 2, Id(ShipStatistic(ship, 10))); //Id родной планеты пилота",
              "            //Время жизни пилота внутри капсулы, по истечении которого тут погибнет (качество системы определяет раса-производитель (люди 1.00))",
              "            int life_support_system = 73;//RndObject(61, 121, ship);",
              "            int item_size = 3;",
              "            if(owner == Maloc)",
              "            {",
              "                life_support_system = round(0.70 * life_support_system);",
              "                item_size = 5;",
              "            }",
              "            else if(owner == Peleng)",
              "            {",
              "                life_support_system = round(0.90 * life_support_system);",
              "                item_size = 2;",
              "            }",
              "            else if(owner == Fei)",
              "            {",
              "                life_support_system = round(1.15 * life_support_system);",
              "                item_size = 1;",
              "            }",
              "            else if(owner == Gaal)",
              "            {",
              "                life_support_system = round(1.30 * life_support_system);",
              "                item_size = 3;",
              "            }",
              "            else if(owner == PirateClan)",
              "            {",
              "                life_support_system = round(0.80 * life_support_system);",
              "                item_size = 3;",
              "            }",
              "            UselessItemData(cur_item, 3, life_support_system);",
              "            ItemSize(cur_item, item_size);",
              "",
              "            if(ShipTypeN(ship) == t_Ranger) int is_ranger = 1;",
              "            else is_ranger = 0;",
              "",
              "            ship_type = ShipType(ship);",
              "            ScriptItemTextData(cur_item, 1, ship_type);",
              "            //Запоминаем различные дополнительные характеристики корабля",
              "            str ship_stats = '';",
              "            for(i = 0; i < 6; i = i + 1) ship_stats = ship_stats + ShipSkill(ship, i); //Строка навыков без разделителей",
              "            ship_stats = '' + ShipSubType(ship) + ':' + ship_stats + ':' + ShipMoney(ship) + ':' + ShipRank(ship) + ',' + GetShipPirateRank(ship) + ':' + ShipCustomFaction(ship) + ':' + CountReward(ship) + ':' + ShipFreeExp(ship) + ':' + GetShipExpByType(ship) + ':' + RelationToShip(ship, Player());",
              "            if(is_ranger == t_Ranger) ship_stats = ship_stats + ':' + ShipStatus(ship, 0) + ',' + ShipStatus(ship, 1) + ',' + ShipStatus(ship, 2);",
              "",
              "            int implants_infos = ShipFindCustomShipInfoByType(ship, 'bioMM_NPC');",
              "            if(~implants_infos) ship_stats = ship_stats + ':' + ShipCustomShipInfoData(ship, implants_infos, 1) + '*' + ShipCustomShipInfoData(ship, implants_infos, 2) + '*' + ShipCustomShipInfoData(ship, implants_infos, 3) + '*' + substr(ShipCustomShipInfoTextData(ship, implants_infos, 1), 0, 1) + '*' + ShipCustomShipInfoTextData(ship, implants_infos, 2) + '*' + ShipCustomShipInfoTextData(ship, implants_infos, 3);",
              "            else ship_stats = ship_stats + ':';",
              "",
              "            if(is_ranger == t_Ranger)",
              "            {",
              "                implants_infos = ShipFindCustomShipInfoByType(ship, 'ExpExplorers_ExplorerInfo');",
              "                if(~implants_infos) ship_stats = ship_stats + ':' + ShipCustomShipInfoData(ship, implants_infos, 3) + ',' + ShipCustomShipInfoTextData(ship, implants_infos, 1) + ',' + ShipCustomShipInfoTextData(ship, implants_infos, 2) + ',' + ShipCustomShipInfoTextData(ship, implants_infos, 3);",
              "                else ship_stats = ship_stats + ':';",
              "            }",
              "",
              "            //Последний параметр в составной строке",
              "            implants_infos = ShipFindCustomShipInfoByType(ship, 'IgnoreCamoInfo');",
              "            if(~implants_infos) ship_stats = ship_stats + ':' + ShipCustomShipInfoData(ship, implants_infos, 1);",
              "",
              "            //SFT(Name(ship) + ': ' + ship_stats);",
              "            ScriptItemTextData(cur_item, 2, ship_stats);",
              "",
              "            pilot_name = CT('UselessItems.ShuBounty_EscapePod.Description.' + ship_type);",
              "            if(pilot_name == '') pilot_name = CT('ShipType.TypeName.' + ship_type);",
              "            pilot_name = pilot_name + ' <color=255,240,100>' + ShortName(ship) + '</color>';",
              "            ScriptItemTextData(cur_item, 3, pilot_name);",
              "",
              "            UselessItemText(cur_item, Format(CT('UselessItems.ShuBounty_EscapePod.Description.PilotAlive'), '<Name'+'>', lowercase(substr(pilot_name, 0, 1)) + substr(pilot_name, 1), ''));",
              "        }",
              "    }",
              "}",
              "",
              "//Ищет указанные (по типу) спасательные капсулы в трюме и на складе игрока для указанной станции, возвращает заполненный массив",
              "//Предполагается использовать только из диалога по прилёту на соответствующую станцию",
              "function FindEscapePodsInStock(dword place = 0, int main_types_set = -1, str str_types = '')",
              "{",
              "    if(main_types_set == -1) exit;",
              "",
              "    ArrayClear(tarr1);",
              "    ArrayDelete(tarr1, 0);",
              "",
              "    int pods_found = 0;",
              "    int cnt = ShipItems(Player());",
              "    for(int i = 1; i < cnt; i = i + 1)",
              "    {",
              "        dword item = ShipItems(Player(), i);",
              "        if(ItemType(item) != t_UselessItem) continue;",
              "        if(EquipmentImageName(item) != 'ShuBounty_EscapePod') continue;",
              "        if(~main_types_set)",
              "        {",
              "            if(!((1 << UselessItemData(item, 1)) & main_types_set)) //Если капсула не подходит ни по одному из основных типов, сверяем по типу корабля (пилота внутри)",
              "            {",
              "                if(findsubstr(str_types, ScriptItemTextData(item, 1)) == -1) continue;",
              "            }",
              "        }",
              "        //Если не выставлены фильтры по основным типам, то сразу проверяем по типу корабля",
              "        else if(findsubstr(str_types, ScriptItemTextData(item, 1)) == -1) continue;",
              "",
              "        ArrayAdd(tarr1, item);",
              "        pods_found = pods_found + 1;",
              "    }",
              "",
              "    if(place)",
              "    {",
              "        cnt = StorageItems();",
              "        for(i = 0; i < cnt; i = i + 1)",
              "        {",
              "            if(StorageItemLocation(i) != place) continue;",
              "            item = StorageItems(i);",
              "            if(ItemType(item) != t_UselessItem) continue;",
              "            if(EquipmentImageName(item) != 'ShuBounty_EscapePod') continue;",
              "            if(~main_types_set)",
              "            {",
              "                if(!((1 << UselessItemData(item, 1)) & main_types_set)) //Если капсула не подходит ни по одному из основных типов, сверяем по типу корабля (пилота внутри)",
              "                {",
              "                    if(findsubstr(str_types, ScriptItemTextData(item, 1)) == -1) continue;",
              "                }",
              "            }",
              "            //Если не выставлены фильтры по основным типам, то сразу проверяем по типу корабля",
              "            else if(findsubstr(str_types, ScriptItemTextData(item, 1)) == -1) continue;",
              "    ",
              "            ArrayAdd(tarr1, item);",
              "            pods_found = pods_found + 1;",
              "        }",
              "    }",
              "",
              "    if(!pods_found) ArrayAdd(tarr1, 0); //Чтоб не крашил, собака",
              "    result = pods_found;",
              "}",
              "",
              "//Используется для восстановления утраченных ранее имплантов из относительно компактной строки (ожидается, что у корабля в этот момент не будет никаких установленных имплантов)",
              "function AddImplantsFromString(dword ship, str implants_data)",
              "{",
              "    if(!CurrentMods('Expansion\\ExpImplants')) exit;",
              "",
              "    //Ожидается строка вида '1*2*2*R*4.B.N,1.4.B.N,4.B.N*5', где первые 3 цифры - число занятых слотов каждого типа, буква после них - тип корабля (в данном случае R - Ranger), получившего импланты, и самая последняя цифра - ГТУ последней установки (в данном случае 5)",
              "    int free_brain = GetParFromString(implants_data, '*', 0, 0);",
              "    int free_hands = GetParFromString(implants_data, '*', 1, 0);",
              "    int free_eyes = GetParFromString(implants_data, '*', 2, 0);",
              "    str implants_type = GetParFromString(implants_data, '*', 3, 0);",
              "    str implants_str = GetParFromString(implants_data, '*', 4, 0);",
              "    int installation_GTL = GetParFromString(implants_data, '*', 5, 0);",
              "",
              "    if(implants_type == 'R') implants_type = 'RangerImps';",
              "    else if(implants_type == 'W') implants_type = 'WarriorImps';",
              "    else if(implants_type == 'P') implants_type = 'PirateImps';",
              "    else if(implants_type == 'T') implants_type = 'TransportImps';",
              "    else if(implants_type == 'L') implants_type = 'LinerImps';",
              "    else if(implants_type == 'D') implants_type = 'DiplomatImps';",
              "    else throw 'Incorrect implants type received by AddImplantsFromString function: ' + implants_data;",
              "",
              "    int cnt = ParsCountFromString(implants_str, ',');",
              "    for(int i = 0; i < cnt; i = i + 1)",
              "    {",
              "        //Ожидаются строки вида: '4.B.N', '9.H.P' и т.д. (номер в массиве, слот, не пиратский/пиратский)",
              "        str cur_implant_str = GetParFromString(implants_str, ',', i, 0);",
              "        int implant_num = GetParFromString(cur_implant_str, '.', 0, 0);",
              "        str slot = GetParFromString(cur_implant_str, '.', 1, 0);",
              "        str type = GetParFromString(cur_implant_str, '.', 2, 0);",
              "",
              "        int implants_info = ShipFindCustomShipInfoByType(ship, 'bioMM_NPC');",
              "        str implants_info_descr = CT('ShipInfo.AddInfo.CustomInfos.bioMM_NPC.Description');",
              "",
              "        str implant_name = GetValueFromScript('Mod_ExpImplants', implants_type, implant_num, 12);",
              "        if(slot == 'B')",
              "        {",
              "            if(type == 'P') implant_name = ' ' + CT('Biomodules.PirateBiomoduleNameColor') + implant_name + '</color>';",
              "            else implant_name = ' <color=255,240,100>' + implant_name + '</color>';",
              "            implants_info_descr = implants_info_descr + \"<br>\" + CT('Script.Mod_ExpImplants.Brain') + implant_name;",
              "        }",
              "        else if(slot == 'H')",
              "        {",
              "            if(type == 'P') implant_name = ' ' + CT('Biomodules.PirateBiomoduleNameColor') + implant_name + '</color>';",
              "            else implant_name = ' <color=255,240,100>' + implant_name + '</color>';",
              "            implants_info_descr = implants_info_descr + \"<br>\" + CT('Script.Mod_ExpImplants.Hand') + implant_name;",
              "        }",
              "        else if(slot == 'E')",
              "        {",
              "            if(type == 'P') implant_name = ' ' + CT('Biomodules.PirateBiomoduleNameColor') + implant_name + '</color>';",
              "            else implant_name = ' <color=255,240,100>' + implant_name + '</color>';",
              "            implants_info_descr = implants_info_descr + \"<br>\" + CT('Script.Mod_ExpImplants.Hand') + implant_name;",
              "        }",
              "        else throw 'Incorrect implant slot received by AddImplantsFromString function: ' + implants_data;",
              "",
              "        //Добавляем на корабль доп. инфошку биомодуля, если таковая нужна",
              "        str tstr = GetValueFromScript('Mod_ExpImplants', implants_type, implant_num, 11);",
              "        if(tstr != '') ShipAddCustomShipInfo(ship, tstr, 'NoShow');",
              "        //Добавляем кораблю бонусы биомодуля, если таковые имеются",
              "        tstr = 'Biomodules.' + GetValueFromScript('Mod_ExpImplants', implants_type, implant_num, 5) + '_gtu.' + GetValueFromScript('Mod_ExpImplants', implants_type, implant_num, 6);",
              "        for(int j = CT(tstr + '.Bonus_count'); j > 0; j = j - 1)",
              "        {",
              "            int bon_num = GetValueFromScript('', CT(tstr + '.Bonus_' + j));",
              "            ShipSpecialBonuses(ship, bon_num, ShipSpecialBonuses(ship, bon_num) + int(CT(tstr + '.Bonus_' + j + '_var')));",
              "        }",
              "",
              "        //Добавляем инфошку и заполняем описание (также запоминаем всё ещё свободные части тела и ГТУ, на котором произошло добавление биомодулей)",
              "        ShipAddCustomShipInfo(ship, 'bioMM_NPC', implants_info_descr, free_brain, free_hands, free_eyes, '', '', installation_GTL);",
              "    }",
              "}",
              "",
              "//Восстанавливаем скриптовую инфошку для рейнджеров исследователей из ExpExplorers",
              "function RestoreExplorerData(dword ship, str explorer_data)",
              "{",
              "    ShipAddCustomShipInfo(ship, 'ExpExplorers_ExplorerInfo', 'NoShow', 0, 0, GetParFromString(explorer_data, ',', 0, 0), GetParFromString(explorer_data, ',', 1, 0), GetParFromString(explorer_data, ',', 2, 0), GetParFromString(explorer_data, ',', 3, 0));",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  106,
          "#":  107,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1 = '</color>' + CT('Script.Mod_ShuBounty.EscapePodsDialog.HandOver' + cur_ruin_type);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  110,
          "#":  109,
          "Total.Lines":  824,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Описание всех данных капсулы:",
              "//UselessItemData(item, 1) - основной тип пилота (корабля): t_Ranger, t_Warrior, t_Pirate или t_Transport",
              "//UselessItemData(item, 2) - раса пилота",
              "//UselessItemData(item, 3) - остаток ходов до смерти пилота в капсуле (если 0, значит, пилот мёртв)",
              "//",
              "//ScriptItemData(item, 1) - номер лица пилота (массив лиц зависит от расы)",
              "//ScriptItemData(item, 2) - Id родной планеты пилота",
              "//ScriptItemData(item, 3) - овнер пилота (корабля)",
              "//",
              "//ScriptItemTextData(item, 1) - строковый тип пилота (корабля), типа: 'Warrior', 'Smuggler' и т.д.",
              "//ScriptItemTextData(item, 2) - сложная составная строка набора прочих параметров пилота (корабля) формата (для t_Ranger): 'ShipSubType(ship):все навыки по очереди слитно без запятых:ShipMoney(ship):ShipRank(ship),GetShipPirateRank(ship):ShipCustomFaction(ship):номера всех наград через запятую:ShipFreeExp(ship):GetShipExpByType(ship):RelationToShip(ship, Player()):ShipStatus(ship, 0),ShipStatus(ship, 1),ShipStatus(ship, 2):Шифровка установленных имплантов:Шифровка научных званий:Инфошка IgnoreCamoInfo (всего одна цифра, 0 или 1, в зависимости от единственного маркера в инфошке)'",
              "//                                                                                                         (для всех остальных): 'ShipSubType(ship):все навыки по очереди слитно без запятых:ShipMoney(ship):ShipRank(ship),GetShipPirateRank(ship):ShipCustomFaction(ship):номера всех наград через запятую:ShipFreeExp(ship):GetShipExpByType(ship):RelationToShip(ship, Player()):Шифровка установленных имплантов:Инфошка IgnoreCamoInfo (всего одна цифра, 0 или 1, в зависимости от единственного маркера в инфошке)'",
              "//ScriptItemTextData(item, 3) - должность и имя пилота в капсуле формата: \"Пилот военного судна <color=255,240,100>Долбоклак -69-</color>\"",
              "",
              "dword item = tarr1[GAnswerData];",
              "",
              "int reward = 0;",
              "int fake_reward = 0; //Обманная награда игрока в кредитах (обычная награда, которая должна быть больше настоящей на 13% (для БЦ))",
              "int exp_points = 0;",
              "int military_rank_points = 0;",
              "int pirate_rank_points = 0;",
              "str stats_string = ScriptItemTextData(item, 2);",
              "",
              "str pilot_name = DeleteTags(GetParFromString(ScriptItemTextData(item, 3), '>', 1, 0) + '>');",
              "if(UselessItemData(item, 3)) str pilot_status = 'Alive';",
              "else pilot_status = 'Dead';",
              "int main_type = UselessItemData(item, 1);",
              "str ship_type = ScriptItemTextData(item, 1);",
              "str ship_type_in_par = '';",
              "dword nearest_planet = NearCivilPlanet(cur_ruin); //Ближайшая к станции обитаемая планета",
              "dword home_planet = IdToPlanet(ScriptItemData(item, 2));",
              "int cur_year = GetParFromString(GameDateTxtByTurn(CurTurn()), ' ', 2, 0);",
              "int will_revive = 0;",
              "",
              "//Центр рейнджеров",
              "if(cur_ruin_type == 'RC')",
              "{",
              "    if(pilot_status == 'Alive')",
              "    {",
              "        if(ship_type != 'RangerPirate' && ship_type != 'RangerPirateExplorer')",
              "        {",
              "            for(int i = 0; i < GalaxySectors(); i = i + 1) ConChangeRelationToRanger(GalaxySectors(i), Player(), 2);",
              "            if(CurrentMods('Expansion\\ExpTraitors')) //Меняем отношение станций",
              "            {",
              "                ChangeRuinsRelationFunFiller['GlobalRelationForCoalition'] = ChangeRuinsRelationFunFiller['GlobalRelationForCoalition'] + 2;",
              "                ChangeRuinsRelationFunFiller['ChangeRuinsRelationToPlayerCallMark'] = 1;",
              "            }",
              "",
              "            //Считаем наградной опыт",
              "            if(GTL <= 2) float coef = 1.00;",
              "            else if(GTL == 3) coef = 1.20;",
              "            else if(GTL == 4) coef = 1.40;",
              "            else if(GTL == 5) coef = 1.60;",
              "            else if(GTL == 6) coef = 1.80;",
              "            else /*if(GTL >= 7)*/ coef = 2.00;",
              "            exp_points = round(coef / (0.70 + (0.15 * (GalaxyDiffLevels(5) / 50))) * 1.4 * RndObject(75, 150, cur_ruin), 10);",
              "            reward = round(3.0 * ItemCost(item), 100);",
              "            ship_type_in_par = 'Ranger';",
              "            will_revive = 1;",
              "        }",
              "        else",
              "        {",
              "            RelationToRanger(PlanetPirateClan(), Player(), RelationToRanger(PlanetPirateClan(), Player()) - 2);",
              "            if(CurrentMods('Expansion\\ExpTraitors')) //Меняем отношение станций",
              "            {",
              "                ChangeRuinsRelationFunFiller['GlobalRelationForPirateClan'] = ChangeRuinsRelationFunFiller['GlobalRelationForPirateClan'] - 2;",
              "                ChangeRuinsRelationFunFiller['ChangeRuinsRelationToPlayerCallMark'] = 1;",
              "            }",
              "",
              "            //Считаем наградной опыт",
              "            if(GTL <= 2) coef = 1.00;",
              "            else if(GTL == 3) coef = 1.20;",
              "            else if(GTL == 4) coef = 1.40;",
              "            else if(GTL == 5) coef = 1.60;",
              "            else if(GTL == 6) coef = 1.80;",
              "            else /*if(GTL >= 7)*/ coef = 2.00;",
              "            exp_points = round(coef / (0.70 + (0.15 * (GalaxyDiffLevels(5) / 50))) * 1.4 * RndObject(50, 100, cur_ruin), 10);",
              "            reward = round(2.25 * ItemCost(item), 100);",
              "            ship_type_in_par = 'Traitor';",
              "            will_revive = 0;",
              "        }",
              "    }",
              "    else",
              "    {",
              "        if(ship_type != 'RangerPirate' && ship_type != 'RangerPirateExplorer')",
              "        {",
              "            reward = round(2.5 * ItemCost(item), 100);",
              "            ship_type_in_par = 'Ranger';",
              "        }",
              "        else",
              "        {",
              "            reward = round(2.0 * ItemCost(item), 100);",
              "            ship_type_in_par = 'Traitor';",
              "        }",
              "    }",
              "",
              "    ShipFreeExp(Player(), ShipFreeExp(Player()) + exp_points);",
              "    SetShipExpByType(Player(), GetShipExpByType(Player()) + exp_points, 0);",
              "    ShipMoney(Player(), ShipMoney(Player()) + reward);",
              "    if(will_revive) Sound('Sound.Repair');",
              "    else",
              "    {",
              "        if(pilot_status == 'Alive') Sound('Sound.JailDoor'); //Пилот отправлен в заключение",
              "        else Sound('Sound.Drop'); //Избавляемся от трупа",
              "    }",
              "}",
              "//Пиратская база",
              "else if(cur_ruin_type == 'PB')",
              "{",
              "    if(pilot_status == 'Alive')",
              "    {",
              "        if(main_type != t_Warrior)",
              "        {",
              "            RelationToRanger(PlanetPirateClan(), Player(), RelationToRanger(PlanetPirateClan(), Player()) + 2);",
              "            if(CurrentMods('Expansion\\ExpTraitors')) //Меняем отношение станций",
              "            {",
              "                ChangeRuinsRelationFunFiller['GlobalRelationForPirateClan'] = ChangeRuinsRelationFunFiller['GlobalRelationForPirateClan'] + 2;",
              "                ChangeRuinsRelationFunFiller['ChangeRuinsRelationToPlayerCallMark'] = 1;",
              "            }",
              "",
              "            reward = round(3.0 * ItemCost(item), 100);",
              "            ship_type_in_par = 'Pirate';",
              "            will_revive = 1;",
              "        }",
              "        else",
              "        {",
              "            for(i = 0; i < GalaxySectors(); i = i + 1) ConChangeRelationToRanger(GalaxySectors(i), Player(), -2);",
              "            if(CurrentMods('Expansion\\ExpTraitors')) //Меняем отношение станций",
              "            {",
              "                ChangeRuinsRelationFunFiller['GlobalRelationForCoalition'] = ChangeRuinsRelationFunFiller['GlobalRelationForCoalition'] - 2;",
              "                ChangeRuinsRelationFunFiller['ChangeRuinsRelationToPlayerCallMark'] = 1;",
              "            }",
              "",
              "            reward = round(2.25 * ItemCost(item), 100);",
              "            ship_type_in_par = 'Warrior';",
              "            will_revive = 0;",
              "        }",
              "    }",
              "    else",
              "    {",
              "        if(main_type != t_Warrior)",
              "        {",
              "            reward = round(2.5 * ItemCost(item), 100);",
              "            ship_type_in_par = 'Pirate';",
              "        }",
              "        else",
              "        {",
              "            reward = round(2.0 * ItemCost(item), 100);",
              "            ship_type_in_par = 'Warrior';",
              "        }",
              "    }",
              "",
              "    ShipMoney(Player(), ShipMoney(Player()) + reward);",
              "    if(will_revive) Sound('Sound.Repair');",
              "    else",
              "    {",
              "        if(pilot_status == 'Alive') Sound('Sound.Sell'); //Пилот продан в пиратское рабство",
              "        else Sound('Sound.Drop'); //Избавляемся от трупа",
              "    }",
              "}",
              "//Военная база",
              "else if(cur_ruin_type == 'WB')",
              "{",
              "    if(pilot_status == 'Alive')",
              "    {",
              "        if(main_type != t_Pirate && ship_type != 'RangerPirate' && ship_type != 'RangerPirateExplorer')",
              "        {",
              "            for(i = 0; i < GalaxySectors(); i = i + 1) ConChangeRelationToRanger(GalaxySectors(i), Player(), 4);",
              "            RelationToRanger(PlanetPirateClan(), Player(), RelationToRanger(PlanetPirateClan(), Player()) - 2);",
              "            if(CurrentMods('Expansion\\ExpTraitors')) //Меняем отношение станций",
              "            {",
              "                ChangeRuinsRelationFunFiller['GlobalRelationForCoalition'] = ChangeRuinsRelationFunFiller['GlobalRelationForCoalition'] + 5;",
              "                ChangeRuinsRelationFunFiller['GlobalRelationForPirateClan'] = ChangeRuinsRelationFunFiller['GlobalRelationForPirateClan'] - 2;",
              "                ChangeRuinsRelationFunFiller['ChangeRuinsRelationToPlayerCallMark'] = 1;",
              "            }",
              "",
              "            military_rank_points = 10; //Наградные очки военного звания",
              "            reward = round(2.0 * ItemCost(item), 100);",
              "            ship_type_in_par = 'Warrior';",
              "            will_revive = 1;",
              "        }",
              "        else",
              "        {",
              "            for(i = 0; i < GalaxySectors(); i = i + 1) ConChangeRelationToRanger(GalaxySectors(i), Player(), 2);",
              "            RelationToRanger(PlanetPirateClan(), Player(), RelationToRanger(PlanetPirateClan(), Player()) - 6);",
              "            if(CurrentMods('Expansion\\ExpTraitors')) //Меняем отношение станций",
              "            {",
              "                ChangeRuinsRelationFunFiller['GlobalRelationForCoalition'] = ChangeRuinsRelationFunFiller['GlobalRelationForCoalition'] + 2;",
              "                ChangeRuinsRelationFunFiller['GlobalRelationForPirateClan'] = ChangeRuinsRelationFunFiller['GlobalRelationForPirateClan'] - 6;",
              "                ChangeRuinsRelationFunFiller['ChangeRuinsRelationToPlayerCallMark'] = 1;",
              "            }",
              "",
              "            military_rank_points = 5; //Наградные очки военного звания",
              "            reward = round(1.75 * ItemCost(item), 100);",
              "            if(main_type == t_Pirate) ship_type_in_par = 'Pirate';",
              "            else ship_type_in_par = 'Traitor';",
              "            will_revive = 0;",
              "        }",
              "    }",
              "    else",
              "    {",
              "        if(main_type != t_Pirate && ship_type != 'RangerPirate' && ship_type != 'RangerPirateExplorer')",
              "        {",
              "            for(i = 0; i < GalaxySectors(); i = i + 1) ConChangeRelationToRanger(GalaxySectors(i), Player(), 1);",
              "            if(CurrentMods('Expansion\\ExpTraitors')) //Меняем отношение станций",
              "            {",
              "                ChangeRuinsRelationFunFiller['GlobalRelationForCoalition'] = ChangeRuinsRelationFunFiller['GlobalRelationForCoalition'] + 1;",
              "                ChangeRuinsRelationFunFiller['ChangeRuinsRelationToPlayerCallMark'] = 1;",
              "            }",
              "",
              "            reward = round(1.75 * ItemCost(item), 100);",
              "            ship_type_in_par = 'Warrior';",
              "        }",
              "        else",
              "        {",
              "            RelationToRanger(PlanetPirateClan(), Player(), RelationToRanger(PlanetPirateClan(), Player()) - 1);",
              "            if(CurrentMods('Expansion\\ExpTraitors')) //Меняем отношение станций",
              "            {",
              "                ChangeRuinsRelationFunFiller['GlobalRelationForPirateClan'] = ChangeRuinsRelationFunFiller['GlobalRelationForPirateClan'] - 1;",
              "                ChangeRuinsRelationFunFiller['ChangeRuinsRelationToPlayerCallMark'] = 1;",
              "            }",
              "",
              "            reward = round(1.5 * ItemCost(item), 100);",
              "            if(main_type == t_Pirate) ship_type_in_par = 'Pirate';",
              "            else ship_type_in_par = 'Traitor';",
              "        }",
              "    }",
              "",
              "    ShipRankPoints(Player(), min(ShipRankPoints(Player()) + military_rank_points, ShipNextRankPoints(Player())));",
              "    ShipMoney(Player(), ShipMoney(Player()) + reward);",
              "    if(will_revive) Sound('Sound.Repair');",
              "    else",
              "    {",
              "        if(pilot_status == 'Alive') Sound('Sound.JailDoor'); //Пилот отправлен в заключение",
              "        else Sound('Sound.Drop'); //Избавляемся от трупа",
              "    }",
              "}",
              "//Медицинский центр (коалиционный или пиратский)",
              "else if(cur_ruin_type == 'MC' || cur_ruin_type == 'PMC')",
              "{",
              "    if(pilot_status == 'Alive')",
              "    {",
              "        reward = round(2.0 * ItemCost(item), 100);",
              "",
              "        if(cur_ruin_type == 'MC')",
              "        {",
              "            if(main_type != t_Pirate && ship_type != 'RangerPirate' && ship_type != 'RangerPirateExplorer' && ship_type != 'Smuggler')",
              "            {",
              "                //Повышаем коалиционное отношение при любом исходе, т.к. пилот в любом случае выживает",
              "                for(i = 0; i < GalaxySectors(); i = i + 1) ConChangeRelationToRanger(GalaxySectors(i), Player(), 2);",
              "                if(CurrentMods('Expansion\\ExpTraitors')) //Меняем отношение станций",
              "                {",
              "                    ChangeRuinsRelationFunFiller['GlobalRelationForCoalition'] = ChangeRuinsRelationFunFiller['GlobalRelationForCoalition'] + 2;",
              "                    ChangeRuinsRelationFunFiller['ChangeRuinsRelationToPlayerCallMark'] = 1;",
              "                }",
              "",
              "                will_revive = Rnd(1, 100, Id(item) * Id(cur_ruin)); //Бросок на возрождение корабля",
              "                if(will_revive <= 40 + PortionInDiapason(GalaxyDiffLevels(7), 50, 500, 20, 0)) will_revive = 1;",
              "                else will_revive = 0;",
              "            }",
              "        }",
              "        else //if(cur_ruin_type == 'PMC')",
              "        {",
              "            int pirate_rank = GetParFromString(GetParFromString(stats_string, ':', 3, 0), ',', 1, 0);",
              "            if(main_type == t_Pirate || ship_type == 'RangerPirate' || ship_type == 'RangerPirateExplorer' || ship_type == 'Smuggler')",
              "            {",
              "                will_revive = Rnd(1, 100, Id(item) * Id(cur_ruin)); //Бросок на возрождение корабля",
              "                if(will_revive <= 50 + PortionInDiapason(GalaxyDiffLevels(7), 50, 500, 20, 0) + round(2.0 * pirate_rank))",
              "                {",
              "                    //Повышаем пиратское отношение только если пилот выбирается с ПМЦ своим ходом, т.к. иначе считается, что он попал в лапы к мясникам и в любом случае не выжил",
              "                    RelationToRanger(PlanetPirateClan(), Player(), RelationToRanger(PlanetPirateClan(), Player()) + 2);",
              "                    if(CurrentMods('Expansion\\ExpTraitors')) //Меняем отношение станций",
              "                    {",
              "                        ChangeRuinsRelationFunFiller['GlobalRelationForPirateClan'] = ChangeRuinsRelationFunFiller['GlobalRelationForPirateClan'] + 2;",
              "                        ChangeRuinsRelationFunFiller['ChangeRuinsRelationToPlayerCallMark'] = 1;",
              "                    }",
              "",
              "                    will_revive = 1;",
              "                }",
              "                else will_revive = 0;",
              "            }",
              "        }",
              "    }",
              "    else reward = round(1.5 * ItemCost(item), 100);",
              "",
              "    ShipMoney(Player(), ShipMoney(Player()) + reward);",
              "    if(will_revive) Sound('Sound.Repair');",
              "    else",
              "    {",
              "        if(cur_ruin_type == 'PMC') Sound('Sound.DelMsg'); //Пилот/труп сдан на опыты/органы",
              "        else",
              "        {",
              "            if(pilot_status == 'Alive') Sound('Sound.PlanetGet'); //Пилот просто остаётся на станции",
              "            else Sound('Sound.Drop'); //Избавляемся от трупа",
              "        }",
              "    }",
              "}",
              "//Бизнес-центр",
              "else if(cur_ruin_type == 'BK')",
              "{",
              "    if(ship_type == 'Diplomat')",
              "    {",
              "        if(pilot_status == 'Alive')",
              "        {",
              "            fake_reward = round(4.0 * ItemCost(item), 100);",
              "            will_revive = 1;",
              "        }",
              "        else fake_reward = round(5.0 * ItemCost(item), 100);",
              "        reward = round(0.87 * fake_reward);",
              "        ship_type_in_par = 'Diplomat';",
              "    }",
              "    else if(ship_type == 'Liner')",
              "    {",
              "        if(pilot_status == 'Alive')",
              "        {",
              "            reward = round(3.5 * ItemCost(item), 100);",
              "            will_revive = 1;",
              "        }",
              "        else reward = round(3.0 * ItemCost(item), 100);",
              "        ship_type_in_par = 'Liner';",
              "    }",
              "    else if(ship_type == 'Transport')",
              "    {",
              "        if(pilot_status == 'Alive')",
              "        {",
              "            reward = round(3.5 * ItemCost(item), 100);",
              "            will_revive = 1;",
              "        }",
              "        else reward = round(3.0 * ItemCost(item), 100);",
              "        ship_type_in_par = 'Transport';",
              "    }",
              "    else if(ship_type == 'Smuggler')",
              "    {",
              "        if(pilot_status == 'Alive')",
              "        {",
              "            reward = round(5.25 * ItemCost(item), 100);",
              "            will_revive = 1;",
              "        }",
              "        else reward = round(6.0 * ItemCost(item), 100);",
              "        ship_type_in_par = 'Smuggler';",
              "    }",
              "",
              "    ShipMoney(Player(), ShipMoney(Player()) + reward);",
              "    if(will_revive) Sound('Sound.Repair');",
              "    else Sound('Sound.Drop'); //Избавляемся от трупа",
              "}",
              "//Доминион",
              "else if(cur_ruin_type == 'CB')",
              "{",
              "    if(pilot_status == 'Alive')",
              "    {",
              "        if(main_type != t_Warrior)",
              "        {",
              "            for(i = 0; i < GalaxySectors(); i = i + 1) ConChangeRelationToRanger(GalaxySectors(i), Player(), -2);",
              "            RelationToRanger(PlanetPirateClan(), Player(), RelationToRanger(PlanetPirateClan(), Player()) + 5);",
              "            if(CurrentMods('Expansion\\ExpTraitors')) //Меняем отношение станций",
              "            {",
              "                ChangeRuinsRelationFunFiller['GlobalRelationForCoalition'] = ChangeRuinsRelationFunFiller['GlobalRelationForCoalition'] - 2;",
              "                ChangeRuinsRelationFunFiller['GlobalRelationForPirateClan'] = ChangeRuinsRelationFunFiller['GlobalRelationForPirateClan'] + 5;",
              "                ChangeRuinsRelationFunFiller['ChangeRuinsRelationToPlayerCallMark'] = 1;",
              "            }",
              "",
              "            pirate_rank_points = 10; //Наградные очки военного звания",
              "            reward = round(3.5 * ItemCost(item), 100);",
              "            ship_type_in_par = 'Pirate';",
              "            will_revive = 1;",
              "        }",
              "        else",
              "        {",
              "            for(i = 0; i < GalaxySectors(); i = i + 1) ConChangeRelationToRanger(GalaxySectors(i), Player(), -4);",
              "            RelationToRanger(PlanetPirateClan(), Player(), RelationToRanger(PlanetPirateClan(), Player()) + 3);",
              "            if(CurrentMods('Expansion\\ExpTraitors')) //Меняем отношение станций",
              "            {",
              "                ChangeRuinsRelationFunFiller['GlobalRelationForCoalition'] = ChangeRuinsRelationFunFiller['GlobalRelationForCoalition'] - 5;",
              "                ChangeRuinsRelationFunFiller['GlobalRelationForPirateClan'] = ChangeRuinsRelationFunFiller['GlobalRelationForPirateClan'] + 3;",
              "                ChangeRuinsRelationFunFiller['ChangeRuinsRelationToPlayerCallMark'] = 1;",
              "            }",
              "",
              "            pirate_rank_points = 5; //Наградные очки военного звания",
              "            reward = round(3.0 * ItemCost(item), 100);",
              "            ship_type_in_par = 'Warrior';",
              "            will_revive = 0;",
              "        }",
              "    }",
              "    else",
              "    {",
              "        if(main_type != t_Warrior)",
              "        {",
              "            RelationToRanger(PlanetPirateClan(), Player(), RelationToRanger(PlanetPirateClan(), Player()) + 1);",
              "            if(CurrentMods('Expansion\\ExpTraitors')) //Меняем отношение станций",
              "            {",
              "                ChangeRuinsRelationFunFiller['GlobalRelationForPirateClan'] = ChangeRuinsRelationFunFiller['GlobalRelationForPirateClan'] + 1;",
              "                ChangeRuinsRelationFunFiller['ChangeRuinsRelationToPlayerCallMark'] = 1;",
              "            }",
              "",
              "            reward = round(3.5 * ItemCost(item), 100);",
              "            ship_type_in_par = 'Pirate';",
              "        }",
              "        else",
              "        {",
              "            for(i = 0; i < GalaxySectors(); i = i + 1) ConChangeRelationToRanger(GalaxySectors(i), Player(), -1);",
              "            if(CurrentMods('Expansion\\ExpTraitors')) //Меняем отношение станций",
              "            {",
              "                ChangeRuinsRelationFunFiller['GlobalRelationForCoalition'] = ChangeRuinsRelationFunFiller['GlobalRelationForCoalition'] - 1;",
              "                ChangeRuinsRelationFunFiller['ChangeRuinsRelationToPlayerCallMark'] = 1;",
              "            }",
              "",
              "            reward = round(3.0 * ItemCost(item), 100);",
              "            ship_type_in_par = 'Warrior';",
              "        }",
              "    }",
              "",
              "    ShipPirateRankPoints(Player(), min(ShipPirateRankPoints(Player()) + pirate_rank_points, ShipNextPirateRankPoints(Player())));",
              "    ShipMoney(Player(), ShipMoney(Player()) + reward);",
              "    if(will_revive) Sound('Sound.Repair');",
              "    else Sound('Sound.DelMsg'); //Пилот/труп пойдёт на корм пенчекрякам",
              "}",
              "",
              "tstr1 = '</color>' + Format(CT('Script.Mod_ShuBounty.EscapePodsDialog.HandOver' + ship_type_in_par + pilot_status + cur_ruin_type),",
              "                               '<Name'+'>', pilot_name,",
              "                               '<NearestPlanet'+'>', Name(nearest_planet),",
              "                               '<HomePlanet'+'>', Name(home_planet),",
              "                               '<HomeStar'+'>', Name(PlanetToStar(home_planet)),",
              "                               '<CurYear'+'>', cur_year,",
              "                               '<Reward'+'>', reward,",
              "                               '<FakeReward'+'>', fake_reward);",
              "",
              "//Форматируем эти строки отдельно, чтобы не добавлять лишних тэгов цвета",
              "tstr1 = Format(tstr1,",
              "        '<ExpPoints'+'>', exp_points,",
              "        '<RankPoints'+'>', military_rank_points,",
              "        '<PirateRankPoints'+'>', pirate_rank_points, '');",
              "",
              "//Воскрешаем корабль",
              "if(will_revive)",
              "{",
              "    int pilot_race = UselessItemData(item, 2);",
              "    int pilot_owner = ScriptItemData(item, 3);",
              "",
              "    if(main_type == t_Warrior)",
              "    {",
              "        //Если система с родной планетой военного захвачена, нам придётся выбрать ему новую (ищем не захваченную планету с наименьшим числом военных в Галактике)",
              "        //В противном случае он сразу же после респавна полетит в родную систему сливаться об врагов",
              "        dword home_star = PlanetToStar(home_planet);",
              "        str ship_custom_faction = GetParFromString(stats_string, ':', 4, 0);",
              "        if(StarOwner(home_star) != 0 || StarCustomFaction(home_star) != ship_custom_faction)",
              "        {",
              "            dword cur_star = ShipStar(cur_ruin);",
              "            unknown planets = newarray(1);",
              "            ArrayDelete(planets, 0);",
              "",
              "            for(i = 0; i < GalaxyStars(); i = i + 1)",
              "            {",
              "                dword star = StarNearbyStars(cur_star, i);",
              "                if(StarOwner(star)) continue; //Если система не Коалиционная",
              "                if(StarCustomFaction(star) != ship_custom_faction) continue; //Если занята кем-то не тем",
              "",
              "                int cnt = StarPlanets(star);",
              "                for(int j = 0; j < cnt; j = j + 1)",
              "                {",
              "                    dword planet = StarPlanets(star, j);",
              "                    if(PlanetOwner(planet) == None) continue;",
              "                    if(PlanetCustomFaction(planet) != ship_custom_faction) continue;",
              "",
              "                    ArrayAdd(planets, PlanetWarriors(planet), '' + planet);",
              "                }",
              "            }",
              "",
              "            ArraySort(planets);",
              "            cnt = planets[0];",
              "            unknown planets_of_same_race = newarray(1);",
              "            for(i = 1; i < ArrayDim(planets); i = i + 1)",
              "            {",
              "                //Оставляем в массиве только планеты, имеющие равно минимальное число военных кораблей, что и первая планета в списке (вероятнее всего, это будет 0)",
              "                if(planets[i] > cnt)",
              "                {",
              "                    ArrayDelete(planets, i);",
              "                    i = i - 1;",
              "                }",
              "                //Среди подходящих планет ищем те, которые подходят военному по расе",
              "                else",
              "                {",
              "                    planet = GetVariableName(planets[i]);",
              "                    if(PlanetRace(planet) == pilot_race) ArrayAdd(planets_of_same_race, planet);",
              "                }",
              "            }",
              "",
              "            //Если нашли среди планет с минимальным числом военных хотя бы одну подходящей расы, выбираем случайную из возможных",
              "            if(ArrayDim(planets_of_same_race) > 1)",
              "            {",
              "                ArrayDelete(planets_of_same_race, 0);",
              "                home_planet = planets_of_same_race[Rnd(0, ArrayDim(planets_of_same_race) - 1, Id(item) * Id(item) * Id(cur_ruin))];",
              "            }",
              "            //Если же планет подходящей расы нет, то выбираем случайную среди прочих рас, что должно породить в игре забавную ситуацию",
              "            else home_planet = GetVariableName(planets[Rnd(0, ArrayDim(planets) - 1, Id(item) * Id(item) * Id(cur_ruin))]);",
              "",
              "            //Чисто на всякий случай",
              "            ArrayClear(planets);",
              "            ArrayClear(planets_of_same_race);",
              "        }",
              "    }",
              "",
              "    int cur_planet_race = PlanetRace(home_planet);",
              "    int cur_planet_owner = PlanetOwner(home_planet);",
              "    if(cur_planet_race != pilot_race) PlanetRace(home_planet, pilot_race);",
              "    if(cur_planet_owner != pilot_owner) PlanetOwner(home_planet, pilot_owner);",
              "",
              "    int ship_sub_type = GetParFromString(stats_string, ':', 0, 0);",
              "    if(main_type == t_Ranger) dword ship = BuyRanger(home_planet);",
              "    else if(main_type == t_Warrior) ship = BuyWarrior(home_planet);",
              "    else if(main_type == t_Pirate)",
              "    {",
              "        if(!ship_sub_type) ship = BuyPirate(home_planet);",
              "        else ship = BuyWarrior(home_planet);",
              "    }",
              "    else /*if(main_type == t_Transport)*/ ship = BuyTransport(home_planet, ship_sub_type); //Гражданским задаём SubType сразу при спавне",
              "",
              "    PlanetRace(home_planet, cur_planet_race);",
              "    PlanetOwner(home_planet, cur_planet_owner);",
              "",
              "    ShipOwner(ship, pilot_owner);",
              "    SetName(ship, pilot_name);",
              "    ShipFace(ship, ScriptItemData(item, 1));",
              "    ShipType(ship, ship_type);",
              "",
              "    //Особые обработчики для некоторых типов кораблей",
              "    //Рейнджер изменник из ExpTraitors",
              "    if(ship_type == 'RangerPirate' || ship_type == 'RangerPirateExplorer')",
              "    {",
              "        //Меняем корпус",
              "        SpecialToEquipment(FindBonusByNameInCfg('ExpTraitors_TraitorHull'), ShipEqInSlot(ship, t_Hull));",
              "        HullHP(ship, 'To100');",
              "        Chameleon(ship);",
              "",
              "        ShipRefit(ship);",
              "        ShipJoinsClan(ship);",
              "        NoTargetToShip(ship, 5); //Запрещаем пиратам грабить рейнджера-изменника (а то будет выглядеть тупо)",
              "",
              "        ShipJoinToScript(ship, 'Mod_ExpTraitors.Traitors.TraitorsFreeState');",
              "    }",
              "    //Контрабандист из ShuSmugglers",
              "    else if(ship_type == 'Smuggler')",
              "    {",
              "        //Применяем к корпусу особый акрин и выставляем соответствующий внешний вид",
              "        dword equipment = ShipEqInSlot(ship, t_Hull);",
              "        if(pilot_race == Maloc) str bonus = 'ShuSmugglers_SmugglerMaloc';",
              "        else if(pilot_race == Peleng) bonus = 'ShuSmugglers_SmugglerPeleng';",
              "        else if(pilot_race == People) bonus = 'ShuSmugglers_SmugglerPeople';",
              "        else if(pilot_race == Fei) bonus = 'ShuSmugglers_SmugglerFei';",
              "        else /*if(pilot_race == Gaal)*/ bonus = 'ShuSmugglers_SmugglerGaal';",
              "        SpecialToEquipment(FindBonusByNameInCfg(bonus), equipment);",
              "        HullHP(ship, 'To100');",
              "        Chameleon(ship);",
              "",
              "        //Если в корпусе открыт слот дроида, но самого дроида нет - выдаём",
              "        if(GetEquipmentStats(equipment, 5))",
              "        {",
              "            if(!ShipEqInSlot(ship, t_RepairRobot))",
              "            {",
              "                equipment = CreateEquipment(t_RepairRobot, RndObject(30, 60, ship), GTL, PirateClan);",
              "                AddItemToShip(ship, equipment);",
              "                ItemIsInUse(equipment, ship, 1);",
              "            }",
              "        }",
              "        //Аналогично для ГЗП",
              "        if(GetEquipmentStats(equipment, 7))",
              "        {",
              "            if(!ShipEqInSlot(ship, t_DefGenerator))",
              "            {",
              "                equipment = CreateEquipment(t_DefGenerator, RndObject(30, 60, ship), GTL, PirateClan);",
              "                AddItemToShip(ship, equipment);",
              "                ItemIsInUse(equipment, ship, 1);",
              "            }",
              "        }",
              "",
              "        ShipRefit(ship);",
              "        ShipJoinsClan(ship);",
              "        RaisePirateRank(ship, 4); //Звание повыше, чтобы имел больше авторитета среди пиратов",
              "        NoTargetToShip(ship, 5); //Запрещаем пиратам нападать на контрабандиста с целью ограбления",
              "",
              "        ShipJoinToScript(ship, 'Mod_ShuSmugglers.Smugglers.SmugglersFreeState');",
              "    }",
              "    //Головорез из ShuPirates",
              "    else if(ship_type == 'Thug')",
              "    {",
              "        equipment = ShipEqInSlot(ship, t_Hull);",
              "        //Устанавливаем размер корпуса в зависимости от сложности пиратов",
              "        ItemSize(equipment, max(round((0.00085 * GalaxyDiffLevels(0) + 1) * GTL * 100) + RndObject(-25, 45, ship), 250));",
              "        //Восполняем прочность корпуса",
              "        HullHP(ship, 'To100');",
              "",
              "        //Меняем внешний вид корабля на клановый, в зависимости от расы пилота",
              "        if(!ShipPilotRace(ship)) Chameleon(ship, 'Ship.Maloc.PirateClan');",
              "        else if(ShipPilotRace(ship) == 1) Chameleon(ship, 'Ship.Peleng.PirateClan');",
              "        else if(ShipPilotRace(ship) == 2) Chameleon(ship, 'Ship.People.PirateClan');",
              "        else if(ShipPilotRace(ship) == 3) Chameleon(ship, 'Ship.Fei.PirateClan');",
              "        else Chameleon(ship, 'Ship.Gaal.PirateClan');",
              "",
              "        ShipRefit(ship);",
              "",
              "        //Если в корпусе открыт слот дроида, но самого дроида нет - выдаем",
              "        if(GetEquipmentStats(hull, 5))",
              "        {",
              "            if(!ShipEqInSlot(ship, t_RepairRobot))",
              "            {",
              "                equipment = CreateEquipment(t_RepairRobot, RndObject(20, 40, ship), GTL, 7);",
              "                AddItemToShip(ship, equipment);",
              "                ItemIsInUse(equipment, ship, 1);",
              "            }",
              "        }",
              "",
              "        //Аналогично для ГЗП",
              "        if(GetEquipmentStats(hull, 7))",
              "        {",
              "            if(!ShipEqInSlot(ship, t_DefGenerator))",
              "            {",
              "                equipment = CreateEquipment(t_DefGenerator, RndObject(20, 40, ship), GTL, 7);",
              "                AddItemToShip(ship, equipment);",
              "                ItemIsInUse(equipment, ship, 1);",
              "            }",
              "        }",
              "",
              "        ShipImproveItems(ship, RndObject(2, 4, ship));",
              "    }",
              "    //Хан из ShuPirates",
              "    else if(ship_type == 'Khan')",
              "    {",
              "        equipment = ShipEqInSlot(ship, t_Hull);",
              "        //Устанавливаем размер корпуса в зависимости от сложности пиратов",
              "        ItemSize(equipment, max(round((0.0015 * GalaxyDiffLevels(0) + 1) * GTL * 125) + RndObject(15, 65, ship), 400));",
              "        //Восполняем прочность корпуса",
              "        HullHP(ship, 'To100');",
              "",
              "        if(pilot_race == Maloc)",
              "        {",
              "            //Накладываем акрин, в зависимости от ГТУ",
              "            if(GTL < 5)",
              "            {",
              "                //Миоплазменный корпус I",
              "                if(RndObject(1, 100, ship) <= 50) bonus = '365';",
              "                //Миоплазменный корпус  II",
              "                else bonus = '366';",
              "            }",
              "            //Миоплазменный корпус  IV",
              "            else if(GTL > 6) bonus = '368';",
              "            //Миоплазменный корпус III",
              "            else bonus = '367';",
              "        }",
              "        else if(pilot_race == Peleng)",
              "        {",
              "            if(GTL < 5)",
              "            {",
              "                //Добрый лякуша I",
              "                if(RndObject(1, 100, ship) <= 50) bonus = '460';",
              "                //Добрый лякуша II",
              "                else bonus = '461';",
              "            }",
              "            //Добрый лякуша IV",
              "            else if(GTL > 6) bonus = '462';",
              "            //Добрый лякуша III",
              "            else bonus = '463';",
              "        }",
              "        else if(pilot_race == People)",
              "        {",
              "            if(GTL < 5)",
              "            {",
              "                //Мирный корсар I",
              "                if(RndObject(1, 100, ship) <= 50) bonus = '464';",
              "                //Мирный корсар II",
              "                else bonus = '465';",
              "            }",
              "            //Мирный корсар IV",
              "            else if(GTL > 6) bonus = '467';",
              "            //Мирный корсар III",
              "            else bonus = '466';",
              "        }",
              "        else if(pilot_race == Fei)",
              "        {",
              "            if(GTL < 5)",
              "            {",
              "                //Ремонтный корпус I",
              "                if(RndObject(1, 100, ship) <= 50) bonus = '361';",
              "                //Ремонтный корпус II",
              "                else bonus = '362';",
              "            }",
              "            //Ремонтный корпус III",
              "            else if(GTL > 6) bonus = '364';",
              "            //Ремонтный корпус IV",
              "            else bonus = '363';",
              "        }",
              "        else //if(pilot_race == Gaal)",
              "        {",
              "            if(GTL < 5)",
              "            {",
              "                //Честный ренегал I",
              "                if(RndObject(1, 100, ship) <= 50) bonus = '468';",
              "                //Честный ренегал II",
              "                else bonus = '469';",
              "            }",
              "            //Честный ренегал IV",
              "            else if(GTL > 6) bonus = '471';",
              "            //Честный ренегал III",
              "            else bonus = '470';",
              "        }",
              "",
              "        //Накладываем выбранный акрин",
              "        SpecialToEquipment(FindBonusByNameInCfg(bonus), equipment);",
              "        Chameleon(ship);",
              "",
              "        ShipRefit(ship);",
              "        ShipRefit(ship);",
              "",
              "        //Если в корпусе открыт слот дроида, но самого дроида нет - выдаем",
              "        if(GetEquipmentStats(hull, 5))",
              "        {",
              "            if(!ShipEqInSlot(ship, t_RepairRobot))",
              "            {",
              "                equipment = CreateEquipment(t_RepairRobot, RndObject(20, 40, ship), GTL, PirateClan);",
              "                AddItemToShip(ship, equipment);",
              "                ItemIsInUse(equipment, ship, 1);",
              "            }",
              "        }",
              "",
              "        //Аналогично для ГЗП",
              "        if(GetEquipmentStats(hull, 7))",
              "        {",
              "            if(!ShipEqInSlot(ship, t_DefGenerator))",
              "            {",
              "                equipment = CreateEquipment(t_DefGenerator, RndObject(20, 40, ship), GTL, PirateClan);",
              "                AddItemToShip(ship, equipment);",
              "                ItemIsInUse(equipment, ship, 1);",
              "            }",
              "        }",
              "",
              "        ShipImproveItems(ship, RndObject(4, 8, ship));",
              "    }",
              "",
              "    cnt = ParsCountFromString(stats_string, ':');",
              "    for(i = 0; i < cnt; i = i + 1)",
              "    {",
              "        str cur_par = GetParFromString(stats_string, ':', i, 0);",
              "",
              "        //Разбираем навыки корабля",
              "        if(!i)",
              "        {",
              "            if(main_type != t_Transport) ShipSubType(ship, int(cur_par));",
              "        }",
              "        //Подтип корабля (для гражданских задаётся при спавне)",
              "        else if(i == 1) for(j = 0; j < 6; j = j + 1) ShipSkill(ship, j, int(substr(cur_par, j, 1)));",
              "        //Деньги корабля (делим на 2, имитируя закупку нового оборудования)",
              "        else if(i == 2) ShipMoney(ship, int(cur_par) / 2);",
              "        //Военный и пиратский ранги корабля (на всякий случай возвращаем оба)",
              "        else if(i == 3)",
              "        {",
              "            ShipRaiseRank(ship, int(GetParFromString(cur_par, ',', 0, 0)));",
              "            RaisePirateRank(ship, int(GetParFromString(cur_par, ',', 1, 0)));",
              "        }",
              "        //Кастомная фракция (хотя едва ли она у кого-то из них будет)",
              "        else if(i == 4)",
              "        {",
              "            //Только если ранее добавили этот корабль в скрипт (частные случаи)",
              "            if(ShipInScript(ship, 0)) ShipCustomFaction(ship, cur_par);",
              "        }",
              "        //Номера всех полученных кораблём наград",
              "        else if(i == 5)",
              "        {",
              "            if(cur_par != '')",
              "            {",
              "                int cnt2 = ParsCountFromString(cur_par, ',');",
              "                for(j = 0; j < cnt2; j = j + 1) GiveRewardByNom(ship, int(GetParFromString(cur_par, ',', j, 0)));",
              "            }",
              "        }",
              "        //Текущее количество нераспределённого опыта корабля",
              "        else if(i == 6) ShipFreeExp(ship, int(cur_par));",
              "        //Количество опыта, полученного кораблём за всю игру (для рейнджеров определяет их место в рейтинге)",
              "        else if(i == 7) SetShipExpByType(ship, int(cur_par), 0);",
              "        //Отношение воскрешённого корабля к игроку (если при эвакуации оно было враждебным, то не повышаем до максимума)",
              "        else if(i == 8)",
              "        {",
              "            if(int(cur_par) > 9) RelationToRanger(ship, Player(), int(cur_par) + 60);",
              "            else RelationToRanger(ship, Player(), 30);",
              "        }",
              "        else if(i == 9)",
              "        {",
              "            //Для рейнджеров это составная строка характера",
              "            if(main_type == t_Ranger) for(j = 0; j < 3; j = j + 1) ShipStatus(ship, j, int(GetParFromString(cur_par, ',', j, 0)));",
              "            //А для всех прочих кораблей это строка имплантов",
              "            else if(cur_par != '') AddImplantsFromString(ship, cur_par);",
              "        }",
              "        else if(i == 10)",
              "        {",
              "            //Для рейнджеров это строка имплантов",
              "            if(main_type == t_Ranger)",
              "            {",
              "                if(cur_par != '') AddImplantsFromString(ship, cur_par);",
              "            }",
              "            //А для всех прочих кораблей это будет строка инфошки IgnoreCamoInfo (и заодно последний параметр)",
              "            else if(cur_par != '') ShipAddCustomShipInfo(ship, 'IgnoreCamoInfo', 'NoShow', int(cur_par));",
              "        }",
              "        //Строка инфошки исследователя для рейнджеров",
              "        else if(i == 11)",
              "        {",
              "            if(cur_par != '') RestoreExplorerData(ship, cur_par);",
              "        }",
              "        //Строка инфошки IgnoreCamoInfo для рейнджеров",
              "        else if(i == 12)",
              "        {",
              "            if(cur_par != '') ShipAddCustomShipInfo(ship, 'IgnoreCamoInfo', 'NoShow', int(cur_par));",
              "        }",
              "        else throw 'Unexpected error during reviving a ship.';",
              "    }",
              "",
              "    //Задержит корабль на станции на время условной реабилитации, а также может служить маркером для других скриптов, совершающих обработку всех новых кораблей",
              "    ShipAddCustomShipInfo(ship, 'ShuBounty_AfterEscapePodRehabilitation', '', CurTurn() + RndObject(4, 7, ship));",
              "    TransferShip(ship, cur_ruin);",
              "}",
              "",
              "//Удаляем сданную капсулу",
              "ItemOnActCode(item, '');",
              "if(ItemIn(item, Player())) FreeItem(GetItemFromShip(Player(), item));",
              "else FreeItem(GetItemFromStorage(FindItemInStorage(item)));",
              "",
              "if(ArrayDim(tarr1) == 1) tarr1[0] = 0;",
              "else ArrayDelete(tarr1, GAnswerData);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  114,
          "#":  111,
          "Total.Lines":  17,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Список капсул для сдачи",
              "int cnt = ArrayDim(tarr1);",
              "for(int i = 0; i < cnt; i = i + 1)",
              "{",
              "    dword item = tarr1[i];",
              "",
              "    str pilot_name = Format(ScriptItemTextData(item, 3), '255,240,100', '0,50,200', '');",
              "    pilot_name = lowercase(substr(pilot_name, 0, 1)) + substr(pilot_name, 1);",
              "    str hand_over = Format(CT('Script.Mod_ShuBounty.EscapePodsDialog.PlayerHandOverPod'), '<Name'+'>', pilot_name, '');",
              "    if(!UselessItemData(item, 3)) hand_over = hand_over + ' ' + CT('Script.Mod_ShuBounty.EscapePodsDialog.PlayerPilotIsDead');",
              "",
              "    InjectAnswer('EscapePodOff', hand_over, i);",
              "}",
              "",
              "//Для реплики отмены сдачи капсул",
              "tstr1 = '</color>' + CT('Script.Mod_ShuBounty.EscapePodsDialog.PlayerNoMorePods');",
              "tstr2 = '</color>' + CT('Script.Mod_ShuBounty.EscapePodsDialog.HandOverCancel' + cur_ruin_type);"          
          ]        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "InitPlanet",
          "Pos.x":  590,
          "Pos.y":  630,
          "Parent":  -1,
          "#":  14,
          "Race":  62,
          "Owner":  62,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  590,
          "Pos.y":  590,
          "Parent":  -1,
          "#":  15,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "InitStar",
          "Pos.x":  590,
          "Pos.y":  610,
          "Parent":  -1,
          "#":  13,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "Statements":      
      [
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  30,
          "Pos.y":  40,
          "Parent":  20,
          "#":  55,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ControlledSystems(2)<=2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -30,
          "Pos.y":  40,
          "Parent":  20,
          "#":  56,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ControlledSystems(2)>2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1200,
          "Pos.y":  520,
          "Parent":  -1,
          "#":  59,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!ControlledSystems(0) && ControlledSystems(2)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1160,
          "Pos.y":  520,
          "Parent":  -1,
          "#":  60,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!ControlledSystems(2)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1230,
          "Pos.y":  520,
          "Parent":  -1,
          "#":  61,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "TalkToPirs || WarriorBounty <= 50"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1200,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  62,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!TalkToPirs && WarriorBounty > 50"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1050,
          "Pos.y":  780,
          "Parent":  -1,
          "#":  63,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "CisCount < 150"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1090,
          "Pos.y":  780,
          "Parent":  -1,
          "#":  64,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "CisCount >= 150"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1010,
          "Pos.y":  780,
          "Parent":  -1,
          "#":  66,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!i"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  970,
          "Pos.y":  780,
          "Parent":  -1,
          "#":  67,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "i"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1600,
          "Pos.y":  520,
          "Parent":  -1,
          "#":  74,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tint1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1560,
          "Pos.y":  520,
          "Parent":  -1,
          "#":  75,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!tint1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1770,
          "Pos.y":  520,
          "Parent":  -1,
          "#":  77,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tint1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  1810,
          "Pos.y":  520,
          "Parent":  -1,
          "#":  78,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!tint1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  108,
          "#":  114,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tarr1[0]"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  108,
          "#":  115,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!tarr1[0]"          
          ]        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "PlayerState",
          "Pos.x":  590,
          "Pos.y":  670,
          "Parent":  -1,
          "#":  17,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "PirateBounty",
          "Pos.x":  700,
          "Pos.y":  650,
          "Parent":  -1,
          "#":  1,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "WarriorBounty",
          "Pos.x":  700,
          "Pos.y":  670,
          "Parent":  -1,
          "#":  2,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "WasPir",
          "Pos.x":  700,
          "Pos.y":  630,
          "Parent":  -1,
          "#":  3,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "WasWar",
          "Pos.x":  700,
          "Pos.y":  610,
          "Parent":  -1,
          "#":  4,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "TalkToPirs",
          "Pos.x":  700,
          "Pos.y":  590,
          "Parent":  -1,
          "#":  5,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "CisCount",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  11,
          "#":  6,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "i",
          "Pos.x":  590,
          "Pos.y":  710,
          "Parent":  -1,
          "#":  7,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "fuel_total",
          "Pos.x":  970,
          "Pos.y":  850,
          "Parent":  -1,
          "#":  8,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "how_cis",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  10,
          "#":  9,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cis_fuel",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  8,
          "#":  10,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "timerCis",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  9,
          "#":  11,
          "Var.Type":  "Dword",
          "Init":  "600",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "rand",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  119,
          "#":  12,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "j",
          "Pos.x":  30,
          "Pos.y":  0,
          "Parent":  7,
          "#":  93,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "lastShipId",
          "Pos.x":  670,
          "Pos.y":  560,
          "Parent":  -1,
          "#":  94,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr1",
          "Pos.x":  590,
          "Pos.y":  870,
          "Parent":  -1,
          "#":  95,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_planet",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  103,
          "#":  96,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "check",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  7,
          "#":  97,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ship",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  102,
          "#":  98,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_item",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  98,
          "#":  99,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint1",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  12,
          "#":  100,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "IsShuMercsHQEnabled",
          "Pos.x":  590,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  101,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ruin",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  96,
          "#":  102,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_star",
          "Pos.x":  680,
          "Pos.y":  710,
          "Parent":  -1,
          "#":  103,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tarr1",
          "Pos.x":  680,
          "Pos.y":  870,
          "Parent":  -1,
          "#":  104,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint2",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  100,
          "#":  105,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ruin_type",
          "Pos.x":  70,
          "Pos.y":  0,
          "Parent":  102,
          "#":  112,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr2",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  95,
          "#":  113,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GTL",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  120,
          "#":  119,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cost",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  97,
          "#":  120,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  14,
      "End":  13,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  15,
      "End":  13,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  16,
      "End":  14,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  16,
      "End":  17,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  20,
      "End":  55,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  20,
      "End":  56,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  55,
      "End":  45,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  56,
      "End":  41,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  57,
      "End":  43,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  22,
      "End":  44,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  23,
      "End":  58,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  21,
      "End":  57,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  58,
      "End":  47,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  24,
      "End":  59,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  24,
      "End":  60,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  59,
      "End":  61,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  59,
      "End":  62,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  61,
      "End":  49,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  62,
      "End":  48,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  60,
      "End":  50,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  25,
      "End":  63,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  25,
      "End":  64,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  63,
      "End":  51,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  64,
      "End":  54,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  26,
      "End":  65,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  65,
      "End":  66,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  65,
      "End":  67,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  66,
      "End":  52,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  67,
      "End":  53,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  27,
      "End":  73,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  73,
      "End":  74,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  73,
      "End":  75,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  74,
      "End":  68,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  75,
      "End":  69,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  28,
      "End":  76,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  76,
      "End":  77,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  76,
      "End":  78,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  77,
      "End":  70,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  78,
      "End":  71,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  29,
      "End":  72,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  30,
      "End":  79,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  45,
      "End":  32,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  41,
      "End":  31,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  44,
      "End":  34,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  68,
      "End":  81,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  68,
      "End":  82,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  69,
      "End":  83,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  70,
      "End":  82,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  70,
      "End":  85,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  71,
      "End":  84,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  72,
      "End":  87,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  53,
      "End":  40,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  51,
      "End":  88,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  54,
      "End":  80,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  49,
      "End":  38,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  48,
      "End":  37,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  50,
      "End":  39,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  31,
      "End":  42,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  42,
      "End":  32,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  34,
      "End":  46,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  46,
      "End":  35,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  43,
      "End":  33,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  47,
      "End":  36,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  87,
      "End":  86,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  37,
      "End":  89,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  81,
      "End":  90,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  85,
      "End":  91,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  52,
      "End":  88,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  106,
      "End":  107,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  107,
      "End":  108,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  110,
      "End":  109,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  108,
      "End":  115,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  115,
      "End":  116,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  108,
      "End":  114,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  114,
      "End":  111,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  109,
      "End":  108,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  111,
      "End":  117,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  117,
      "End":  118,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  118,
      "End":  116,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "Rect.Text":  
  [
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  890,
      "Rect.Top":  432,
      "Rect.Right":  1256,
      "Rect.Bottom":  475,
      "FStyle":  1,
      "FColor":  10710818,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0.300000011920929",
      "AlignX":  0,
      "AlignY":  0,
      "AlignRect":  false,
      "Text":  "Награды за пиратов/военных:",
      "Color":  0,
      "Font":  "Arial",
      "FontSize":  10,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    },
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  889,
      "Rect.Top":  703,
      "Rect.Right":  1154,
      "Rect.Bottom":  747,
      "FStyle":  1,
      "FColor":  10710818,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0.300000011920929",
      "AlignX":  0,
      "AlignY":  0,
      "AlignRect":  false,
      "Text":  "Сдача цистерн:",
      "Color":  0,
      "Font":  "Arial",
      "FontSize":  10,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    },
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  1325,
      "Rect.Top":  433,
      "Rect.Right":  1518,
      "Rect.Bottom":  476,
      "FStyle":  1,
      "FColor":  10710818,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0.300000011920929",
      "AlignX":  0,
      "AlignY":  0,
      "AlignRect":  false,
      "Text":  "Сдача юзлессов:",
      "Color":  0,
      "Font":  "Arial",
      "FontSize":  10,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    },
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  1240,
      "Rect.Top":  705,
      "Rect.Right":  1609,
      "Rect.Bottom":  743,
      "FStyle":  1,
      "FColor":  10710818,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0.300000011920929",
      "AlignX":  0,
      "AlignY":  0,
      "AlignRect":  false,
      "Text":  "Сдача спасательных капсул:",
      "Color":  0,
      "Font":  "Arial",
      "FontSize":  10,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    },
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  1547,
      "Rect.Top":  432,
      "Rect.Right":  1873,
      "Rect.Bottom":  478,
      "FStyle":  1,
      "FColor":  10710818,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0.300000011920929",
      "AlignX":  0,
      "AlignY":  0,
      "AlignRect":  false,
      "Text":  "Сдача кристаллов и разблокировка карт:",
      "Color":  0,
      "Font":  "Arial",
      "FontSize":  10,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    }  
  ],
  "BlockPar.EC.Total.Strings":  59,
  "BlockPar.EC":  
  [
    {
      "#":  "110",
      "String":  "Заблокированная карта с кредитами"    
    },
    {
      "#":  "114",
      "String":  "Как вам прекрасно известно, <Player>, на дворе идет война с пиратами, а пытающиеся воевать с интервентами рейнджеры, как правило, получают сплошные убытки, из-за чего престиж борьбы с кланом сильно падает.<br><br>КВСМК приняло решение о выплачивании вольным пилотам премий за головы пиратов. На данный момент ставка за голову бандита составляет <0> cr., но награда может варьироваться в зависимости от силы пирата. За помощь в ликвидации пирата выплачивается скромная сумма - <1> cr."    
    },
    {
      "#":  "116",
      "String":  "Деньги, выплачиваемые Командованием за уничтожение пиратов, для удобства можно получать также и через платежный сервис <clr>West-Uni<clrEnd>, доступ к нему вы можете получить с мостика своего корабля. В качестве комиссии сервис взимает лишь <0>% от суммы перевода.<br><br>К вашему сведению, при вступлении в пиратский клан на ваш счет прекращает поступать награда за головы пиратов, а уже накопленная сумма обнуляется. Командование не любит предателей."    
    },
    {
      "#":  "117",
      "String":  "Так держать, <Player>! Гонорар за сбитых пиратов в размере <0> уже переведен на ваш счет."    
    },
    {
      "#":  "118",
      "String":  "Как ты, конечно, знаешь, <Player>, пираты сейчас воюют с Коалицией. Только вот проблема в том, что многие пираты, в особенности мелкие бандиты и рейнджеры-перебежчики, еще несколько лет назад считали своим священным долгом грабить мирняк, а на такой риск, как борьба с вояками, идти никто не хотел.<br><br>Наши авторитеты между собой покумекали, да и порешили, что так, мол, не пойдет. Для повышения престижа \"военного пиратства\", мы ввели небольшую премию за убийство военных и рейнджеров. Сейчас она составляет <0> cr. за голову солдафона и <1> cr. за одного рейнджера, но \"ценник\" может изменяться в зависимости от силы пристреленного. За помощь в убийстве военного мы накидываем <2> cr., рейнджера - <3> cr."    
    },
    {
      "#":  "119",
      "String":  "На данный момент нами не замечено серьезной активности со стороны пиратов, и поэтому Командованием было принято решение временно приостановить выплату наград за головы пиратов. Вы свободны."    
    },
    {
      "#":  "120",
      "String":  "Бабки, которые мы отстегиваем за головы прислужников фараонов, ты, для удобства, можешь получить не только на нашей базе, но и мгновенно, с помощью сервиса <clr>West-Uni<clrEnd>. Доступ к нему ты можешь получить с мостика корабля. Правда, они хапают себе <0>% от награды, так что иногда лучше не полениться и забрать всю сумму.<br><br>А, да, чуть не забыл: при переходе на другую сторону, денежки за расстрел \"хороших парней\" на твой кошелечек больше не капают. Пираты не рады предателям."    
    },
    {
      "#":  "121",
      "String":  "Классная работа, <Player>. Бабки, <0> cr., уже на твоем счету."    
    },
    {
      "#":  "122",
      "String":  "Извиняй, кореш, но от Коалиции уже и не осталось-то ничего, так что мы решили остановить выдачу премий за борьбу с фараонами. Если и остались какие-то рейнджеры-одиночки, то они все равно уже не представляют угрозы.<br><br>Тем, у кого еще оставались не получены награды, мы решили вернуть половину от их суммы. В твоем случае, это составляет <0> cr. Забирай эти деньги, и спасибо тебе от всего нашего братства за помощь в войне."    
    },
    {
      "#":  "123",
      "String":  "Извиняй, кореш, но от Коалиции уже и не осталось-то ничего, так что мы решили остановить выдачу премий за борьбу с фараонами. Если и остались какие-то рейнджеры-одиночки, то они все равно уже не представляют угрозы."    
    },
    {
      "#":  "124",
      "String":  "Извиняй, кореш, но клан-то наш все былое величие порастерял, и на награды бабки больше не выделяются. Ты пока сам за себя, брат."    
    },
    {
      "#":  "125",
      "String":  "<0> цистерна объемом <1> тонн"    
    },
    {
      "#":  "126",
      "String":  "Пиратская"    
    },
    {
      "#":  "127",
      "String":  "Неизвестная"    
    },
    {
      "#":  "128",
      "String":  "Доминаторская"    
    },
    {
      "#":  "129",
      "String":  "Гаальская"    
    },
    {
      "#":  "130",
      "String":  "Фэянская"    
    },
    {
      "#":  "131",
      "String":  "Человеческая"    
    },
    {
      "#":  "132",
      "String":  "Пеленгская"    
    },
    {
      "#":  "133",
      "String":  "Малокская"    
    },
    {
      "#":  "134",
      "String":  "Вы, <Player>, не задумывались о том, что космос все чаще засоряется обломками, бесхозным оборудованием, минералами?<br>Наиболее часто в космосе встречаются цистерны, поэтому нами и гаальской космосозащитной организацией \"Гринспейс\" было решено начать их сбор. Таким образом, мы получаем и топливо для переработки, и куда более чистый космос.<br>Для сбора цистерн по всему рукаву Галактики активно привлекаются рейнджеры, как наиболее свободные и многозадачные пилоты. Цистерны обмениваются по курсу \"<0> ед. вместительности к <1> ед. нод-счета\". <br>В связи с невозможностью обеспечить нодами всех желающих, нами установлен лимит в <2> нд., который сбрасывается в среднем каждый год. Кроме того, при достижении рейнджером лимита, ему выдается микромодуль. Ближайший сброс лимита запланирован на <3>.<br>На данный момент вы можете получить еще <4> нд.<br>Не желаете ли вы, рейнджер, сдать нам несколько цистерн?"    
    },
    {
      "#":  "135",
      "String":  "Вы сдали цистерну вместительностью <0> ед., на ваш нод-счет начислено <1> нд. Вы уже получили <2> позволенных вам нд., осталось <3> нд.<br>Не желаете ли вы, рейнджер, сдать нам еще несколько цистерн?"    
    },
    {
      "#":  "136",
      "String":  "Благодарим вас, рейнджер, за помощь нашему делу. В этом году вы сдали нам <0> цистерн общим объемом <1> ед. топлива.<br>В награду мы вручаем вам микромодуль <2>. Не забудьте принять участие в акции в следующем году!"    
    },
    {
      "#":  "139",
      "String":  "Так-так... Дайте свериться с базой данных...<br>...<br>Прошу прощения, ваш лимит на данный момент исчерпан. Ближайший сброс лимита намечен на <0>, прилетайте позже."    
    },
    {
      "#":  "149",
      "String":  "Кристаллы? Очень хорошо! Самые различные драгоценные камни и образования всегда находятся в цене. Так, сейчас посмотрим, что у вас есть...<br>...<br>У вас на борту находится <0> кристаллов. С учетом наценки из уважения к вашей торговой репутации (<1>%), мы готовы взять товар за <2> cr. Ну что, по рукам?"    
    },
    {
      "#":  "150",
      "String":  "<Player>, у вас на борту нет подходящих для сдачи кристаллов. Приходите в следующий раз, когда найдете что-нибудь на незаселенных планетах."    
    },
    {
      "#":  "151",
      "String":  "Кредитку разблокировать, говоришь? Что ж, у нас есть спецы на это дело, щас посмотрим, много ли у тебя этого добраа...<br>...<br>Мы отрыли на твоем корыте <0> карт, сумма сбережений на них - <1> cr. Комиссия нашего доминиона равна <2>%, в итоге тебе на счет <3> cr. Переводить?"    
    },
    {
      "#":  "152",
      "String":  "Наши лучшие парни нашли на твоем корабле только одну карту, оформленную на имя <Player>. Возвращайся, когда раздобудешь еще карт."    
    },
    {
      "#":  "179",
      "String":  "Мы отметили в вашем трюме те предметы, которые представляют для нас особенный интерес. Каждый мы готовы приобрести по утроенной цене."    
    },
    {
      "#":  "185",
      "String":  "Спасибо!"    
    },
    {
      "#":  "186",
      "String":  "Далее"    
    },
    {
      "#":  "187",
      "String":  "Вас понял"    
    },
    {
      "#":  "188",
      "String":  "Ясно"    
    },
    {
      "#":  "189",
      "String":  "И вам спасибо!"    
    },
    {
      "#":  "190",
      "String":  "Вот как? Ну ладно..."    
    },
    {
      "#":  "191",
      "String":  "Нет, спасибо"    
    },
    {
      "#":  "192",
      "String":  "Рад был помочь"    
    },
    {
      "#":  "198",
      "String":  "Сдать кристаллы"    
    },
    {
      "#":  "199",
      "String":  "Не сейчас"    
    },
    {
      "#":  "200",
      "String":  "Понял"    
    },
    {
      "#":  "201",
      "String":  "Оформляй перевод"    
    },
    {
      "#":  "202",
      "String":  "Я не буду ничего продавать"    
    },
    {
      "#":  "209",
      "String":  "Также мы предлагаем рейнджерам и прочим пилотам обмен цистерн на единицы нод-счета."    
    },
    {
      "#":  "210",
      "String":  "<br>"    
    },
    {
      "#":  "211",
      "String":  "<0>"    
    },
    {
      "#":  "83",
      "String":  "Расскажите подробнее о награде"    
    },
    {
      "#":  "84",
      "String":  "К твоему сведению, нами введена награда за головы военных и рейнджеров. Не упусти свой шанс заработать."    
    },
    {
      "#":  "85",
      "String":  "Я хочу получить свою награду"    
    },
    {
      "#":  "86",
      "String":  "Кстати говоря, братан, у нас тут для тебя залежались <0> cr., как премия за борьбу с фараонами. Не желаешь ли забрать денежки?"    
    },
    {
      "#":  "87",
      "String":  "Почему я не могу забрать деньги за убийства?"    
    },
    {
      "#":  "88",
      "String":  "По приказу КВСМК, мы награждаем рейнджеров за убийство пиратов. Вы тоже имеете возможность получить премию за головы этих негодяев."    
    },
    {
      "#":  "89",
      "String":  "Расскажите о награде за пиратов"    
    },
    {
      "#":  "90",
      "String":  "Я хочу получить награду за пиратов"    
    },
    {
      "#":  "91",
      "String":  "По приказу КВСМК, мы награждаем рейнджеров за убийство пиратов. Для вас сейчас имеется премия в размере <0> cr."    
    },
    {
      "#":  "92",
      "String":  "Почему я не могу забрать награду за пиратов?"    
    },
    {
      "#":  "94",
      "String":  "Я хочу сдать кристаллы"    
    },
    {
      "#":  "95",
      "String":  "Разблокируйте кредитные карты"    
    },
    {
      "#":  "96",
      "String":  "Я хочу обменять цистерны"    
    },
    {
      "#":  "98",
      "String":  "Сдать уникальные предметы"    
    }  
  ]
}