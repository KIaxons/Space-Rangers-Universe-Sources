{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -260,
  "ViewPos.y":  234,
  "ScriptName":  "Mod_ShuMercs",
  "ScriptFileOut":  "H:\\Mod_ShuMercs.scr",
  "ScriptTextOut":  "H:\\Mod_ShuMercs.txt",
  "GraphPoint.Count":  463,
  "GraphLink.Count":  433,
  "GraphRectText.Count":  2,
  "Variables.Count":  59,
  "Stars.Count":  1,
  "Planets.Count":  1,
  "Ships.Count":  1,
  "States.Count":  28,
  "Groups.Count":  12,
  "Places.Count":  0,
  "Items.Count":  0,
  "Ethers.Count":  0,
  "Dialogs.Count":  24,
  "DialogMessages.Count":  62,
  "DialogAnswers.Count":  68,
  "Operations.Count":  100,
  "Statements.Count":  107,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "DialogAnswers":      
      [
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  270,
          "#":  92,
          "Msg":  "Я передумал",
          "AMsg.Num":  "0"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  267,
          "#":  93,
          "Msg":  "Мне нужны воины \"Фэйенгелиона\", определенно",
          "AMsg.Num":  "1"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  268,
          "#":  94,
          "Msg":  "\"Красные топоры\" - выбор настоящих мужчин!",
          "AMsg.Num":  "2"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  269,
          "#":  95,
          "Msg":  "Выбираю пилотов \"Атланта\" - дешево и сердито",
          "AMsg.Num":  "3"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  260,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  96,
          "Msg":  "Назад",
          "AMsg.Num":  "4"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  620,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  97,
          "Msg":  "Военная операция",
          "AMsg.Num":  "5"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  60,
          "Parent":  286,
          "#":  98,
          "Msg":  "Эскорт",
          "AMsg.Num":  "6"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  740,
          "Pos.y":  520,
          "Parent":  -1,
          "#":  99,
          "Msg":  "Да, я готов заплатить",
          "AMsg.Num":  "7"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  289,
          "#":  100,
          "Msg":  "Рейд",
          "AMsg.Num":  "8"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  560,
          "Pos.y":  520,
          "Parent":  -1,
          "#":  101,
          "Msg":  "Да, я готов заплатить",
          "AMsg.Num":  "9"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  650,
          "Pos.y":  520,
          "Parent":  -1,
          "#":  102,
          "Msg":  "Да, я готов заплатить",
          "AMsg.Num":  "10"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "fastexit",
          "Pos.x":  0,
          "Pos.y":  50,
          "Parent":  304,
          "#":  103,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "11"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  305,
          "#":  104,
          "Msg":  "Ввести имя цели",
          "AMsg.Num":  "12"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  314,
          "#":  105,
          "Msg":  "Плачу <cost> cr.",
          "AMsg.Num":  "13"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  20,
          "Pos.y":  40,
          "Parent":  224,
          "#":  106,
          "Msg":  "Думаю, мои партнеры обойдутся и без этого",
          "AMsg.Num":  "14"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  325,
          "#":  107,
          "Msg":  "Подтверждаю, заменяйте",
          "AMsg.Num":  "15"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  274,
          "#":  108,
          "Msg":  "Я хочу улучшить отношения с \"Атлантом\"",
          "AMsg.Num":  "16"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  275,
          "#":  109,
          "Msg":  "Нужно задобрить \"Красных топоров\"",
          "AMsg.Num":  "17"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  276,
          "#":  110,
          "Msg":  "Мне важно расположение \"Фэйенгелиона\"",
          "AMsg.Num":  "18"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  279,
          "#":  111,
          "Msg":  "Я готов к переговорам",
          "AMsg.Num":  "19"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  -70,
          "Pos.y":  30,
          "Parent":  63,
          "#":  112,
          "Msg":  "Послушай свою смерть, <clr>Норт<clrEnd>!",
          "AMsg.Num":  "20"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  -30,
          "Pos.y":  30,
          "Parent":  64,
          "#":  113,
          "Msg":  "Что \"один\"?",
          "AMsg.Num":  "21"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  64,
          "#":  114,
          "Msg":  "",
          "AMsg.Num":  "22"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  -50,
          "Pos.y":  80,
          "Parent":  113,
          "#":  115,
          "Msg":  "Зачем ты считаешь?",
          "AMsg.Num":  "23"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  -120,
          "Pos.y":  0,
          "Parent":  63,
          "#":  116,
          "Msg":  "Я пошутил, успокойся",
          "AMsg.Num":  "24"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  63,
          "#":  117,
          "Msg":  "Мне нужно поправить отношения с <clr>\"Атлантом\"<clrEnd>",
          "AMsg.Num":  "25"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  20,
          "Pos.y":  30,
          "Parent":  63,
          "#":  118,
          "Msg":  "",
          "AMsg.Num":  "26"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  349,
          "#":  119,
          "Msg":  "Я согласен заплатить",
          "AMsg.Num":  "27"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  72,
          "#":  120,
          "Msg":  "Мне нужно поправить отношения с <clr>\"Красными топорами\"<clrEnd>",
          "AMsg.Num":  "28"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  -70,
          "Pos.y":  30,
          "Parent":  72,
          "#":  121,
          "Msg":  "Я задержу тебя навсегда! Жди распыления на атомы, красномордый",
          "AMsg.Num":  "29"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  20,
          "Pos.y":  30,
          "Parent":  72,
          "#":  122,
          "Msg":  "",
          "AMsg.Num":  "30"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  342,
          "#":  123,
          "Msg":  "Я согласен заплатить",
          "AMsg.Num":  "31"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  74,
          "#":  124,
          "Msg":  "",
          "AMsg.Num":  "32"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  -40,
          "Pos.y":  30,
          "Parent":  76,
          "#":  125,
          "Msg":  "Мне нужно поправить отношения с <clr>\"Фэйенгелионом\"<clrEnd>",
          "AMsg.Num":  "33"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  76,
          "#":  202,
          "Msg":  "Ответь на мой вопрос: кто из нас первым отправится в биореактор?",
          "AMsg.Num":  "34"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  30,
          "Pos.y":  30,
          "Parent":  76,
          "#":  203,
          "Msg":  "",
          "AMsg.Num":  "35"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  77,
          "#":  204,
          "Msg":  "",
          "AMsg.Num":  "36"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  347,
          "#":  205,
          "Msg":  "Я согласен заплатить",
          "AMsg.Num":  "37"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  278,
          "#":  206,
          "Msg":  "Я готов к переговорам",
          "AMsg.Num":  "38"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  280,
          "#":  207,
          "Msg":  "Я готов к переговорам",
          "AMsg.Num":  "39"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  80,
          "Parent":  81,
          "#":  208,
          "Msg":  "Нужно атаковать корабль",
          "AMsg.Num":  "40"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  80,
          "Parent":  81,
          "#":  209,
          "Msg":  "Отмена атаки",
          "AMsg.Num":  "41"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  60,
          "Pos.y":  80,
          "Parent":  81,
          "#":  210,
          "Msg":  "Конец связи",
          "AMsg.Num":  "42"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  333,
          "#":  211,
          "Msg":  "Отмена",
          "AMsg.Num":  "43"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  80,
          "Parent":  81,
          "#":  212,
          "Msg":  "Возвращайся назад",
          "AMsg.Num":  "44"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  413,
          "#":  213,
          "Msg":  "И передай этот приказ всем остальным",
          "AMsg.Num":  "45"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  409,
          "#":  214,
          "Msg":  "И передай этот приказ всем остальным",
          "AMsg.Num":  "46"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  411,
          "#":  215,
          "Msg":  "Отменить контракт",
          "AMsg.Num":  "47"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  412,
          "#":  216,
          "Msg":  "На мостик",
          "AMsg.Num":  "48"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "fastexit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  68,
          "#":  217,
          "Msg":  "",
          "AMsg.Num":  "49"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  290,
          "#":  218,
          "Msg":  "Рейд (<i - CurTurn()> дней)",
          "AMsg.Num":  "50"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  284,
          "#":  219,
          "Msg":  "Военная операция (<timer_attack - CurTurn()> дней)",
          "AMsg.Num":  "51"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  266,
          "#":  220,
          "Msg":  "Тогда найму фрилансеров",
          "AMsg.Num":  "52"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "fastexit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  410,
          "#":  323,
          "Msg":  "Конец связи",
          "AMsg.Num":  "53"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  -20,
          "Parent":  357,
          "#":  324,
          "Msg":  "Назад",
          "AMsg.Num":  "54"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "fastexit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  86,
          "#":  329,
          "Msg":  "Конец связи",
          "AMsg.Num":  "55"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "fastexit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  414,
          "#":  335,
          "Msg":  "Конец связи",
          "AMsg.Num":  "56"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "fastexit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  341,
          "#":  340,
          "Msg":  "Конец связи",
          "AMsg.Num":  "57"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "fastexit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  75,
          "#":  344,
          "Msg":  "",
          "AMsg.Num":  "58"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "fastexit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  79,
          "#":  345,
          "Msg":  "",
          "AMsg.Num":  "59"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  0,
          "Pos.y":  40,
          "Parent":  326,
          "#":  360,
          "Msg":  "Думаю, мои партнеры обойдутся и без этого",
          "AMsg.Num":  "60"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  580,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  370,
          "Msg":  "Я передумал",
          "AMsg.Num":  "61"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  670,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  371,
          "Msg":  "Я передумал",
          "AMsg.Num":  "62"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  760,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  372,
          "Msg":  "Я передумал",
          "AMsg.Num":  "63"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  447,
          "#":  442,
          "Msg":  "<tstr3>",
          "AMsg.Num":  "64"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  446,
          "#":  445,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "65"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  451,
          "#":  452,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "66"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  40,
          "Parent":  457,
          "#":  458,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "67"        
        }      
      ],
      "DialogMessages":      
      [
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  90,
          "Parent":  234,
          "#":  32,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "0"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  230,
          "#":  33,
          "Msg":  "Согласно политике нашей станции, эскорт можно нанимать вне зависимости от вашего навыка лидерства. Но стоит предупредить, что <clr>некоторые наемники, не увидев в вас достойного лидера, могут разорвать контракт,<clrEnd> так что нанимайте бойцов \"сверху\" навыка на свой страх и риск. <br><br>Сколько кораблей наймете?",
          "DMsg.Num":  "1"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  226,
          "#":  34,
          "Msg":  "Как вы знаете, существуют три типа контрактов: <clr>эскорт<clrEnd>, <clr>рейд<clrEnd> и <clr>военная операция<clrEnd>.<br><br><clr>Эскорт<clrEnd> - это обычный партнерский контракт на определенную длительность. Заказчика сопровождают сотрудники охранного агентства, универсальные почти в любой ситуации. Но подобные агенты не подготовлены для атак вражеских систем, поэтому при нападении могут струсить.<br><br><clr>Рейд<clrEnd> - специальная операция, проводимая в доминаторской системе. Отряд численностью 3 корабля совершает прыжок, \"Аварийными сигналами\" заставляет доминаторов сбросить оборудование и возвращается на базу с добытыми трофеями. <br><clr>Контракт оформляется не чаще, чем раз в 90 дней - \"Атлантом\" и 150 дней - \"Фэйенгелионом\". Необходим навык лидерства не ниже трех и звание кадета/юнги.<clrEnd><br><br><clr>Военная операция<clrEnd> - атака выбранной вами системы ударной группой от 3 до 10 кораблей.<br>Ударная группа будет подчиняться вашим приказам и беспрекословно атакует указанный вами вражеский корабль. Также вы сможете приказать отряду следовать за вами либо же отступить, дабы сберечь жизни бойцов.<br><clr>Организация подобной операции доступна начиная со звания капитана или шкипера и навыка лидерства 3. Осуществляется раз в 3 месяца.<clrEnd><br><br>Ну что, какой тип контракта выбираете?",
          "DMsg.Num":  "2"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  620,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  35,
          "Msg":  "Сколько кораблей наймете?",
          "DMsg.Num":  "3"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  740,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  36,
          "Msg":  "Какой укажем срок найма? Мы можем оформить контракт на один, два, три, четыре года или на пять лет.",
          "DMsg.Num":  "4"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  740,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  37,
          "Msg":  "Вы хотите нанять <cnt> бойцов для охраны вашего корабля. Согласно расценкам группировки <tstr6>, один наемник на <tint4> дней обойдется вам в <tint1> cr., итого (с учетом скидки <rel>%) <cost> cr. Оформляем контракт?",
          "DMsg.Num":  "5"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  620,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  38,
          "Msg":  "Укажите систему для атаки.",
          "DMsg.Num":  "6"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  560,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  39,
          "Msg":  "Вы хотите нанять <cnt> бойцов на военную операцию в системе <Name(GalaxyStar(attack_star))>. Согласно расценкам группировки <tstr6>, участие одного наемника обойдется вам в <tint1> cr., итого (с учетом скидки <rel>%) <cost> cr. Оформляем контракт?",
          "DMsg.Num":  "7"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  650,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  40,
          "Msg":  "90=Вы хотите нанять <cnt> бойцов на рейд в системе <Name(GalaxyStar(raid_star))>. Согласно расценкам группировки <tstr6>, участие одного наемника обойдется вам в <tint1> cr., итого (с учетом скидки <rel>%) <cost> cr. Оформляем контракт?",
          "DMsg.Num":  "8"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  301,
          "#":  41,
          "Msg":  "Ты не видишь, моя ласточка разваливается налету? Какой контракт, <Player>?",
          "DMsg.Num":  "9"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  303,
          "#":  42,
          "Msg":  "Я сейчас выполняю другое задание. Отбой.",
          "DMsg.Num":  "10"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  302,
          "#":  43,
          "Msg":  "Я готов поработать на тебя. Назови цель, а там определимся с ценой. Мы общаемся по зашифрованному каналу связи, так что не беспокойся, жертва нас не услышит.",
          "DMsg.Num":  "11"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  300,
          "#":  44,
          "Msg":  "Я не настолько доверяю тебе, чтобы заключать с тобой контракт. Ищи себе другого киллера.",
          "DMsg.Num":  "12"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  319,
          "#":  45,
          "Msg":  "<ShipName(target_ship)>? Нет уж, мне жизнь еще дорога, я за это дело не возьмусь.",
          "DMsg.Num":  "13"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  316,
          "#":  46,
          "Msg":  "<ShipName(target_ship)>? Столь серьезный риск должен хорошо оплачиваться. С учетом скидки <tstr5> (<rel>%) - скажем, <cost> cr.",
          "DMsg.Num":  "14"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  307,
          "#":  47,
          "Msg":  "<Name(target_ship)>, значит... О'кей, но тебе это выйдет в кругленькую сумму. Со скидкой <tstr5> (<rel>%) - <cost> cr.",
          "DMsg.Num":  "15"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  308,
          "#":  48,
          "Msg":  "<Name(target_ship)>? Разберемся, деньги вперед. Учитывая скидку <tstr5> (<rel>%), тебе это обойдется в <cost> cr.",
          "DMsg.Num":  "16"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  309,
          "#":  49,
          "Msg":  "<ShipName(target_ship)>? Ничего трудного. Плати <cost> cr. (с учетом скидки <rel>%), и все будет сделано.",
          "DMsg.Num":  "17"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  40,
          "Pos.y":  0,
          "Parent":  305,
          "#":  50,
          "Msg":  "<tstr6>... Пишет, ничего не найдено. Уверен, что правильно ввел имя цели?",
          "DMsg.Num":  "18"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  60,
          "Pos.y":  0,
          "Parent":  305,
          "#":  51,
          "Msg":  "<Name(target_ship)>? Что ж, буду считать это неудачной шуткой. Если не дошло, за этот заказ я не возьмусь.",
          "DMsg.Num":  "19"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  310,
          "#":  52,
          "Msg":  "<Name(target_ship)>? Столь серьезный риск должен хорошо оплачиваться. Cкажем, <cost> cr. будет достаточно.",
          "DMsg.Num":  "20"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  311,
          "#":  53,
          "Msg":  "<Name(target_ship)>, значит... О'кей, но такой заказ тебе обойдется в круглую сумму. <cost> cr.",
          "DMsg.Num":  "21"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  312,
          "#":  54,
          "Msg":  "<ShipName(target_ship)> так <ShortName(target_ship)>. Разберемся, деньги вперед. Переведи <cost> cr, и все будет сделано в кратчайшие сроки.",
          "DMsg.Num":  "22"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  313,
          "#":  55,
          "Msg":  "<ShipName(target_ship)>? Ничего трудного. Плати <cost> cr., и все будет сделано.",
          "DMsg.Num":  "23"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  40,
          "Parent":  393,
          "#":  56,
          "Msg":  "Какому из ваших партнеров необходимо сменить корпус?",
          "DMsg.Num":  "24"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  182,
          "#":  57,
          "Msg":  "Теперь выберите нужный корпус со склада.",
          "DMsg.Num":  "25"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  196,
          "#":  58,
          "Msg":  "Вы хотите заменить корпус корабля <Name(cur_ship)> на <Name(StorageItems(tint1))>. Эту операцию нашу техники оценивают в <cost> cr, подтверждаете?",
          "DMsg.Num":  "26"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  419,
          "#":  59,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "27"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  241,
          "#":  60,
          "Msg":  "Для того, чтобы улучшить отношения с <clr>\"Атлантом\"<clrEnd>, вам придется встретиться с лидером группировки.<br><br>Лидером <clr>ЧОП \"Атлант\"<clrEnd> является <clr>Кайло Норт<clrEnd> - прославленный наемный убийца, на скопленные деньги основавший гильдию охранников и киллеров. Чрезвычайно опасен.<br><br><clr>Норт<clrEnd> согласен переговорить с вами за <cost> cr.<br><br>Следующий вызов доступен <GameDateTxtByTurn(atlant_call + 1)>.",
          "DMsg.Num":  "28"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  242,
          "#":  61,
          "Msg":  "Для того, чтобы улучшить отношения с <clr>\"Красными топорами\"<clrEnd>, вам придется встретиться с лидером группировки.<br><br>Лидером <clr>отряда \"Красные топоры\"<clrEnd> является <clr>Бордюрг Ебрын<clrEnd> - бывалый малокский воин и пират, печально известный ненавистью к торгашам и животной жестокостью.<br> <br>Вы можете попробовать поговорить с <clr>Ебрыном<clrEnd> за <cost> cr.<br><br>Следующий вызов <GameDateTxtByTurn(red_call + 1)>.",
          "DMsg.Num":  "29"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  243,
          "#":  62,
          "Msg":  "Для того, чтобы улучшить отношения с <clr>\"Красными топорами\"<clrEnd>, вам придется встретиться с лидером группировки.<br><br>Пост гененрального директора <clr>Корпорации \"Фэйенгелион\"<clrEnd> занимает <clr>Элайма Фэй<clrEnd> - отличившийся инженер, осужденный за похищение секретных чертежей и впоследствии амнистированный, а также ксенофоб и автор нескольких евгенических концепций. <br> <br><clr>Фэй<clrEnd> может организовать вам встречу за <cost> cr. <br><br>Следующий вызов доступен <GameDateTxtByTurn(fei_call + 1)>.",
          "DMsg.Num":  "30"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  197,
          "#":  63,
          "Msg":  "Я слушаю.",
          "DMsg.Num":  "31"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  40,
          "Parent":  112,
          "#":  64,
          "Msg":  "Один.",
          "DMsg.Num":  "32"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  40,
          "Parent":  113,
          "#":  65,
          "Msg":  "Два.",
          "DMsg.Num":  "33"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  30,
          "Pos.y":  80,
          "Parent":  113,
          "#":  66,
          "Msg":  "Три. Умри.",
          "DMsg.Num":  "34"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  117,
          "#":  67,
          "Msg":  "Заплатишь <cost> cr. - обеспечу тебе лояльность <50>%. Дальше сам.",
          "DMsg.Num":  "35"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  247,
          "#":  68,
          "Msg":  "Приятно иметь с тобой дело.",
          "DMsg.Num":  "36"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  60,
          "Parent":  394,
          "#":  69,
          "Msg":  "Для наших клиентов мы предлагаем множество тренажеров, начиная пилотными симуляторами и заканчивая логическими головоломками. Используя все это разнообразие методов, вы можете увеличить любой навык ваших партнеров. Стоит учитывать, что эффективность тренировок прямо зависит от ваших лидерских качеств: количество сеансов, которое можно провести без ущерба для развиваемых навыков, прямо равно навыку лидерства тренера. То есть, с максимальным лидерством каждого напарника можно будет натренировать 6 раз. А, да, чуть не забыл: для наших наемников тренировки стоят вдвое дешевле.<br><br>Теперь выберите пилота, которого хотите тренировать.",
          "DMsg.Num":  "37"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  198,
          "#":  70,
          "Msg":  "Теперь выберите навык, который желаете развить.",
          "DMsg.Num":  "38"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  40,
          "Parent":  356,
          "#":  71,
          "Msg":  "Одна тренировка будет стоить <cost> cr. Сколько сеансов проведем?",
          "DMsg.Num":  "39"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  199,
          "#":  72,
          "Msg":  "Говори, <Player>, и не задерживай меня.",
          "DMsg.Num":  "40"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  120,
          "#":  73,
          "Msg":  "Воинам нашего отряда неинтересны деньги!.. Впрочем, аммуницию тоже на какие-то шиши надо брать... Так и быть, пилот, выкладывай <cost> cr, и презрение моих солдат сменится безразличием.",
          "DMsg.Num":  "41"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  121,
          "#":  74,
          "Msg":  "Что ты сказал, ничтожество?! Арр-р-ргх, бортовой компьютер, все орудия к бою!",
          "DMsg.Num":  "42"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  250,
          "#":  75,
          "Msg":  "Будь уверен, пилот: все твои ресурсы уйдут на снаряжение прославленных \"Красных топоров\"!",
          "DMsg.Num":  "43"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  200,
          "#":  76,
          "Msg":  "<Player>, я, как официальный представитель Корпорации, уполномочен отвечать на все ваши вопросы.",
          "DMsg.Num":  "44"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  252,
          "#":  77,
          "Msg":  "Какая примитивная грубость... Мне будет нисколько ни жаль вас ликвидировать.",
          "DMsg.Num":  "45"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  125,
          "#":  78,
          "Msg":  "За <cost> cr. гарантирую вам лояльность <50>%. Выгодное предложение, не сомневайтесь.",
          "DMsg.Num":  "46"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  253,
          "#":  79,
          "Msg":  "Рад, что нам удалось договориться. Желаем вам только преумножить ваши материальные блага вместе с наемниками Корпорации.",
          "DMsg.Num":  "47"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  60,
          "Pos.y":  60,
          "Parent":  188,
          "#":  80,
          "Msg":  "Готовлюсь к прыжку в систему <Name(GalaxyStar(attack_star))>, босс. Не отвлекайте меня.",
          "DMsg.Num":  "48"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  60,
          "Parent":  188,
          "#":  81,
          "Msg":  "Говорите, босс, я весь в вашем распоряжении.",
          "DMsg.Num":  "49"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  -60,
          "Pos.y":  50,
          "Parent":  81,
          "#":  82,
          "Msg":  "Как скажете, босс. Передам остальным, чтобы сосредоточились на более приоритетных целях.",
          "DMsg.Num":  "50"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  208,
          "#":  83,
          "Msg":  "И кого же, собственно, надо атаковать?",
          "DMsg.Num":  "51"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  110,
          "Pos.y":  170,
          "Parent":  188,
          "#":  84,
          "Msg":  "Вас понял, босс. Возвращаюсь в Центр.",
          "DMsg.Num":  "52"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  201,
          "#":  85,
          "Msg":  "Вас понял, босс, атакую корабль <ShipName(IdToShip(enemy))>.",
          "DMsg.Num":  "53"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  190,
          "#":  86,
          "Msg":  "Не отвлекай меня, <Player>, я сейчас выполняю другое задание.",
          "DMsg.Num":  "54"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  417,
          "#":  87,
          "Msg":  "Сейчас <Name(IdToShip(free_id))> исполняет контракт на убийство корабля <Name(IdToShip(target_id))>. Преследование будет продолжаться до <GameDateTxtByTurn(free_timer-30)>.",
          "DMsg.Num":  "55"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  317,
          "#":  88,
          "Msg":  "<ShipName(target_ship)>? Мы на территории <clr>Обмена<clrEnd>, здесь запрещена стрельба между наемниками. Тебе необходимо выманить цель из системы.",
          "DMsg.Num":  "56"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  318,
          "#":  89,
          "Msg":  "<ShipName(target_ship)> - мой коллега. Я не пойду на нарушение наших договоренностей ради подобного заказа.",
          "DMsg.Num":  "57"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  192,
          "#":  90,
          "Msg":  "Отступаю в Центр наемников, босс.",
          "DMsg.Num":  "58"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  90,
          "Parent":  233,
          "#":  91,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "59"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  440,
          "#":  441,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "60"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  456,
          "#":  457,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "61"        
        }      
      ],
      "Dialogs":      
      [
        {
          "Type":  "TDialog",
          "Name":  "AttackMB1",
          "Pos.x":  -60,
          "Pos.y":  20,
          "Parent":  221,
          "#":  179        
        },
        {
          "Type":  "TDialog",
          "Name":  "AttackMB2",
          "Pos.x":  30,
          "Pos.y":  20,
          "Parent":  221,
          "#":  180        
        },
        {
          "Type":  "TDialog",
          "Name":  "MercHire",
          "Pos.x":  910,
          "Pos.y":  -180,
          "Parent":  -1,
          "#":  181        
        },
        {
          "Type":  "TDialog",
          "Name":  "HullMB",
          "Pos.x":  690,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  182        
        },
        {
          "Type":  "TDialog",
          "Name":  "HullMBAct",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  223,
          "#":  183        
        },
        {
          "Type":  "TDialog",
          "Name":  "TalkAtlant",
          "Pos.x":  1450,
          "Pos.y":  -180,
          "Parent":  -1,
          "#":  184        
        },
        {
          "Type":  "TDialog",
          "Name":  "TrainMB",
          "Pos.x":  690,
          "Pos.y":  -180,
          "Parent":  -1,
          "#":  185        
        },
        {
          "Type":  "TDialog",
          "Name":  "TalkRed",
          "Pos.x":  1230,
          "Pos.y":  -180,
          "Parent":  -1,
          "#":  186        
        },
        {
          "Type":  "TDialog",
          "Name":  "TalkFei",
          "Pos.x":  1610,
          "Pos.y":  -180,
          "Parent":  -1,
          "#":  187        
        },
        {
          "Type":  "TDialog",
          "Name":  "AttackDialog",
          "Pos.x":  970,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  188        
        },
        {
          "Type":  "TDialog",
          "Name":  "war",
          "Pos.x":  1220,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  189        
        },
        {
          "Type":  "TDialog",
          "Name":  "RaidDialog",
          "Pos.x":  1100,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  190        
        },
        {
          "Type":  "TDialog",
          "Name":  "FreeContract",
          "Pos.x":  1220,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  191        
        },
        {
          "Type":  "TDialog",
          "Name":  "RunDialog",
          "Pos.x":  1350,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  192        
        },
        {
          "Type":  "TDialog",
          "Name":  "TrainMBChoose",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  353,
          "#":  356        
        },
        {
          "Type":  "TDialog",
          "Name":  "TrainMBAct",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  357,
          "#":  358        
        },
        {
          "Type":  "TDialog",
          "Name":  "AttackMBChoose",
          "Pos.x":  620,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  363        
        },
        {
          "Type":  "TDialog",
          "Name":  "HireMBChoose",
          "Pos.x":  740,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  365        
        },
        {
          "Type":  "TDialog",
          "Name":  "HireMBTime",
          "Pos.x":  740,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  368        
        },
        {
          "Type":  "TDialog",
          "Name":  "MB_FixRelations",
          "Pos.x":  180,
          "Pos.y":  80,
          "Parent":  391,
          "#":  390        
        },
        {
          "Type":  "TDialog",
          "Name":  "MB_HireMercs",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  389,
          "#":  391        
        },
        {
          "Type":  "TDialog",
          "Name":  "MB_PartnerChangeHull",
          "Pos.x":  40,
          "Pos.y":  20,
          "Parent":  394,
          "#":  393        
        },
        {
          "Type":  "TDialog",
          "Name":  "MB_PartnerTraining",
          "Pos.x":  110,
          "Pos.y":  20,
          "Parent":  391,
          "#":  394        
        },
        {
          "Type":  "TDialog",
          "Name":  "HeadBountyListDialog",
          "Pos.x":  650,
          "Pos.y":  600,
          "Parent":  -1,
          "#":  439        
        }      
      ],
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "PlayerGroup",
          "Pos.x":  190,
          "Pos.y":  590,
          "Parent":  -1,
          "#":  128,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "AtlantMercs",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  131,
          "#":  129,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "FaeyangelionMercs",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  129,
          "#":  130,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "RedAxesMercs",
          "Pos.x":  100,
          "Pos.y":  490,
          "Parent":  -1,
          "#":  131,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "MercCenter",
          "Pos.x":  100,
          "Pos.y":  770,
          "Parent":  -1,
          "#":  132,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "FreeMercs",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  130,
          "#":  133,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "AtlantLeader",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  135,
          "#":  134,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "RedAxesLeader",
          "Pos.x":  100,
          "Pos.y":  810,
          "Parent":  -1,
          "#":  135,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "FaeyangelionLeader",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  134,
          "#":  136,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "RedAxesHQ",
          "Pos.x":  100,
          "Pos.y":  680,
          "Parent":  -1,
          "#":  431,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "AtlantHQ",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  431,
          "#":  432,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "FaeyangelionHQ",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  432,
          "#":  433,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  290,
          "Pos.y":  590,
          "Parent":  -1,
          "#":  3,
          "Total.Lines":  1,
          "Code.Type":  "Global",
          "Code":          
          [
              "GRun();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  3,
          "#":  4,
          "Total.Lines":  1085,
          "Code.Type":  "Init",
          "Code":          
          [
              "//Запоминаем текущий ГТУ в отдельную переменную",
              "GTL = GalaxyTechLevel();",
              "TortugatzId = Id(PlanetToStar(PlanetPirateClan())) - 1;",
              "NifigatzId = 71;",
              "",
              "//Первично заполняем главный массив мода ShuMercs",
              "DeclareMercOrganisationsDataArray();",
              "",
              "//Первый спавн центра наёмников, выбираем систему недалеко от стартовой позиции игрока",
              "SpawnMercCenter(StarNearbyStars(PlanetToStar(GetShipHomePlanet(Player())), 6));",
              "",
              "//Выставляем стартовое отношение организаций наёмников к игроку",
              "tint1 = ShipPilotRace(Player());",
              "",
              "MercOrganisationsData['RedAxes', 'RelationToPlayer'] = PortionInDiapason(tint1, Maloc, Gaal, 60, 25) + PortionInDiapason(ShipStatus(Player(), 1), 0, 100, 0, 40);",
              "",
              "if(tint1 == People || tint1 == Peleng) tint2 = 60;",
              "else if(tint1 >= Fei) tint2 = 40;",
              "else /*if(tint1 == Maloc)*/ tint2 = 25;",
              "MercOrganisationsData['Atlant', 'RelationToPlayer'] = tint2 + PortionInDiapason(ShipStatus(Player(), 0), 0, 100, 0, 40);",
              "",
              "if(tint1 == Fei) tint2 = 60;",
              "else if(tint1 == Gaal) tint2 = 50;",
              "else tint2 = PortionInDiapason(tint1, Maloc, People, 25, 40);",
              "MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] = tint2 + PortionInDiapason(ShipStatus(Player(), 2), 0, 100, 0, 40);",
              "",
              "//Первое обновление списка для механики \"Охоты за головами\"",
              "DeclareHeadBountyList();",
              "UpdateHeadBountyList();",
              "tempVar1 = 1;",
              "",
              "//Спавним наёмника (всегда рейнджеры)",
              "function SpawnMerc(dword planet, dword transfer_to, int merc_type)",
              "{",
              "    //Обеспечиваем случайную расу появившегося наёмника",
              "    int planet_owner = PlanetOwner(planet);",
              "    int planet_race = PlanetRace(planet);",
              "",
              "    //Фрилансер",
              "    if(!merc_type)",
              "    {",
              "        //Определяем расу будущего наёмника",
              "        int new_planet_race = RndObject(Maloc, Gaal, planet);",
              "        PlanetOwner(planet, new_planet_race);",
              "        PlanetRace(planet, new_planet_race);",
              "        //Проверка на \"таухитовую\" заразу",
              "        if(CurTurn() < 666)",
              "        {",
              "            if(!(CurTurn() % 6))",
              "            {",
              "                if(new_planet_race == People)",
              "                {",
              "                    while(new_planet_race == People) new_planet_race = RndObject(0, 4, planet);",
              "                }",
              "            }",
              "        }",
              "",
              "        dword ship = BuyRanger(planet, 400 + 200 * GTL);",
              "        RangerExcludedFromRating(ship, 1);",
              "        ShipJoinToScript(ship, 'Mod_ShuMercs.FreeMercs');",
              "        SetData(CurTurn() + RndObject(60, 90, ship), 3, ship); //Ход, когда наёмник должен будет вернуться в свой штаб для перегруппировки (фрилансер всегда возвращаться на ЦН)",
              "        ShipType(ship, 'Freelancer');",
              "",
              "        dword hull = ShipItems(ship, 0);",
              "        HullSeries(hull, -1);",
              "        ItemSize(hull, max(ItemSize(hull), 100 * GTL, 230)); //Ограничение, чтобы на поздних ГТУ не спавнились совсем уж утырки (акрин срежет 20%)",
              "        ItemSize(hull, ItemSize(hull) + RndObject(-10, 10, ship));",
              "        HullHP(hull, 'To100');",
              "        SpecialToEquipment(FindBonusByCustomTag('ShuMercs_FreeMerc_Race' + new_planet_race), hull);",
              "        //EqCustomFaction(hull, 'SubFactionFreelancersFixedStanding');",
              "        Chameleon(ship);",
              "",
              "        ShipOwner(ship, ShipOwner(transfer_to));",
              "",
              "        ShipCustomFaction(ship, 'SubFactionFreelancersFixedStanding');",
              "        ShipStanding(ship, 5); //Выставляем фрилансеру полный нейтралитет в конфликте Коалиции и пиратов",
              "",
              "        //Вручную корректируем характер наёмника",
              "        ShipStatus(ship, 0, 15); //Торговец",
              "        ShipStatus(ship, 1, 42); //Пират",
              "        ShipStatus(ship, 2, 43); //Воин",
              "        //\"Внутренний\" неизменный характер - \"Воин\"",
              "        ShipSubType(ship, 2);",
              "",
              "        //Приставка имени организации наёмника зависит от расы пилота",
              "        //SetName(ship, PlayerHQMainArray['Main', 'OrganisationName'] + ' ' + ShipName(ship));",
              "    }",
              "    //Топор",
              "    else if(merc_type == 1)",
              "    {",
              "        new_planet_race = Maloc;",
              "        PlanetOwner(planet, new_planet_race);",
              "        PlanetRace(planet, new_planet_race);",
              "",
              "        ship = BuyRanger(planet, 400 + 200 * GTL);",
              "        RangerExcludedFromRating(ship, 1);",
              "        ShipJoinToScript(ship, 'Mod_ShuMercs.RedAxesMercs');",
              "        SetData(CurTurn() + RndObject(60, 90, ship), 3, ship); //Ход, когда наёмник должен будет вернуться в свой штаб для перегруппировки",
              "        ShipType(ship, 'Merc');",
              "",
              "        hull = ShipItems(ship, 0);",
              "        HullSeries(hull, -1);",
              "        ItemSize(hull, max(ItemSize(hull), 100 * GTL, 230)); //Ограничение, чтобы на поздних ГТУ не спавнились совсем уж утырки (акрин срежет 20%)",
              "        ItemSize(hull, ItemSize(hull) + RndObject(-10, 10, ship));",
              "        HullHP(hull, 'To100');",
              "        SpecialToEquipment(FindBonusByCustomTag('ShuMercs_Merc_Race' + new_planet_race), hull);",
              "        str faction = 'SubFactionRedAxesFixedStanding';",
              "        Chameleon(ship);",
              "",
              "        ShipOwner(ship, ShipOwner(transfer_to));",
              "",
              "        ShipCustomFaction(ship, 'SubFactionRedAxesFixedStanding');",
              "        ShipStanding(ship, 5); //Neutral",
              "        //ShipStanding(ship, 6); //PiratePassive",
              "",
              "        //Вручную корректируем характер наёмника",
              "        ShipStatus(ship, 0, 0); //Торговец",
              "        ShipStatus(ship, 1, 75); //Пират",
              "        ShipStatus(ship, 2, 25); //Воин",
              "        //\"Внутренний\" неизменный характер - \"Пират\"",
              "        ShipSubType(ship, 1);",
              "",
              "        //Приставка имени организации наёмника зависит от расы пилота",
              "        //SetName(ship, PlayerHQMainArray['Main', 'OrganisationName'] + ' ' + ShipName(ship));",
              "    }",
              "    //Атлант",
              "    else if(merc_type == 2)",
              "    {",
              "        //Определяем расу будущего наёмника",
              "        new_planet_race = RndObject(Peleng, People, planet);",
              "        PlanetOwner(planet, new_planet_race);",
              "        PlanetRace(planet, new_planet_race);",
              "        //Проверка на \"таухитовую\" заразу",
              "        if(CurTurn() < 666)",
              "        {",
              "            if(!(CurTurn() % 6))",
              "            {",
              "                if(new_planet_race == People) new_planet_race = Peleng;",
              "            }",
              "        }",
              "",
              "        ship = BuyRanger(planet, 400 + 200 * GTL);",
              "        RangerExcludedFromRating(ship, 1);",
              "        ShipJoinToScript(ship, 'Mod_ShuMercs.AtlantMercs');",
              "        SetData(CurTurn() + RndObject(60, 90, ship), 3, ship); //Ход, когда наёмник должен будет вернуться в свой штаб для перегруппировки",
              "        ShipType(ship, 'Merc');",
              "",
              "        hull = ShipItems(ship, 0);",
              "        HullSeries(hull, -1);",
              "        ItemSize(hull, max(ItemSize(hull), 100 * GTL, 230)); //Ограничение, чтобы на поздних ГТУ не спавнились совсем уж утырки (акрин срежет 20%)",
              "        ItemSize(hull, ItemSize(hull) + RndObject(-10, 10, ship));",
              "        HullHP(hull, 'To100');",
              "        SpecialToEquipment(FindBonusByCustomTag('ShuMercs_Merc_Race' + new_planet_race), hull);",
              "        faction = 'SubFactionAtlantFixedStanding';",
              "        Chameleon(ship);",
              "",
              "        ShipOwner(ship, ShipOwner(transfer_to));",
              "",
              "        ShipCustomFaction(ship, 'SubFactionAtlantFixedStanding');",
              "        ShipStanding(ship, 5); //Neutral",
              "        //ShipStanding(ship, 4); //CoalPassive",
              "",
              "        if(new_planet_race == People)",
              "        {",
              "            //Вручную корректируем характер наёмника",
              "            ShipStatus(ship, 0, 35); //Торговец",
              "            ShipStatus(ship, 1, 25); //Пират",
              "            ShipStatus(ship, 2, 40); //Воин",
              "            //\"Внутренний\" неизменный характер - \"Торговец\"",
              "            ShipSubType(ship, 1);",
              "        }",
              "        else //if(new_planet_race == Peleng)",
              "        {",
              "            //Вручную корректируем характер наёмника",
              "            ShipStatus(ship, 0, 40); //Торговец",
              "            ShipStatus(ship, 1, 30); //Пират",
              "            ShipStatus(ship, 2, 30); //Воин",
              "            //\"Внутренний\" неизменный характер - \"Торговец\"",
              "            ShipSubType(ship, 1);",
              "        }",
              "",
              "        //Приставка имени организации наёмника зависит от расы пилота",
              "        //SetName(ship, PlayerHQMainArray['Main', 'OrganisationName'] + ' ' + ShipName(ship));",
              "    }",
              "    //Фэй",
              "    else if(merc_type == 3)",
              "    {",
              "        new_planet_race = Fei;",
              "        PlanetOwner(planet, new_planet_race);",
              "        PlanetRace(planet, new_planet_race);",
              "",
              "        ship = BuyRanger(planet, 400 + 200 * GTL);",
              "        RangerExcludedFromRating(ship, 1);",
              "        ShipJoinToScript(ship, 'Mod_ShuMercs.FaeyangelionMercs');",
              "        SetData(CurTurn() + RndObject(60, 90, ship), 3, ship); //Ход, когда наёмник должен будет вернуться в свой штаб для перегруппировки",
              "        ShipType(ship, 'Merc');",
              "",
              "        hull = ShipItems(ship, 0);",
              "        HullSeries(hull, -1);",
              "        ItemSize(hull, max(ItemSize(hull), 100 * GTL, 230)); //Ограничение, чтобы на поздних ГТУ не спавнились совсем уж утырки (акрин срежет 20%)",
              "        ItemSize(hull, ItemSize(hull) + RndObject(-10, 10, ship));",
              "        HullHP(hull, 'To100');",
              "        SpecialToEquipment(FindBonusByCustomTag('ShuMercs_Merc_Race' + new_planet_race), hull);",
              "        faction = 'SubFactionFaeyangelionFixedStanding';",
              "        Chameleon(ship);",
              "",
              "        ShipOwner(ship, ShipOwner(transfer_to));",
              "",
              "        ShipCustomFaction(ship, 'SubFactionFaeyangelionFixedStanding');",
              "        ShipStanding(ship, 5); //Neutral",
              "",
              "        //Вручную корректируем характер наёмника",
              "        ShipStatus(ship, 0, 0); //Торговец",
              "        ShipStatus(ship, 1, 15); //Пират",
              "        ShipStatus(ship, 2, 85); //Воин",
              "        //\"Внутренний\" неизменный характер - \"Воин\"",
              "        ShipSubType(ship, 2);",
              "",
              "        //Приставка имени организации наёмника зависит от расы пилота",
              "        //SetName(ship, PlayerHQMainArray['Main', 'OrganisationName'] + ' ' + ShipName(ship));",
              "    }",
              "",
              "    if(IsScriptActive('Mod_EvoTranc'))",
              "    {",
              "        //Имеется шанс на выдачу наёмнику своего транка (нет)",
              "        if(0)",
              "        {",
              "            if(RndObject(1, 100, ship) <= 20)",
              "            {",
              "                int trancs_num = 1;",
              "                //Строка с Id всех имеющихся у хозяина транклюкаторов, вид: Id,Id,Id,Id,Id,Id",
              "                str trancs_str1 = '';",
              "                //Строка вида 'NNYRRN' о запущенных транклюкаторах: Y/N/R (Yes - запущен/No - не запущен/Return - возвращается)",
              "                str trancs_str2 = '';",
              "                //Статус всех транков (6 цифр): Z - транка в трюме нет, N - транк в порядке, R - нужен ремонт, U - транк устарел",
              "                str trancs_str3 = '';",
              "",
              "                //Увеличиваем навык техники корабля, если его недостаточно для владения указанным числом транклюкаторов",
              "                if(ShipSkill(ship, 2) < trancs_num) ShipSkill(ship, 2, trancs_num);",
              "                //Создаём транклюкаторов",
              "                for(int i = 1; i <= trancs_num; i = i + 1)",
              "                {",
              "                    dword art_tranc = CreateArt(t_ArtefactTranclucator, Peleng);",
              "                    dword tranc = ArtTranclucatorToShip(art_tranc);",
              "                    ItemSize(art_tranc, ItemSize(art_tranc) + RndObject(-9, 25, tranc));",
              "                    TranclucatorData(tranc, 'ArtSize', ItemSize(art_tranc));",
              "                    TranclucatorData(tranc, 'Proprietor', ship);",
              "                    AddItemToShip(ship, art_tranc);",
              "                    NoDropItem(art_tranc, 1);",
              "",
              "                    dword tranc_hull = ShipItems(tranc, 0);",
              "                    int tranc_hull_lvl = ItemLevel(tranc_hull);",
              "                    //Слот радара (открываем с некоторым шансом)",
              "                    // if(tranc_hull_lvl >= 3)",
              "                    // {",
              "                        // if(RndObject(1, 100, tranc) <= tranc_hull_lvl + 9) //Бросок на шанс",
              "                        // {",
              "                            // ItemExtraSpecialsAddByType(tranc_hull, FindBonusByNameInCfg('EvoTranc_TrancAddSlotRadar'));",
              "                            // ItemSize(tranc_hull, ItemSize(tranc_hull) - 25);",
              "                            // ItemCost(tranc_hull, round(1.07 * ItemCost(tranc_hull)));",
              "                        // }",
              "                    // }",
              "                    //Слот сканера (открываем с некоторым шансом)",
              "                    // if(tranc_hull_lvl >= 3)",
              "                    // {",
              "                        // if(RndObject(1, 100, tranc) <= tranc_hull_lvl + 3) //Бросок на шанс",
              "                        // {",
              "                            // ItemExtraSpecialsAddByType(tranc_hull, FindBonusByNameInCfg('EvoTranc_TrancAddSlotScaner'));",
              "                            // ItemSize(tranc_hull, ItemSize(tranc_hull) - 25);",
              "                            // ItemCost(tranc_hull, round(1.04 * ItemCost(tranc_hull)));",
              "                        // }",
              "                    // }",
              "",
              "                    //Слот форсажа (открываем с некоторым шансом)",
              "                    // if(tranc_hull_lvl >= 4)",
              "                    // {",
              "                        // if(RndObject(1, 100, tranc) <= tranc_hull_lvl - 1) //Бросок на шанс",
              "                        // {",
              "                            // ItemExtraSpecialsAddByType(tranc_hull, FindBonusByNameInCfg('EvoTranc_TrancAddSlotForsage'));",
              "                            // ItemSize(tranc_hull, ItemSize(tranc_hull) - 25);",
              "                            // ItemCost(tranc_hull, round(1.07 * ItemCost(tranc_hull)));",
              "                        // }",
              "                    // }",
              "",
              "                    ShipMoney(tranc, ShipMoney(ship) * 2);",
              "                    ShipRefit(tranc);",
              "                    ShipRefit(tranc);",
              "                    ShipMoney(tranc, 0);",
              "                    ShipImproveItems(tranc, RndObject(2, 4, tranc));",
              "",
              "                    //Установка фейкового навигационного компьютера (является лишь маркером и не несёт в себе исполняемого акткода)",
              "                    // if(tranc_hull_lvl >= 3)",
              "                    // {",
              "                        // if(RndObject(1, 100, tranc) <= 45)",
              "                        // {",
              "                            // ShipAddCustomShipInfo(tranc, 'TrancFakeNavComputerInfo');",
              "                            // ItemCost(tranc_hull, round(1.15 * ItemCost(tranc_hull)));",
              "                        // }",
              "                    // }",
              "",
              "                    //Устраняем возможный обвес транклюкатора",
              "                    FixOverweight(tranc);",
              "",
              "                    //Перекраска транка в цвет организации",
              "                    EqCustomFaction(art_tranc, 'SubFactionPlayerMercsFixedStanding');",
              "                    ShipJoin(PlayerOrgTrancs, tranc);",
              "                    ShipCustomFaction(tranc, 'SubFactionPlayerMercsFixedStanding');",
              "                    ShipAddCustomShipInfo(tranc, 'ShuMercsHQ_PlayerOrgTrancInfo');",
              "                    Chameleon(tranc, 'Ship.TranclucatorCyan');",
              "                    EquipmentImageName(tranc, 'ArtTranclucatorCyan');",
              "                    EquipmentImageName(art_tranc, 'ArtTranclucatorCyan');",
              "",
              "                    //Шанс на переименование транка",
              "                    if(RndObject(1, 100, ship) <= 93)",
              "                    {",
              "                        //Выбираем неповторяющееся имя (вплоть до N уникальных имён подряд, после чего могут начать повторяться)",
              "                        int names_count = CT('ShipName.Tranclucator.Count');",
              "                        str tranc_name = CT('ShipName.Tranclucator.' + RndObject(1, names_count, ship));",
              "                        while(~findsubstr(last_spawned_tranc_names_global, '*' + tranc_name + '*')) tranc_name = CT('ShipName.Tranclucator.' + RndObject(1, names_count, ship));",
              "                        last_spawned_tranc_names_global = last_spawned_tranc_names_global + tranc_name + '*';",
              "                        //Если имён в строке скопилось слишком много, подчищаем её с конца",
              "                        if(ParsCountFromString(last_spawned_tranc_names_global, '*') > (names_count - 10 + 2)) //В строке запоминается на 10 имён меньше от их максимального числа в списке",
              "                        {",
              "                            last_spawned_tranc_names_global = SetParFromString(last_spawned_tranc_names_global, '*', 1, '');",
              "                            last_spawned_tranc_names_global = substr(last_spawned_tranc_names_global, 1);",
              "                        }",
              "                        SetName(tranc, tranc_name);",
              "                    }",
              "",
              "                    if(trancs_str1 == '') trancs_str1 = Id(tranc);",
              "                    else trancs_str1 = trancs_str1 + ',' + Id(tranc);",
              "                    trancs_str2 = trancs_str2 + 'N';",
              "                    trancs_str3 = trancs_str3 + 'N';",
              "",
              "                    //Разрешаем транку автоматически менять оборудование",
              "                    TranclucatorData(tranc, 'AutoArrange', 1);",
              "",
              "                    //Накидываем транку случайный набор навыков",
              "                    ShipSkill(tranc, 'Accuracy', RndObject(2, 4, tranc));",
              "                    ShipSkill(tranc, 'Mobility', RndObject(2, 4, tranc));",
              "                    ShipSkill(tranc, 'Technical', RndObject(2, 4, tranc));",
              "",
              "                    //Вешаем на транка инфошку подчинённого",
              "                    if(tranc_hull_lvl < 8) ShipAddCustomShipInfo(tranc, 'TrancNPCAddInfo', 'NoShow', -1, 0, 0, '', '0', 'N');",
              "                    else ShipAddCustomShipInfo(tranc, 'TrancNPCAddInfo', 'NoShow', CurTurn() + RndObject(297, 403, tranc), 0, 0, '', '', 'N');",
              "                    HullHP(tranc, ItemSize(tranc_hull));",
              "                }",
              "",
              "                //И под конец вешаем на нового хозяина его персональную инфошку",
              "                ShipAddCustomShipInfo(ship, 'TrancNPCOwnerInfo', 'NoShow', RndObject(207, 459, ship), 1, trancs_num, trancs_str1, trancs_str2, trancs_str3);",
              "                //А также добавляем ему предмет, который будет занимать место в трюме на то время, пока транклюкаторы находятся на вылете",
              "                dword filler = CreateQuestItem('WeightReserve', 0);",
              "                ItemSize(filler, 0);",
              "                AddItemToShip(ship, filler);",
              "                NoDropItem(filler, 1);",
              "                ItemIsInUse(filler, ship, 1);",
              "            }",
              "        }",
              "    }",
              "",
              "    for(i = 1; i <= 5; i = i + 1) ShipRefit(ship);",
              "",
              "    //Обновляем переменную корпуса на случай, если наёмник сменил его при рефите",
              "    hull = ShipItems(ship, 0);",
              "    EqCustomFaction(hull, faction);",
              "    NoDropItem(hull, 1);",
              "",
              "    //Накидываем ботам халявного опыта (распределяют пускай сами)",
              "    ShipFreeExp(ship, ShipFreeExp(ship) + 600 * GTL);",
              "    SetShipExpByType(ship, GetShipExpByType(ship) + 600 * GTL, 0);",
              "    //Унижаем наёмникам лидерство, чтобы они не могли нанимать другие корабли",
              "    ShipSkill(ship, 'Leadership', 0);",
              "    ShipSpecialBonuses(ship, bonSkill6, -30);",
              "    //Повышаем всем наёмникам пиратское звание до барона, чтоб, сука, уважали их тупые пираты!",
              "    RaisePirateRank(ship, 7);",
              "    //Запрещаем другим рейнджерам (и наёмникам) рэкетировать наёмников игрока",
              "    NoTargetToShip(ship, 3);",
              "",
              "    PlanetOwner(planet, planet_owner);",
              "    PlanetRace(planet, planet_race);",
              "",
              "    TransferShip(ship, transfer_to);",
              "",
              "    //Также проводим дополнительный рефит, но уже из ЦН",
              "    for(i = 1; i <= 3; i = i + 1) ShipRefit(ship);",
              "",
              "    dword radar = ShipEqInSlot(ship, t_Radar);",
              "    if(!radar) //Если тупой рейнджер установил себе всего одну пушку",
              "    {",
              "        //Выдаём ему лезку, ракетомёт или третон",
              "        radar = CreateEquipment(t_Radar, RndObject(25, 50, ship), PlanetInventionLevel(planet, 7), new_planet_race);",
              "        AddItemToShip(ship, radar);",
              "        ItemIsInUse(radar, ship, 1);",
              "        FixOverweight(ship);",
              "    }",
              "",
              "    dword gun = ShipWeapon(ship, 1);",
              "    if(ItemType(gun) == t_Weapon1) //Если тупой рейнджер снова экипировался говёным промлазером",
              "    {",
              "        FreeItem(GetItemFromShip(ship, gun));",
              "        //Выдаём ему вместо него лезку, ракетомёт или третон",
              "        gun = CreateEquipment(GetValueFromScript('', 't_Weapon' + RndObject(3, 5, ship)), RndObject(25, 50, ship), PlanetInventionLevel(planet, 7), new_planet_race);",
              "        AddItemToShip(ship, gun);",
              "    }",
              "    gun = ShipWeapon(ship, 2);",
              "    if(!gun) //Если тупой рейнджер установил себе всего одну пушку",
              "    {",
              "        //Выдаём ему лезку, ракетомёт или третон",
              "        gun = CreateEquipment(GetValueFromScript('', 't_Weapon' + RndObject(3, 5, ship)), RndObject(25, 50, ship), PlanetInventionLevel(planet, 7), new_planet_race);",
              "        AddItemToShip(ship, gun);",
              "    }",
              "",
              "    ShipImproveItems(ship, RndObject(4, 8, ship));",
              "    ArrangeItems(ship);",
              "    ShipMoney(ship, GalaxyMoney(4, new_planet_race) * 2);",
              "",
              "    result = ship;",
              "}",
              "",
              "//Функция для вывода наёмников игрока из скрипта и превращения их во фрилансеров",
              "function MakeFreelancerFromMerc(dword ship)",
              "{",
              "    OrderLock(ship, 0);",
              "    //SetName(ship, Format(ShipName(ship), PlayerHQMainArray['Main', 'OrganisationName'] + ' ', '', ''));",
              "    ShipType(ship, 'Freelancer');",
              "    ShipCustomFaction(ship, '');",
              "    ShipOwner(ship, ShipPilotRace(ship));",
              "    ShipOut(ship);",
              "    ShipJoinToScript(ship, 'Mod_ShuMercs.FreeMercs'); //Данная функция не вызовет срабатывания стейт-кода при добавлении",
              "    //ShipCustomFaction(ship, 'SubFactionFixedStanding');",
              "    ShipCustomFaction(ship, 'SubFactionFreelancersFixedStanding');",
              "    ShipStanding(ship, 5); //Выставляем фрилансеру полный нейтралитет в конфликте Коалиции и пиратов",
              "    if(!ShipInHyperSpace(ship)) ShipFreeFlight(ship);",
              "}",
              "",
              "//Функция для исправления перевеса корабля (если он есть): расширяет вместимость корпуса, повышает HP до максимума",
              "function FixOverweight(dword ship)",
              "{",
              "    ShipCalcParam(ship);",
              "    int space = ShipFreeSpace(ship);",
              "    if(space < 0)",
              "    {",
              "        dword hull = ShipItems(ship, 0);",
              "        ItemSize(hull, ItemSize(hull) + abs(space) + RndObject(1, 3, ship));",
              "        HullHP(hull, ItemSize(hull));",
              "        ShipCalcParam(ship);",
              "    }",
              "}",
              "",
              "//Функция, удаляющая из трюма корабля всё оборудование и оружие, но не удаляющая скриптовые предметы",
              "function FreeAllHoldEquipment(ship)",
              "{",
              "    for(int i = ShipItems(ship) - 1; i > 0; i = i - 1)",
              "    {",
              "        dword item = ShipItems(ship, i);",
              "        if(ItemIsInUse(item)) continue;",
              "        if(ItemType(item) < t_FuelTanks) continue;",
              "        if(ItemType(item) > t_CustomWeapon) continue;",
              "        if(ItemInScript(item) == 1) continue;",
              "        FreeItem(GetItemFromShip(ship, i));",
              "    }",
              "}",
              "",
              "//Позже убрать этот позор нафиг, добавил его временно, пока система учётов атак и рейдов не переделана нормально (Klaxons)",
              "function ShipsInRaid(int ship_num = -1)",
              "{",
              "    int ships_count = 0;",
              "    for(int j = 0; j < 4; j = j + 1)",
              "    {",
              "        if(!j) int group = FreeMercs;",
              "        else if(j == 1) group = RedAxesMercs;",
              "        else if(j == 2) group = AtlantMercs;",
              "        else group = FaeyangelionMercs;",
              "",
              "        for(int i = 0; i < GroupCount(group); i = i + 1)",
              "        {",
              "            dword ship = GroupShip(group, i);",
              "            if(StateIs(ship, 'RaidTakeoff', 'RaidJump', 'RaidAct', 'RaidReturn', 'RaidLand'))",
              "            {",
              "                if(~ship_num)",
              "                {",
              "                    if(ship_num == ships_count)",
              "                    {",
              "                        result = ship;",
              "                        exit;",
              "                    }",
              "                }",
              "                ships_count = ships_count + 1;",
              "            }",
              "        }",
              "    }",
              "",
              "    result = ships_count;",
              "}",
              "",
              "function ShipsInAttack(int ship_num = -1)",
              "{",
              "    int ships_count = 0;",
              "    for(int j = 0; j < 4; j = j + 1)",
              "    {",
              "        if(!j) int group = FreeMercs;",
              "        else if(j == 1) group = RedAxesMercs;",
              "        else if(j == 2) group = AtlantMercs;",
              "        else group = FaeyangelionMercs;",
              "",
              "        for(int i = 0; i < GroupCount(group); i = i + 1)",
              "        {",
              "            dword ship = GroupShip(group, i);",
              "            if(StateIs(ship, 'AttackTakeoff', 'AttackJump', 'AttackMain'))",
              "            {",
              "                if(~ship_num)",
              "                {",
              "                    if(ship_num == ships_count)",
              "                    {",
              "                        result = ship;",
              "                        exit;",
              "                    }",
              "                }",
              "                ships_count = ships_count + 1;",
              "            }",
              "        }",
              "    }",
              "",
              "    result = ships_count;",
              "}",
              "",
              "function SpawnMercCenter(dword star)",
              "{",
              "    dword merc_center = BuildCustomRuins(star, 'MB', 5);",
              "    ShipType(merc_center, 'MB');",
              "    Chameleon(merc_center, 'Ruins.MB');",
              "",
              "    SetName(merc_center, CT('Script.Mod_ShuMercs.MercOrganisationsData.MercCenterName' + RndObject(1, 5, merc_center)));",
              "    ShipPilotRace(merc_center, People);",
              "    ShipOwner(merc_center, People);",
              "    ItemSize(ShipItems(merc_center, 0), RndObject(3500, 5500, merc_center));",
              "    HullHP(merc_center, 'To100');",
              "",
              "    ShipSpecialBonuses(merc_center, bonWRadius, 150);",
              "    ShipSpecialBonuses(merc_center, bonHull, 5);",
              "    ShipSpecialBonuses(merc_center, bonDroid, 20);",
              "    ShipSpecialBonuses(merc_center, bonDef, 5);",
              "    ShipSkill(merc_center, 0, 6);",
              "    ShipSkill(merc_center, 1, 0);",
              "",
              "    dword planet = FindPlanetByAdvancement(100, -1);",
              "    int orig_race = PlanetRace(planet);",
              "    int orig_owner = PlanetOwner(planet);",
              "    PlanetRace(planet, People);",
              "    PlanetOwner(planet, People);",
              "",
              "    int coordX = CoordX(merc_center);",
              "    int coordY = CoordY(merc_center);",
              "    TransferShip(merc_center, planet);",
              "    ShipMoney(merc_center, 100000000);",
              "    ShipRefit(merc_center);",
              "    ShipRefit(merc_center);",
              "    ShipRefit(merc_center);",
              "    ShipRefit(merc_center);",
              "    ShipRefit(merc_center);",
              "    TransferShip(merc_center, star);",
              "    CoordX(merc_center, coordX);",
              "    CoordY(merc_center, coordY);",
              "    ShipMoney(merc_center, 0);",
              "    ArrangeItems(merc_center);",
              "    ShipImproveItems(merc_center, 15);",
              "",
              "    PlanetRace(planet, orig_race);",
              "    PlanetOwner(planet, orig_owner);",
              "",
              "    //Чтобы можно было быстро находить ЦН из других модов",
              "    //MercCenterId = Id(merc_center);",
              "    MercOrganisationsData['MercCenterId'] = Id(merc_center);",
              "",
              "    result = merc_center;",
              "}",
              "",
              "function SpawnMercHQ(dword star, str org = 'RedAxes')",
              "{",
              "    dword HQ = BuildCustomRuins(star, org + 'HQ', 5);",
              "    Chameleon(HQ, 'Ruins.' + org + 'HQ'); //Вешаем хамелеон, чтобы запретить последующие автоматические сбросы графики, как, например, при исцелении святого фанатизма",
              "    MercOrganisationsData[org, 'HQId'] = Id(HQ);",
              "    ShipType(HQ, 'MercHQ');",
              "",
              "    dword hull = ShipItems(HQ, 0);",
              "",
              "    if(org == 'RedAxes')",
              "    {",
              "        ItemOwner(hull, Maloc);",
              "        EqCustomFaction(hull, 'SubFactionRedAxesFixedStanding');",
              "        ShipPilotRace(HQ, Maloc);",
              "        SetName(HQ, CT('ShipType.TypeName.MercHQNames.' + org));",
              "        ItemSize(hull, round(1.85 * ItemSize(hull)));",
              "        ShipSkill(HQ, 'Accuracy', 6);",
              "        ShipSkill(HQ, 'Mobility', 6);",
              "        ShipSkill(HQ, 'Technical', 0);",
              "",
              "        ShipSpecialBonuses(HQ, bonWEnergy, 75);",
              "        ShipSpecialBonuses(HQ, bonWSplinter, 125);",
              "        ShipSpecialBonuses(HQ, bonWMissile, 25);",
              "        ShipSpecialBonuses(HQ, bonHull, 15);",
              "        ShipSpecialBonuses(HQ, bonDroid, 25);",
              "",
              "        int buy_race = Maloc;",
              "    }",
              "    else if(org == 'Atlant')",
              "    {",
              "        ItemOwner(hull, Peleng);",
              "        EqCustomFaction(hull, 'SubFactionAtlantFixedStanding');",
              "        ShipPilotRace(HQ, Peleng);",
              "        SetName(HQ, CT('ShipType.TypeName.MercHQNames.' + org));",
              "        ItemSize(hull, round(1.5 * ItemSize(hull)));",
              "        ShipSkill(HQ, 'Accuracy', 6);",
              "        ShipSkill(HQ, 'Mobility', 3);",
              "        ShipSkill(HQ, 'Technical', 3);",
              "        ShipSkill(HQ, 'Trader', 6);",
              "",
              "        ShipSpecialBonuses(HQ, bonWEnergy, 50);",
              "        ShipSpecialBonuses(HQ, bonWSplinter, 50);",
              "        ShipSpecialBonuses(HQ, bonWMissile, 50);",
              "        ShipSpecialBonuses(HQ, bonWRadius, 125);",
              "        ShipSpecialBonuses(HQ, bonHull, 10);",
              "        ShipSpecialBonuses(HQ, bonDef, 10);",
              "        ShipSpecialBonuses(HQ, bonDroid, 25);",
              "",
              "        buy_race = Peleng;",
              "    }",
              "    else //if(org == 'Faeyangelion')",
              "    {",
              "        ItemOwner(hull, Fei);",
              "        EqCustomFaction(hull, 'SubFactionFaeyangelionFixedStanding');",
              "        ShipPilotRace(HQ, Fei);",
              "        SetName(HQ, CT('ShipType.TypeName.MercHQNames.' + org));",
              "        ItemSize(hull, round(1.25 * ItemSize(hull)));",
              "        ShipSkill(HQ, 'Accuracy', 6);",
              "        ShipSkill(HQ, 'Mobility', 0);",
              "        ShipSkill(HQ, 'Technical', 6);",
              "",
              "        ShipSpecialBonuses(HQ, bonWEnergy, 100);",
              "        ShipSpecialBonuses(HQ, bonWMissile, 50);",
              "        ShipSpecialBonuses(HQ, bonWRadius, 250);",
              "        ShipSpecialBonuses(HQ, bonDef, 25);",
              "        ShipSpecialBonuses(HQ, bonDroid, 50);",
              "",
              "        buy_race = Fei;",
              "    }",
              "",
              "    HullHP(hull, 'To100');",
              "",
              "    dword planet = FindPlanetByAdvancement(100, -1);",
              "    int orig_race = PlanetRace(planet);",
              "    int orig_owner = PlanetOwner(planet);",
              "    PlanetRace(planet, buy_race);",
              "    PlanetOwner(planet, buy_race);",
              "",
              "    int coordX = CoordX(HQ);",
              "    int coordY = CoordY(HQ);",
              "    TransferShip(HQ, planet);",
              "    ShipMoney(HQ, 100000000);",
              "    ShipRefit(HQ);",
              "    ShipRefit(HQ);",
              "    ShipRefit(HQ);",
              "    ShipRefit(HQ);",
              "    TransferShip(HQ, star);",
              "    CoordX(HQ, coordX);",
              "    CoordY(HQ, coordY);",
              "    ShipMoney(HQ, 0);",
              "    ArrangeItems(HQ);",
              "    ShipImproveItems(HQ, 10);",
              "",
              "    PlanetRace(planet, orig_race);",
              "    PlanetOwner(planet, orig_owner);",
              "",
              "    //Блочим обновление магазина товаров и магазина оборудования (временно)",
              "    NoShopUpdate(HQ, 1);",
              "    for(int i = t_Food; i <= t_Narcotics; i = i + 1) GoodsAdd(HQ, i, -GoodsAdd(HQ, i, 0));",
              "    for(i = ShopItems(HQ) - 1; i >= 0; i = i - 1) FreeItem(GetItemFromShop(HQ, i));",
              "    //Удаляем захват станции, чтобы та не могла захватывать астероиды и выставлять их на продажу в магазин товаров",
              "    if(ShipEqInSlot(HQ, t_CargoHook)) FreeItem(GetItemFromShip(HQ, ShipEqInSlot(HQ, t_CargoHook)));",
              "",
              "    result = HQ;",
              "}",
              "",
              "function MercCenterActCode() //t_OnDeath",
              "{",
              "    MercOrganisationsData['MercCenterId'] = 0;",
              "    MercOrganisationsData['MercCenterRespawnDay'] = CurTurn() + RndObject(333, 555, ScriptItemActShip());",
              "",
              "    //Спасаем лидеров, если те находятся в ЦН",
              "    if(GroupIn(RedAxesLeader, ScriptItemActShip()))",
              "    {",
              "        if(GroupCount(RedAxesHQ)) TransferShip(GroupToShip(RedAxesLeader), GroupToShip(RedAxesHQ)); //В штаб \"Ржавых топоров\"",
              "        else TransferShip(GroupToShip(RedAxesLeader), StarPlanets(GalaxyStar(People), 0)); //На Меркурий",
              "    }",
              "    if(GroupIn(AtlantLeader, ScriptItemActShip()))",
              "    {",
              "        if(GroupCount(AtlantHQ)) TransferShip(GroupToShip(AtlantLeader), GroupToShip(AtlantHQ)); //В штаб \"Атланта\"",
              "        else TransferShip(GroupToShip(AtlantLeader), StarPlanets(GalaxyStar(People), 0)); //На Меркурий",
              "    }",
              "    if(GroupIn(FaeyangelionLeader, ScriptItemActShip()))",
              "    {",
              "        if(GroupCount(FaeyangelionHQ)) TransferShip(GroupToShip(FaeyangelionLeader), GroupToShip(FaeyangelionHQ)); //В штаб \"Фэйенгелиона\"",
              "        else TransferShip(GroupToShip(FaeyangelionLeader), StarPlanets(GalaxyStar(People), 0)); //На Меркурий",
              "    }",
              "",
              "    //Без ЦН список наград не активен",
              "    ClearHeadBountyList();",
              "}",
              "",
              "function MercHQActCode() //t_OnDeath",
              "{",
              "    dword HQ = ScriptItemActShip();",
              "",
              "    if(ShipGroup(HQ) == RedAxesHQ)",
              "    {",
              "        MercOrganisationsData['RedAxes', 'HQId'] = 0;",
              "        MercOrganisationsData['RedAxes', 'HQRespawnDay'] = CurTurn() + RndObject(125, 255, HQ);",
              "    }",
              "    else if(ShipGroup(HQ) == AtlantHQ)",
              "    {",
              "        MercOrganisationsData['Atlant', 'HQId'] = 0;",
              "        MercOrganisationsData['Atlant', 'HQRespawnDay'] = CurTurn() + RndObject(150, 300, HQ);",
              "    }",
              "    else //if(ShipGroup(HQ) == FaeyangelionHQ)",
              "    {",
              "        MercOrganisationsData['Faeyangelion', 'HQId'] = 0;",
              "        MercOrganisationsData['Faeyangelion', 'HQRespawnDay'] = CurTurn() + RndObject(175, 355, HQ);",
              "    }",
              "}",
              "",
              "//Акткод лидеров организаций наёмников",
              "function MercLeaderActCode() //t_OnStep_11, t_OnDeath",
              "{",
              "    dword leader = ScriptItemActShip();",
              "",
              "    if(ScriptItemActionType(t_OnStep))",
              "    {",
              "        dword HQ = GetShipRuins(leader);",
              "        if(HQ)",
              "        {",
              "            //Спасаем лидера с уничтоженной станции",
              "            if(HullHP(HQ) <= 0 || ShipDestroy(HQ, -1))",
              "            {",
              "                if(GroupCount(MercCenter)) TransferShip(leader, GroupToShip(MercCenter)); //В общий ЦН",
              "                else TransferShip(leader, StarPlanets(GalaxyStar(People), 0)); //На Меркурий",
              "            }",
              "        }",
              "    }",
              "    else //if(ScriptItemActionType(t_OnDeath))",
              "    {",
              "        int cur_org = ShipGroup(leader);",
              "",
              "        //Это здесь просто на всякий случай",
              "        MercOrganisationsData['NegotiationsInProgress'] = 0;",
              "        MercOrganisationsData['NegotiationsTargetSide'] = -1;",
              "",
              "        //Убит Бордюрг Ебрын",
              "        if(cur_org == RedAxesLeader)",
              "        {",
              "            MercOrganisationsData['RedAxes', 'RelationToPlayer'] = 0;",
              "            MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] = 100;",
              "",
              "            MercOrganisationsData['RedAxes', 'RecruitsReserve'] = 0;",
              "        }",
              "        //Убит Кайло Норт",
              "        else if(cur_org == AtlantLeader)",
              "        {",
              "            MercOrganisationsData['Atlant', 'RelationToPlayer'] = 0;",
              "",
              "            MercOrganisationsData['Atlant', 'RecruitsReserve'] = 0;",
              "        }",
              "        //Убит Элайма Фэй",
              "        else if(cur_org == FaeyangelionLeader)",
              "        {",
              "            MercOrganisationsData['RedAxes', 'RelationToPlayer'] = 100;",
              "            MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] = 0;",
              "",
              "            MercOrganisationsData['Faeyangelion', 'RecruitsReserve'] = 0;",
              "        }",
              "    }",
              "}",
              "",
              "function DeclareMercOrganisationsDataArray()",
              "{",
              "    ArrayDelete(MercOrganisationsData, 0);",
              "    unknown tarr = newarray(1);",
              "",
              "    //Дата следующей возможности постройки нового ЦН",
              "    //Первый всегда строится в начале партии, а последующий перезапуск случается в момент уничтожения существующего ЦН",
              "    ArrayAdd(MercOrganisationsData, 0, 'MercCenterRespawnDay');",
              "    //Также используется в ShuMercsHQ",
              "    ArrayAdd(MercOrganisationsData, 0, 'MercCenterId');",
              "    //Маркер запрошенных игроком переговоров с лидерами организаций:",
              "    //   0 - переговоры не ведутся",
              "    //   1 - переговоры запрошены, лидер готовиться к встрече с игроком",
              "    //   2 - переговоры завершились выплатой средств со стороны игрока (то есть условно успешно)",
              "    //   3 - переговоры завершились ничем",
              "    //   4 - переговоры завершились вооружённым конфликтом с лидером",
              "    ArrayAdd(MercOrganisationsData, 0, 'NegotiationsInProgress');",
              "    //С какой организацией игрок запросил переговоры",
              "    //   0 - фрилансеры (не используется)",
              "    //   1 - Ржавые топоры",
              "    //   2 - Атлант",
              "    //   3 - Фэйенгелион",
              "    ArrayAdd(MercOrganisationsData, -1, 'NegotiationsTargetSide');",
              "    //Маркер о рождении лидеров организаций наёмников, используется только потому, что тупой дабокод не умеет добавлять корабли в скрипт из иниткода",
              "    ArrayAdd(MercOrganisationsData, 0, 'MercLeadersSpawned');",
              "    //Маркер, что все лидеры организаций наёмников были убиты, используется для разовой выдачи награды игроку",
              "    ArrayAdd(MercOrganisationsData, 0, 'AllMercLeadersDead');",
              "    //Текущее число пилотов, желающих записаться в ряды наёмников-фрилансеров",
              "    ArrayAdd(MercOrganisationsData, 10, 'FreeRecruitsReserve');",
              "",
              "    //Ржавые топоры",
              "    ArrayDelete(tarr, 0);",
              "    ArrayAdd(tarr, CT('Script.Mod_ShuMercs.MercOrganisationsData.RedAxes.OrganisationName'), 'OrganisationName');",
              "    ArrayAdd(tarr, 0, 'HQId');",
              "    ArrayAdd(tarr, 0, 'HQRespawnDay');",
              "    //Отношения на экран выводим в формате 0-100, но по факту они разбиты от 0 до 1000",
              "    //(дал отдельную переменную каждой организации с целью возможной будущей реализации многосторонних переговоров)",
              "    ArrayAdd(tarr, 50, 'RelationToPlayer');",
              "    ArrayAdd(tarr, 50, 'RelationToAtlant');",
              "    ArrayAdd(tarr, 25, 'RelationToFaeyangelion');",
              "    //На время проведения переговоров отношение к игроку выбранной для переговоров организации фиксируется на нейтральной отметке, а в эту переменную запоминается предыдущее значение отношения",
              "    //(дал отдельную переменную каждой организации с целью возможной будущей реализации многосторонних переговоров)",
              "    ArrayAdd(tarr, 50, 'RelationBeforeNegotiations');",
              "    ArrayAdd(tarr, 12, 'RecruitsReserve');",
              "    ArrayAdd(tarr, 750000.0 * max(CurTurn() / 365, 1), 'CurrentBalance');",
              "    ArrayAdd(MercOrganisationsData, tarr, 'RedAxes');",
              "    tarr = newarray(1);",
              "",
              "    //Атлант",
              "    ArrayDelete(tarr, 0);",
              "    ArrayAdd(tarr, CT('Script.Mod_ShuMercs.MercOrganisationsData.Atlant.OrganisationName'), 'OrganisationName');",
              "    ArrayAdd(tarr, 0, 'HQId');",
              "    ArrayAdd(tarr, 0, 'HQRespawnDay');",
              "    //Отношения на экран выводим в формате 0-100, но по факту они разбиты от 0 до 1000",
              "    //(дал отдельную переменную каждой организации с целью возможной будущей реализации многосторонних переговоров)",
              "    ArrayAdd(tarr, 50, 'RelationToPlayer');",
              "    ArrayAdd(tarr, 50, 'RelationToRedAxes');",
              "    ArrayAdd(tarr, 50, 'RelationToFaeyangelion');",
              "    //На время проведения переговоров отношение к игроку выбранной для переговоров организации фиксируется на нейтральной отметке, а в эту переменную запоминается предыдущее значение отношения",
              "    //(дал отдельную переменную каждой организации с целью возможной будущей реализации многосторонних переговоров)",
              "    ArrayAdd(tarr, 50, 'RelationBeforeNegotiations');",
              "    ArrayAdd(tarr, 16, 'RecruitsReserve');",
              "    ArrayAdd(tarr, 1000000.0 * max(CurTurn() / 365, 1), 'CurrentBalance');",
              "    ArrayAdd(MercOrganisationsData, tarr, 'Atlant');",
              "    tarr = newarray(1);",
              "",
              "    //Фэйенгелион",
              "    ArrayDelete(tarr, 0);",
              "    ArrayAdd(tarr, CT('Script.Mod_ShuMercs.MercOrganisationsData.Faeyangelion.OrganisationName'), 'OrganisationName');",
              "    ArrayAdd(tarr, 0, 'HQId');",
              "    ArrayAdd(tarr, 0, 'HQRespawnDay');",
              "    //Отношения на экран выводим в формате 0-100, но по факту они разбиты от 0 до 1000",
              "    //(дал отдельную переменную каждой организации с целью возможной будущей реализации многосторонних переговоров)",
              "    ArrayAdd(tarr, 50, 'RelationToPlayer');",
              "    ArrayAdd(tarr, 25, 'RelationToRedAxes');",
              "    ArrayAdd(tarr, 25, 'RelationToAtlant');",
              "    //На время проведения переговоров отношение к игроку выбранной для переговоров организации фиксируется на нейтральной отметке, а в эту переменную запоминается предыдущее значение отношения",
              "    ArrayAdd(tarr, 50, 'RelationBeforeNegotiations');",
              "    ArrayAdd(tarr, 8, 'RecruitsReserve');",
              "    ArrayAdd(tarr, 1250000.0 * max(CurTurn() / 365, 1), 'CurrentBalance');",
              "    ArrayAdd(MercOrganisationsData, tarr, 'Faeyangelion');",
              "    tarr = newarray(1);",
              "}",
              "",
              "function DeclareHeadBountyList()",
              "{",
              "    ArrayDelete(HeadBountyList, 0);",
              "",
              "    //Маркер, видел ли уже игрок приветственное сообщение в ЦН, касающееся механики \"Охоты за головами\"",
              "    ArrayAdd(HeadBountyList, 0, 'DialogStatus');",
              "    //Дата следующего обновления списка",
              "    ArrayAdd(HeadBountyList, 0, 'NextUpdate');",
              "    //На сколько будет помножена награда за голову в случае доставки цели живьём",
              "    ArrayAdd(HeadBountyList, 1.5, 'AliveMultiplier');",
              "    //Количество целей в массиве ниже для удобства проверки",
              "    ArrayAdd(HeadBountyList, 0, 'TargetsCount');",
              "    //Сам список (нулевой элемент используем для записи общего количества целей)",
              "    ArrayAdd(HeadBountyList, newarray(1), 'TargetsId');",
              "    HeadBountyList['TargetsId', 0] = 0;",
              "    ArrayAdd(HeadBountyList, newarray(1), 'TargetsBounty');",
              "    HeadBountyList['TargetsBounty', 0] = 0;",
              "}",
              "",
              "function g_RemoveFromHeadBountyList(int list_id, int replace_id = 0)",
              "{",
              "    if(!list_id) throw 'list_id is null!';",
              "",
              "    for(int i = HeadBountyList['TargetsCount'] - 1; i >= 0; i = i - 1)",
              "    {",
              "        if(HeadBountyList['TargetsId', i] != list_id) continue;",
              "        if(!replace_id)",
              "        {",
              "            ArrayDelete(HeadBountyList['TargetsId'], i);",
              "            ArrayDelete(HeadBountyList['TargetsBounty'], i);",
              "            HeadBountyList['TargetsCount'] = HeadBountyList['TargetsCount'] - 1;",
              "        }",
              "        else //Считаем, что пилот типа выжил в капсуле",
              "        {",
              "            HeadBountyList['TargetsId', i] = replace_id;",
              "            break;",
              "        }",
              "",
              "        if(!HeadBountyList['TargetsCount'])",
              "        {",
              "            ArrayAdd(HeadBountyList['TargetsId'], 0);",
              "            ArrayAdd(HeadBountyList['TargetsBounty'], 0);",
              "        }",
              "        break;",
              "    }",
              "}",
              "",
              "function AddToHeadBountyList(dword target, int is_new = 1, int bounty = -1)",
              "{",
              "    if(!target) throw 'target is null!';",
              "    if(bounty == -1) bounty = RoundTo(min(ShipStrengthInAverageRanger(target) * GalaxyMoney(3, ShipPilotRace(target)), GalaxyMoney(3, ShipPilotRace(target)) * 8), 1000, 1);",
              "",
              "    if(is_new)",
              "    {",
              "        int prev_HP = HullHP(target, 'To100');",
              "        ShipCalcParam(target);",
              "",
              "        int end_date = CurTurn() + RndObject(99, 166, target);",
              "",
              "        if(ShipFindCustomShipInfoByType(target, 'ShuBounty_EscapePodEquipped') == -1) ShipAddCustomShipInfo(target, 'ShuMercs_HeadBountyInfo', 'NoShow', bounty, end_date, 0, ShortName(target), 'Dead');",
              "        else ShipAddCustomShipInfo(target, 'ShuMercs_HeadBountyInfo', 'NoShow', bounty, end_date, 0, ShortName(target), 'DeadOrAlive');",
              "",
              "        if(!HeadBountyList['TargetsCount'])",
              "        {",
              "            ArrayDelete(HeadBountyList['TargetsId'], 0);",
              "            ArrayDelete(HeadBountyList['TargetsBounty'], 0);",
              "        }",
              "",
              "        ArrayAdd(HeadBountyList['TargetsId'], int(Id(target)));",
              "        ArrayAdd(HeadBountyList['TargetsBounty'], bounty);",
              "        HeadBountyList['TargetsCount'] = HeadBountyList['TargetsCount'] + 1;",
              "",
              "        HullHP(target, prev_HP);",
              "        ShipCalcParam(target);",
              "",
              "        if(IsPlayer(target))",
              "        {",
              "            CustomEther('Galaxy', 7, '', Format(CT('Script.Mod_ShuMercs.HeadHunting.BountyOnPlayerMsg'), '<Bounty'+'>', bounty, '<EndDate'+'>', GameDateTxtByTurn(end_date), '255,240,100'));",
              "            Sound('Sound.NewMsg');",
              "        }",
              "    }",
              "    else //Если корабль уже и так в списке, то просто накручиваем награду и время",
              "    {",
              "        ShipCustomShipInfoData(target, 'ShuMercs_HeadBountyInfo', 1, ShipCustomShipInfoData(target, 'ShuMercs_HeadBountyInfo', 1) + bounty);",
              "        ShipCustomShipInfoData(target, 'ShuMercs_HeadBountyInfo', 2, ShipCustomShipInfoData(target, 'ShuMercs_HeadBountyInfo', 2) + 77); //Продляем период возможного получения награды",
              "",
              "        for(int i = HeadBountyList['TargetsCount'] - 1; i >= 0; i = i - 1)",
              "        {",
              "            if(HeadBountyList['TargetsId', i] != Id(target)) continue;",
              "            HeadBountyList['TargetsBounty', i] = HeadBountyList['TargetsBounty', i] + bounty;",
              "            break;",
              "        }",
              "    }",
              "}",
              "",
              "function UpdateHeadBountyList()",
              "{",
              "    HeadBountyList['NextUpdate'] = CurTurn() + 77;",
              "",
              "    //Не более 30 целей в списке",
              "    if(HeadBountyList['TargetsCount'] < 30)",
              "    {",
              "        unknown bountys_arr = newarray(1);",
              "        ArrayDelete(bountys_arr, 0);",
              "",
              "        if(CurTurn() >= 1395) //Первые 3 года игры игрок в безопасности (типа, ещё не прославился)",
              "        {",
              "            //Проверка на занесение в список игрока",
              "            if(ShipFindCustomShipInfoByType(Player(), 'ShuMercs_HeadBountyInfo') == -1)",
              "            {",
              "                ship = Player();",
              "",
              "                chance = 0.07 * (round(0.70 * ShipStatus(ship, 0)) + round(1.65 * ShipStatus(ship, 1)) + round(1.30 * ShipStatus(ship, 2)));",
              "",
              "                if(!RangerStatus(ship)) chance = round(1.0 * chance);",
              "                else if(RangerStatus(ship) == 1) chance = round(1.5 * chance);",
              "                else chance = round(1.25 * chance);",
              "",
              "                if(RangerStatus(ship, 'EminentWarrior')) chance = round(2.25 * chance);",
              "                if(RangerStatus(ship, 'EminentTrader')) chance = round(1.75 * chance);",
              "                if(RangerStatus(ship, 'EminentPirate')) chance = round(2.5 * chance);",
              "",
              "                //Также учитываем висящий на игроке долг",
              "                if(PlayerDebtCnt()) chance = round((1.5 + PlayerDebtCnt()) * chance);",
              "",
              "                //Вешаем на игрока инфошку цели",
              "                if(RndObject(1, 100, ship) <= chance)",
              "                {",
              "                    AddToHeadBountyList(ship);",
              "                }",
              "            }",
              "        }",
              "",
              "        BuildListOfNewShips(tarr1, Id(Player()) + 1, 30 /*2+4+8+16*/, 159 /*1+2+4+8+16+128*/, 1,",
              "                                                 ',SubFactionRedAxesFixedStanding,SubFactionAtlantFixedStanding,SubFactionFaeyangelionFixedStanding,SubFactionFreelancersFixedStanding,SubFactionPlayerMercsFixedStanding');",
              "",
              "        for(int i = ArrayDim(tarr1) - 1; i >= 0; i = i - 1)",
              "        {",
              "            dword ship = tarr1[i];",
              "            if(ShipInScript(ship, 0))",
              "            {",
              "                if(ShipCustomFaction(ship) == '') continue;",
              "                else if(ShipType(ship) == 'MercLeader' || ShipType(ship) == 'PlayerMercCruiser') continue;",
              "            }",
              "            if(Id(ShipStar(ship)) == TortugatzId || Id(ShipStar(ship)) == NifigatzId) continue;",
              "            if(ShipTypeN(ship) == t_Warrior)",
              "            {",
              "                if(ShipSubType(ship)) continue; //Пропускаем флагманы",
              "            }",
              "",
              "            int chance = 0;",
              "            if(ShipTypeN(ship) == t_Pirate)",
              "            {",
              "                if(ShipSubType(ship) == 0) chance = RndObject(5, 25, ship); //Вольный пират",
              "                else chance = RndObject(3, 18, ship); //Клановый пират",
              "            }",
              "            else if(ShipTypeN(ship) == t_Warrior)",
              "            {",
              "                chance = PortionInDiapason(ShipPilotRace(ship), Maloc, Gaal, Gaal + 1, Maloc + 1);",
              "                chance = RndObject(chance, chance * 3, ship);",
              "            }",
              "            else if(ShipTypeN(ship) == t_Ranger)",
              "            {",
              "                chance = 0.20 * (round(0.70 * ShipStatus(ship, 0)) + round(1.65 * ShipStatus(ship, 1)) + round(1.30 * ShipStatus(ship, 2)));",
              "",
              "                if(!RangerStatus(ship)) chance = round(1.0 * chance);",
              "                else if(RangerStatus(ship) == 1) chance = round(1.5 * chance);",
              "                else chance = round(1.25 * chance);",
              "",
              "                if(!RangerExcludedFromRating(ship))",
              "                {",
              "                    if(RangerStatus(ship, 'EminentWarrior')) chance = round(2.25 * chance);",
              "                    if(RangerStatus(ship, 'EminentTrader')) chance = round(1.75 * chance);",
              "                    if(RangerStatus(ship, 'EminentPirate')) chance = round(2.5 * chance);",
              "                }",
              "                //Чтобы наёмники попадали в список пореже",
              "                else if(ShipType(ship) == 'Merc' || ShipType(ship) == 'PlayerMerc') chance = chance / 2;",
              "            }",
              "            else //if(ShipTypeN(ship) == t_Transport)",
              "            {",
              "                if(ShipSubType(ship) == 0) chance = RndObject(0, 5, ship); //Транспорт",
              "                else if(ShipSubType(ship) == 1) chance = RndObject(0, 3, ship); //Лайнер",
              "                else chance = RndObject(0, 7, ship); //Дипломат",
              "            }",
              "",
              "            //Вешаем на корабль инфошку цели",
              "            if(RndObject(1, 100, ship) <= chance)",
              "            {",
              "                if(ShipFindCustomShipInfoByType(ship, 'ShuMercs_HeadBountyInfo') == -1) AddToHeadBountyList(ship, 1);",
              "                else AddToHeadBountyList(ship, 0);",
              "",
              "                if(HeadBountyList['TargetsCount'] >= 30) break;",
              "            }",
              "        }",
              "",
              "        ArraySort(HeadBountyList['TargetsBounty'], HeadBountyList['TargetsId']);",
              "    }",
              "}",
              "",
              "function ClearHeadBountyList()",
              "{",
              "    for(int i = HeadBountyList['TargetsCount'] - 1; i >= 0; i = i - 1)",
              "    {",
              "        if(HeadBountyList['TargetsId', i] > 0)",
              "        {",
              "            dword target = IdToShip(HeadBountyList['TargetsId', i]);",
              "            ShipDeleteCustomShipInfo(target, 'ShuMercs_HeadBountyInfo');",
              "        }",
              "        else",
              "        {",
              "            target = IdToItem(abs(HeadBountyList['TargetsId', i]));",
              "            ScriptItemTextData(target, 2, SetParFromString(ScriptItemTextData(target, 2), ':', 13, ''));",
              "        }",
              "    }",
              "",
              "    ArrayClear(HeadBountyList['TargetsId']);",
              "    ArrayClear(HeadBountyList['TargetsBounty']);",
              "    HeadBountyList['TargetsCount'] = 0;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  60,
          "Pos.y":  0,
          "Parent":  3,
          "#":  137,
          "Total.Lines":  872,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Каждый ход обновляем переменную с текущим ГТУ",
              "GTL = GalaxyTechLevel();",
              "if(!target_id) free_id = 0;",
              "",
              "if(CurTurn() > rospusk_raida)",
              "{",
              "    tint1 = ShipsInRaid() - 1;",
              "    check = 1;",
              "",
              "    for(i = tint1; i >= 0; i = i - 1)",
              "    {",
              "        //Если хоть один из налётчиков ещё не вернулся с рейда",
              "        if(GetShipRuins(ShipsInRaid(i)) != GroupToShip(MercCenter))",
              "        {",
              "            check = 0;",
              "            break;",
              "        }",
              "    }",
              "",
              "    //Если все выжившие налётчики уже вернулись на ЦН",
              "    if(check)",
              "    {",
              "        //Накидываем на склад ЦН добычу за каждый корабль наёмника, переживший рейд",
              "        cur_ruin = GroupToShip(MercCenter);",
              "",
              "        for(i = ShipsInRaid() - 1; i >= 0; i = i - 1)",
              "        {",
              "            cur_ship = ShipsInRaid(i);",
              "            raid_status = 2;",
              "",
              "            //Сколько добычи привёз из рейда наёмник",
              "            if(ShipPilotRace(cur_ship) == Fei) tint2 = RndObject(2, 5, cur_ship);",
              "            else tint2 = RndObject(1, 4, cur_ship);",
              "            tstr6 = '';",
              "",
              "            for(j = 0; j < tint2; j = j + 1)",
              "            {",
              "                coef = RndObject(1, 100, cur_ship);",
              "",
              "                //Если рейд был направлен на доминаторскую систему",
              "                if(subowner < 5)",
              "                {",
              "                    if(coef <= 30) cur_item = CreateNodes(RndObject(10, 60, cur_ship));",
              "                    else if(coef <= 60) cur_item = CreateEquipment(RndObject(t_FuelTanks, t_Weapon8, cur_ship), RndObject(25, 80, cur_ship), RndObject(1, GalaxyTechLevel() - 1, cur_ship), Kling);",
              "                    else cur_item = CreateQuestItem('Remains_' + RndObject(0, 8, cur_ship), Kling); //Случайный доминаторский ошмёток",
              "",
              "                    ItemSubrace(cur_item, subowner);",
              "                    tstr6 = tstr6 + Format('<br>') + '<color=255,240,100>' + Name(cur_item) + '</color>';",
              "                    AddItemToStorage(cur_ruin, cur_item);",
              "                }",
              "                //Если рейд был направлен на коалиционную систему",
              "                else if(subowner == 5)",
              "                {",
              "                    if(coef <= 20) cur_item = CreateEquipment(RndObject(t_FuelTanks, t_Weapon4, cur_ship), RndObject(30, 80, cur_ship), RndObject(1, GalaxyTechLevel() - 1, cur_ship), RndObject(0, 4, cur_ship));",
              "                    else cur_item = CreateGoods(RndObject(0, 7, cur_ship), RndObject(1, 40, cur_ship));",
              "",
              "                    tstr6 = tstr6 + Format('<br>') + '<color=255,240,100>' + Name(cur_item) + '</color>';",
              "                    AddItemToStorage(cur_ruin, cur_item);",
              "                }",
              "                //Если рейд был направлен на пиратскую систему",
              "                else if(subowner == 7)",
              "                {",
              "                    if(coef <= 20) cur_item = CreateEquipment(RndObject(t_FuelTanks, t_Weapon4, cur_ship), RndObject(30, 80, cur_ship), RndObject(1, GalaxyTechLevel() - 1, cur_ship), RndObject(0, 4, cur_ship));",
              "                    else cur_item = CreateGoods(RndObject(0, 7, cur_ship), RndObject(1, 40, cur_ship));",
              "",
              "                    tstr6 = tstr6 + Format('<br>') + '<color=255,240,100>' + Name(cur_item) + '</color>';",
              "                    AddItemToStorage(cur_ruin, cur_item);",
              "                }",
              "                //Если рейд был направлен на клисанскую систему",
              "                else if(subowner == 10)",
              "                {",
              "                    if(coef <= 60) cur_item = CreateCustomCountableItem('KlissanProtoplasm', RndObject(5, 40, cur_ship), 1);",
              "                    else cur_item = CreateQuestItem('KlissanRemains' + RndObject(1, int(CT('Script.Mod_ShuKlissan.KlissanRemainsCount')), cur_ship), None); //Случайный клисанский ошмёток",
              "                    EqCustomFaction(cur_item, 'Klissan');",
              "",
              "                    tstr6 = tstr6 + Format('<br>') + '<color=255,240,100>' + Name(cur_item) + '</color>';",
              "                    AddItemToStorage(cur_ruin, cur_item);",
              "                }",
              "            }",
              "",
              "            ShipOut(cur_ship);",
              "            ShipDestroy(cur_ship, 1);",
              "        }",
              "    }",
              "}",
              "",
              "//Узнаём, что все рейдовые наёмники были выведены из соответствующих стейтов",
              "if(raid_status)",
              "{",
              "    if(!ShipsInRaid())",
              "    {",
              "        if(raid_status == 1)",
              "        {",
              "            cur_star = GalaxyStar(raid_star);",
              "            Ether(5, '', \"Рейд на систему <Name(cur_star)> <clr>провален<clrEnd>.\");",
              "            raid_status = 0;",
              "        }",
              "        else if(raid_status == 2)",
              "        {",
              "            cur_star = GalaxyStar(raid_star);",
              "            Ether(4, '', \"Рейд на систему <Name(cur_star)> <clr>успешно завершен<clrEnd>. <br> Добыча:\" + tstr6);",
              "            raid_status = 0;",
              "        }",
              "    }",
              "}",
              "",
              "if(atlant_call < CurTurn()) atlant_call = CurTurn();",
              "if(red_call < CurTurn()) red_call = CurTurn();",
              "if(fei_call < CurTurn()) fei_call = CurTurn();",
              "",
              "//Тут единственный раз за игру спавнятся все лидеры наёмников и до поры прячутся на Меркурий",
              "if(!MercOrganisationsData['MercLeadersSpawned'])",
              "{",
              "    cur_planet = FindPlanetByAdvancement(100);",
              "    if(!cur_planet) cur_planet = FindPlanetByAdvancement(100, 2);",
              "    tint1 = PlanetRace(cur_planet);",
              "    tint2 = PlanetOwner(cur_planet);",
              "",
              "    //Бордюрг Ебрын",
              "    if(!GroupCount(RedAxesLeader))",
              "    {",
              "        PlanetRace(cur_planet, Maloc);",
              "        PlanetOwner(cur_planet, Maloc);",
              "",
              "        cur_ship = BuyRanger(cur_planet, 1000);",
              "        RangerExcludedFromRating(cur_ship, 1);",
              "",
              "        ShipTechLevelKnowledge(cur_ship, 8); //Может применять оборудку доминаторов любого ТУ",
              "",
              "        SetName(cur_ship, CT('ShipType.TypeName.MercLeaderNames.RedAxes'));",
              "        ShipAddCustomShipInfo(cur_ship, 'Red');",
              "",
              "        ShipSpecialBonuses(cur_ship, bonSlotWeapon, 10);",
              "        ShipSpecialBonuses(cur_ship, bonSlotWeapon, 10);",
              "        ShipSpecialBonuses(cur_ship, bonSlotDef, 10);",
              "        ShipSpecialBonuses(cur_ship, bonSlotDroid, 10);",
              "        ShipSpecialBonuses(cur_ship, bonSlotHook, 10);",
              "        ShipSpecialBonuses(cur_ship, bonSlotRadar, 10);",
              "        ShipSpecialBonuses(cur_ship, bonSlotScaner, 10);",
              "        ShipSpecialBonuses(cur_ship, bonSlotArt, 10);",
              "        ShipSpecialBonuses(cur_ship, bonSlotForsage, 10);",
              "",
              "        ShipSpecialBonuses(cur_ship, bonHull, 3);",
              "        ShipSpecialBonuses(cur_ship, bonDef, 15);",
              "        ShipSpecialBonuses(cur_ship, bonMass, 25);",
              "        ShipSpecialBonuses(cur_ship, bonWEnergy, 10);",
              "        ShipSpecialBonuses(cur_ship, bonWSplinter, 30);",
              "        ShipSpecialBonuses(cur_ship, bonJump, -5000);",
              "",
              "        for(i = 1; i <= 7; i = i + 1) ShipRefit(cur_ship);",
              "        for(i = 1; i <= ShipCntWeapon(cur_ship); i = i + 1) FreeItem(GetItemFromShip(cur_ship, ShipWeapon(cur_ship, i)));",
              "        ItemSize(ShipItems(cur_ship, 0), 1500);",
              "        HullHP(ShipItems(cur_ship, 0), 1500);",
              "        SpecialToEquipment(FindBonusByNameInCfg('351'), ShipItems(cur_ship, 0)); //Корпус \"Скала\"",
              "        Chameleon(cur_ship);",
              "",
              "        ShipFace(cur_ship, 5);",
              "        ShipPilotRace(cur_ship, 0);",
              "        ShipSkill(cur_ship, 0, 6);",
              "        ShipSkill(cur_ship, 1, 6);",
              "        ShipSkill(cur_ship, 2, 3);",
              "        ShipSkill(cur_ship, 3, 4);",
              "        ShipSkill(cur_ship, 4, 3);",
              "        ShipSkill(cur_ship, 5, 6);",
              "        ShipType(cur_ship, 'MercLeader');",
              "",
              "        cur_item = CreateEquipment(t_Weapon6, 20, 8, None);",
              "        AddItemToShip(cur_ship, cur_item);",
              "        cur_item = CreateEquipment(t_Weapon10, 40, 8, Kling);",
              "        AddItemToShip(cur_ship, cur_item);",
              "        cur_item = CreateEquipment(t_Weapon14, 148, 8, Kling);",
              "        AddItemToShip(cur_ship, cur_item);",
              "        cur_item = CreateEquipment(t_Weapon9, 35, 8, Kling);",
              "        AddItemToShip(cur_ship, cur_item);",
              "        cur_item = CreateEquipment(t_Weapon2, 20, 8, Maloc);",
              "        AddItemToShip(cur_ship, cur_item);",
              "",
              "        cur_item = CreateArt(t_ArtPDTurret, None);",
              "        AddItemToShip(cur_ship, cur_item);",
              "        cur_item = CreateArt(t_ArtSplinter, None);",
              "        AddItemToShip(cur_ship, cur_item);",
              "        cur_item = CreateArt(t_ArtEnergyPulse, None);",
              "        AddItemToShip(cur_ship, cur_item);",
              "        cur_item = CreateArt(t_ArtefactHull, None);",
              "        AddItemToShip(cur_ship, cur_item);",
              "",
              "        ArrangeItems(cur_ship);",
              "",
              "        ShipJoin(RedAxesLeader, cur_ship);",
              "        ShipCustomFaction(cur_ship, 'SubFactionRedAxesFixedStanding');",
              "        ShipStanding(cur_ship, 5); //Neutral",
              "        //ShipStanding(cur_ship, 6); //PiratePassive",
              "        NoTargetToShip(cur_ship, 3);",
              "",
              "        ShipOwner(cur_ship, None);",
              "        ShipImproveItems(cur_ship, 20);",
              "",
              "        ItemLevel(ShipItems(cur_ship, 0), 8);",
              "        ShipRepairEq(cur_ship);",
              "",
              "        cur_item = CreateQuestItem('Usl_74', Maloc);",
              "        ItemCost(cur_item, ItemCost(cur_item) * 10);",
              "        ShipAddDropItem(cur_ship, cur_item);",
              "",
              "        //Вручную корректируем характер наёмника",
              "        ShipStatus(cur_ship, 0, 0); //Торговец",
              "        ShipStatus(cur_ship, 1, 75); //Пират",
              "        ShipStatus(cur_ship, 2, 25); //Воин",
              "",
              "        //\"Внутренний\" неизменный характер - \"Пират\"",
              "        ShipSubType(cur_ship, 1);",
              "",
              "        TransferShip(cur_ship, StarPlanets(GalaxyStar(People), 0)); //На Меркурий",
              "        OrderLock(cur_ship, 1);",
              "    }",
              "",
              "    //Кайло Норт",
              "    if(!GroupCount(AtlantLeader))",
              "    {",
              "        PlanetRace(cur_planet, People);",
              "        PlanetOwner(cur_planet, People);",
              "",
              "        cur_ship = BuyRanger(cur_planet, 1000);",
              "        RangerExcludedFromRating(cur_ship, 1);",
              "",
              "        ShipTechLevelKnowledge(cur_ship, 8); //Может применять оборудку доминаторов любого ТУ",
              "",
              "        SetName(cur_ship, CT('ShipType.TypeName.MercLeaderNames.Atlant'));",
              "        ShipAddCustomShipInfo(cur_ship, 'Atlant');",
              "",
              "        ShipSpecialBonuses(cur_ship, bonSlotWeapon, 10);",
              "        ShipSpecialBonuses(cur_ship, bonSlotWeapon, 10);",
              "        ShipSpecialBonuses(cur_ship, bonSlotDef, 10);",
              "        ShipSpecialBonuses(cur_ship, bonSlotDroid, 10);",
              "        ShipSpecialBonuses(cur_ship, bonSlotHook, 10);",
              "        ShipSpecialBonuses(cur_ship, bonSlotRadar, 10);",
              "        ShipSpecialBonuses(cur_ship, bonSlotScaner, 10);",
              "        ShipSpecialBonuses(cur_ship, bonSlotArt, 10);",
              "        ShipSpecialBonuses(cur_ship, bonSlotForsage, 10);",
              "",
              "        for(i = 1; i <= 7; i = i + 1) ShipRefit(cur_ship);",
              "        for(i = 1; i <= ShipCntWeapon(cur_ship); i = i + 1) FreeItem(GetItemFromShip(cur_ship, ShipWeapon(cur_ship, i)));",
              "        ItemSize(ShipItems(cur_ship, 0), 1100);",
              "        HullHP(ShipItems(cur_ship, 0), 1100);",
              "        SpecialToEquipment(FindBonusByNameInCfg('350'), ShipItems(cur_ship, 0)); //Корпус \"Убийца\"",
              "        Chameleon(cur_ship);",
              "        ShipFace(cur_ship, 2);",
              "",
              "        ShipSkill(cur_ship, 0, 6);",
              "        ShipSkill(cur_ship, 1, 4);",
              "        ShipSkill(cur_ship, 2, 5);",
              "        ShipSkill(cur_ship, 3, 5);",
              "        ShipSkill(cur_ship, 4, 6);",
              "        ShipSkill(cur_ship, 5, 6);",
              "        ShipType(cur_ship, 'MercLeader');",
              "",
              "        cur_item = CreateEquipment(t_Weapon12, 50, 8, Kling);",
              "        AddItemToShip(cur_ship, cur_item);",
              "        cur_item = CreateEquipment(t_Weapon16, 10, 8, PirateClan);",
              "        AddItemToShip(cur_ship, cur_item);",
              "        cur_item = CreateEquipment(t_Weapon13, 128, 6, Kling);",
              "        AddItemToShip(cur_ship, cur_item);",
              "        cur_item = CreateEquipment(t_Weapon5, 15, 8, Peleng);",
              "        AddItemToShip(cur_ship, cur_item);",
              "        cur_item = CreateEquipment(t_Weapon8, 15, 7, None);",
              "        AddItemToShip(cur_ship, cur_item);",
              "",
              "        cur_item = CreateArt(t_ArtefactAntigrav, None);",
              "        AddItemToShip(cur_ship, cur_item);",
              "        cur_item = CreateArt(t_ArtSplinter, None);",
              "        AddItemToShip(cur_ship, cur_item);",
              "        cur_item = CreateArt(t_ArtEnergyPulse, None);",
              "        AddItemToShip(cur_ship, cur_item);",
              "        cur_item = CreateArt(t_ArtefactDroid, None);",
              "        AddItemToShip(cur_ship, cur_item);",
              "",
              "        ArrangeItems(cur_ship);",
              "        ShipSpecialBonuses(cur_ship, bonWEnergy, 20);",
              "        ShipSpecialBonuses(cur_ship, bonWSplinter, 40);",
              "        ShipSpecialBonuses(cur_ship, bonJump, -5000);",
              "",
              "        ShipJoin(AtlantLeader, cur_ship);",
              "        ShipCustomFaction(cur_ship, 'SubFactionAtlantFixedStanding');",
              "        ShipStanding(cur_ship, 5); //Neutral",
              "        //ShipStanding(cur_ship, 4); //CoalPassive",
              "        NoTargetToShip(cur_ship, 3);",
              "        ShipOwner(cur_ship, None);",
              "",
              "        ShipImproveItems(cur_ship, 20);",
              "",
              "        ItemLevel(ShipItems(cur_ship, 0), 8);",
              "        cur_item = CreateQuestItem('Usl_74', People);",
              "        ItemCost(cur_item, ItemCost(cur_item) * 9);",
              "        ShipAddDropItem(cur_ship, cur_item);",
              "",
              "        //Вручную корректируем характер наёмника",
              "        ShipStatus(cur_ship, 0, 35); //Торговец",
              "        ShipStatus(cur_ship, 1, 25); //Пират",
              "        ShipStatus(cur_ship, 2, 40); //Воин",
              "",
              "        //\"Внутренний\" неизменный характер - \"Торговец\"",
              "        ShipSubType(cur_ship, 0);",
              "",
              "        TransferShip(cur_ship, StarPlanets(GalaxyStar(People), 0)); //На Меркурий",
              "        OrderLock(cur_ship, 1);",
              "    }",
              "",
              "    //Элайма Фэй",
              "    if(!GroupCount(FaeyangelionLeader))",
              "    {",
              "        PlanetRace(cur_planet, Fei);",
              "        PlanetOwner(cur_planet, Fei);",
              "",
              "        cur_ship = BuyRanger(cur_planet, 1000);",
              "        RangerExcludedFromRating(cur_ship, 1);",
              "",
              "        ShipTechLevelKnowledge(cur_ship, 8); //Может применять оборудку доминаторов любого ТУ",
              "",
              "        ShipSpecialBonuses(cur_ship, bonSlotWeapon, 10);",
              "        ShipSpecialBonuses(cur_ship, bonSlotWeapon, 10);",
              "        ShipSpecialBonuses(cur_ship, bonSlotDef, 10);",
              "        ShipSpecialBonuses(cur_ship, bonSlotDroid, 10);",
              "        ShipSpecialBonuses(cur_ship, bonSlotHook, 10);",
              "        ShipSpecialBonuses(cur_ship, bonSlotRadar, 10);",
              "        ShipSpecialBonuses(cur_ship, bonSlotScaner, 10);",
              "        ShipSpecialBonuses(cur_ship, bonSlotArt, 10);",
              "        ShipSpecialBonuses(cur_ship, bonSlotForsage, 10);",
              "",
              "        SetName(cur_ship, CT('ShipType.TypeName.MercLeaderNames.Faeyangelion'));",
              "        ShipAddCustomShipInfo(cur_ship,'Fei');",
              "",
              "        for(i = 1; i <= 7; i = i + 1) ShipRefit(cur_ship);",
              "        for(i = 1; i <= ShipCntWeapon(cur_ship); i = i + 1) FreeItem(GetItemFromShip(cur_ship, ShipWeapon(cur_ship, i)));",
              "",
              "        ItemSize(ShipItems(cur_ship, 0), 1000);",
              "        HullHP(ShipItems(cur_ship, 0), 1000);",
              "        SpecialToEquipment(FindBonusByNameInCfg('352'), ShipItems(cur_ship, 0)); //Корпус \"Болид\"",
              "        Chameleon(cur_ship);",
              "        ShipFace(cur_ship, 10);",
              "        ShipType(cur_ship, 'MercLeader');",
              "",
              "        ShipSkill(cur_ship, 0, 4);",
              "        ShipSkill(cur_ship, 1, 5);",
              "        ShipSkill(cur_ship, 2, 6);",
              "        ShipSkill(cur_ship, 3, 6);",
              "        ShipSkill(cur_ship, 4, 5);",
              "        ShipSkill(cur_ship, 5, 6);",
              "",
              "        cur_item = CreateEquipment(t_Weapon11, 45, 8, Fei);",
              "        AddItemToShip(cur_ship, cur_item);",
              "        cur_item = CreateEquipment(t_Weapon10, 40, 8, Fei);",
              "        AddItemToShip(cur_ship, cur_item);",
              "        cur_item = CreateEquipment(t_Weapon9, 35, 8, Fei);",
              "        AddItemToShip(cur_ship, cur_item);",
              "        cur_item = CreateEquipment(t_Weapon12, 50, 8, Fei);",
              "        AddItemToShip(cur_ship, cur_item);",
              "        cur_item = CreateEquipment(t_Weapon12, 50, 8, Fei);",
              "        AddItemToShip(cur_ship, cur_item);",
              "",
              "        cur_item = CreateArt(t_ArtPDTurret, None);",
              "        AddItemToShip(cur_ship, cur_item);",
              "        cur_item = CreateArt(t_ArtefactNano, None);",
              "        AddItemToShip(cur_ship, cur_item);",
              "        cur_item = CreateArt(t_ArtefactDef, None);",
              "        AddItemToShip(cur_ship, cur_item);",
              "        cur_item = CreateArt(t_ArtEnergyDef, None);",
              "        AddItemToShip(cur_ship, cur_item);",
              "",
              "        ArrangeItems(cur_ship);",
              "        ShipImproveItems(cur_ship, 20);",
              "",
              "        ShipSpecialBonuses(cur_ship, bonHull, 1);",
              "        ShipSpecialBonuses(cur_ship, bonDef, 5);",
              "        ShipSpecialBonuses(cur_ship, bonSpeed, 100);",
              "        ShipSpecialBonuses(cur_ship, bonWEnergy, 15);",
              "        ShipSpecialBonuses(cur_ship, bonWSplinter, 25);",
              "        ShipSpecialBonuses(cur_ship, bonJump, -5000);",
              "",
              "        ShipPilotRace(cur_ship, 3);",
              "        ShipOwner(cur_ship, None);",
              "        NoTargetToShip(cur_ship, 3);",
              "",
              "        ShipJoin(FaeyangelionLeader, cur_ship);",
              "        ShipCustomFaction(cur_ship, 'SubFactionFaeyangelionFixedStanding');",
              "        ShipStanding(cur_ship, 5); //Neutral",
              "",
              "        ItemLevel(ShipItems(cur_ship, 0), 8);",
              "        ShipRepairEq(cur_ship);",
              "        cur_item = CreateQuestItem('Usl_74', Fei);",
              "        ItemCost(cur_item, ItemCost(cur_item) * 12);",
              "        ShipAddDropItem(cur_ship, cur_item);",
              "",
              "        //Вручную корректируем характер наёмника",
              "        ShipStatus(cur_ship, 0, 0); //Торговец",
              "        ShipStatus(cur_ship, 1, 15); //Пират",
              "        ShipStatus(cur_ship, 2, 85); //Воин",
              "",
              "        //\"Внутренний\" неизменный характер - \"Торговец\"",
              "        ShipSubType(cur_ship, 0);",
              "",
              "        TransferShip(cur_ship, StarPlanets(GalaxyStar(People), 0)); //На Меркурий",
              "        OrderLock(cur_ship, 1);",
              "    }",
              "",
              "    PlanetRace(cur_planet, tint1);",
              "    PlanetOwner(cur_planet, tint2);",
              "",
              "    MercOrganisationsData['MercLeadersSpawned'] = 1;",
              "}",
              "",
              "cur_ruin = GroupToShip(MercCenter);",
              "if(!cur_ruin)",
              "{",
              "    if(!MercOrganisationsData['MercCenterId'])",
              "    {",
              "        MercOrganisationsData['RedAxes', 'RecruitsReserve'] = 0;",
              "        MercOrganisationsData['Atlant', 'RecruitsReserve'] = 0;",
              "        MercOrganisationsData['Faeyangelion', 'RecruitsReserve'] = 0;",
              "        MercOrganisationsData['FreeRecruitsReserve'] = 0;",
              "",
              "        if(MercOrganisationsData['MercCenterRespawnDay'] <= CurTurn())",
              "        {",
              "            //Для постройки ЦН требуется как минимум 5 свободных от абсолютно враждебных фракций системы",
              "            if(ControlledSystems(0) + ControlledSystems(2) > 4)",
              "            {",
              "                cur_star = StarNearbyStars(PlanetToStar(GetShipHomePlanet(Player())), Rnd(1, 25));",
              "                while(cur_star == GalaxyStar(TortugatzId) || cur_star == GalaxyStar(NifigatzId)) cur_star = StarNearbyStars(PlanetToStar(GetShipHomePlanet(Player())), Rnd(1, 25));",
              "                while(1)",
              "                {",
              "                    if(StarOwner(cur_star) == 1) break;",
              "                    if(StarBattle(cur_star)) break;",
              "                    if(StarRuins(cur_star) >= 3) break;",
              "                    if(cur_star == ShipStar(Player())) break;",
              "",
              "                    //Спавним и заносим в скрипт новый ЦН",
              "                    cur_ruin = SpawnMercCenter(cur_star);",
              "                    ShipJoin(MercCenter, cur_ruin);",
              "",
              "                    tstr1 = Format(CT('Script.Mod_ShuMercs.MercNews.NewMercCenterHasBeenBuild' + RndObject(1, 3, cur_ruin)), '<Star'+'>', Name(cur_star), '<MercCenter'+'>', ShipName(cur_ruin));",
              "                    AddPlanetNews(tstr1, 41);",
              "                    Ether(0, 'NewMercCenterHasBeenBuild', tstr1, cur_ruin);",
              "",
              "                    //Обновляем список наград за головы",
              "                    UpdateHeadBountyList();",
              "",
              "                    //Обновляем таймера до перестройки штабов организаций, чтобы те не могли быть построены в один ход с ЦН",
              "                    if(MercOrganisationsData['MercCenterRespawnDay'])",
              "                    {",
              "                        if(GroupCount(RedAxesLeader))",
              "                        {",
              "                            if(!GroupCount(RedAxesHQ))",
              "                            {",
              "                                MercOrganisationsData['RedAxes', 'HQRespawnDay'] = CurTurn() + RndObject(125, 255, cur_ruin);",
              "                            }",
              "                        }",
              "                        if(GroupCount(AtlantLeader))",
              "                        {",
              "                            if(!GroupCount(AtlantHQ))",
              "                            {",
              "                                MercOrganisationsData['Atlant', 'HQRespawnDay'] = CurTurn() + RndObject(150, 300, cur_ruin);",
              "                            }",
              "                        }",
              "                        if(GroupCount(FaeyangelionLeader))",
              "                        {",
              "                            if(!GroupCount(FaeyangelionHQ))",
              "                            {",
              "                                MercOrganisationsData['Faeyangelion', 'HQRespawnDay'] =  CurTurn() + RndObject(175, 355, cur_ruin);",
              "                            }",
              "                        }",
              "                    }",
              "",
              "                    break;",
              "                }",
              "            }",
              "        }",
              "    }",
              "    //На момент своего первого спавна в начале игры приходится заносить центр в скрипт уже постфактум",
              "    else ShipJoin(MercCenter, IdToShip(MercOrganisationsData['MercCenterId']));",
              "}",
              "else //Если общий ЦН ещё существует",
              "{",
              "    //Проверяем, не уничтожены ли ещё все лидеры организаций",
              "    if(!MercOrganisationsData['AllMercLeadersDead'])",
              "    {",
              "        int red_lead_alive = GroupCount(RedAxesLeader);",
              "        int atlant_lead_alive = GroupCount(AtlantLeader);",
              "        int fei_lead_alive = GroupCount(FaeyangelionLeader);",
              "",
              "        //Если все лидеры наёмников были ликвидированы",
              "        if(!red_lead_alive && !atlant_lead_alive && !fei_lead_alive)",
              "        {",
              "            cur_item = CreateNodes(2500, RndObject(0, 2, cur_ruin));",
              "            AddItemToStorage(cur_ruin, cur_item);",
              "",
              "            cur_item = CreateQuestItem('Usl_74');",
              "            ItemCost(cur_item, 100000);",
              "            ItemOwner(cur_item, 6);",
              "            AddItemToStorage(cur_ruin, cur_item);",
              "",
              "            cur_item = CreateQuestItem('Usl_72');",
              "            ItemCost(cur_item, RndObject(74000, 76000, cur_ruin));",
              "            ItemOwner(cur_item, 6);",
              "            AddItemToStorage(cur_ruin, cur_item);",
              "",
              "            cur_item = CreateQuestItem('Usl_26');",
              "            ItemCost(cur_item, 40000);",
              "            ItemOwner(cur_item, 2);",
              "            SetName(cur_item, 'Компромат на Норта');",
              "            AddItemToStorage(cur_ruin, cur_item);",
              "",
              "            cur_item = CreateQuestItem('Usl_19');",
              "            ItemCost(cur_item, 30000);",
              "            ItemOwner(cur_item, 0);",
              "            SetName(cur_item, 'Элитные сигары Ебрына');",
              "            AddItemToStorage(cur_ruin, cur_item);",
              "",
              "            cur_item = CreateQuestItem('Usl_63');",
              "            ItemCost(cur_item, 60000);",
              "            ItemOwner(cur_item, 3);",
              "            SetName(cur_item, 'Деловая переписка Фэя');",
              "            AddItemToStorage(cur_ruin, cur_item);",
              "",
              "            Ether(4, 'AllMercLeadersDead', Format(CT('Script.Mod_ShuMercs.MercNews.AllMercLeadersDead'), '<MercCenter'+'>', ShipName(GroupToShip(MercCenter))));",
              "            Sound('Sound.Buy');",
              "",
              "            MercOrganisationsData['AllMercLeadersDead'] = 1;",
              "        }",
              "        else //Регулярно корректируем отношения между наёмниками разных организаций",
              "        {",
              "            if(red_lead_alive)",
              "            {",
              "                if(atlant_lead_alive) SetRelationGroup(RedAxesMercs, AtlantMercs, (MercOrganisationsData['RedAxes', 'RelationToAtlant'] + 15) / 25);",
              "                if(fei_lead_alive) SetRelationGroup(RedAxesMercs, FaeyangelionMercs, (MercOrganisationsData['RedAxes', 'RelationToFaeyangelion'] + 15) / 25);",
              "            }",
              "",
              "            if(atlant_lead_alive)",
              "            {",
              "                if(red_lead_alive) SetRelationGroup(AtlantMercs, RedAxesMercs, (MercOrganisationsData['Atlant', 'RelationToRedAxes'] + 15) / 25);",
              "                if(fei_lead_alive) SetRelationGroup(AtlantMercs, FaeyangelionMercs, (MercOrganisationsData['Atlant', 'RelationToFaeyangelion'] + 15) / 25);",
              "            }",
              "",
              "            if(fei_lead_alive)",
              "            {",
              "                if(red_lead_alive) SetRelationGroup(FaeyangelionMercs, RedAxesMercs, (MercOrganisationsData['Faeyangelion', 'RelationToRedAxes'] + 15) / 25);",
              "                if(atlant_lead_alive) SetRelationGroup(FaeyangelionMercs, AtlantMercs, (MercOrganisationsData['Faeyangelion', 'RelationToAtlant'] + 15) / 25);",
              "            }",
              "        }",
              "    }",
              "",
              "    //Проверяем, не требуется ли респавн для штабов организаций",
              "    if(red_lead_alive)",
              "    {",
              "        if(!GroupCount(RedAxesHQ))",
              "        {",
              "            if(MercOrganisationsData['RedAxes', 'HQRespawnDay'] <= CurTurn())",
              "            {",
              "                //Для постройки штаба требуется, как минимум, 8 свободных от абсолютно враждебных фракций системы",
              "                if(ControlledSystems(0) + ControlledSystems(2) > 7)",
              "                {",
              "                    ArrayClear(tarr1);",
              "                    ArrayDelete(tarr1, 0);",
              "                    ArrayClear(tarr2);",
              "                    ArrayDelete(tarr2, 0);",
              "                    for(i = GalaxyStars() - 1; i >= 0; i = i - 1)",
              "                    {",
              "                        cur_star = GalaxyStar(i);",
              "                        if(StarOwner(cur_star) == 1) continue;",
              "                        if(StarBattle(cur_star)) continue;",
              "                        if(cur_star == GalaxyStar(TortugatzId)) continue;",
              "                        if(cur_star == GalaxyStar(NifigatzId)) continue;",
              "                        if(StarRuins(cur_star) >= 3) continue;",
              "                        if(StarRuins(cur_star, 'MB')) continue;",
              "                        if(StarRuins(cur_star, 'MercHQ')) continue;",
              "                        if(cur_star == ShipStar(Player())) continue;",
              "",
              "                        tint1 = 0;",
              "                        tint2 = 0;",
              "                        for(j = StarPlanets(cur_star) - 1; j >= 0; j = j - 1)",
              "                        {",
              "                            cur_planet = StarPlanets(cur_star, j);",
              "                            if(PlanetOwner(cur_planet) == None) continue;",
              "                            if(PlanetRace(cur_planet) == Maloc) tint1 = tint1 + 1;",
              "                            else tint2 = tint2 + 1;",
              "                        }",
              "                        //Выбираем только системы с малокскими планетами",
              "                        if(tint1 < tint2) continue;",
              "",
              "                        ArrayAdd(tarr1, tint1);",
              "                        ArrayAdd(tarr2, cur_star);",
              "                    }",
              "",
              "                    if(ArrayDim(tarr1))",
              "                    {",
              "                        ArraySort(tarr1, tarr2);",
              "                        cur_ruin = SpawnMercHQ(tarr2[ArrayDim(tarr1) - 1], 'RedAxes'); //Выбираем наиболее малокскую систему",
              "                        ShipJoin(RedAxesHQ, cur_ruin);",
              "                        ShipCustomFaction(cur_ruin, 'SubFactionRedAxesFixedStanding');",
              "                        NoLanding(cur_ruin, 1);",
              "",
              "                        cur_ship = GroupToShip(RedAxesLeader);",
              "                        if(StateIs(cur_ship, 'LeaderInactive')) TransferShip(cur_ship, cur_ruin);",
              "                    }",
              "",
              "                    ArrayClear(tarr1);",
              "                    ArrayClear(tarr2);",
              "                }",
              "            }",
              "        }",
              "    }",
              "",
              "    if(atlant_lead_alive)",
              "    {",
              "        if(!GroupCount(AtlantHQ))",
              "        {",
              "            if(MercOrganisationsData['Atlant', 'HQRespawnDay'] <= CurTurn())",
              "            {",
              "                //Для постройки штаба требуется, как минимум, 8 свободных от абсолютно враждебных фракций системы",
              "                if(ControlledSystems(0) + ControlledSystems(2) > 7)",
              "                {",
              "                    ArrayClear(tarr1);",
              "                    ArrayDelete(tarr1, 0);",
              "                    ArrayClear(tarr2);",
              "                    ArrayDelete(tarr2, 0);",
              "                    for(i = GalaxyStars() - 1; i >= 0; i = i - 1)",
              "                    {",
              "                        cur_star = GalaxyStar(i);",
              "                        if(StarOwner(cur_star) == 1) continue;",
              "                        if(StarBattle(cur_star)) continue;",
              "                        if(cur_star == GalaxyStar(TortugatzId)) continue;",
              "                        if(cur_star == GalaxyStar(NifigatzId)) continue;",
              "                        if(StarRuins(cur_star) >= 3) continue;",
              "                        if(StarRuins(cur_star, 'MB')) continue;",
              "                        if(StarRuins(cur_star, 'MercHQ')) continue;",
              "                        if(cur_star == ShipStar(Player())) continue;",
              "",
              "                        tint1 = 0;",
              "                        tint2 = 0;",
              "                        for(j = StarPlanets(cur_star) - 1; j >= 0; j = j - 1)",
              "                        {",
              "                            cur_planet = StarPlanets(cur_star, j);",
              "                            if(PlanetOwner(cur_planet) == None) continue;",
              "                            if(PlanetRace(cur_planet) == Peleng || PlanetRace(cur_planet) == People) tint1 = tint1 + 1;",
              "                            else tint2 = tint2 + 1;",
              "                        }",
              "",
              "                        //Выбираем только системы с пеленгскими и человеческими планетами",
              "                        if(tint1 < tint2) continue;",
              "",
              "                        ArrayAdd(tarr1, tint1);",
              "                        ArrayAdd(tarr2, cur_star);",
              "                    }",
              "",
              "                    if(ArrayDim(tarr1))",
              "                    {",
              "                        ArraySort(tarr1, tarr2);",
              "                        cur_ruin = SpawnMercHQ(tarr2[ArrayDim(tarr1) - 1], 'Atlant'); //Выбираем наиболее пеленго-человечную систему",
              "                        ShipJoin(AtlantHQ, cur_ruin);",
              "                        ShipCustomFaction(cur_ruin, 'SubFactionAtlantFixedStanding');",
              "                        NoLanding(cur_ruin, 1);",
              "",
              "                        cur_ship = GroupToShip(AtlantLeader);",
              "                        if(StateIs(cur_ship, 'LeaderInactive')) TransferShip(cur_ship, cur_ruin);",
              "                    }",
              "",
              "                    ArrayClear(tarr1);",
              "                    ArrayClear(tarr2);",
              "                }",
              "            }",
              "        }",
              "    }",
              "",
              "    if(fei_lead_alive)",
              "    {",
              "        if(!GroupCount(FaeyangelionHQ))",
              "        {",
              "            if(MercOrganisationsData['Faeyangelion', 'HQRespawnDay'] <= CurTurn())",
              "            {",
              "                //Для постройки штаба требуется, как минимум, 8 свободных от абсолютно враждебных фракций системы",
              "                if(ControlledSystems(0) + ControlledSystems(2) > 7)",
              "                {",
              "                    ArrayClear(tarr1);",
              "                    ArrayDelete(tarr1, 0);",
              "                    ArrayClear(tarr2);",
              "                    ArrayDelete(tarr2, 0);",
              "                    for(i = GalaxyStars() - 1; i >= 0; i = i - 1)",
              "                    {",
              "                        cur_star = GalaxyStar(i);",
              "                        if(StarOwner(cur_star) == 1) continue;",
              "                        if(StarBattle(cur_star)) continue;",
              "                        if(cur_star == GalaxyStar(TortugatzId)) continue;",
              "                        if(cur_star == GalaxyStar(NifigatzId)) continue;",
              "                        if(StarRuins(cur_star) >= 3) continue;",
              "                        if(StarRuins(cur_star, 'MB')) continue;",
              "                        if(StarRuins(cur_star, 'MercHQ')) continue;",
              "                        if(cur_star == ShipStar(Player())) continue;",
              "",
              "                        tint1 = 0;",
              "                        tint2 = 0;",
              "                        for(j = StarPlanets(cur_star) - 1; j >= 0; j = j - 1)",
              "                        {",
              "                            cur_planet = StarPlanets(cur_star, j);",
              "                            if(PlanetOwner(cur_planet) == None) continue;",
              "                            if(PlanetRace(cur_planet) == Fei) tint1 = tint1 + 1;",
              "                            else tint2 = tint2 + 1;",
              "                        }",
              "                        //Выбираем только системы с фэянскими планетами",
              "                        if(tint1 < tint2) continue;",
              "",
              "                        ArrayAdd(tarr1, tint1);",
              "                        ArrayAdd(tarr2, cur_star);",
              "                    }",
              "",
              "                    if(ArrayDim(tarr1))",
              "                    {",
              "                        ArraySort(tarr1, tarr2);",
              "                        cur_ruin = SpawnMercHQ(tarr2[ArrayDim(tarr1) - 1], 'Faeyangelion'); //Выбираем наиболее фэянскую систему",
              "                        ShipJoin(FaeyangelionHQ, cur_ruin);",
              "                        ShipCustomFaction(cur_ruin, 'SubFactionFaeyangelionFixedStanding');",
              "                        NoLanding(cur_ruin, 1);",
              "",
              "                        cur_ship = GroupToShip(FaeyangelionLeader);",
              "                        if(StateIs(cur_ship, 'LeaderInactive')) TransferShip(cur_ship, cur_ruin);",
              "                    }",
              "",
              "                    ArrayClear(tarr1);",
              "                    ArrayClear(tarr2);",
              "                }",
              "            }",
              "        }",
              "    }",
              "",
              "    //Постепенно пополняем ряды наёмников рекрутов",
              "    if(RndObject(1, 100, cur_ruin) <= 9)",
              "    {",
              "        if(!MercOrganisationsData['AllMercLeadersDead']) MercOrganisationsData['FreeRecruitsReserve'] = min(MercOrganisationsData['FreeRecruitsReserve'] + 1, 12);",
              "        else MercOrganisationsData['FreeRecruitsReserve'] = min(MercOrganisationsData['FreeRecruitsReserve'] + 1, 33);",
              "    }",
              "    if(RndObject(1, 100, cur_ruin) <= 12) MercOrganisationsData['RedAxes', 'RecruitsReserve'] = min(MercOrganisationsData['RedAxes', 'RecruitsReserve'] + 1, 18);",
              "    if(RndObject(1, 100, cur_ruin) <= 16) MercOrganisationsData['Atlant', 'RecruitsReserve'] = min(MercOrganisationsData['Atlant', 'RecruitsReserve'] + 1, 25);",
              "    if(RndObject(1, 100, cur_ruin) <= 9) MercOrganisationsData['Faeyangelion', 'RecruitsReserve'] = min(MercOrganisationsData['Faeyangelion', 'RecruitsReserve'] + 1, 12);",
              "",
              "    if(RndObject(1, 100, cur_ruin) <= 7)",
              "    {",
              "        //Определяем лимит числа наёмников в той или иной группировке в зависимости от числа свободных систем (коалиционных или пиратских) в Галактике",
              "        tflt1 = PortionInDiapason((0.0 + ControlledSystems(0) + ControlledSystems(2) - 2) / (GalaxyStars() - 2), 0.0, 0.4, 0.0, 1.0);",
              "        if(tflt1) tflt1 = max(tflt1, 0.25);",
              "",
              "        tint1 = RoundTo(tflt1 * 16, 1, 1); //Топоры",
              "        tint2 = RoundTo(tflt1 * 22, 1, 1); //Атланты",
              "        tint3 = RoundTo(tflt1 * 12, 1, 1); //Фэи",
              "        tint4 = RoundTo(tflt1 * 18, 1, 1); //Фрилансеры",
              "",
              "        if(!MercOrganisationsData['AllMercLeadersDead'])",
              "        {",
              "            //\"Бросаем кости\" на выбор фракции рождающегося наёмника",
              "            j = 0;",
              "            if(GroupCount(FreeMercs) < tint4) j = 1;",
              "            if(red_lead_alive)",
              "            {",
              "                if(GroupCount(RedAxesMercs) < tint1) j = j + 2;",
              "            }",
              "            if(atlant_lead_alive)",
              "            {",
              "                if(GroupCount(AtlantMercs) < tint2) j = j + 4;",
              "            }",
              "            if(fei_lead_alive)",
              "            {",
              "                if(GroupCount(FaeyangelionMercs) < tint3) j = j + 8;",
              "            }",
              "",
              "            if(j)",
              "            {",
              "                //Типа вместо do while",
              "                i = RndObject(0, 3, cur_ruin);",
              "                while(!(j & (1 << i))) i = RndObject(0, 3, cur_ruin);",
              "",
              "                //Спавним топора",
              "                if(i == 1)",
              "                {",
              "                    if(MercOrganisationsData['RedAxes', 'RecruitsReserve'])",
              "                    {",
              "                        if(GroupCount(RedAxesHQ)) SpawnMerc(FindPlanetByAdvancement(100, -1), GroupToShip(RedAxesHQ), 1);",
              "                        else SpawnMerc(FindPlanetByAdvancement(100, -1), cur_ruin, 1);",
              "                        MercOrganisationsData['RedAxes', 'RecruitsReserve'] = MercOrganisationsData['RedAxes', 'RecruitsReserve'] - 1;",
              "                    }",
              "                }",
              "                //Спавним атланта",
              "                else if(i == 2)",
              "                {",
              "                    if(MercOrganisationsData['Atlant', 'RecruitsReserve'])",
              "                    {",
              "                        if(GroupCount(AtlantHQ)) SpawnMerc(FindPlanetByAdvancement(100, -1), GroupToShip(AtlantHQ), 2);",
              "                        else SpawnMerc(FindPlanetByAdvancement(100, -1), cur_ruin, 2);",
              "                        MercOrganisationsData['Atlant', 'RecruitsReserve'] = MercOrganisationsData['Atlant', 'RecruitsReserve'] - 1;",
              "                    }",
              "                }",
              "                //Спавним фэя",
              "                else if(i == 3)",
              "                {",
              "                    if(MercOrganisationsData['Faeyangelion', 'RecruitsReserve'])",
              "                    {",
              "                        if(GroupCount(FaeyangelionHQ)) SpawnMerc(FindPlanetByAdvancement(100, -1), GroupToShip(FaeyangelionHQ), 3);",
              "                        else SpawnMerc(FindPlanetByAdvancement(100, -1), cur_ruin, 3);",
              "                        MercOrganisationsData['Faeyangelion', 'RecruitsReserve'] = MercOrganisationsData['Faeyangelion', 'RecruitsReserve'] - 1;",
              "                    }",
              "                }",
              "                //Спавним фрилансера",
              "                else //if(!i)",
              "                {",
              "                    if(MercOrganisationsData['FreeRecruitsReserve'])",
              "                    {",
              "                        SpawnMerc(FindPlanetByAdvancement(100, -1), cur_ruin, 0);",
              "                        MercOrganisationsData['FreeRecruitsReserve'] = MercOrganisationsData['FreeRecruitsReserve'] - 1;",
              "                    }",
              "                }",
              "            }",
              "        }",
              "        else //Если все лидеры организаций наёмников мертвы, спавним только фрилансеров",
              "        {",
              "            tint4 = tint4 * 2;",
              "",
              "            if(MercOrganisationsData['FreeRecruitsReserve'])",
              "            {",
              "                if(GroupCount(FreeMercs) < tint4)",
              "                {",
              "                    SpawnMerc(FindPlanetByAdvancement(100, -1), cur_ruin, 0);",
              "                    MercOrganisationsData['FreeRecruitsReserve'] = MercOrganisationsData['FreeRecruitsReserve'] - 1;",
              "                }",
              "            }",
              "        }",
              "    }",
              "",
              "    //Обновляем список целей для механики \"Охоты за головами\"",
              "    if(CurTurn() >= HeadBountyList['NextUpdate']) UpdateHeadBountyList();",
              "}",
              "",
              "//Использовалось для ловли ошибки пропажи кораблей без удаления записи из списка",
              "//Если снова будет повторяться, то раскомментировать",
              "/*",
              "for(i = HeadBountyList['TargetsCount'] - 1; i >= 0; i = i - 1)",
              "{",
              "    if(HeadBountyList['TargetsId', i] > 0)",
              "    {",
              "        cur_ship = IdToShip(HeadBountyList['TargetsId', i]);",
              "        if(!cur_ship) throw 'Missing ship on Id: ' + HeadBountyList['TargetsId', i] + ' Turn is ' + CurTurn();",
              "    }",
              "    else",
              "    {",
              "        cur_ship = IdToItem(abs(HeadBountyList['TargetsId', i]));",
              "        if(!cur_ship) throw 'Missing capsule on Id: ' + HeadBountyList['TargetsId', i] + ' Turn is ' + CurTurn();",
              "    }",
              "}",
              "*/",
              "",
              "if(free_id)",
              "{",
              "    if(!IdToShip(free_id))",
              "    {",
              "        if(GroupCount(MercCenter)) Ether(5, '', \"<free_name> погиб, выполняя контракт на убийство корабля <target_name>. <br> - <clr>Центр наемников Обмен<clrEnd>\");",
              "        free_id = 0;",
              "        target_id;",
              "    }",
              "}",
              "",
              "if(target_id)",
              "{",
              "    if(!IdToShip(target_id))",
              "    {",
              "        free_id = 0;",
              "        target_id = 0;",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  40,
          "Pos.y":  0,
          "Parent":  3,
          "#":  138,
          "Total.Lines":  123,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "//Если игрок начал разговор с кораблём в космосе",
              "cur_ship = GetTalkShip();",
              "if(cur_ship)",
              "{",
              "    //Игрок инициировал разговор с NPC в космосе",
              "    if(!TalkByAI())",
              "    {",
              "        if(ShipType(cur_ship) == 'Merc' || ShipType(cur_ship) == 'Freelancer')",
              "        {",
              "            //Если игрок не идентифицируется кораблём как доминатор",
              "            if(ShipTypeN(cur_ship) == t_Pirate || PlayerChameleonCurType() == -1)",
              "            {",
              "                //Если корабль - наёмник",
              "                if(ShipType(cur_ship) == 'Merc')",
              "                {",
              "                    //if(ShipInScript(cur_ship, 0))",
              "                    //{",
              "                    if(!free_id)",
              "                    {",
              "                        //Если наёмник не является партнёром игрока",
              "                        if(ShipIsPartner(cur_ship) != Player())",
              "                        {",
              "                            tint1 = ShipGroup(cur_ship);",
              "                            if(tint1 == RedAxesMercs || tint1 == AtlantMercs || tint1 == FaeyangelionMercs)",
              "                            {",
              "                                if(!StateIs(cur_ship, 'MercGuardingQuest', 'MercGuardingQuest', 'MercReturningHQ'))",
              "                                {",
              "                                    if(CurTurn() >= free_timer) tstr1 = \"Я хочу предложить тебе контракт на убийство\";",
              "                                    else",
              "                                    {",
              "                                        tstr1 = \"Я хочу предложить тебе контракт на убийство (<free_timer - CurTurn()>) дней\";",
              "                                        AddDialogBlock(tstr1, 1);",
              "                                    }",
              "",
              "                                    AddDialogInject('MercHire', '', tstr1, 1);",
              "                                    merc_type = 1;",
              "                                }",
              "                            }",
              "                        }",
              "                    }",
              "",
              "                    for(i = 0; i <= 3; i = i + 1)",
              "                    {",
              "                        if(!i) tstr1 = CT('Talk.Pirate.PlayerSend');",
              "                        else tstr1 = CT('Talk.Pirate.PlayerSend' + i);",
              "                        tstr1 = Format(DeleteTags(tstr1), '<clr>', '', '<clrEnd>', '');",
              "                        AddDialogBlock(tstr1, 2);",
              "                    }",
              "",
              "                    tstr1 = Format(DeleteTags(CT('Talk.Partner.PlayerSend')), '<clr>', '', '<clrEnd>', '');",
              "                    AddDialogBlock(tstr1, 2);",
              "",
              "                    if(RelationToRanger(cur_ship, Player()) < 10)",
              "                    {",
              "                        for(i = 0; i <= 4; i = i + 1)",
              "                        {",
              "                            if(!i) tstr1 = CT('Talk.Truce.PlayerSend');",
              "                            else tstr1 = CT('Talk.Truce.PlayerSend' + i);",
              "                            tstr1 = Format(DeleteTags(tstr1), '<clr>', '', '<clrEnd>', '');",
              "                            AddDialogBlock(tstr1, 2);",
              "                        }",
              "",
              "                        for(i = 0; i <= 3; i = i + 1)",
              "                        {",
              "                            if(!i) tstr1 = CT('Talk.Truce.RangerSend');",
              "                            else tstr1 = CT('Talk.Truce.RangerSend' + i);",
              "                            tstr1 = Format(DeleteTags(tstr1), '<clr>', '', '<clrEnd>', '');",
              "                            AddDialogBlock(tstr1, 2);",
              "                        }",
              "                    }",
              "                    //}",
              "                }",
              "                //Если корабль - фрилансер",
              "                else",
              "                {",
              "                    if(!free_id)",
              "                    {",
              "                        //Если фрилансер не является партнёром игрока",
              "                        if(ShipIsPartner(cur_ship) != Player())",
              "                        {",
              "                            if(!StateIs(cur_ship, 'MercGuardingQuest', 'MercGuardingQuest', 'MercReturningHQ'))",
              "                            {",
              "                                if(CurTurn() >= free_timer) tstr1 = \"Я хочу предложить тебе контракт на убийство\";",
              "                                else",
              "                                {",
              "                                    tstr1 = DeleteTags(\"Я хочу предложить тебе контракт на убийство (<free_timer - CurTurn()>) дней\");",
              "                                    AddDialogBlock(tstr1, 1);",
              "                                }",
              "",
              "                                AddDialogInject('MercHire', '', tstr1, 1);",
              "                                merc_type = 2;",
              "                            }",
              "                        }",
              "                    }",
              "                }",
              "            }",
              "        }",
              "    }",
              "}",
              "else",
              "{",
              "    //Если игрок находится на мостике",
              "    cur_ruin = GetShipRuins(Player());",
              "    if(cur_ruin)",
              "    {",
              "        int cur_bridge = PlayerBridge();",
              "        if(cur_bridge)",
              "        {",
              "            //Если игрок находится на главном экране мостика",
              "            if(cur_bridge <= 3)",
              "            {",
              "                if(free_id) AddDialogInject('FreeContract', '', \"Управление контрактом\", 1);",
              "            }",
              "            //Если игрок находится на экране \"Галанета\"",
              "            else if(cur_bridge == 11)",
              "            {",
              "                //Таблица кораблей с \"наградой за голову\"",
              "                if(!GroupCount(MercCenter)) AddDialogBlock(CT('Script.Mod_ShuMercs.HeadHunting.EnterBountyListBridge'), 1);",
              "                AddDialogInject('HeadBountyListDialog', '', CT('Script.Mod_ShuMercs.HeadHunting.EnterBountyListBridge'), 6);",
              "            }",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  139,
          "#":  160,
          "Total.Lines":  23,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(IsPlayer(ShipGetBad(CurShip)))",
              "{",
              "    ShipSetBad(CurShip, 0);",
              "    TruceBetweenShips(CurShip, Player());",
              "}",
              "RelationToRanger(CurShip, Player(), 100);",
              "",
              "if(GetShipRuins(CurShip)) OrderTakeOff(CurShip);",
              "",
              "raid_status = 1;",
              "",
              "if(!GroupCount(MercCenter) && ShipType(CurShip) == 'Merc')",
              "{",
              "    OrderLock(CurShip, 0);",
              "    ChangeState('MercNormal');",
              "    exit;",
              "}",
              "",
              "if(ShipInNormalSpace(CurShip))",
              "{",
              "    ChangeState('RaidJump');",
              "    exit;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  140,
          "#":  161,
          "Total.Lines":  21,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(IsPlayer(ShipGetBad(CurShip)))",
              "{",
              "    ShipSetBad(CurShip, 0);",
              "    TruceBetweenShips(CurShip, Player());",
              "}",
              "RelationToRanger(CurShip, Player(), 100);",
              "",
              "OrderJump(CurShip, GalaxyStar(raid_star));",
              "",
              "if(!GroupCount(MercCenter) && ShipType(CurShip) == 'Merc')",
              "{",
              "    OrderLock(CurShip, 0);",
              "    ChangeState('MercNormal');",
              "    exit;",
              "}",
              "",
              "if(ShipStar(CurShip) == GalaxyStar(raid_star) && ShipInNormalSpace(CurShip))",
              "{",
              "    ChangeState('RaidAct');",
              "    exit;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  141,
          "#":  162,
          "Total.Lines":  31,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(!raid_return) raid_return = CurTurn() + 5;",
              "",
              "if(IsPlayer(ShipGetBad(CurShip)))",
              "{",
              "    ShipSetBad(CurShip, 0);",
              "    TruceBetweenShips(CurShip, Player());",
              "}",
              "RelationToRanger(CurShip, Player(), 100);",
              "",
              "//Типа выбираются так любые \"враждебные\" цели в системе, ага, збс",
              "for(i = 0; i < StarShips(ShipStar(CurShip)); i = i + 1)",
              "{",
              "    dword ship = StarShips(ShipStar(CurShip), i);",
              "    if(IsPlayer(ship)) continue;",
              "    if(ShipType(ship) == 'Merc' || !ShipInNormalSpace(ship)) continue;",
              "    OrderFollowShip(CurShip, ship, 1, 1);",
              "    break;",
              "}",
              "",
              "if(!GroupCount(MercCenter) && ShipType(CurShip)=='Merc')",
              "{",
              "    OrderLock(CurShip, 0);",
              "    ChangeState('MercNormal');",
              "    exit;",
              "}",
              "",
              "if(CurTurn() >= raid_return || HullDamage(CurShip) > 35)",
              "{",
              "    ChangeState('RaidReturn');",
              "    exit;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  142,
          "#":  163,
          "Total.Lines":  31,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(IsPlayer(ShipGetBad(CurShip)))",
              "{",
              "    ShipSetBad(CurShip, 0);",
              "    TruceBetweenShips(CurShip, Player());",
              "}",
              "RelationToRanger(CurShip, Player(), 100);",
              "",
              "if(GroupCount(MercCenter)) OrderJump(CurShip, ShipStar(GroupToShip(MercCenter)));",
              "else",
              "{",
              "    ChangeState('MercToDieState');",
              "    exit;",
              "}",
              "",
              "OrderForsage(CurShip, 1);",
              "",
              "if(!GroupCount(MercCenter) && ShipType(CurShip) == 'Merc')",
              "{",
              "    OrderLock(CurShip, 0);",
              "    ChangeState('MercNormal');",
              "    exit;",
              "}",
              "",
              "if(GroupCount(MercCenter))",
              "{",
              "    if(ShipStar(CurShip) == ShipStar(GroupToShip(MercCenter)) && ShipInNormalSpace(CurShip))",
              "    {",
              "        ChangeState('RaidLand');",
              "        exit;",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  143,
          "#":  164,
          "Total.Lines":  23,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(IsPlayer(ShipGetBad(CurShip)))",
              "{",
              "    ShipSetBad(CurShip, 0);",
              "    TruceBetweenShips(CurShip, Player());",
              "}",
              "RelationToRanger(CurShip, Player(), 100);",
              "",
              "raid_return = 0;",
              "OrderForsage(CurShip, 0);",
              "",
              "if(GroupCount(MercCenter)) OrderLanding(CurShip, GroupToShip(MercCenter));",
              "else",
              "{",
              "    ChangeState('MercToDieState');",
              "    exit;",
              "}",
              "",
              "if(!GroupCount(MercCenter) && ShipType(CurShip) == 'Merc')",
              "{",
              "    OrderLock(CurShip, 0);",
              "    ChangeState('MercNormal');",
              "    exit;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  144,
          "#":  165,
          "Total.Lines":  21,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(IsPlayer(ShipGetBad(CurShip)))",
              "{",
              "    ShipSetBad(CurShip, 0);",
              "    TruceBetweenShips(CurShip, Player());",
              "}",
              "RelationToRanger(CurShip, Player(), 100);",
              "",
              "if(GetShipRuins(CurShip)) OrderTakeOff(CurShip);",
              "",
              "if(!GroupCount(MercCenter) && ShipType(CurShip) == 'Merc')",
              "{",
              "    OrderLock(CurShip, 0);",
              "    ChangeState('MercNormal');",
              "    exit;",
              "}",
              "",
              "if(ShipInNormalSpace(CurShip))",
              "{",
              "    ChangeState('AttackJump');",
              "    exit;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  145,
          "#":  166,
          "Total.Lines":  22,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(IsPlayer(ShipGetBad(CurShip)))",
              "{",
              "    ShipSetBad(CurShip, 0);",
              "    TruceBetweenShips(CurShip, Player());",
              "}",
              "RelationToRanger(CurShip, Player(), 100);",
              "",
              "OrderJump(CurShip, GalaxyStar(attack_star));",
              "",
              "if(!GroupCount(MercCenter) && ShipType(CurShip) == 'Merc')",
              "{",
              "    OrderLock(CurShip, 0);",
              "    ChangeState('MercNormal');",
              "    exit;",
              "}",
              "",
              "if(ShipStar(CurShip) == GalaxyStar(attack_star) && ShipInNormalSpace(CurShip))",
              "{",
              "    OrderLock(CurShip, 0);",
              "    ChangeState('AttackMain');",
              "    exit;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  146,
          "#":  167,
          "Total.Lines":  102,
          "Code.Type":  "Turn",
          "Code":          
          [
              "dword cur_star = ShipStar(CurShip);",
              "",
              "if(IsPlayer(ShipGetBad(CurShip)))",
              "{",
              "    ShipSetBad(CurShip, 0);",
              "    TruceBetweenShips(CurShip, Player());",
              "}",
              "RelationToRanger(CurShip, Player(), 100);",
              "",
              "if(!GroupCount(MercCenter) && ShipType(CurShip) == 'Merc')",
              "{",
              "    OrderLock(CurShip, 0);",
              "    ChangeState('MercNormal');",
              "    exit;",
              "}",
              "",
              "if(~ShipFindCustomShipInfoByType(CurShip, 'ShuTarget'))",
              "{",
              "    dword target_id = ShipCustomShipInfoData(CurShip, ShipFindCustomShipInfoByType(CurShip, 'ShuTarget'), 1);",
              "",
              "    for(i = 0; i < StarShips(cur_star); i = i + 1)",
              "    {",
              "        enemy = StarShips(cur_star, i);",
              "        if(Id(enemy) == target_id) break;",
              "        else enemy = 0;",
              "    }",
              "",
              "    if(enemy <= 0)",
              "    {",
              "        ShipDeleteCustomShipInfo(CurShip, 'ShuTarget');",
              "        enemy_for_all = 0;",
              "    }",
              "    else if (!ShipInStar(enemy, GalaxyStar(attack_star)))",
              "    {",
              "        ShipDeleteCustomShipInfo(CurShip, 'ShuTarget');",
              "        enemy_for_all = 0;",
              "    }",
              "    else",
              "    {",
              "        OrderForsage(CurShip, 0);",
              "        ShipSetBad(CurShip, enemy);",
              "        OrderFollowShip(CurShip, enemy, 1, 10);",
              "    }",
              "}",
              "",
              "if(ShipOrder(CurShip) == 1 || ShipOrder(CurShip) == 2 || ShipOrder(CurShip) == 3)",
              "{",
              "    int min_dist = 1000000;",
              "    for(i = 0; i < StarShips(cur_star); i = i + 1)",
              "    {",
              "        dword ship = StarShips(cur_star, i);",
              "        if(Dist(CurShip, ship) > min_dist) continue;",
              "        if(!ShipInNormalSpace(ship)) continue;",
              "        if(ship == Player()) continue;",
              "",
              "        if(ShipOnSidePirateClan(CurShip) && !ShipOnSidePirateClan(ship) || ShipOnSidePirateClan(ship) && !ShipOnSidePirateClan(CurShip) || ShipOwner(ship) == 5 || ShipCustomFaction(ship) != '')",
              "            min_dist = Dist(CurShip, ship);",
              "    }",
              "",
              "    for(i = 0; i < StarShips(cur_star); i = i + 1)",
              "    {",
              "        ship = StarShips(cur_star, i);",
              "        if(Dist(CurShip, ship) != min_dist) continue;",
              "        if(!ShipInNormalSpace(ship)) continue;",
              "        if(ship == Player()) continue;",
              "",
              "        if(ShipOnSidePirateClan(CurShip) && !ShipOnSidePirateClan(ship) || ShipOnSidePirateClan(ship) && !ShipOnSidePirateClan(CurShip) || ShipOwner(ship) == 5 || ShipCustomFaction(ship) != '')",
              "        {",
              "            OrderForsage(CurShip, 0);",
              "            ShipSetBad(CurShip, ship);",
              "            OrderFollowShip(CurShip, ship, 1, 10);",
              "            break;",
              "        }",
              "    }",
              "}",
              "",
              "if(!ShipOnSidePirateClan(CurShip))",
              "{",
              "    if(StarOwner(cur_star) == 0)",
              "    {",
              "        if(~ShipFindCustomShipInfoByType(CurShip, 'ShuTarget')) ShipDeleteCustomShipInfo(CurShip, 'ShuTarget');",
              "        ChangeState('MercReturnToMB');",
              "        exit;",
              "    }",
              "}",
              "else",
              "{",
              "    if(StarOwner(cur_star) == 2)",
              "    {",
              "        if(~ShipFindCustomShipInfoByType(CurShip, 'ShuTarget')) ShipDeleteCustomShipInfo(CurShip, 'ShuTarget');",
              "        ChangeState('MercReturnToMB');",
              "        exit;",
              "    }",
              "}",
              "",
              "//Наёмник зассал и убежал из боя насовсем",
              "if(HullDamage(CurShip) > 80)",
              "{",
              "    if(~ShipFindCustomShipInfoByType(CurShip, 'ShuTarget')) ShipDeleteCustomShipInfo(CurShip, 'ShuTarget');",
              "    ChangeState('MercSpeedReturnToMB');",
              "    exit;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  147,
          "#":  168,
          "Total.Lines":  29,
          "Code.Type":  "Turn",
          "Code":          
          [
              "OrderForsage(CurShip, 1);",
              "dword engine = ShipEqInSlot(CurShip, t_Engine);",
              "if(ItemDurability(engine) < 19) ItemDurability(engine, 19);",
              "",
              "//Если центр наёмников ещё существует, то наёмник возвращается на него и переходит в обычное состояние",
              "if(GroupCount(MercCenter))",
              "{",
              "    if(ShipStar(CurShip) == ShipStar(GroupToShip(MercCenter)))",
              "    {",
              "        if(ShipInNormalSpace(CurShip))",
              "        {",
              "            ChangeState('MercLandingMB');",
              "            exit;",
              "        }",
              "        else if(GetShipRuins(CurShip))",
              "        {",
              "            OrderLock(CurShip, 0);",
              "            ChangeState('MercNormal');",
              "            exit;",
              "        }",
              "    }",
              "    else OrderJump(CurShip, ShipStar(GroupToShip(MercCenter)));",
              "}",
              "//Если центр наёмников уничтожен, то и наёмника закономерно ожидает смерть",
              "else",
              "{",
              "    ChangeState('MercToDieState');",
              "    exit;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  148,
          "#":  169,
          "Total.Lines":  28,
          "Code.Type":  "Turn",
          "Code":          
          [
              "OrderForsage(CurShip,0);",
              "if(GroupCount(MercCenter)) OrderLanding(CurShip, GroupToShip(MercCenter));",
              "else",
              "{",
              "    ChangeState('MercToDieState');",
              "    exit;",
              "}",
              "",
              "if(GetShipRuins(CurShip))",
              "{",
              "    if(RndObject(1, 100, CurShip) < 80)",
              "    {",
              "        if(ShipGroup(CurShip) == RedAxesMercs) MercOrganisationsData['RedAxes', 'RecruitsReserve'] = MercOrganisationsData['RedAxes', 'RecruitsReserve'] + 1;",
              "        else if(ShipGroup(CurShip) == AtlantMercs) MercOrganisationsData['Atlant', 'RecruitsReserve'] = MercOrganisationsData['Atlant', 'RecruitsReserve'] + 1;",
              "        else if(ShipGroup(CurShip) == FaeyangelionMercs) MercOrganisationsData['Faeyangelion', 'RecruitsReserve'] = MercOrganisationsData['Faeyangelion', 'RecruitsReserve'] + 1;",
              "",
              "        if(ShipStar(Player()) != GalaxyStar(NifigatzId)) TransferShip(CurShip, GalaxyStar(NifigatzId));",
              "        ShipDestroy(CurShip, 1);",
              "    }",
              "    else",
              "    {",
              "        OrderLock(CurShip, 0);",
              "        //Обновляем таймер до следующего возвращения в штаб",
              "        SetData(CurTurn() + RndObject(60, 90, CurShip), 3);",
              "        ChangeState('MercNormal');",
              "        exit;",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  149,
          "#":  170,
          "Total.Lines":  25,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Если центр наёмников ещё существует, то наёмник возвращается на него и переходит в обычное состояние",
              "if(GroupCount(MercCenter))",
              "{",
              "    if(ShipStar(CurShip) == ShipStar(GroupToShip(MercCenter)))",
              "    {",
              "        if(ShipInNormalSpace(CurShip))",
              "        {",
              "            ChangeState('MercLandingMB');",
              "            exit;",
              "        }",
              "        else if(GetShipRuins(CurShip))",
              "        {",
              "            OrderLock(CurShip, 0);",
              "            ChangeState('MercNormal');",
              "            exit;",
              "        }",
              "    }",
              "    else OrderJump(CurShip, ShipStar(GroupToShip(MercCenter)));",
              "}",
              "//Если центр наёмников уничтожен, то и наёмника закономерно ожидает смерть",
              "else",
              "{",
              "    ChangeState('MercToDieState');",
              "    exit;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  150,
          "#":  171,
          "Total.Lines":  8,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(Format(ShipType(CurShip), '_licensed', '', '') == 'MB')",
              "{",
              "    //Если все лидеры наёмников были ликвидированы игроком",
              "    if(MercOrganisationsData['AllMercLeadersDead'])",
              "    {",
              "        ShipType(CurShip, 'Manaan');",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  152,
          "#":  172,
          "Total.Lines":  33,
          "Code.Type":  "Turn",
          "Code":          
          [
              "dword target = IdToShip(target_id);",
              "",
              "if(ShipInNormalSpace(CurShip) && target)",
              "{",
              "    OrderJump(CurShip, ShipStar(target));",
              "",
              "    if(ShipStar(CurShip) == ShipStar(target))",
              "    {",
              "        ChangeState('MercAttack');",
              "        exit;",
              "    }",
              "}",
              "",
              "if(!target || !free_id || (CurTurn() > free_timer - 30))",
              "{",
              "    target_id = 0;",
              "    OrderLock(CurShip, 0);",
              "",
              "    if(!free_id && CurTurn() <= free_timer - 30)",
              "    {",
              "        if(!razr && GroupCount(MercCenter)) Ether(4, '', \"<free_name> успешно выполнил ваш контракт на убийство корабля <target_name>. <br> - <clr>Центр наемников Обмен<clrEnd>\");",
              "        else razr = 0;",
              "    }",
              "    else if(CurTurn() > free_timer - 30 && GroupCount(MercCenter))",
              "    {",
              "        Ether(5, '', \"<free_name> разорвал контракт по ликвидации корабля <target_name> в связи с истечением срока. <br> - <clr>Центр наемников Обмен<clrEnd>\");",
              "    }",
              "",
              "    free_id = 0;",
              "",
              "    ChangeState('MercNormal');",
              "    exit;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  153,
          "#":  173,
          "Total.Lines":  39,
          "Code.Type":  "Turn",
          "Code":          
          [
              "dword target = IdToShip(target_id);",
              "",
              "if(target)",
              "{",
              "    ShipSetBad(CurShip, target);",
              "    OrderFollowShip(CurShip, target, 1, 10);",
              "    ShipFreeFlight(CurShip);",
              "",
              "    if(ShipInNormalSpace(target))",
              "    {",
              "        if(free_id && ShipStar(target) != ShipStar(CurShip))",
              "        {",
              "            ChangeState('MercJump');",
              "            exit;",
              "        }",
              "    }",
              "}",
              "else",
              "{",
              "    if(!free_id || CurTurn() > free_timer - 30)",
              "    {",
              "        target_id = 0;",
              "        OrderLock(CurShip, 0);",
              "",
              "        if(!free_id && CurTurn() <= free_timer - 30)",
              "        {",
              "            if(!razr && GroupCount(MercCenter)) Ether(4, '', \"<free_name> успешно выполнил ваш контракт на убийство корабля <target_name>. <br> - <clr>Центр наемников Обмен<clrEnd>\");",
              "            else razr = 0;",
              "        }",
              "        else if(CurTurn() > free_timer - 30 && GroupCount(MercCenter))",
              "        {",
              "            Ether(5, '', \"<free_name> разорвал контракт по ликвидации корабля <target_name> в связи с истечением срока. <br> - <clr>Центр наемников Обмен<clrEnd>\");",
              "        }",
              "",
              "        free_id = 0;",
              "        ChangeState('MercNormal');",
              "        exit;",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  154,
          "#":  174,
          "Total.Lines":  27,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(ShipInHyperSpace(CurShip)) exit;",
              "",
              "//Лидер летит на встречу с игроком",
              "if(!ShipInNormalSpace(CurShip)) OrderTakeOff(CurShip);",
              "else if(ShipStar(CurShip) == ShipStar(Player()))",
              "{",
              "    OrderFollowShip(CurShip, Player(), 0);",
              "    ShipFreeFlight(CurShip, 1); //Автонаведение орудий на всякую хрень",
              "",
              "    if(ShipInNormalSpace(Player()))",
              "    {",
              "        if(Dist(CurShip, Player()) <= ShipRadarRange(Player()))",
              "        {",
              "            if(ShipGroup(CurShip) == RedAxesLeader) Dialog(TalkRed, RedAxesLeader);",
              "            else if(ShipGroup(CurShip) == AtlantLeader) Dialog(TalkAtlant, AtlantLeader);",
              "            else if(ShipGroup(CurShip) == FaeyangelionLeader) Dialog(TalkFei, FaeyangelionLeader);",
              "        }",
              "    }",
              "}",
              "else OrderJump(CurShip, ShipStar(Player()));",
              "",
              "//Запахло жареным, лидер драпает",
              "if(HullDamage(CurShip) > 66)",
              "{",
              "    ChangeState('LeaderReturning');",
              "    exit;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  156,
          "#":  175,
          "Total.Lines":  51,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Переговоры завершены, лидер возвращается обратно на Меркурий",
              "MercOrganisationsData['NegotiationsInProgress'] = 0;",
              "MercOrganisationsData['NegotiationsTargetSide'] = -1;",
              "",
              "//Лидер либо сядет к себе в штаб, либо на ЦН, либо улетит в неизвестность",
              "if(ShipGroup(CurShip) == RedAxesLeader) dword base = GroupToShip(RedAxesHQ);",
              "else if(ShipGroup(CurShip) == AtlantLeader) base = GroupToShip(AtlantHQ);",
              "else /*if(ShipGroup(CurShip) == FaeyangelionLeader)*/ base = GroupToShip(FaeyangelionHQ);",
              "if(!base) base = GroupToShip(MercCenter);",
              "",
              "if(base)",
              "{",
              "    if(ShipStar(CurShip) == ShipStar(base))",
              "    {",
              "        if(ShipInNormalSpace(CurShip)) OrderLanding(CurShip, base);",
              "        else OrderTakeOff(CurShip);",
              "    }",
              "    else",
              "    {",
              "        if(!ShipInNormalSpace(CurShip)) OrderTakeOff(CurShip);",
              "        else OrderJump(CurShip, ShipStar(base));",
              "    }",
              "}",
              "else",
              "{",
              "    if(!ShipInNormalSpace(CurShip)) OrderTakeOff(CurShip);",
              "    else OrderJump(CurShip, StarNearbyStars(ShipStar(CurShip), 65));",
              "}",
              "",
              "if(!ShipInNormalSpace(CurShip))",
              "{",
              "    if(base)",
              "    {",
              "        if(GetShipRuins() != base)",
              "        {",
              "            TransferShip(CurShip, base); //В свой штаб или в ЦН",
              "            ShipRepairEq(CurShip);",
              "            HullHP(CurShip, 'To100');",
              "        }",
              "    }",
              "    else",
              "    {",
              "        TransferShip(CurShip, StarPlanets(GalaxyStar(People), 0)); //На Меркурий",
              "        ShipRepairEq(CurShip);",
              "        HullHP(CurShip, 'To100');",
              "    }",
              "",
              "    OrderLock(CurShip, 1);",
              "    ChangeState('LeaderInactive');",
              "    exit;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  157,
          "#":  176,
          "Total.Lines":  33,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Лидер нападает на игрока, переговоры приняли радикальный оборот",
              "//(поведение лидера здесь никак не контролируется, как только игрок потеряет его из виду, тот отправиться на Меркурий)",
              "MercOrganisationsData['NegotiationsInProgress'] = 0;",
              "MercOrganisationsData['NegotiationsTargetSide'] = -1;",
              "",
              "//Лидер незаметно возвращается обратно в штаб, либо на Меркурий",
              "if(ShipInHyperSpace(CurShip) || ShipStar(CurShip) != ShipStar(Player()))",
              "{",
              "    if(ShipGroup(CurShip) == RedAxesLeader) dword base = GroupToShip(RedAxesHQ);",
              "    else if(ShipGroup(CurShip) == AtlantLeader) base = GroupToShip(AtlantHQ);",
              "    else /*if(ShipGroup(CurShip) == FaeyangelionLeader)*/ base = GroupToShip(FaeyangelionHQ);",
              "    if(!base) base = GroupToShip(MercCenter);",
              "",
              "    if(base)",
              "    {",
              "        if(GetShipRuins() != base)",
              "        {",
              "            TransferShip(CurShip, base); //В свой штаб или в ЦН",
              "            ShipRepairEq(CurShip);",
              "            HullHP(CurShip, 'To100');",
              "        }",
              "    }",
              "    else",
              "    {",
              "        TransferShip(CurShip, StarPlanets(GalaxyStar(People), 0)); //На Меркурий",
              "        ShipRepairEq(CurShip);",
              "        HullHP(CurShip, 'To100');",
              "    }",
              "",
              "    OrderLock(CurShip, 1);",
              "    ChangeState('LeaderInactive');",
              "    exit;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  159,
          "#":  177,
          "Total.Lines":  36,
          "Code.Type":  "Turn",
          "Code":          
          [
              "dword target = IdToShip(target_id);",
              "",
              "if(ShipInNormalSpace(CurShip) && target)",
              "{",
              "    if(ShipStar(CurShip) == ShipStar(target))",
              "    {",
              "        ChangeState('MercAttack');",
              "        exit;",
              "    }",
              "    else",
              "    {",
              "        ChangeState('MercJump');",
              "        exit;",
              "    }",
              "}",
              "",
              "if(!target || !free_id || (CurTurn() > free_timer - 30))",
              "{",
              "    target_id = 0;",
              "    OrderLock(CurShip, 0);",
              "",
              "    if(!free_id && CurTurn() <= free_timer - 30)",
              "    {",
              "        if(!razr && GroupCount(MercCenter)) Ether(4, '', \"<free_name> успешно выполнил ваш контракт на убийство корабля <target_name>. <br> - <clr>Центр наемников Обмен<clrEnd>\");",
              "        else razr = 0;",
              "    }",
              "    else if(CurTurn() > free_timer - 30 && GroupCount(MercCenter))",
              "    {",
              "        Ether(5, '', \"<free_name> разорвал контракт по ликвидации корабля <target_name> в связи с истечением срока. <br> - <clr>Центр наемников Обмен<clrEnd>\");",
              "    }",
              "",
              "    free_id = 0;",
              "",
              "    ChangeState('MercNormal');",
              "    exit;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  155,
          "#":  178,
          "Total.Lines":  55,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(MercOrganisationsData['NegotiationsInProgress'])",
              "{",
              "    //Игрок вызвал данного лидера на разговор",
              "    if(MercOrganisationsData['NegotiationsTargetSide'] == ShipGroup(CurShip))",
              "    {",
              "        //Корректируем отношения лидера к конкурирующим группировкам",
              "        int red_lead_alive = GroupCount(RedAxesLeader);",
              "        int atlant_lead_alive = GroupCount(AtlantLeader);",
              "        int fei_lead_alive = GroupCount(FaeyangelionLeader);",
              "",
              "        int cur_org = ShipGroup(CurShip);",
              "        if(cur_org == RedAxesMercs)",
              "        {",
              "            if(atlant_lead_alive)",
              "            {",
              "                RelationToRanger(CurShip, GroupToShip(AtlantLeader), MercOrganisationsData['RedAxes', 'RelationToAtlant']);",
              "                SetRelationGroup(RedAxesLeader, AtlantMercs, (MercOrganisationsData['RedAxes', 'RelationToAtlant'] + 15) / 25);",
              "            }",
              "            if(fei_lead_alive)",
              "            {",
              "                RelationToRanger(CurShip, GroupToShip(FaeyangelionLeader), MercOrganisationsData['RedAxes', 'RelationToFaeyangelion']);",
              "                SetRelationGroup(RedAxesLeader, FaeyangelionMercs, (MercOrganisationsData['RedAxes', 'RelationToFaeyangelion'] + 15) / 25);",
              "            }",
              "        }",
              "        else if(cur_org == AtlantMercs)",
              "        {",
              "            if(red_lead_alive)",
              "            {",
              "                RelationToRanger(CurShip, GroupToShip(RedAxesLeader), MercOrganisationsData['Atlant', 'RelationToRedAxes']);",
              "                SetRelationGroup(AtlantLeader, RedAxesMercs, (MercOrganisationsData['Atlant', 'RelationToRedAxes'] + 15) / 25);",
              "            }",
              "            if(fei_lead_alive)",
              "            {",
              "                RelationToRanger(CurShip, GroupToShip(FaeyangelionLeader), MercOrganisationsData['Atlant', 'RelationToFaeyangelion']);",
              "                SetRelationGroup(AtlantLeader, FaeyangelionMercs, (MercOrganisationsData['Atlant', 'RelationToFaeyangelion'] + 15) / 25);",
              "            }",
              "        }",
              "        else if(cur_org == FaeyangelionMercs)",
              "        {",
              "            if(red_lead_alive)",
              "            {",
              "                RelationToRanger(CurShip, GroupToShip(RedAxesLeader), MercOrganisationsData['Faeyangelion', 'RelationToRedAxes']);",
              "                SetRelationGroup(FaeyangelionLeader, RedAxesMercs, (MercOrganisationsData['Faeyangelion', 'RelationToRedAxes'] + 15) / 25);",
              "            }",
              "            if(atlant_lead_alive)",
              "            {",
              "                RelationToRanger(CurShip, GroupToShip(AtlantLeader), MercOrganisationsData['Faeyangelion', 'RelationToAtlant']);",
              "                SetRelationGroup(FaeyangelionLeader, AtlantMercs, (MercOrganisationsData['Faeyangelion', 'RelationToAtlant'] + 15) / 25);",
              "            }",
              "        }",
              "",
              "        ChangeState('LeaderMeeting');",
              "        exit;",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  179,
          "#":  193,
          "Total.Lines":  11,
          "Code.Type":  "Turn",
          "Code":          
          [
              "attack_star = GAnswerData;",
              "tint1 = GalaxyMoney(3) * coef / 100;",
              "tint1 = tint1 * coef2 / 100;",
              "tint1 = tint1 * cnt;",
              "",
              "if(Soldats == MercOrganisationsData['RedAxes', 'RecruitsReserve']) rel = MercOrganisationsData['RedAxes', 'RelationToPlayer'] / 2;",
              "else if(Soldats == MercOrganisationsData['Atlant', 'RecruitsReserve']) rel = MercOrganisationsData['Atlant', 'RelationToPlayer'] / 2;",
              "else if(Soldats == MercOrganisationsData['Faeyangelion', 'RecruitsReserve']) rel = MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] / 2;",
              "",
              "coef = 100 - rel;",
              "cost = tint1 * coef / 100;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  180,
          "#":  194,
          "Total.Lines":  17,
          "Code.Type":  "Turn",
          "Code":          
          [
              "raid_star = GAnswerData;",
              "",
              "if(StarOwner(GalaxyStar(raid_star)) == 0) subowner = 5;",
              "else if(StarOwner(GalaxyStar(raid_star)) == 2) subowner = 7;",
              "else if(StarCustomFaction(GalaxyStar(raid_star)) == 'Klissan') subowner = 10;",
              "else subowner = StarSeries(GalaxyStar(raid_star));",
              "",
              "tint1 = GalaxyMoney(3) * coef / 100;",
              "tint1 = tint1 * coef2 / 100;",
              "tint1 = tint1 * cnt;",
              "",
              "if(Soldats == MercOrganisationsData['RedAxes', 'RecruitsReserve']) rel = MercOrganisationsData['RedAxes', 'RelationToPlayer'] / 2;",
              "else if(Soldats == MercOrganisationsData['Atlant', 'RecruitsReserve']) rel = MercOrganisationsData['Atlant', 'RelationToPlayer'] / 2;",
              "else if(Soldats == MercOrganisationsData['Faeyangelion', 'RecruitsReserve']) rel = MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] / 2;",
              "",
              "coef = 100 - rel;",
              "cost = tint1 * coef / 100;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  181,
          "#":  195,
          "Total.Lines":  24,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cur_ship = GetTalkShip();",
              "",
              "if(merc_type == 1)",
              "{",
              "    int cur_org = ShipGroup(cur_ship);",
              "    if(cur_org == RedAxesMercs)",
              "    {",
              "        coef2 = 320;",
              "        tstr5 = \"Красных топоров\";",
              "    }",
              "    else if(cur_org == AtlantMercs)",
              "    {",
              "        coef2 = 200;",
              "        tstr5 = \"Атланта\";",
              "    }",
              "    else if(cur_org == FaeyangelionMercs)",
              "    {",
              "        coef2 = 450;",
              "        tstr5 = \"Фэйенгелиона\";",
              "    }",
              "}",
              "else coef2 = 300;",
              "",
              "tstr2 = '</color>' + CT('Talk.Exit');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -30,
          "Pos.y":  0,
          "Parent":  183,
          "#":  196,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tint1 = GAnswerData;",
              "cost = round(0.3 * ItemCost(StorageItems(tint1)));"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  184,
          "#":  197,
          "Total.Lines":  4,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cur_ship = GroupToShip(AtlantLeader);",
              "if(MercOrganisationsData['Atlant', 'RelationBeforeNegotiations'] > 45) MercOrganisationsData['Atlant', 'RelationBeforeNegotiations'] = 45;",
              "cost = (50 - MercOrganisationsData['Atlant', 'RelationBeforeNegotiations']) * GalaxyMoney(0);",
              "cost = cost + GalaxyMoney(2);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  185,
          "#":  198,
          "Total.Lines":  12,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cur_ship=ShipPartners(Player(),GAnswerData);",
              "",
              "//Запоминаем, сколько тренировок данного напарника уже провёл игрок",
              "//(позже разумно будет привязать расчёт цены тренировки к этой цифре)",
              "tint1=ShipFindCustomShipInfoByType(cur_ship,'ShuMercs_AdditionalStatsInfo');",
              "if(tint1 != -1)tint2=ShipCustomShipInfoData(cur_ship,tint1,1);",
              "",
              "if(ShipType(cur_ship)=='Merc')coef=50;",
              "else coef=100;",
              "",
              "//\"Я мистер Шу и мне вообще похуЮ, как именно будет считаться цена тренировки\"",
              "cost=GalaxyMoney(2)*130/100*coef/100;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  186,
          "#":  199,
          "Total.Lines":  4,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cur_ship = GroupToShip(RedAxesLeader);",
              "if(MercOrganisationsData['RedAxes', 'RelationBeforeNegotiations'] > 40) MercOrganisationsData['RedAxes', 'RelationBeforeNegotiations'] = 40;",
              "cost = (50 - MercOrganisationsData['RedAxes', 'RelationBeforeNegotiations']) * 0.8 * GalaxyMoney(0);",
              "cost = cost + GalaxyMoney(3);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  187,
          "#":  200,
          "Total.Lines":  4,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cur_ship = GroupToShip(FaeyangelionLeader);",
              "if(MercOrganisationsData['Faeyangelion', 'RelationBeforeNegotiations'] > 47) MercOrganisationsData['Faeyangelion', 'RelationBeforeNegotiations'] = 47;",
              "cost = (50 - MercOrganisationsData['Faeyangelion', 'RelationBeforeNegotiations']) * 1.3 * GalaxyMoney(0);",
              "cost = cost + GalaxyMoney(3);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  189,
          "#":  201,
          "Total.Lines":  9,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cur_ship = GetTalkShip();",
              "enemy = StarShips(ShipStar(cur_ship), GAnswerData);",
              "",
              "ShipSetBad(cur_ship, enemy);",
              "OrderFollowShip(cur_ship, enemy, 1, 10);",
              "",
              "enemy = Id(enemy);",
              "if(ShipFindCustomShipInfoByType(cur_ship, 'ShuTarget') == -1) ShipAddCustomShipInfo(cur_ship, 'ShuTarget', 'NoShow', enemy);",
              "else ShipCustomShipInfoData(cur_ship, ShipFindCustomShipInfoByType(cur_ship, 'ShuTarget'), 1, enemy);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  620,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  221,
          "Total.Lines":  17,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Добавляются ответы с названиями подходящих систем",
              "for(i = 0; i < GalaxyStars(); i = i + 1)",
              "{",
              "    dword star = GalaxyStar(i);",
              "    if(attack_type == 1 && star != PlanetToStar(PlanetPirateClan()) && star != GalaxyStar(NifigatzId))",
              "    {",
              "        InjectAnswer('AttackMB1', Name(star), i);",
              "    }",
              "    else if( StarOwner(star) == 1 ||",
              "             StarCustomFaction(star) == 'Klissan' ||",
              "            (StarOwner(ShipStar(Player())) == 2 && !StarOwner(star)) )",
              "    {",
              "        InjectAnswer('AttackMB2', Name(star), i);",
              "    }",
              "}",
              "",
              "DAnswer('restart~' + \"Я передумал\");"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  56,
          "#":  222,
          "Total.Lines":  5,
          "Code.Type":  "Turn",
          "Code":          
          [
              "for(int i = 0; i < ShipPartners(Player()); i = i + 1)",
              "{",
              "    dword ship = ShipPartners(Player(), i);",
              "    if(GetShipRuins(ship) == GroupToShip(MercCenter)) InjectAnswer('HullMB', '<color=0,50,200>' + Name(ship) + '</color>', i);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  30,
          "Pos.y":  0,
          "Parent":  57,
          "#":  223,
          "Total.Lines":  10,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cur_ship = ShipPartners(Player(), GAnswerData);",
              "for(int i = 0; i < StorageItems(); i = i + 1)",
              "{",
              "    if(StorageItemLocation(i) != GetShipRuins(Player())) continue;",
              "    dword item = StorageItems(i);",
              "    if(ItemType(item) != t_Hull) continue;",
              "    InjectAnswer('HullMBAct', Name(item), i);",
              "}",
              "",
              "DAnswer('restart~' + \"Думаю, мои партнеры обойдутся и без этого\");"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  69,
          "#":  224,
          "Total.Lines":  14,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Перебор напарников для построения списка доступных для тренировки кораблей",
              "for(i = 0; i < ShipPartners(Player()); i = i + 1)",
              "{",
              "    cur_ship = ShipPartners(Player(), i);",
              "    if(GetShipRuins(cur_ship) != cur_ruin) continue;",
              "    //Проверка на то, что статы напарника были повышены игроком не более 6 раз",
              "    tint1 = ShipFindCustomShipInfoByType(cur_ship, 'ShuMercs_AdditionalStatsInfo');",
              "    if(~tint1)",
              "    {",
              "        tint2 = ShipCustomShipInfoData(cur_ship, tint1, 1);",
              "        if(tint2 >= 6) continue;",
              "    }",
              "    InjectAnswer('TrainMB', '<Name(cur_ship)>', i);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  83,
          "#":  225,
          "Total.Lines":  6,
          "Code.Type":  "Turn",
          "Code":          
          [
              "for(int i = 0; i < StarShips(ShipStar(cur_ship)); i = i + 1)",
              "{",
              "    dword ship = StarShips(ShipStar(cur_ship), i);",
              "    //Конструкция '<Object=' + ship +',23,17,0>' нужна для появления кнопки центрирования на корабль",
              "    if(ship != Player() && ShipType(ship) != 'Merc' && ShipInNormalSpace(ship)) InjectAnswer('war', Name(ship) + '<Object=' + ship + ',23,17,0>', i);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -30,
          "Pos.y":  0,
          "Parent":  220,
          "#":  226,
          "Total.Lines":  4,
          "Code.Type":  "Turn",
          "Code":          
          [
              "Squad = 0;",
              "Soldats = MercOrganisationsData['FreeRecruitsReserve'];",
              "tstr6 = \"Фрилансеры\";",
              "coef = 140;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  93,
          "#":  227,
          "Total.Lines":  4,
          "Code.Type":  "Turn",
          "Code":          
          [
              "Squad = 3;",
              "Soldats = MercOrganisationsData['Faeyangelion', 'RecruitsReserve'];",
              "tstr6 = \"Корпорация Фэйенгелион\";",
              "coef = 170;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  95,
          "#":  228,
          "Total.Lines":  4,
          "Code.Type":  "Turn",
          "Code":          
          [
              "Squad = 2;",
              "Soldats = MercOrganisationsData['Atlant', 'RecruitsReserve'];",
              "tstr6 = \"ЧОП Атлант\";",
              "coef = 75;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  620,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  229,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "coef2 = 105;",
              "attack_type = 1;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  98,
          "#":  230,
          "Total.Lines":  3,
          "Code.Type":  "Turn",
          "Code":          
          [
              "coef2 = 95;",
              "//\"Я мистер Шу, и мне вообще похуЮ на качество диалогов и иммерсивность игры\"",
              "//\"Поэтому я прямо в реплики персонала ЦН добавлю указание на навык лидерства игрока, см. ниже\""          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  620,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  231,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cnt = GAnswerData;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  740,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  232,
          "Total.Lines":  44,
          "Code.Type":  "Turn",
          "Code":          
          [
              "for(int i = 0; i < cnt; i = i + 1)",
              "{",
              "    cur_planet = FindPlanetByAdvancement(100, -1);",
              "",
              "    if(Squad == 1)",
              "    {",
              "        cur_ship = SpawnMerc(cur_planet, GroupToShip(MercCenter), 1);",
              "        MercOrganisationsData['RedAxes', 'RecruitsReserve'] = MercOrganisationsData['RedAxes', 'RecruitsReserve'] - 1;",
              "",
              "        MercOrganisationsData['RedAxes', 'RelationToPlayer'] = min(MercOrganisationsData['RedAxes', 'RelationToPlayer'] + 1, 100);",
              "        MercOrganisationsData['Atlant', 'RelationToPlayer'] = max(MercOrganisationsData['Atlant', 'RelationToPlayer'] - RndObject(0, 1, cur_ship), 0);",
              "        MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] = max(MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] - 1, 0);",
              "    }",
              "    else if(Squad == 2)",
              "    {",
              "        cur_ship = SpawnMerc(cur_planet, GroupToShip(MercCenter), 2);",
              "        MercOrganisationsData['Atlant', 'RecruitsReserve'] = MercOrganisationsData['Atlant', 'RecruitsReserve'] - 1;",
              "",
              "        MercOrganisationsData['RedAxes', 'RelationToPlayer'] = max(MercOrganisationsData['RedAxes', 'RelationToPlayer'] - RndObject(0, 1, cur_ship), 0);",
              "        MercOrganisationsData['Atlant', 'RelationToPlayer'] = min(MercOrganisationsData['Atlant', 'RelationToPlayer'] + 1, 100);",
              "        MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] = max(MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] - RndObject(0, 1, cur_ship), 0);",
              "    }",
              "    else if(Squad == 3)",
              "    {",
              "        cur_ship = SpawnMerc(cur_planet, GroupToShip(MercCenter), 3);",
              "        MercOrganisationsData['Faeyangelion', 'RecruitsReserve'] = MercOrganisationsData['Faeyangelion', 'RecruitsReserve'] - 1;",
              "",
              "        MercOrganisationsData['RedAxes', 'RelationToPlayer'] = max(MercOrganisationsData['RedAxes', 'RelationToPlayer'] - 1, 0);",
              "        MercOrganisationsData['Atlant', 'RelationToPlayer'] = max(MercOrganisationsData['Atlant', 'RelationToPlayer'] - RndObject(0, 1, cur_ship), 0);",
              "        MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] = min(MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] + 1, 100);",
              "    }",
              "    else if(!Squad)",
              "    {",
              "        cur_ship = SpawnMerc(cur_planet, GroupToShip(MercCenter), 0);",
              "        MercOrganisationsData['FreeRecruitsReserve'] = MercOrganisationsData['FreeRecruitsReserve'] - 1;",
              "    }",
              "",
              "    ShipOwner(cur_ship, ShipOwner(Player())); //Чтобы не разрывали с игроком контракт сразу после найма",
              "    ShipSetPartner(cur_ship, Player(), tint4);",
              "    ChangeState('MercEscort', cur_ship);",
              "}",
              "",
              "ShipMoney(Player(), ShipMoney(Player()) - cost);",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  100,
          "#":  235,
          "Total.Lines":  3,
          "Code.Type":  "Turn",
          "Code":          
          [
              "coef2 = 60;",
              "attack_type = 2;",
              "cnt = 3;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  560,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  236,
          "Total.Lines":  45,
          "Code.Type":  "Turn",
          "Code":          
          [
              "timer_attack = CurTurn() + 90;",
              "enemy_for_all = 0;",
              "",
              "for(int i = 0; i < cnt; i = i + 1)",
              "{",
              "    cur_planet = FindPlanetByAdvancement(100, -1);",
              "",
              "    if(Squad == 1)",
              "    {",
              "        cur_ship = SpawnMerc(cur_planet, GroupToShip(MercCenter), 1);",
              "        MercOrganisationsData['RedAxes', 'RecruitsReserve'] =  MercOrganisationsData['RedAxes', 'RecruitsReserve'] - 1;",
              "",
              "        MercOrganisationsData['RedAxes', 'RelationToPlayer'] = min(MercOrganisationsData['RedAxes', 'RelationToPlayer'] + 1, 100);",
              "        MercOrganisationsData['Atlant', 'RelationToPlayer'] = max(MercOrganisationsData['Atlant', 'RelationToPlayer'] - RndObject(0, 1, cur_ship), 0);",
              "        MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] = max(MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] - 1, 0);",
              "    }",
              "    else if(Squad == 2)",
              "    {",
              "        cur_ship = SpawnMerc(cur_planet, GroupToShip(MercCenter), 2);",
              "        MercOrganisationsData['Atlant', 'RecruitsReserve'] =  MercOrganisationsData['Atlant', 'RecruitsReserve'] - 1;",
              "",
              "        MercOrganisationsData['RedAxes', 'RelationToPlayer'] = max(MercOrganisationsData['RedAxes', 'RelationToPlayer'] - RndObject(0, 1, cur_ship), 0);",
              "        MercOrganisationsData['Atlant', 'RelationToPlayer'] = min(MercOrganisationsData['Atlant', 'RelationToPlayer'] + 1, 100);",
              "        MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] = max(MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] - RndObject(0, 1, cur_ship), 0);",
              "    }",
              "    else if(Squad == 3)",
              "    {",
              "        cur_ship = SpawnMerc(cur_planet, GroupToShip(MercCenter), 3);",
              "        MercOrganisationsData['Faeyangelion', 'RecruitsReserve'] = MercOrganisationsData['Faeyangelion', 'RecruitsReserve'] - 1;",
              "",
              "        MercOrganisationsData['RedAxes', 'RelationToPlayer'] = max(MercOrganisationsData['RedAxes', 'RelationToPlayer'] - 1, 0);",
              "        MercOrganisationsData['Atlant', 'RelationToPlayer'] = max(MercOrganisationsData['Atlant', 'RelationToPlayer'] - RndObject(0, 1, cur_ship), 0);",
              "        MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] = min(MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] + 1, 100);",
              "    }",
              "    else if(!Squad)",
              "    {",
              "        cur_ship = SpawnMerc(cur_planet, GroupToShip(MercCenter), 0);",
              "        MercOrganisationsData['FreeRecruitsReserve'] = MercOrganisationsData['FreeRecruitsReserve'] - 1;",
              "    }",
              "",
              "    ChangeState('AttackTakeoff', cur_ship);",
              "}",
              "",
              "ShipMoney(Player(), ShipMoney(Player()) - cost);",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  650,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  237,
          "Total.Lines":  45,
          "Code.Type":  "Turn",
          "Code":          
          [
              "rospusk_raida = CurTurn() + 1;",
              "timer_raid = CurTurn() + 90;",
              "",
              "for(int i = 0; i < cnt; i = i + 1)",
              "{",
              "    cur_planet = FindPlanetByAdvancement(100, -1);",
              "",
              "    if(Squad == 1)",
              "    {",
              "        cur_ship = SpawnMerc(cur_planet, GroupToShip(MercCenter), 1);",
              "        MercOrganisationsData['RedAxes', 'RecruitsReserve'] = MercOrganisationsData['RedAxes', 'RecruitsReserve'] - 1;",
              "",
              "        MercOrganisationsData['RedAxes', 'RelationToPlayer'] = min(MercOrganisationsData['RedAxes', 'RelationToPlayer'] + 1, 100);",
              "        MercOrganisationsData['Atlant', 'RelationToPlayer'] = max(MercOrganisationsData['Atlant', 'RelationToPlayer'] - RndObject(0, 1, cur_ship), 0);",
              "        MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] = max(MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] - 1, 0);",
              "    }",
              "    else if(Squad == 2)",
              "    {",
              "        cur_ship = SpawnMerc(cur_planet, GroupToShip(MercCenter), 2);",
              "        MercOrganisationsData['Atlant', 'RecruitsReserve'] = MercOrganisationsData['Atlant', 'RecruitsReserve'] - 1;",
              "",
              "        MercOrganisationsData['RedAxes', 'RelationToPlayer'] = max(MercOrganisationsData['RedAxes', 'RelationToPlayer'] - RndObject(0, 1, cur_ship), 0);",
              "        MercOrganisationsData['Atlant', 'RelationToPlayer'] = min(MercOrganisationsData['Atlant', 'RelationToPlayer'] + 1, 100);",
              "        MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] = max(MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] - RndObject(0, 1, cur_ship), 0);",
              "    }",
              "    else if(Squad == 3)",
              "    {",
              "        cur_ship = SpawnMerc(cur_planet, GroupToShip(MercCenter), 3);",
              "        MercOrganisationsData['Faeyangelion', 'RecruitsReserve'] = MercOrganisationsData['Faeyangelion', 'RecruitsReserve'] - 1;",
              "",
              "        MercOrganisationsData['RedAxes', 'RelationToPlayer'] = max(MercOrganisationsData['RedAxes', 'RelationToPlayer'] - 1, 0);",
              "        MercOrganisationsData['Atlant', 'RelationToPlayer'] = max(MercOrganisationsData['Atlant', 'RelationToPlayer'] - RndObject(0, 1, cur_ship), 0);",
              "        MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] = min(MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] + 1, 100);",
              "    }",
              "    else if(!Squad)",
              "    {",
              "        cur_ship = SpawnMerc(cur_planet, GroupToShip(MercCenter), 0);",
              "        MercOrganisationsData['FreeRecruitsReserve'] = MercOrganisationsData['FreeRecruitsReserve'] - 1;",
              "    }",
              "",
              "    ChangeState('RaidTakeoff', cur_ship);",
              "}",
              "",
              "ShipMoney(Player(), ShipMoney(Player()) - cost);",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  104,
          "#":  238,
          "Total.Lines":  115,
          "Code.Type":  "Turn",
          "Code":          
          [
              "int is_valid = 0;",
              "tstr6 = TextBox(\"Введите имя цели\");",
              "check = 0;",
              "for(int i = 0; i < GalaxyStars(); i = i + 1)",
              "{",
              "    dword star = GalaxyStar(i);",
              "    for(int j = StarShips(star) - 1; j >= 0; j = j - 1)",
              "    {",
              "        target_ship = StarShips(star, j);",
              "",
              "        if(lowercase(DeleteTags(ShortName(target_ship))) != lowercase(tstr6))",
              "        {",
              "            if(lowercase(DeleteTags(Name(target_ship))) != lowercase(tstr6))",
              "            {",
              "                check = 6; //Цель невозможно найти в поиске, наёмник откажется",
              "                continue;",
              "            }",
              "        }",
              "",
              "        if(ShipStrengthInAverageRanger(target_ship) >= ShipStrengthInAverageRanger(cur_ship) * 1.50)",
              "        {",
              "            check = 1; //Цель слишком сильна, наёмник откажется",
              "        }",
              "        else if(ShipStrengthInAverageRanger(target_ship) >= ShipStrengthInAverageRanger(cur_ship) * 1.35)",
              "        {",
              "            check = 2;",
              "            coef = 200;",
              "        }",
              "        else if(ShipStrengthInAverageRanger(target_ship) >= ShipStrengthInAverageRanger(cur_ship) * 1.20)",
              "        {",
              "            check = 3;",
              "            coef = 150;",
              "        }",
              "        else if(ShipStrengthInAverageRanger(target_ship) >= ShipStrengthInAverageRanger(cur_ship) * 0.85)",
              "        {",
              "            check = 4;",
              "            coef = 110;",
              "        }",
              "        else",
              "        {",
              "            check = 5;",
              "            coef = 75;",
              "        }",
              "",
              "        if(ShipStar(target_ship) == GalaxyStar(TortugatzId) || ShipStar(target_ship) == GalaxyStar(NifigatzId))",
              "        {",
              "            check = 6; //Цель невозможно найти в поиске, наёмник откажется",
              "        }",
              "",
              "        if(target_ship == cur_ship ||",
              "           target_ship == Terron() ||",
              "           target_ship == Keller() ||",
              "           target_ship == Blazer() ||",
              "           target_ship == Player() ||",
              "           ShipOwner(target_ship) == Kling ||",
              "",
              "           ShipType(target_ship) == 'Machpella' ||",
              "           ShipType(target_ship) == 'Neurolink' ||",
              "           ShipType(target_ship) == 'Unknown' ||",
              "",
              "           ShipTypeN(target_ship) == t_Tranclucator ||",
              "           ObjectType(target_ship) == 4)",
              "        {",
              "            check = 7; //Цель выходит за рамки здравого смысла, наёмник откажется",
              "        }",
              "",
              "        if(ShipType(target_ship) == 'MercLeader')",
              "        {",
              "            check = 7; //Цель выходит за рамки здравого смысла, наёмник откажется",
              "        }",
              "",
              "        //Если корабль невозможно выбрать целью для атаки рейнджера",
              "        if(NoTargetToShip(target_ship) == 1 || NoTargetToShip(target_ship) == 2 || NoTargetToShip(target_ship) == 4)",
              "        {",
              "            check = 7; //Цель выходит за рамки здравого смысла, наёмник откажется",
              "        }",
              "",
              "        if(ShipType(target_ship) == 'Merc' || ShipType(target_ship) == 'Freelancer')",
              "        {",
              "            if(GroupToShip(MercCenter))",
              "            {",
              "                if(ShipStar(target_ship) == ShipStar(GroupToShip(MercCenter))) check = 8; //Цель является другим наёмником и находится в системе с центром наёмников, наёмник откажется",
              "            }",
              "        }",
              "",
              "        if(ShipIsPartner(target_ship) == cur_ship || ShipIsPartner(cur_ship) == target_ship)",
              "        {",
              "            check = 9; //Цель является коллегой наёмника, наёмник откажется",
              "        }",
              "",
              "        if(ShipType(cur_ship) == 'Merc' && ShipType(target_ship) == 'Merc')",
              "        {",
              "            if(ShipGroup(cur_ship) == ShipGroup(target_ship)) check = 9; //Цель является коллегой наёмника, наёмник откажется",
              "        }",
              "",
              "        cost = GalaxyMoney(3) * coef / 100;",
              "",
              "        if(merc_type == 1)",
              "        {",
              "            cost = cost * coef2 / 100;",
              "            int cur_org = ShipGroup(cur_ship);",
              "            if(cur_org == RedAxesMercs) rel = MercOrganisationsData['RedAxes', 'RelationToPlayer'] / 2;",
              "            else if(cur_org == AtlantMercs) rel = MercOrganisationsData['Atlant', 'RelationToPlayer'] / 2;",
              "            else if(cur_org == FaeyangelionMercs) rel = MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] / 2;",
              "        }",
              "",
              "        coef = 100 - rel;",
              "        cost = cost * coef / 100;",
              "        is_valid = 1;",
              "",
              "        break;",
              "    }",
              "",
              "    if(is_valid) break;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  105,
          "#":  239,
          "Total.Lines":  40,
          "Code.Type":  "Turn",
          "Code":          
          [
              "free_timer = CurTurn() + 120;",
              "free_name = Name(cur_ship);",
              "target_name = Name(target_ship);",
              "target_id = Id(target_ship);",
              "free_id = Id(cur_ship);",
              "",
              "if(merc_type == 2)",
              "{",
              "    MercOrganisationsData['RedAxes', 'RelationToPlayer'] = max(MercOrganisationsData['RedAxes', 'RelationToPlayer'] - 2, 0);",
              "    MercOrganisationsData['Atlant', 'RelationToPlayer'] = max(MercOrganisationsData['Atlant', 'RelationToPlayer'] - 2, 0);",
              "    MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] = max(MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] - 2, 0);",
              "}",
              "else if(merc_type == 1)",
              "{",
              "    int cur_org = ShipGroup(cur_ship);",
              "    if(cur_org == RedAxesMercs)",
              "    {",
              "        MercOrganisationsData['RedAxes', 'RelationToPlayer'] = min(MercOrganisationsData['RedAxes', 'RelationToPlayer'] + 1, 100);",
              "        MercOrganisationsData['Atlant', 'RelationToPlayer'] = max(MercOrganisationsData['Atlant', 'RelationToPlayer'] - RndObject(0, 1, cur_ship), 0);",
              "        MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] = max(MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] - 1, 0);",
              "    }",
              "    else if(cur_org == AtlantMercs)",
              "    {",
              "        MercOrganisationsData['RedAxes', 'RelationToPlayer'] = max(MercOrganisationsData['RedAxes', 'RelationToPlayer'] - RndObject(0, 1, cur_ship), 0);",
              "        MercOrganisationsData['Atlant', 'RelationToPlayer'] = min(MercOrganisationsData['Atlant', 'RelationToPlayer'] + 1, 100);",
              "        MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] = max(MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] - RndObject(0, 1, cur_ship), 0);",
              "    }",
              "    else if(cur_org == FaeyangelionMercs)",
              "    {",
              "        MercOrganisationsData['RedAxes', 'RelationToPlayer'] = max(MercOrganisationsData['RedAxes', 'RelationToPlayer'] - 1, 0);",
              "        MercOrganisationsData['Atlant', 'RelationToPlayer'] = max(MercOrganisationsData['Atlant', 'RelationToPlayer'] - RndObject(0, 1, cur_ship), 0);",
              "        MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] = min(MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] + 1, 100);",
              "    }",
              "}",
              "",
              "if(ShipIsPartner(cur_ship)) ShipSetPartner(cur_ship, ShipIsPartner(cur_ship), 0);",
              "ChangeState('MercFreeHireState', cur_ship);",
              "",
              "ShipMoney(Player(), ShipMoney(Player()) - cost);",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  107,
          "#":  240,
          "Total.Lines":  10,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Процедура замены корпуса выбранного наёмника",
              "dword old_hull = GetItemFromShip(cur_ship, 0);",
              "AddItemToShip(cur_ship, GetItemFromStorage(tint1));",
              "FreeItem(old_hull);",
              "",
              "ArrangeItems(cur_ship);",
              "Chameleon(cur_ship);",
              "",
              "ShipMoney(Player(), ShipMoney(Player()) - cost);",
              "Sound('Sound.Repair');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  108,
          "#":  241,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "coef = 85;",
              "cost = GalaxyMoney(3) * coef / 100 + 500 * GalaxyTechLevel();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  109,
          "#":  242,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "coef = 100;",
              "cost = GalaxyMoney(3) * coef / 100 + 500 * GalaxyTechLevel();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  110,
          "#":  243,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "coef = 110;",
              "cost = GalaxyMoney(3) * coef / 100 + 500 * GalaxyTechLevel();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  111,
          "#":  244,
          "Total.Lines":  23,
          "Code.Type":  "Turn",
          "Code":          
          [
              "dword leader = GroupToShip(AtlantLeader);",
              "MercOrganisationsData['NegotiationsInProgress'] = 1;",
              "MercOrganisationsData['NegotiationsTargetSide'] = AtlantMercs;",
              "MercOrganisationsData['Atlant', 'RelationBeforeNegotiations'] = MercOrganisationsData['Atlant', 'RelationToPlayer'];",
              "MercOrganisationsData['Atlant', 'RelationToPlayer'] = 50;",
              "atlant_call = CurTurn() + 1000;",
              "",
              "dword best_planet = FindPlanetByAdvancement(100, -1);",
              "TransferShip(leader, best_planet);",
              "ShipMoney(leader, ShipMoney(leader) + GalaxyMoney(4, 4) * 500);",
              "ShipRefit(leader);",
              "ShipRefit(leader);",
              "ShipRefit(leader);",
              "ShipRefit(leader);",
              "ShipRefit(leader);",
              "ShipImproveItems(leader, 25);",
              "ArrangeItems(leader);",
              "",
              "if(RndObject(1, 100, leader) < 50) TransferShip(leader, GroupToShip(MercCenter));",
              "else MakeShipEnterStar(leader, ShipStar(Player()), StarNearbyStars(ShipStar(Player()), RndObject(50, 70, leader)), RndObject(3, 5, leader));",
              "",
              "ShipMoney(Player(), ShipMoney(Player()) - cost);",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  30,
          "Pos.y":  60,
          "Parent":  113,
          "#":  245,
          "Total.Lines":  11,
          "Code.Type":  "Turn",
          "Code":          
          [
              "MercOrganisationsData['NegotiationsInProgress'] = 4;",
              "OrderLock(cur_ship, 0);",
              "ChangeState('LeaderAttacking', cur_ship);",
              "",
              "NoTalkToShip(cur_ship, 1);",
              "ShipSetBad(cur_ship, Player());",
              "RelationToRanger(cur_ship, Player(), 0);",
              "OrderFollowShip(cur_ship, Player(), 1, 50);",
              "",
              "MercOrganisationsData['Atlant', 'RelationToPlayer'] = 0;",
              "MercOrganisationsData['Atlant', 'RelationBeforeNegotiations'] = 0;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  348,
          "#":  246,
          "Total.Lines":  5,
          "Code.Type":  "Turn",
          "Code":          
          [
              "MercOrganisationsData['NegotiationsInProgress'] = 3;",
              "ChangeState('LeaderReturning', cur_ship);",
              "",
              "NoTalkToShip(cur_ship, 1);",
              "MercOrganisationsData['Atlant', 'RelationToPlayer'] = MercOrganisationsData['Atlant', 'RelationBeforeNegotiations'];"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  119,
          "#":  247,
          "Total.Lines":  30,
          "Code.Type":  "Turn",
          "Code":          
          [
              "MercOrganisationsData['NegotiationsInProgress'] = 2;",
              "ChangeState('LeaderReturning', cur_ship);",
              "",
              "NoTalkToShip(cur_ship, 1);",
              "TruceBetweenShips(cur_ship, Player());",
              "RelationToRanger(cur_ship, Player(), 50);",
              "ShipSetBad(cur_ship, 0);",
              "MercOrganisationsData['Atlant', 'RelationToPlayer'] = 50;",
              "TruceBetweenShips(cur_ship, Player());",
              "",
              "for(int i = GalaxyStars() - 1; i >= 0; i = i - 1)",
              "{",
              "    for(int j = StarShips(GalaxyStar(i)) - 1; j >= 0; j = j - 1)",
              "    {",
              "        dword ship = StarShips(GalaxyStar(i), j);",
              "        if(ShipType(ship) != 'Merc') continue;",
              "        if(ShipGroup(ship) != AtlantMercs) continue; //Только наёмники из ЧОП \"Атлант\"",
              "        if(ship == cur_ship) continue;",
              "",
              "        RelationToRanger(ship, Player(), MercOrganisationsData['Atlant', 'RelationToPlayer']);",
              "        if(IsPlayer(ShipGetBad(ship)))",
              "        {",
              "            ShipSetBad(ship, 0);",
              "            TruceBetweenShips(ship, Player());",
              "        }",
              "    }",
              "}",
              "",
              "ShipMoney(Player(), ShipMoney(Player()) - cost);",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  343,
          "#":  248,
          "Total.Lines":  5,
          "Code.Type":  "Turn",
          "Code":          
          [
              "MercOrganisationsData['NegotiationsInProgress'] = 3;",
              "ChangeState('LeaderReturning', cur_ship);",
              "",
              "NoTalkToShip(cur_ship, 1);",
              "MercOrganisationsData['RedAxes', 'RelationToPlayer'] = MercOrganisationsData['RedAxes', 'RelationBeforeNegotiations'];"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  124,
          "#":  249,
          "Total.Lines":  11,
          "Code.Type":  "Turn",
          "Code":          
          [
              "MercOrganisationsData['NegotiationsInProgress'] = 4;",
              "OrderLock(cur_ship, 0);",
              "ChangeState('LeaderAttacking', cur_ship);",
              "",
              "NoTalkToShip(cur_ship, 1);",
              "ShipSetBad(cur_ship, Player());",
              "RelationToRanger(cur_ship, Player(), 0);",
              "OrderFollowShip(cur_ship, Player(), 1, 50);",
              "",
              "MercOrganisationsData['RedAxes', 'RelationToPlayer'] = 0;",
              "MercOrganisationsData['RedAxes', 'RelationBeforeNegotiations'] = 0;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  123,
          "#":  250,
          "Total.Lines":  30,
          "Code.Type":  "Turn",
          "Code":          
          [
              "MercOrganisationsData['NegotiationsInProgress'] = 2;",
              "ChangeState('LeaderReturning', cur_ship);",
              "",
              "NoTalkToShip(cur_ship, 1);",
              "TruceBetweenShips(cur_ship, Player());",
              "RelationToRanger(cur_ship, Player(), 50);",
              "ShipSetBad(cur_ship, 0);",
              "MercOrganisationsData['RedAxes', 'RelationToPlayer'] = 50;",
              "TruceBetweenShips(cur_ship, Player());",
              "",
              "for(int i = GalaxyStars() - 1; i >= 0; i = i - 1)",
              "{",
              "    for(int j = StarShips(GalaxyStar(i)) - 1; j >= 0; j = j - 1)",
              "    {",
              "        dword ship = StarShips(GalaxyStar(i), j);",
              "        if(ShipType(ship) != 'Merc') continue;",
              "        if(ShipGroup(ship) != RedAxesMercs) continue; //Только наёмники из отряда \"Ржавые топоры\"",
              "        if(ship == cur_ship) continue;",
              "",
              "        RelationToRanger(ship, Player(), MercOrganisationsData['RedAxes', 'RelationToPlayer']);",
              "        if(IsPlayer(ShipGetBad(ship)))",
              "        {",
              "            ShipSetBad(ship, 0);",
              "            TruceBetweenShips(ship, Player());",
              "        }",
              "    }",
              "}",
              "",
              "ShipMoney(Player(), ShipMoney(Player()) - cost);",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  203,
          "#":  251,
          "Total.Lines":  5,
          "Code.Type":  "Turn",
          "Code":          
          [
              "MercOrganisationsData['NegotiationsInProgress'] = 3;",
              "ChangeState('LeaderReturning', cur_ship);",
              "",
              "NoTalkToShip(cur_ship, 1);",
              "MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] = MercOrganisationsData['Faeyangelion', 'RelationBeforeNegotiations'];"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  202,
          "#":  252,
          "Total.Lines":  11,
          "Code.Type":  "Turn",
          "Code":          
          [
              "MercOrganisationsData['NegotiationsInProgress'] = 4;",
              "OrderLock(cur_ship, 0);",
              "ChangeState('LeaderAttacking', cur_ship);",
              "",
              "NoTalkToShip(cur_ship, 1);",
              "ShipSetBad(cur_ship, Player());",
              "RelationToRanger(cur_ship, Player(), 0);",
              "OrderFollowShip(cur_ship, Player(), 1, 50);",
              "",
              "MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] = 0;",
              "MercOrganisationsData['Faeyangelion', 'RelationBeforeNegotiations'] = 0;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  205,
          "#":  253,
          "Total.Lines":  30,
          "Code.Type":  "Turn",
          "Code":          
          [
              "MercOrganisationsData['NegotiationsInProgress'] = 2;",
              "ChangeState('LeaderReturning', cur_ship);",
              "",
              "NoTalkToShip(cur_ship, 1);",
              "TruceBetweenShips(cur_ship, Player());",
              "RelationToRanger(cur_ship, Player(), 50);",
              "ShipSetBad(cur_ship, 0);",
              "MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] = 50;",
              "TruceBetweenShips(cur_ship, Player());",
              "",
              "for(int i = GalaxyStars() - 1; i >= 0; i = i - 1)",
              "{",
              "    for(int j = StarShips(GalaxyStar(i)) - 1; j >= 0; j = j - 1)",
              "    {",
              "        dword ship = StarShips(GalaxyStar(i), j);",
              "        if(ShipType(ship) != 'Merc') continue;",
              "        if(ShipGroup(ship) != FaeyangelionMercs) continue; //Только наёмники из корпорации \"Фэйенгелион\"",
              "        if(ship == cur_ship) continue;",
              "",
              "        RelationToRanger(ship, Player(), MercOrganisationsData['Faeyangelion', 'RelationToPlayer']);",
              "        if(IsPlayer(ShipGetBad(ship)))",
              "        {",
              "            ShipSetBad(ship, 0);",
              "            TruceBetweenShips(ship, Player());",
              "        }",
              "    }",
              "}",
              "",
              "ShipMoney(Player(), ShipMoney(Player()) - cost);",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  206,
          "#":  254,
          "Total.Lines":  23,
          "Code.Type":  "Turn",
          "Code":          
          [
              "dword leader = GroupToShip(RedAxesLeader);",
              "MercOrganisationsData['NegotiationsInProgress'] = 1;",
              "MercOrganisationsData['NegotiationsTargetSide'] = RedAxesMercs;",
              "MercOrganisationsData['RedAxes', 'RelationBeforeNegotiations'] = MercOrganisationsData['RedAxes', 'RelationToPlayer'];",
              "MercOrganisationsData['RedAxes', 'RelationToPlayer'] = 50;",
              "red_call = CurTurn() + 1000;",
              "",
              "dword best_planet = FindPlanetByAdvancement(100, -1);",
              "TransferShip(leader, best_planet);",
              "ShipMoney(leader, ShipMoney(leader) + GalaxyMoney(4, 4) * 500);",
              "ShipRefit(leader);",
              "ShipRefit(leader);",
              "ShipRefit(leader);",
              "ShipRefit(leader);",
              "ShipRefit(leader);",
              "ShipImproveItems(leader, 25);",
              "ArrangeItems(leader);",
              "",
              "if(RndObject(1, 100, leader) < 20) TransferShip(leader, GroupToShip(MercCenter));",
              "else MakeShipEnterStar(leader, ShipStar(Player()), StarNearbyStars(ShipStar(Player()), RndObject(50, 70, leader)), RndObject(4, 6, leader));",
              "",
              "ShipMoney(Player(), ShipMoney(Player()) - cost);",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  207,
          "#":  255,
          "Total.Lines":  23,
          "Code.Type":  "Turn",
          "Code":          
          [
              "dword leader = GroupToShip(FaeyangelionLeader);",
              "MercOrganisationsData['NegotiationsInProgress'] = 1;",
              "MercOrganisationsData['NegotiationsTargetSide'] = FaeyangelionMercs;",
              "MercOrganisationsData['Faeyangelion', 'RelationBeforeNegotiations'] = MercOrganisationsData['Faeyangelion', 'RelationToPlayer'];",
              "MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] = 50;",
              "fei_call = CurTurn() + 1000;",
              "",
              "dword best_planet = FindPlanetByAdvancement(100, -1);",
              "TransferShip(leader, best_planet);",
              "ShipMoney(leader, ShipMoney(leader) + GalaxyMoney(4, 4) * 500);",
              "ShipRefit(leader);",
              "ShipRefit(leader);",
              "ShipRefit(leader);",
              "ShipRefit(leader);",
              "ShipRefit(leader);",
              "ShipImproveItems(leader, 25);",
              "ArrangeItems(leader);",
              "",
              "if(RndObject(1, 100, leader) < 85) TransferShip(leader, GroupToShip(MercCenter));",
              "else MakeShipEnterStar(leader, ShipStar(Player()), StarNearbyStars(ShipStar(Player()), RndObject(50, 70, leader)), RndObject(3, 4, leader));",
              "",
              "ShipMoney(Player(), ShipMoney(Player()) - cost);",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  209,
          "#":  256,
          "Total.Lines":  6,
          "Code.Type":  "Turn",
          "Code":          
          [
              "enemy_for_all = 0;",
              "int cnt = ShipsInAttack();",
              "for(int i = 0; i < cnt; i = i + 1)",
              "{",
              "    ShipDeleteCustomShipInfo(ShipsInAttack(i), 'ShuTarget');",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  212,
          "#":  257,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(HullDamage(cur_ship) > 50) ChangeState('MercSpeedReturnToMB', cur_ship);",
              "ChangeState('MercReturnToMB', cur_ship);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  213,
          "#":  258,
          "Total.Lines":  8,
          "Code.Type":  "Turn",
          "Code":          
          [
              "int cnt = ShipsInAttack();",
              "for(int i = 0; i < cnt; i = i + 1)",
              "{",
              "    dword ship = ShipsInAttack(i);",
              "    ShipDeleteCustomShipInfo(ship, 'ShuTarget');",
              "    if(HullDamage(ship) > 50) ChangeState('MercSpeedReturnToMB', ship);",
              "    ChangeState('MercReturnToMB', ship);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  214,
          "#":  259,
          "Total.Lines":  14,
          "Code.Type":  "Turn",
          "Code":          
          [
              "int cnt = ShipsInAttack();",
              "for(int i = 0; i < cnt; i = i + 1)",
              "{",
              "    dword ship = ShipsInAttack(i);",
              "    if(ShipInStar(ship, GalaxyStar(attack_star)) && ShipInNormalSpace(ship))",
              "    {",
              "        ShipSetBad(ship, IdToShip(enemy));",
              "        OrderFollowShip(ship, IdToShip(enemy), 1, 10);",
              "    }",
              "",
              "    if(ShipFindCustomShipInfoByType(ship, 'ShuTarget') == -1) ShipAddCustomShipInfo(ship, 'ShuTarget', 'NoShow', enemy);",
              "    else ShipCustomShipInfoData(ship, ShipFindCustomShipInfoByType(ship, 'ShuTarget'), 1, enemy);",
              "    enemy_for_all = 1;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  215,
          "#":  260,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "free_id = 0;",
              "razr = 1;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  94,
          "#":  261,
          "Total.Lines":  4,
          "Code.Type":  "Turn",
          "Code":          
          [
              "Squad = 1;",
              "Soldats = MercOrganisationsData['RedAxes', 'RecruitsReserve'];",
              "tstr6 = \"Отряд Красные топоры\";",
              "coef = 120;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  287,
          "#":  288,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(Squad == 3) i = timer_raid + 60;",
              "else i = timer_raid;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -30,
          "Pos.y":  0,
          "Parent":  70,
          "#":  353,
          "Total.Lines":  20,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Добавляем ответы со списком навыков, которые ещё можно улучшить у партнёра",
              "for(i = 0; i <= 5; i = i + 1)",
              "{",
              "    if(i == 0) tstr1 = CT('Skills.sAccuracy.Name');",
              "    else if(i == 1) tstr1 = CT('Skills.sMobility.Name');",
              "    else if(i == 2) tstr1 = CT('Skills.sTechnical.Name');",
              "    else if(i == 3) tstr1 = CT('Skills.sTrader.Name');",
              "    else if(i == 4) tstr1 = CT('Skills.sCharm.Name');",
              "    else if(i == 5) tstr1 = CT('Skills.sLeadership.Name');",
              "",
              "    if(ShipSkill(cur_ship, i) < 6) InjectAnswer('TrainMBChoose', tstr1, i);",
              "    else",
              "    {",
              "        AddDialogBlock(tstr1, 1);",
              "        InjectAnswer('TrainMBChoose', tstr1, i);",
              "    }",
              "}",
              "",
              "//Добавляем ответ \"Назад\"",
              "DAnswer('restart~' + CT('FormGameSet2.Common.HelpCancel'));"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  30,
          "Pos.y":  0,
          "Parent":  71,
          "#":  357,
          "Total.Lines":  19,
          "Code.Type":  "Turn",
          "Code":          
          [
              "rand=GAnswerData;",
              "tint3=ShipMoney(Player());",
              "//Добавляем ответы с количеством доступных сессий, число которых можно провести для улучшения выбранного навыка",
              "for(i=1; i<=6; i=i+1)",
              "{",
              "    if(i == 1)tstr1=\"Один\";",
              "    else if(i == 2)tstr1=\"Два\";",
              "    else if(i == 3)tstr1=\"Три\";",
              "    else if(i == 4)tstr1=\"Четыре\";",
              "    else if(i == 5)tstr1=\"Пять\";",
              "    else if(i == 6)tstr1=\"Шесть\";",
              "",
              "    if(tint3 >= cost*i && ShipSkill(cur_ship, rand) <= (6-i) && tint2 <= (6-i))InjectAnswer('TrainMBAct', tstr1, i);",
              "    else",
              "    {",
              "        AddDialogBlock(tstr1, 1);",
              "        InjectAnswer('TrainMBAct', tstr1, i);",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -30,
          "Pos.y":  0,
          "Parent":  358,
          "#":  359,
          "Total.Lines":  12,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Сколько сессий тренировки выбрал игрок",
              "tint3 = GAnswerData;",
              "",
              "//Повышаем выбранный навык партнёра",
              "ShipSkill(cur_ship, rand, ShipSkill(cur_ship, rand) + tint3);",
              "",
              "//Запоминаем общее число проведённых тренировок для данного партнёра",
              "if(tint1 != -1) ShipCustomShipInfoData(cur_ship, tint1, 1, tint2 + tint3);",
              "else ShipAddCustomShipInfo(cur_ship, 'ShuMercs_AdditionalStatsInfo', 'NoShow', tint3);",
              "",
              "ShipMoney(Player(), ShipMoney(Player()) - cost * tint3);",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  620,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  361,
          "Total.Lines":  29,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(attack_type == 1)",
              "{",
              "    tint2 = ShipSkill(Player(), 'LeadershipCur');",
              "    //Добавляем ответы с выбором числа наёмников, которых игрок может нанять для атаки",
              "    for(i = 3; i <= 10; i = i + 1)",
              "    {",
              "        if(i == 3) tstr1 = \"Три\";",
              "        else if(i == 4) tstr1 = \"Четыре\";",
              "        else if(i == 5) tstr1 = \"Пять\";",
              "        else if(i == 6) tstr1 = \"Шесть\";",
              "        else if(i == 7) tstr1 = \"Семь\";",
              "        else if(i == 8) tstr1 = \"Восемь\";",
              "        else if(i == 9) tstr1 = \"Девять\";",
              "        else if(i == 10) tstr1 = \"Десять\";",
              "",
              "        //Запоминаем требование к навыку лидерства игрока",
              "        if(i < 9) tint3 = 5;",
              "        else tint3 = 6;",
              "",
              "        if((tint2 * 2) >= i && Soldats >= i) InjectAnswer('AttackMBChoose', tstr1, i);",
              "        else",
              "        {",
              "            AddDialogBlock(tstr1, 1);",
              "            InjectAnswer('AttackMBChoose', tstr1, i);",
              "        }",
              "    }",
              "}",
              "",
              "DAnswer('restart~' + \"Я передумал\");"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  740,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  364,
          "Total.Lines":  20,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tint2 = ShipPartners(Player()) + PlayerPirates();",
              "//Добавляем ответы с выбором числа наёмников, которых игрок может нанять в подчинение",
              "for(i = 1; i <= 6; i = i + 1)",
              "{",
              "    if(i == 1) tstr1 = \"Одного вполне достаточно\";",
              "    else if(i == 2) tstr1 = \"Дайте два\";",
              "    else if(i == 3) tstr1 = \"Ровно три штуки\";",
              "    else if(i == 4) tstr1 = \"Найму четыре и точка\";",
              "    else if(i == 5) tstr1 = \"Беру пятерку\";",
              "    else if(i == 6) tstr1 = \"Чего мелочиться - нанимаю шесть!\";",
              "",
              "    if(tint2 <= (6 - i) && Soldats >= i) InjectAnswer('HireMBChoose', tstr1, i);",
              "    else",
              "    {",
              "        AddDialogBlock(tstr1, 1);",
              "        InjectAnswer('HireMBChoose', tstr1, i);",
              "    }",
              "}",
              "",
              "DAnswer('restart~' + \"Я передумал\");"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  740,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  366,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cnt = GAnswerData;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  740,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  367,
          "Total.Lines":  32,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tint2 = ShipSkill(Player(), 'LeadershipCur');",
              "//Добавляем ответы с выбором срока найма наёмников в подчинение игрока",
              "for(i = 1; i <= 7; i = i + 1)",
              "{",
              "    if(i == 1) tstr1 = \"Один год\";",
              "    else if(i == 2) tstr1 = \"Два года\";",
              "    else if(i == 3) tstr1 = \"Три года\";",
              "    else if(i == 4) tstr1 = \"Четыре года\";",
              "    else if(i == 5) tstr1 = \"Пять лет\";",
              "    else if(i == 6) tstr1 = \"Пяти лет недостаточно, оформляем на шесть <clr>(лидерство)<clrEnd>\";",
              "    else if(i == 7) tstr1 = \"Десять лет и не меньше <clr>(лидерство)<clrEnd>\";",
              "",
              "    if(i < 6) InjectAnswer('HireMBTime', tstr1, i);",
              "    else",
              "    {",
              "        //Последняя опция найма предусматривает сразу 10 лет",
              "        if(i > 6) i = 10;",
              "",
              "        //Запоминаем требование к навыку лидерства игрока",
              "        if(i < 7) tint3 = 3;",
              "        else tint3 = 6;",
              "",
              "        if(tint2 >= tint3) InjectAnswer('HireMBTime', tstr1, i);",
              "        else",
              "        {",
              "            AddDialogBlock(tstr1, 1);",
              "            InjectAnswer('HireMBTime', tstr1, i);",
              "        }",
              "    }",
              "}",
              "",
              "DAnswer('restart~' + \"Я передумал\");"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  740,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  369,
          "Total.Lines":  12,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tint4 = 365 * GAnswerData;",
              "tint1 = GalaxyMoney(3) * coef / 100;",
              "tint1 = tint1 * coef2 / 100;",
              "tint1 = tint1 * tint4 / 365;",
              "tint1 = tint1 * cnt;",
              "",
              "if(Soldats == MercOrganisationsData['RedAxes', 'RecruitsReserve']) rel = MercOrganisationsData['RedAxes', 'RelationToPlayer'] / 2;",
              "else if(Soldats == MercOrganisationsData['Atlant', 'RecruitsReserve']) rel = MercOrganisationsData['Atlant', 'RelationToPlayer'] / 2;",
              "else if(Soldats == MercOrganisationsData['Faeyangelion', 'RecruitsReserve']) rel = MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] / 2;",
              "",
              "coef = 100 - rel;",
              "cost = tint1 * coef / 100;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  260,
          "Pos.y":  -120,
          "Parent":  -1,
          "#":  389,
          "Total.Lines":  151,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "//Диалоги в центре наёмников",
              "cur_ruin = GetShipRuins(Player());",
              "if(cur_ruin)",
              "{",
              "    cur_ruin_type = Format(ShipType(cur_ruin), '_licensed', '', '');",
              "",
              "    //Если игрок находится на ЦН, либо в \"свободном порту\" (то же самое, что и ЦН, только после уничтожения всех лидеров наёмников)",
              "    if(cur_ruin_type == 'MB' || cur_ruin_type == 'Manaan')",
              "    {",
              "        //Задаём приветственный текст",
              "        if(cur_ruin_type == 'MB')",
              "        {",
              "            dialogs_path = 'MercCenterDialogs';",
              "",
              "            tstr1 = '';",
              "            if(GroupCount(RedAxesLeader))",
              "            {",
              "                tstr1 = Format(CT('Script.Mod_ShuMercs.' + dialogs_path + '.OrganisationsListItem'),",
              "                                  '<OrgName'+'>', MercOrganisationsData['RedAxes', 'OrganisationName'],",
              "                                  '<OrgRelation'+'>', MercOrganisationsData['RedAxes', 'RelationToPlayer'],",
              "                                  '');",
              "            }",
              "            if(GroupCount(AtlantLeader))",
              "            {",
              "                if(tstr1 != '') tstr1 = tstr1 + Format('<br>');",
              "                tstr1 = tstr1 + Format(CT('Script.Mod_ShuMercs.' + dialogs_path + '.OrganisationsListItem'),",
              "                                  '<OrgName'+'>', MercOrganisationsData['Atlant', 'OrganisationName'],",
              "                                  '<OrgRelation'+'>', MercOrganisationsData['Atlant', 'RelationToPlayer'],",
              "                                  '');",
              "            }",
              "            if(GroupCount(FaeyangelionLeader))",
              "            {",
              "                if(tstr1 != '') tstr1 = tstr1 + Format('<br>');",
              "                tstr1 = tstr1 + Format(CT('Script.Mod_ShuMercs.' + dialogs_path + '.OrganisationsListItem'),",
              "                                  '<OrgName'+'>', MercOrganisationsData['Faeyangelion', 'OrganisationName'],",
              "                                  '<OrgRelation'+'>', MercOrganisationsData['Faeyangelion', 'RelationToPlayer'],",
              "                                  '');",
              "            }",
              "",
              "            tstr1 = '</color>' + Format(CT('Script.Mod_ShuMercs.' + dialogs_path + '.Greeting'),",
              "                                  '<StationName'+'>', ShipName(cur_ruin),",
              "                                  '<OrganisationsList'+'>', tstr1,",
              "                                  '');",
              "        }",
              "        else //if(cur_ruin_type == 'Manaan')",
              "        {",
              "            dialogs_path = 'FreePortDialogs';",
              "            tstr1 = '</color>' + Format(CT('Script.Mod_ShuMercs.' + dialogs_path + '.Greeting'),",
              "                                  '<StationName'+'>', ShipName(cur_ruin)",
              "                                 );",
              "        }",
              "",
              "        if(CurrentMods('ShusRangers\\ShuMercsHQ'))",
              "        {",
              "            //Если игрок находится в процессе выбора имени для своей организации наёмников",
              "            //(если BuildOwnBase_InProcess == 5, то запрашивать имя не будут, но просто добавил сюда условие на всякий случай)",
              "            check = GetValueFromScript('Mod_ShuMercsHQ', 'BuildOwnBase_InProcess');",
              "            if(check >= 3 && check <= 5)",
              "            {",
              "                if(GetValueFromScript('Mod_ShuMercsHQ', 'BuildOwnBase_ChooseName'))",
              "                {",
              "                    AddDialogOverride('Mod_ShuMercsHQ:BuildOwnBase_Name', 1000);",
              "                    exit;",
              "                }",
              "            }",
              "            //Дополнительная реплика к приветствию для повторного строительства своей базы",
              "            else if(check == -2)",
              "            {",
              "                tstr1 = tstr1 + Format('<br>') + CT('Script.Mod_ShuMercs.CreatingPlayerOrgDialogs.TwiceIntro');",
              "            }",
              "        }",
              "",
              "        AddDialogBlock('HideMe', 2);",
              "        AddDialogInject('HideMe', tstr1, 'HideMe', 100, 1);",
              "",
              "        //Нанять наёмников",
              "        tstr2 = CT('Script.Mod_ShuMercs.' + dialogs_path + '.PlayerAskHireMercs');",
              "        AddDialogInject('MB_HireMercs', '', tstr2, 25);",
              "",
              "        //Тренировать партнёра",
              "        tstr2 = CT('Script.Mod_ShuMercs.' + dialogs_path + '.PlayerAskPartnerTraining');",
              "        AddDialogInject('MB_PartnerTraining', '', tstr2, 20);",
              "",
              "        //Сменить корпус партнёру",
              "        tstr2 = CT('Script.Mod_ShuMercs.' + dialogs_path + '.PlayerAskPartnerChangeHull');",
              "        AddDialogInject('MB_PartnerChangeHull', '', tstr2, 15);",
              "",
              "        //Таблица кораблей с \"наградой за голову\" (и приветственный диалог, касающийся данной механики)",
              "        if(HeadBountyList['DialogStatus']) tstr2 = CT('Script.Mod_ShuMercs.HeadHunting.EnterBountyListMB');",
              "        else tstr2 = CT('Script.Mod_ShuMercs.HeadHunting.EnterBountyListFirstMB');",
              "        AddDialogInject('HeadBountyListDialog', '', tstr2, 10);",
              "",
              "        if(cur_ruin_type == 'MB')",
              "        {",
              "            if(CurrentMods('ShusRangers\\ShuMercsHQ'))",
              "            {",
              "                check = GetValueFromScript('Mod_ShuMercsHQ', 'BuildOwnBase_Condition');",
              "                if(check <= 0 || check == 6)",
              "                {",
              "                    //BuildOwnBase_InProcess == -2 - станция игрока разрушена, возможна повторная постройка",
              "                    //BuildOwnBase_InProcess == -1 - игрок уже просмотрел первый вариант диалога, повторно проматывать весь текст не придется",
              "                    //BuildOwnBase_InProcess == 0 - станция игрока ещё ни разу не строилась, диалог на ЦН ещё не триггерился",
              "                    //BuildOwnBase_InProcess == 1 - подготовка к постройке станции, нужно выбрать систему",
              "                    //BuildOwnBase_InProcess == 2 - подготовка к постройке станции, система выбрана, нужно получить разрешения",
              "                    //BuildOwnBase_InProcess == 3 - подготовка к постройке станции, все разрешения были получены, игрок отправляется на ЦН",
              "                    //BuildOwnBase_InProcess == 4 - игрок уже посетил ЦН после сбора бумаг, но строить штаб отказался, а потому во второй раз получит немного иной диалог",
              "                    //BuildOwnBase_InProcess == 5 - игрок уже строил штаб, но тот был разрушен, игрок получает третий вариант диалога",
              "                    //BuildOwnBase_InProcess == 6 - штаб построен",
              "",
              "                    check = GetValueFromScript('Mod_ShuMercsHQ', 'BuildOwnBase_InProcess');",
              "                    if(check <= 0)",
              "                    {",
              "                        if(!check) tstr2 = CT('Script.Mod_ShuMercs.CreatingPlayerOrgDialogs.MBPlayerAsk');",
              "                        else if(check == -1) tstr2 = CT('Script.Mod_ShuMercs.CreatingPlayerOrgDialogs.MBPlayerAskAgain');",
              "                        else tstr2 = CT('Script.Mod_ShuMercs.CreatingPlayerOrgDialogs.MBPlayerAskTwice');",
              "                        AddDialogInject('Mod_ShuMercsHQ:OwnBaseDialogMB', '', tstr2, 10);",
              "                    }",
              "                    //Этот ответ игрока запускает диалог с непосредственным строительством собственного штаба наёмников",
              "                    else if(check >= 3 && check <= 5)",
              "                    {",
              "                        if(check == 3) tstr2 = CT('Script.Mod_ShuMercs.CreatingPlayerOrgDialogs.MBPlayerAskBuild');",
              "                        else if(check == 4) tstr2 = CT('Script.Mod_ShuMercs.CreatingPlayerOrgDialogs.MBPlayerAskBuildAgain');",
              "                        else tstr2 = CT('Script.Mod_ShuMercs.CreatingPlayerOrgDialogs.MBPlayerAskBuildTwice');",
              "                        AddDialogInject('Mod_ShuMercsHQ:OwnBaseDialogMB', '', tstr2, 10);",
              "                    }",
              "                    //Диалог о переименовании организации наёмников игрока",
              "                    else if(check == 6)",
              "                    {",
              "                        tstr2 = CT('Script.Mod_ShuMercs.CreatingPlayerOrgDialogs.PlayerAskRename');",
              "                        AddDialogInject('Mod_ShuMercsHQ:OwnBaseRenameDialogMB', '', tstr2, 10);",
              "                    }",
              "                }",
              "                else //Игрок начал, но ещё не завершил квест с Ципцилотом",
              "                {",
              "                    if(!check) tstr2 = CT('Script.Mod_ShuMercs.CreatingPlayerOrgDialogs.MBPlayerAsk');",
              "                    else if(check == -1) tstr2 = CT('Script.Mod_ShuMercs.CreatingPlayerOrgDialogs.MBPlayerAskAgain');",
              "                    else tstr2 = CT('Script.Mod_ShuMercs.CreatingPlayerOrgDialogs.MBPlayerAskTwice');",
              "                    AddDialogBlock(tstr2, 1);",
              "                    AddDialogInject('Mod_ShuMercsHQ:OwnBaseDialogMB', '', tstr2, 10);",
              "                }",
              "            }",
              "",
              "            //Поправить отношения с наёмниками",
              "            if(!MercOrganisationsData['NegotiationsInProgress'])",
              "            {",
              "                tstr2 = CT('Script.Mod_ShuMercs.' + dialogs_path + '.PlayerAskFixRelations');",
              "                AddDialogInject('MB_FixRelations', '', tstr2, 5);",
              "            }",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  397,
          "#":  398,
          "Total.Lines":  18,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Данный стейт используется и заполняется в том числе из скрипта ShuMercsHQ",
              "//Смысл данного стейта в том, чтобы просто поскорее вывести любого наёмника из игры незаметно для игрока",
              "if(!ShipInNormalSpace(CurShip))",
              "{",
              "    ShipDeleteCustomShipInfo(CurShip, 'ShuMercsHQ_StrikeGroupMercInfo'); //Нужны для контроля реальной смерти бывших наёмников из ударной группы",
              "    OrderNone(CurShip);",
              "    ShipDestroy(CurShip, 1);",
              "    exit;",
              "}",
              "",
              "//Посадка или прыжок",
              "if(ShipOrder(CurShip) == 2 || ShipOrder(CurShip) == 3) exit;",
              "",
              "//Отправляем бывшего наёмника (или какой-то другой корабль?) умирать где-то вне поля зрения игрока",
              "OrderLock(CurShip, 1);",
              "dword cur_star = ShipStar(CurShip);",
              "if(StarOwner(cur_star) != 1) OrderLanding(CurShip, NearCivilPlanet(CurShip));",
              "else OrderJump(CurShip, StarNearbyStars(cur_star, RndObject(1, 5, CurShip)));"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  165,
          "#":  399,
          "Total.Lines":  121,
          "Code.Type":  "Turn",
          "Code":          
          [
              "int cur_org = ShipGroup(CurShip);",
              "",
              "//Вручную корректируем характер наёмника",
              "//Топор",
              "if(cur_org == RedAxesMercs)",
              "{",
              "    if(!GroupCount(RedAxesLeader))",
              "    {",
              "        MakeFreelancerFromMerc(CurShip);",
              "        exit;",
              "    }",
              "    else",
              "    {",
              "        RelationToRanger(CurShip, GroupToShip(RedAxesLeader), 100);",
              "        RelationToRanger(CurShip, Player(), MercOrganisationsData['RedAxes', 'RelationToPlayer']);",
              "        //RelationToRanger(CurShip, GroupToShip(AtlantLeader), MercOrganisationsData['RedAxes', 'RelationToAtlant']);",
              "        //RelationToRanger(CurShip, GroupToShip(FaeyangelionLeader), MercOrganisationsData['RedAxes', 'RelationToFaeyangelion']);",
              "    }",
              "",
              "    ShipStatus(CurShip, 0, 0); //Торговец",
              "    ShipStatus(CurShip, 1, 75); //Пират",
              "    ShipStatus(CurShip, 2, 25); //Воин",
              "}",
              "//Атлант",
              "else if(cur_org == AtlantMercs)",
              "{",
              "    if(!GroupCount(AtlantLeader))",
              "    {",
              "        MakeFreelancerFromMerc(CurShip);",
              "        exit;",
              "    }",
              "    else",
              "    {",
              "        RelationToRanger(CurShip, GroupToShip(AtlantLeader), 100);",
              "        RelationToRanger(CurShip, Player(), MercOrganisationsData['Atlant', 'RelationToPlayer']);",
              "        //RelationToRanger(CurShip, GroupToShip(RedAxesLeader), MercOrganisationsData['Atlant', 'RelationToRedAxes']);",
              "        //RelationToRanger(CurShip, GroupToShip(FaeyangelionLeader), MercOrganisationsData['Atlant', 'RelationToFaeyangelion']);",
              "    }",
              "",
              "    if(ShipPilotRace(CurShip) == People)",
              "    {",
              "        ShipStatus(CurShip, 0, 35); //Торговец",
              "        ShipStatus(CurShip, 1, 25); //Пират",
              "        ShipStatus(CurShip, 2, 40); //Воин",
              "    }",
              "    else //if(ShipPilotRace(CurShip) == Peleng)",
              "    {",
              "        //Вручную корректируем характер наёмника",
              "        ShipStatus(CurShip, 0, 40); //Торговец",
              "        ShipStatus(CurShip, 1, 30); //Пират",
              "        ShipStatus(CurShip, 2, 30); //Воин",
              "    }",
              "}",
              "//Фэй",
              "else if(cur_org == FaeyangelionMercs)",
              "{",
              "    if(!GroupCount(FaeyangelionLeader))",
              "    {",
              "        MakeFreelancerFromMerc(CurShip);",
              "        exit;",
              "    }",
              "    else",
              "    {",
              "        RelationToRanger(CurShip, GroupToShip(FaeyangelionLeader), 100);",
              "        RelationToRanger(CurShip, Player(), MercOrganisationsData['Faeyangelion', 'RelationToPlayer']);",
              "        //RelationToRanger(CurShip, GroupToShip(RedAxesLeader), MercOrganisationsData['Faeyangelion', 'RelationToRedAxes']);",
              "        //RelationToRanger(CurShip, GroupToShip(AtlantLeader), MercOrganisationsData['Faeyangelion', 'RelationToAtlant']);",
              "    }",
              "",
              "    ShipStatus(CurShip, 0, 0); //Торговец",
              "    ShipStatus(CurShip, 1, 15); //Пират",
              "    ShipStatus(CurShip, 2, 85); //Воин",
              "}",
              "//Фрилансер",
              "else //if(cur_org == FreeMercs)",
              "{",
              "    ShipStatus(CurShip, 0, 15); //Торговец",
              "    ShipStatus(CurShip, 1, 42); //Пират",
              "    ShipStatus(CurShip, 2, 43); //Воин",
              "}",
              "",
              "if(ShipType(CurShip) != 'Freelancer')",
              "{",
              "    //Если игрок (или его миньён) атаковал наёмника или босса конкурирующей организации, то это сразу влечёт за собой конфликт и пересчёт отношения организаций",
              "    if(Hit(CurShip, 0))",
              "    {",
              "        //Топор",
              "        if(cur_org == RedAxesMercs)",
              "        {",
              "            if(MercOrganisationsData['NegotiationsInProgress'] && MercOrganisationsData['NegotiationsTargetSide'] == cur_org) MercOrganisationsData['RedAxes', 'RelationToPlayer'] = MercOrganisationsData['RedAxes', 'RelationBeforeNegotiations'];",
              "",
              "            MercOrganisationsData['RedAxes', 'RelationToPlayer'] = max(MercOrganisationsData['RedAxes', 'RelationToPlayer'] - 5, 0);",
              "            MercOrganisationsData['Atlant', 'RelationToPlayer'] = min(MercOrganisationsData['Atlant', 'RelationToPlayer'] + RndObject(1, 2, CurShip), 100);",
              "            MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] = min(MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] + 3, 100);",
              "        }",
              "        //Атлант",
              "        else if(cur_org == AtlantMercs)",
              "        {",
              "            if(MercOrganisationsData['NegotiationsInProgress'] && MercOrganisationsData['NegotiationsTargetSide'] == cur_org) MercOrganisationsData['Atlant', 'RelationToPlayer'] = MercOrganisationsData['Atlant', 'RelationBeforeNegotiations'];",
              "",
              "            MercOrganisationsData['RedAxes', 'RelationToPlayer'] = min(MercOrganisationsData['RedAxes', 'RelationToPlayer'] + RndObject(1, 2, CurShip), 100);",
              "            MercOrganisationsData['Atlant', 'RelationToPlayer'] = max(MercOrganisationsData['Atlant', 'RelationToPlayer'] - 4, 0);",
              "            MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] = min(MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] + RndObject(1, 2, CurShip), 100);",
              "        }",
              "        //Фэй",
              "        else //if(cur_org == FaeyangelionMercs)",
              "        {",
              "            if(MercOrganisationsData['NegotiationsInProgress'] && MercOrganisationsData['NegotiationsTargetSide'] == cur_org) MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] = MercOrganisationsData['Faeyangelion', 'RelationBeforeNegotiations'];",
              "",
              "            MercOrganisationsData['RedAxes', 'RelationToPlayer'] = min(MercOrganisationsData['RedAxes', 'RelationToPlayer'] + 3, 100);",
              "            MercOrganisationsData['Atlant', 'RelationToPlayer'] = min(MercOrganisationsData['Atlant', 'RelationToPlayer'] + RndObject(1, 2, CurShip), 100);",
              "            MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] = max(MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] - 6, 0);",
              "        }",
              "",
              "        //И сразу сбрасываем маркер, чтобы не мешал",
              "        Hit(CurShip, 0, 0);",
              "    }",
              "}",
              "",
              "//На случай, если наёмник временно остался без приказа",
              "if(!ShipOrder(CurShip)) ShipFreeFlight(CurShip);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  158,
          "#":  406,
          "Total.Lines":  12,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipOwner(CurShip, ShipOwner(Player()));",
              "if(IsPlayer(ShipGetBad(CurShip)))",
              "{",
              "    ShipSetBad(CurShip, 0);",
              "    TruceBetweenShips(CurShip, Player());",
              "}",
              "",
              "if(!ShipIsPartner(CurShip))",
              "{",
              "    ChangeState('MercReturnToMB');",
              "    exit;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  970,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  415,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cur_ship = GetTalkShip();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  191,
          "#":  417,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  -130,
          "Parent":  96,
          "#":  418,
          "Total.Lines":  38,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(cur_ruin_type == 'MB')",
              "{",
              "    tstr1 = '';",
              "    if(GroupCount(RedAxesLeader))",
              "    {",
              "        tstr1 = Format(CT('Script.Mod_ShuMercs.' + dialogs_path + '.OrganisationsListItem'),",
              "                          '<OrgName'+'>', MercOrganisationsData['RedAxes', 'OrganisationName'],",
              "                          '<OrgRelation'+'>', MercOrganisationsData['RedAxes', 'RelationToPlayer'],",
              "                          '');",
              "    }",
              "    if(GroupCount(AtlantLeader))",
              "    {",
              "        if(tstr1 != '') tstr1 = tstr1 + Format('<br>');",
              "        tstr1 = tstr1 + Format(CT('Script.Mod_ShuMercs.' + dialogs_path + '.OrganisationsListItem'),",
              "                          '<OrgName'+'>', MercOrganisationsData['Atlant', 'OrganisationName'],",
              "                          '<OrgRelation'+'>', MercOrganisationsData['Atlant', 'RelationToPlayer'],",
              "                          '');",
              "    }",
              "    if(GroupCount(FaeyangelionLeader))",
              "    {",
              "        if(tstr1 != '') tstr1 = tstr1 + Format('<br>');",
              "        tstr1 = tstr1 + Format(CT('Script.Mod_ShuMercs.' + dialogs_path + '.OrganisationsListItem'),",
              "                          '<OrgName'+'>', MercOrganisationsData['Faeyangelion', 'OrganisationName'],",
              "                          '<OrgRelation'+'>', MercOrganisationsData['Faeyangelion', 'RelationToPlayer'],",
              "                          '');",
              "    }",
              "",
              "    tstr1 = '</color>' + Format(CT('Script.Mod_ShuMercs.' + dialogs_path + '.Greeting'),",
              "                          '<StationName'+'>', ShipName(cur_ruin),",
              "                          '<OrganisationsList'+'>', tstr1,",
              "                          '');",
              "}",
              "else //if(cur_ruin_type == 'Manaan')",
              "{",
              "    tstr1 = '</color>' + Format(CT('Script.Mod_ShuMercs.' + dialogs_path + '.Greeting'),",
              "                          '<StationName'+'>', ShipName(cur_ruin)",
              "                         );",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  390,
          "#":  419,
          "Total.Lines":  28,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1 = '';",
              "if(GroupCount(RedAxesLeader))",
              "{",
              "    tstr1 = Format(CT('Script.Mod_ShuMercs.' + dialogs_path + '.OrganisationsListItem'),",
              "                      '<OrgName'+'>', MercOrganisationsData['RedAxes', 'OrganisationName'],",
              "                      '<OrgRelation'+'>', MercOrganisationsData['RedAxes', 'RelationToPlayer'],",
              "                      '');",
              "}",
              "if(GroupCount(AtlantLeader))",
              "{",
              "    if(tstr1 != '') tstr1 = tstr1 + Format('<br>');",
              "    tstr1 = tstr1 + Format(CT('Script.Mod_ShuMercs.' + dialogs_path + '.OrganisationsListItem'),",
              "                      '<OrgName'+'>', MercOrganisationsData['Atlant', 'OrganisationName'],",
              "                      '<OrgRelation'+'>', MercOrganisationsData['Atlant', 'RelationToPlayer'],",
              "                      '');",
              "}",
              "if(GroupCount(FaeyangelionLeader))",
              "{",
              "    if(tstr1 != '') tstr1 = tstr1 + Format('<br>');",
              "    tstr1 = tstr1 + Format(CT('Script.Mod_ShuMercs.' + dialogs_path + '.OrganisationsListItem'),",
              "                      '<OrgName'+'>', MercOrganisationsData['Faeyangelion', 'OrganisationName'],",
              "                      '<OrgRelation'+'>', MercOrganisationsData['Faeyangelion', 'RelationToPlayer'],",
              "                      '');",
              "}",
              "",
              "tstr1 = '</color>' + Format(CT('Script.Mod_ShuMercs.' + dialogs_path + '.FixRelations'),",
              "                      '<OrganisationsList'+'>', tstr1,",
              "                      '');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  423,
          "#":  422,
          "Total.Lines":  185,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Данные наёмника в группе PlayerMercsFree:",
              "//Data0 == остаток времени выполнения текущего задания (если выбрано задание на охрану)",
              "//      == если задание не взято / уже выполнено, то записываем сюда же ход его завершения",
              "//Data1 == Id корабля-цели (если выбрано задание на охрану)",
              "//      == Id планеты-цели (если выбрано задание на доставку)",
              "//      == Id корабля, указанного игроком для атаки (если наёмник в стейте OrderAttackState)",
              "//Data2 == Id доставляемого предмета (если выбрано задание на доставку)",
              "//Data3 == таймер (CurTurn() + N) до необходимости возврата наёмника в штаб (если меньше нуля, то это также маркер о возвращении в штаб без добытого заработка)",
              "",
              "dword cur_star = ShipStar(CurShip);",
              "",
              "cur_org = ShipGroup(CurShip); //Переменная cur_org объявляется в привязанном блоке кода",
              "if(cur_org == RedAxesMercs)",
              "{",
              "    dword HQ = GroupToShip(RedAxesHQ);",
              "    dword leader = GroupToShip(RedAxesLeader);",
              "}",
              "else if(cur_org == AtlantMercs)",
              "{",
              "    HQ = GroupToShip(AtlantHQ);",
              "    leader = GroupToShip(AtlantLeader);",
              "}",
              "else if(cur_org == FaeyangelionMercs)",
              "{",
              "    HQ = GroupToShip(FaeyangelionHQ);",
              "    leader = GroupToShip(FaeyangelionLeader);",
              "}",
              "else leader = 0;",
              "",
              "if(!HQ) HQ = GroupToShip(MercCenter); //Если штаб организации временно отсутствует, либо наёмник является фрилансером",
              "",
              "//Чтобы в конфликте за систему наёмники всегда оставались на стороне нанимателя, либо своего штаба",
              "if(ShipIsPartner(CurShip)) ShipOwner(CurShip, ShipOwner(ShipIsPartner(CurShip)));",
              "else ShipOwner(CurShip, ShipOwner(HQ));",
              "",
              "//Не трогаем корабль, пока тот находится в гипере",
              "if(ShipInHyperSpace(CurShip)) exit;",
              "",
              "OrderLock(CurShip, 0);",
              "//Если наёмнику пришло время вернуться в штаб на \"дозаправку\" и сдачу заработка",
              "if(GetData(3) <= CurTurn())",
              "{",
              "    //Обновляем таймер возвращения в штаб",
              "    //(временное обновление, чтоб наёмник не летал туда-сюда, нормальный таймер будет задан по прибытии)",
              "    SetData(CurTurn() + 500, 3);",
              "    ChangeState('MercReturningHQ');",
              "    exit;",
              "}",
              "else",
              "{",
              "    if(ShipInNormalSpace(CurShip))",
              "    {",
              "        //Сбрасываем агрессию в отношении своих коллег и охраняемых ими кораблей",
              "        dword target = ShipGetBad(CurShip);",
              "        if(target)",
              "        {",
              "            if((ShipType(target) == 'Merc' && ShipGroup(target) == cur_org) || target == leader)",
              "            {",
              "                int no_tar = NoTargetToShip(target);",
              "                //Вся эта херобория помогает избежать ситуации, когда наемник пытается поочередно напасть сразу на две цели рядом, в результате зацикливая логику",
              "                NoTargetToShip(target, 4);",
              "                TruceBetweenShips(CurShip, target);",
              "                NoTargetToShip(target, no_tar);",
              "                //Если наниматель наёмника поссорился не с теми ребятами",
              "                target = ShipIsPartner(CurShip);",
              "                if(target) ShipSetPartner(CurShip, 0, 0);",
              "            }",
              "            else if(~ShipFindCustomShipInfoByType(target, 'ShuMercs_GuardedShip'))",
              "            {",
              "                if(cur_org == ShipCustomShipInfoTextData(target, 'ShuMercs_GuardedShip', 3))",
              "                {",
              "                    no_tar = NoTargetToShip(target);",
              "                    //Вся эта херобория помогает избежать ситуации, когда наемник пытается поочередно напасть сразу на две цели рядом, в результате зацикливая логику",
              "                    NoTargetToShip(target, 4);",
              "                    TruceBetweenShips(CurShip, target);",
              "                    NoTargetToShip(target, no_tar);",
              "                    //Если наниматель наёмника напал на охраняемый транспорт",
              "                    target = ShipIsPartner(CurShip);",
              "                    if(target) ShipSetPartner(CurShip, 0, 0);",
              "                }",
              "            }",
              "        }",
              "",
              "        //Если с момента последнего выполненного кораблём задания прошло не менее N дней",
              "        if(GetData(0) + 31 <= CurTurn())",
              "        {",
              "            if(!ShipIsPartner(CurShip))",
              "            {",
              "                if(!StarBattle(cur_star))",
              "                {",
              "                    //Если корабль не совершает прыжок",
              "                    if(ShipOrder(CurShip) != 3)",
              "                    {",
              "                        //Не ведёт с кем-то бой",
              "                        if(!(ShipOrder(CurShip) == 6 && ShipOrderData1(CurShip) == 1))",
              "                        {",
              "                            //И не драпает от кого-нибудь",
              "                            if(!ShipInFear(CurShip))",
              "                            {",
              "                                //Если наёмник имеет относительно целый корабль",
              "                                if(HullDamage(CurShip) <= 20)",
              "                                {",
              "                                    if(ItemDurability(ShipEqInSlot(CurShip, t_Engine)))",
              "                                    {",
              "                                        //Кидаем шанс на получение нового задания",
              "                                        if(Rnd(1, 100, sqr(Id(CurShip) + CurTurn())) <= 6)",
              "                                        {",
              "                                            //Если выпало задание на охрану",
              "                                            if(Rnd(0, 2, sqr(Id(CurShip) + CurTurn())))",
              "                                            {",
              "                                                ArrayClear(tarr1);",
              "                                                for(int i = StarShips(cur_star) - 1; i >= 0; i = i - 1)",
              "                                                {",
              "                                                    cur_ship = StarShips(cur_star, i);",
              "",
              "                                                    //Если попался корабль с наградой за голову, то выбираем его",
              "                                                    if(~ShipFindCustomShipInfoByType(cur_ship, 'ShuMercs_HeadBountyInfo'))",
              "                                                    {",
              "                                                        if(cur_org != ShipGroup(cur_ship) && RndObject(0, 2, CurShip))",
              "                                                        {",
              "                                                            OrderLock(CurShip, 1);",
              "                                                            SetData(0, 0);",
              "                                                            SetData(Id(cur_ship), 1);",
              "                                                            ChangeState('MercHunting');",
              "                                                            exit;",
              "                                                        }",
              "                                                    }",
              "",
              "                                                    //Допускаем к перебору только транспорты/лайнеры/дипломаты",
              "                                                    if(ShipTypeN(cur_ship) != t_Transport) continue;",
              "                                                    //Пропускаем корабли в скрипте и корабли неподходящей расы",
              "                                                    if(ShipInScript(cur_ship, 0)) continue;",
              "                                                    int own = ShipOwner(cur_ship);",
              "                                                    if(own > Gaal && own != PirateClan) continue;",
              "",
              "                                                    //Также проверяем, что и потенциальная цель и наёмник, оба относятся друг к другу хорошо",
              "                                                    //(иначе со стороны это может выглядеть очень тупо)",
              "                                                    if(",
              "                                                       RelationToRanger(cur_ship, CurShip) < 10 ||",
              "                                                       ShipGetBad(cur_ship) == CurShip ||",
              "                                                       ShipGetBad(CurShip) == cur_ship",
              "                                                      ) continue;",
              "",
              "                                                    ArrayAdd(tarr1, cur_ship);",
              "                                                }",
              "",
              "                                                //Если нашли в системе хотя бы один подходящий корабль",
              "                                                if(ArrayDim(tarr1) > 1)",
              "                                                {",
              "                                                    cur_ship = tarr1[RndObject(1, ArrayDim(tarr1) - 1, CurShip)];",
              "",
              "                                                    //Выставляем таймер времени охраны корабля и запоминаем саму цель для охраны",
              "                                                    SetData(CurTurn() + RndObject(45, 60, CurShip), 0);",
              "                                                    SetData(Id(cur_ship), 1);",
              "",
              "                                                    //Вешаем инфошку, чтобы \"ловить\" агрессии игрока в отношении охраняемой наёмником цели",
              "                                                    if(leader) ShipAddCustomShipInfo(cur_ship, 'ShuMercs_GuardedShip', 'NoShow', Id(CurShip), Id(leader), 0, '', '', cur_org);",
              "                                                    else ShipAddCustomShipInfo(cur_ship, 'ShuMercs_GuardedShip', 'NoShow', Id(CurShip), 0, 0, '', '', cur_org);",
              "                                                    //Запрещаем другим рейнджерам (и наёмникам) рэкетировать охраняемую наёмником цель",
              "                                                    NoTargetToShip(cur_ship, 3);",
              "                                                    ChangeState('MercGuardingQuest');",
              "                                                }",
              "                                                exit;",
              "                                            }",
              "                                            //Если выпало задание на доставку",
              "                                            else",
              "                                            {",
              "                                                dword cur_planet = NearCivilPlanet(CurShip);",
              "                                                if(RelationToRanger(cur_planet, CurShip) < 60) RelationToRanger(cur_planet, CurShip, 60);",
              "                                                //Задание будет \"взято\" на ближайшей обитаемой планете",
              "                                                OrderLanding(CurShip, cur_planet);",
              "                                                ChangeState('MercDeliveryQuest');",
              "                                                exit;",
              "                                            }",
              "                                        }",
              "                                    }",
              "                                }",
              "                            }",
              "                        }",
              "                    }",
              "                }",
              "            }",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  425,
          "#":  424,
          "Total.Lines":  107,
          "Code.Type":  "Turn",
          "Code":          
          [
              "dword cur_star = ShipStar(CurShip);",
              "",
              "cur_org = ShipGroup(CurShip); //Переменная cur_org объявляется в привязанном блоке кода",
              "if(cur_org == RedAxesMercs)",
              "{",
              "    dword HQ = GroupToShip(RedAxesHQ);",
              "    dword leader = GroupToShip(RedAxesLeader);",
              "}",
              "else if(cur_org == AtlantMercs)",
              "{",
              "    HQ = GroupToShip(AtlantHQ);",
              "    leader = GroupToShip(AtlantLeader);",
              "}",
              "else if(cur_org == FaeyangelionMercs)",
              "{",
              "    HQ = GroupToShip(FaeyangelionHQ);",
              "    leader = GroupToShip(FaeyangelionLeader);",
              "}",
              "else leader = 0;",
              "",
              "if(!HQ) HQ = GroupToShip(MercCenter); //Если штаб организации временно отсутствует, либо наёмник является фрилансером",
              "if(HQ) dword HQstar = ShipStar(HQ);",
              "else",
              "{",
              "    MakeFreelancerFromMerc(CurShip);",
              "    exit;",
              "}",
              "",
              "//Чтобы в конфликте за систему наёмники всегда оставались на стороне своего штаба",
              "ShipOwner(CurShip, ShipOwner(HQ));",
              "",
              "//Не трогаем корабль, пока он находится в гипере",
              "if(ShipInHyperSpace(CurShip)) exit;",
              "",
              "if(ShipInNormalSpace(CurShip))",
              "{",
              "    //Сбрасываем агрессию в отношении своих коллег и охраняемых ими кораблей",
              "    dword target = ShipGetBad(CurShip);",
              "    if(target)",
              "    {",
              "        if((ShipType(target) == 'Merc' && ShipGroup(target) == cur_org) || target == leader)",
              "        {",
              "            int no_tar = NoTargetToShip(target);",
              "            //Вся эта херобория помогает избежать ситуации, когда наемник пытается поочередно напасть сразу на две цели рядом, в результате зацикливая логику",
              "            NoTargetToShip(target, 4);",
              "            TruceBetweenShips(CurShip, target);",
              "            NoTargetToShip(target, no_tar);",
              "            //Если наниматель наёмника игрока поссорился не с теми ребятами",
              "            target = ShipIsPartner(CurShip);",
              "            if(target) ShipSetPartner(CurShip, 0, 0);",
              "        }",
              "        else if(~ShipFindCustomShipInfoByType(target, 'ShuMercs_GuardedShip'))",
              "        {",
              "            if(cur_org == ShipCustomShipInfoTextData(target, 'ShuMercs_GuardedShip', 3))",
              "            {",
              "                no_tar = NoTargetToShip(target);",
              "                //Вся эта херобория помогает избежать ситуации, когда наемник пытается поочередно напасть сразу на две цели рядом, в результате зацикливая логику",
              "                NoTargetToShip(target, 4);",
              "                TruceBetweenShips(CurShip, target);",
              "                NoTargetToShip(target, no_tar);",
              "                //Если наниматель наёмника игрока напал на охраняемый транспорт",
              "                target = ShipIsPartner(CurShip);",
              "                if(target) ShipSetPartner(CurShip, 0, 0);",
              "            }",
              "        }",
              "    }",
              "",
              "    //Если наёмник ещё не вернулся в систему со штабом, то отправляем его туда",
              "    if(cur_star != HQstar)",
              "    {",
              "        //Однако если в текущей системе наёмника идёт бой, то пока не отрываем его \"от дел\"",
              "        if(!StarBattle(cur_star))",
              "        {",
              "            //Если корабль не совершает прыжок",
              "            if(ShipOrder(CurShip) != 3)",
              "            {",
              "                //Не ведёт с кем-то бой",
              "                if(!(ShipOrder(CurShip) == 6 && ShipOrderData1(CurShip) == 1))",
              "                {",
              "                    //И не драпает от кого-нибудь",
              "                    if(!ShipInFear(CurShip))",
              "                    {",
              "                        if(ItemDurability(ShipEqInSlot(CurShip, t_Engine)))",
              "                        {",
              "                            OrderLock(CurShip, 1);",
              "                            OrderJump(CurShip, HQstar);",
              "                            exit;",
              "                        }",
              "                    }",
              "                }",
              "            }",
              "        }",
              "    }",
              "    //Наёмник добрался до системы со штабом",
              "    else if(!StarBattle(cur_star)) OrderLanding(CurShip, HQ);",
              "}",
              "//Наёмник в штабе (предположительно)",
              "else",
              "{",
              "    if(GetShipRuins(CurShip) == HQ)",
              "    {",
              "        OrderLock(CurShip, 0);",
              "        //Обновляем таймер до следующего возвращения в штаб",
              "        SetData(CurTurn() + RndObject(60, 90, CurShip), 3);",
              "        ChangeState('MercNormal');",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  426,
          "#":  428,
          "Total.Lines":  172,
          "Code.Type":  "Turn",
          "Code":          
          [
              "dword cur_star = ShipStar(CurShip);",
              "",
              "cur_org = ShipGroup(CurShip); //Переменная cur_org объявляется в привязанном блоке кода",
              "if(cur_org == RedAxesMercs)",
              "{",
              "    dword HQ = GroupToShip(RedAxesHQ);",
              "    dword leader = GroupToShip(RedAxesLeader);",
              "}",
              "else if(cur_org == AtlantMercs)",
              "{",
              "    HQ = GroupToShip(AtlantHQ);",
              "    leader = GroupToShip(AtlantLeader);",
              "}",
              "else if(cur_org == FaeyangelionMercs)",
              "{",
              "    HQ = GroupToShip(FaeyangelionHQ);",
              "    leader = GroupToShip(FaeyangelionLeader);",
              "}",
              "else leader = 0;",
              "",
              "if(!HQ) HQ = GroupToShip(MercCenter); //Если штаб организации временно отсутствует, либо наёмник является фрилансером",
              "",
              "//Чтобы в конфликте за систему наёмники всегда оставались на стороне своего штаба",
              "ShipOwner(CurShip, ShipOwner(HQ));",
              "",
              "//Не трогаем корабль, пока он находится в гипере",
              "if(ShipInHyperSpace(CurShip)) exit;",
              "",
              "//Чтобы стейт не блочил скриптовые приказы",
              "OrderLock(CurShip, 1);",
              "//Вынуждаем наёмника самостоятельно выполнить наведение пушек (может по астероидам постреляет или ещё по кому)",
              "ShipFreeFlight(CurShip, 1);",
              "",
              "//Если срок охраны корабля подошёл к концу",
              "dword cur_ship = IdToShip(GetData(1));",
              "if(GetData(0) <= CurTurn())",
              "{",
              "    //Если задание по охране выполнено успешно",
              "    if(~int(GetData(0)))",
              "    {",
              "        ShipMoney(CurShip, round(1.2 * ShipMoney(CurShip)));",
              "        int free_exp = ShipFreeExp(CurShip);",
              "        int add_exp = round(0.2 * free_exp);",
              "        ShipFreeExp(CurShip, free_exp + add_exp);",
              "        SetShipExpByType(CurShip, GetShipExpByType(CurShip) + add_exp, 0);",
              "    }",
              "    //Задание было прервано лидером организации текущего наёмника, который атаковал охраняемый корабль",
              "    else",
              "    {",
              "        SetData(CurTurn(), 0);",
              "    }",
              "",
              "    SetData(0, 1);",
              "",
              "    //MercNormal - стейт типа Free, поэтому первый приказ кораблю приходится отдавать отсюда (сам стейт при переключении ему приказ не сменит)",
              "    OrderLock(CurShip, 0);",
              "    ShipFreeFlight(CurShip);",
              "    ChangeState('MercNormal');",
              "    exit;",
              "}",
              "else",
              "{",
              "    //Если охраняемый корабль был уничтожен",
              "    if(!cur_ship)",
              "    {",
              "        SetData(CurTurn(), 0);",
              "        SetData(0, 1);",
              "",
              "        //MercNormal - стейт типа Free, поэтому первый приказ кораблю приходится отдавать отсюда (сам стейт при переключении ему приказ не сменит)",
              "        OrderLock(CurShip, 0);",
              "        ShipFreeFlight(CurShip);",
              "        ChangeState('MercNormal');",
              "        exit;",
              "    }",
              "    else",
              "    {",
              "        if(ShipInNormalSpace(CurShip))",
              "        {",
              "            //Следим, чтобы наёмник не пытался ограбить охраняемую цель",
              "            if(ShipGetBad(CurShip) == cur_ship) ShipSetBad(CurShip, 0);",
              "            //Следим, чтобы охраняемый корабль не агрился на своего охранника",
              "            RelationToRanger(cur_ship, CurShip, 100);",
              "",
              "            //Если охраняемый корабль сел на планету, отправляем туда же и наёмника",
              "            //(для заправки, ремонта и т.д.)",
              "            dword cur_planet = GetShipPlanet(cur_ship);",
              "            if(cur_planet)",
              "            {",
              "                OrderLanding(CurShip, cur_planet);",
              "                exit;",
              "            }",
              "            //Если охраняемый корабль отправился в другую систему",
              "            if(ShipStar(cur_ship) != cur_star)",
              "            {",
              "                OrderJump(CurShip, ShipStar(cur_ship));",
              "                exit;",
              "            }",
              "            //Если охраняемый корабль ещё только намеревается прыгать",
              "            //else if(ShipOrder(cur_ship) == 3)",
              "            //{",
              "            //    if(!ShipGetBad(cur_ship))",
              "            //    {",
              "            //        if(Dist(cur_ship, CurShip) <= 250)",
              "            //        {",
              "            //            OrderJump(CurShip, ShipOrderObj(cur_ship));",
              "            //            exit;",
              "            //        }",
              "            //    }",
              "            //}",
              "",
              "            dword target = ShipGetBad(cur_ship);",
              "            //Если охраняемый корабль на кого-то агрится, то вынуждаем наёмника атаковать ту же цель",
              "            if(ShipGetBad(target))",
              "            {",
              "                if(target != CurShip)",
              "                {",
              "                    //Если на охраняемый корабль напал лидер организации, завершаем задание наёмника",
              "                    if(target != leader)",
              "                    {",
              "                        //Проверяем, чтобы корабль, на который агрится транспорт, находился в этой же системе",
              "                        if(ShipInNormalSpace(target))",
              "                        {",
              "                            if(ShipStar(target) == cur_star)",
              "                            {",
              "                                OrderFollowShip(CurShip, target, 1);",
              "                                ShipSetBad(CurShip, target);",
              "                                exit;",
              "                            }",
              "                        }",
              "                    }",
              "                    else",
              "                    {",
              "                        SetData(CurTurn(), 0);",
              "                        SetData(0, 1);",
              "                        //Снимаем запрет на рэкет охраняемого корабля",
              "                        NoTargetToShip(cur_ship, 0);",
              "                        //И удаляем с него соответствующую инфошку",
              "                        ShipDeleteCustomShipInfo(cur_ship, 'ShuMercs_GuardedShip');",
              "",
              "                        //MercNormal - стейт типа Free, поэтому первый приказ кораблю приходится отдавать отсюда (сам стейт при переключении ему приказ не сменит)",
              "                        OrderLock(CurShip, 0);",
              "                        ShipFreeFlight(CurShip);",
              "                        ChangeState('MercNormal');",
              "                        exit;",
              "                    }",
              "                }",
              "                else ShipSetBad(cur_ship, 0);",
              "            }",
              "",
              "            //Иначе наёмник будет просто следовать за охраняемым кораблём",
              "            OrderFollowShip(CurShip, cur_ship, 0);",
              "        }",
              "        else",
              "        {",
              "            //Если охраняемая цель сидит на планете",
              "            cur_planet = GetShipPlanet(cur_ship);",
              "            if(cur_planet)",
              "            {",
              "                //Вынуждаем корабль наёмника выполнять автоматический ремонт и т.д.,",
              "                //пока он сидит на планете с целью",
              "                if(GetShipPlanet(CurShip) == cur_planet)",
              "                {",
              "                    ShipFreeFlight(CurShip);",
              "                    OrderNone(CurShip);",
              "                }",
              "            }",
              "            else if(GetShipPlanet(CurShip)) OrderTakeOff(CurShip);",
              "",
              "            exit;",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  427,
          "#":  429,
          "Total.Lines":  198,
          "Code.Type":  "Turn",
          "Code":          
          [
              "dword cur_star = ShipStar(CurShip);",
              "",
              "cur_org = ShipGroup(CurShip); //Переменная cur_org объявляется в привязанном блоке кода",
              "if(cur_org == RedAxesMercs)",
              "{",
              "    dword HQ = GroupToShip(RedAxesHQ);",
              "    dword leader = GroupToShip(RedAxesLeader);",
              "}",
              "else if(cur_org == AtlantMercs)",
              "{",
              "    HQ = GroupToShip(AtlantHQ);",
              "    leader = GroupToShip(AtlantLeader);",
              "}",
              "else if(cur_org == FaeyangelionMercs)",
              "{",
              "    HQ = GroupToShip(FaeyangelionHQ);",
              "    leader = GroupToShip(FaeyangelionLeader);",
              "}",
              "else leader = 0;",
              "",
              "if(!HQ) HQ = GroupToShip(MercCenter); //Если штаб организации временно отсутствует, либо наёмник является фрилансером",
              "",
              "//Чтобы в конфликте за систему наёмники всегда оставались на стороне своего штаба",
              "ShipOwner(CurShip, ShipOwner(HQ));",
              "",
              "//Не трогаем корабль, пока он находится в гипере",
              "if(ShipInHyperSpace(CurShip)) exit;",
              "",
              "//Чтобы стейт не блочил скриптовые приказы",
              "OrderLock(CurShip, 1);",
              "//Вынуждаем наёмника самостоятельно выполнить наведение пушек (может по астероидам постреляет или ещё по кому)",
              "ShipFreeFlight(CurShip, 1);",
              "",
              "//Если предмет ещё не был подобран наёмником",
              "if(!GetData(2))",
              "{",
              "    dword cur_planet = GetShipPlanet(CurShip);",
              "    //Если наёмник добрался до планеты",
              "    if(cur_planet)",
              "    {",
              "        //Сперва ищем любую ближайшую подходящую систему, которая не захвачена врагом",
              "        ArrayClear(tarr1);",
              "        for(int i = 1; i <= 5; i = i + 1)",
              "        {",
              "            dword star = StarNearbyStars(cur_star, i);",
              "",
              "            //Сразу пропускаем доминаторские системы и системы с кастомной фракцией",
              "            if(StarOwner(star) == 1) continue;",
              "            if(StarCustomFaction(star) != '') continue;",
              "            if(StarBattle(star)) continue;",
              "            //Пропускаем скрытый пиратский сектор",
              "            if(Id(star) - 1 == TortugatzId) continue;",
              "            if(Id(star) - 1 == NifigatzId) continue;",
              "",
              "            for(int j = 0; j < StarPlanets(star); j = j + 1)",
              "            {",
              "                dword cur_item = StarPlanets(star, j);",
              "                if(PlanetOwner(cur_item) == None) continue;",
              "                ArrayAdd(tarr1, cur_item);",
              "            }",
              "",
              "            //Запоминаем случайную обитаемую планету в подходящей системе",
              "            SetData(Id(tarr1[RndObject(1, ArrayDim(tarr1) - 1, CurShip)]), 1);",
              "            //Создаём случайный квестовый юзлес, который добавляем в трюм наёмника и также запоминаем",
              "            cur_item = CreateQuestItem('Usl_' + RndObject(0, 75, CurShip));",
              "            AddItemToShip(CurShip, cur_item);",
              "            NoDropItem(cur_item, 1);",
              "            ArrangeItems(CurShip);",
              "            SetData(Id(cur_item), 2);",
              "",
              "            //Отдаём наёмнику команду на взлёт",
              "            OrderTakeOff(CurShip);",
              "            break;",
              "        }",
              "",
              "        //Если подходящих систем неподалёку не нашли, завершаем взятия задания",
              "        if(!GetData(2))",
              "        {",
              "            SetData(CurTurn(), 0);",
              "",
              "            //MercNormal - стейт типа Free, поэтому первый приказ кораблю приходится отдавать отсюда (сам стейт при переключении ему приказ не сменит)",
              "            OrderLock(CurShip, 0);",
              "            ShipFreeFlight(CurShip);",
              "            ChangeState('MercNormal');",
              "            exit;",
              "        }",
              "    }",
              "    else OrderLanding(CurShip, NearCivilPlanet(CurShip));",
              "}",
              "//Если предмет уже находится в трюме",
              "else",
              "{",
              "    //Отправляем наёмника в систему с целевой планетой",
              "    cur_planet = IdToPlanet(GetData(1));",
              "    if(ShipInNormalSpace(CurShip))",
              "    {",
              "        star = PlanetToStar(cur_planet);",
              "        if(cur_star == star)",
              "        {",
              "            //Если целевая система не захвачена",
              "            if(StarOwner(star) != 1 && StarCustomFaction(star) == '')",
              "            {",
              "                OrderLanding(CurShip, cur_planet);",
              "            }",
              "            else",
              "            {",
              "                //Обнуляем данные о задании, и возвращаем наёмника в обычный стейт",
              "                SetData(CurTurn(), 0);",
              "                SetData(0, 1);",
              "                cur_item = IdToItem(GetData(2));",
              "                NoDropItem(cur_item, 0);",
              "                SetData(0, 2);",
              "",
              "                //MercNormal - стейт типа Free, поэтому первый приказ кораблю приходится отдавать отсюда (сам стейт при переключении ему приказ не сменит)",
              "                OrderLock(CurShip, 0);",
              "                ShipFreeFlight(CurShip);",
              "                ChangeState('MercNormal');",
              "                exit;",
              "            }",
              "        }",
              "        else",
              "        {",
              "            //Если целевая система не захвачена",
              "            if(StarOwner(star) != 1 && StarCustomFaction(star) == '')",
              "            {",
              "                OrderJump(CurShip, star);",
              "            }",
              "            else",
              "            {",
              "                //Обнуляем данные о задании, и возвращаем наёмника в обычный стейт",
              "                SetData(CurTurn(), 0);",
              "                SetData(0, 1);",
              "                cur_item = IdToItem(GetData(2));",
              "                NoDropItem(cur_item, 0);",
              "                SetData(0, 2);",
              "",
              "                //MercNormal - стейт типа Free, поэтому первый приказ кораблю приходится отдавать отсюда (сам стейт при переключении ему приказ не сменит)",
              "                OrderLock(CurShip, 0);",
              "                ShipFreeFlight(CurShip);",
              "                ChangeState('MercNormal');",
              "                exit;",
              "            }",
              "        }",
              "    }",
              "    else",
              "    {",
              "        //Если наёмник уже сел на нужную планету, то забираем у него предмет и \"завершаем квест\"",
              "        if(GetShipPlanet(CurShip) == cur_planet)",
              "        {",
              "            SetData(CurTurn(), 0);",
              "            SetData(0, 1);",
              "            cur_item = IdToItem(GetData(2));",
              "            FreeItem(GetItemFromShip(CurShip, cur_item));",
              "            SetData(0, 2);",
              "            ShipMoney(CurShip, round(1.4 * ShipMoney(CurShip)));",
              "            int free_exp = ShipFreeExp(CurShip);",
              "            int add_exp = round(0.4 * free_exp);",
              "            ShipFreeExp(CurShip, free_exp + add_exp);",
              "            SetShipExpByType(CurShip, GetShipExpByType(CurShip) + add_exp, 0);",
              "",
              "            //Также у наёмника имеется некоторый шанс получить рандомный артефакт",
              "            if(IsScriptActive('Mod_ExpExplorers'))",
              "            {",
              "                if(!ShipArts(CurShip))",
              "                {",
              "                    //С шансом в 9%",
              "                    if(RndObject(1, 100, CurShip) <= 9)",
              "                    {",
              "                        int art_num;",
              "                        if(IsScriptActive('Mod_ExpArts')) art_num = RndObject(1, ArrayDim(GgiveArtsArray) - 1, CurShip); //+4 дополнительных артефакта из ExpArts",
              "                        else art_num = 27;",
              "",
              "                        //Создаём оригинальный артефакт",
              "                        if(art_num <= 27)",
              "                        {",
              "                            art_num = CreateArt(GgiveArtsArray[art_num], 6);",
              "                            if(ShipFreeSpace(CurShip) >= ItemSize(art_num)) AddItemToShip(CurShip, art_num);",
              "                            else FreeItem(art_num);",
              "                        }",
              "                        //Создаём кастомный артефакт из ExpArts",
              "                        else",
              "                        {",
              "                            art_num = CreateCustomArt(GgiveArtsArray[art_num], CustomArtSizeCalc(int(CT('Artefacts.CustomArtefacts.' + GgiveArtsArray[art_num] + '.Size'))), CustomArtCostCalc(int(CT('Artefacts.CustomArtefacts.' + GgiveArtsArray[art_num] + '.Cost'))), 6);",
              "                            if(ShipFreeSpace(CurShip) >= ItemSize(art_num)) AddItemToShip(CurShip, art_num);",
              "                            else FreeItem(art_num);",
              "                        }",
              "                    }",
              "                }",
              "            }",
              "",
              "            //MercNormal - стейт типа Free, поэтому первый приказ кораблю приходится отдавать отсюда (сам стейт при переключении ему приказ не сменит)",
              "            OrderLock(CurShip, 0);",
              "            ShipFreeFlight(CurShip);",
              "            ChangeState('MercNormal');",
              "            exit;",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  434,
          "#":  435,
          "Total.Lines":  34,
          "Code.Type":  "Turn",
          "Code":          
          [
              "int cur_org = ShipGroup(CurShip);",
              "NoLanding(CurShip, 1); //На всякий случай обновляем запрет на каждом ходу, чтобы чьи-то чужие кривые моды его не сбрасывали",
              "",
              "//Вручную корректируем отношение штаба к игроку",
              "//Штаб топоров",
              "if(cur_org == RedAxesHQ)",
              "{",
              "    if(!GroupCount(RedAxesLeader))",
              "    {",
              "        if(ShipStar(Player()) != ShipStar(CurShip)) ShipDestroy(CurShip, 1);",
              "    }",
              "",
              "    RelationToRanger(CurShip, Player(), MercOrganisationsData['RedAxes', 'RelationToPlayer']);",
              "}",
              "//Штаб атлантов",
              "else if(cur_org == AtlantHQ)",
              "{",
              "    if(!GroupCount(AtlantLeader))",
              "    {",
              "        if(ShipStar(Player()) != ShipStar(CurShip)) ShipDestroy(CurShip, 1);",
              "    }",
              "",
              "    RelationToRanger(CurShip, Player(), MercOrganisationsData['Atlant', 'RelationToPlayer']);",
              "}",
              "//Штаб фэев",
              "else //if(cur_org == FaeyangelionHQ)",
              "{",
              "    if(!GroupCount(FaeyangelionLeader))",
              "    {",
              "        if(ShipStar(Player()) != ShipStar(CurShip)) ShipDestroy(CurShip, 1);",
              "    }",
              "",
              "    RelationToRanger(CurShip, Player(), MercOrganisationsData['Faeyangelion', 'RelationToPlayer']);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  310,
          "Pos.y":  520,
          "Parent":  -1,
          "#":  438,
          "Total.Lines":  9,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(!tempVar1)",
              "{",
              "    if(GroupCount(MercCenter))",
              "    {",
              "        tempVar1 = 1;",
              "        DeclareHeadBountyList();",
              "        UpdateHeadBountyList();",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  443,
          "#":  440,
          "Total.Lines":  27,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1 = '';",
              "for(int i = HeadBountyList['TargetsCount'] - 1; i >= 0; i = i - 1)",
              "{",
              "    if(HeadBountyList['TargetsId', i] > 0)",
              "    {",
              "        dword target_temp = IdToShip(HeadBountyList['TargetsId', i]);",
              "",
              "        SetName(target_temp, ShipCustomShipInfoTextData(target_temp, 'ShuMercs_HeadBountyInfo', 1));",
              "        str name = Name(target_temp);",
              "        str bounty_type = ShipCustomShipInfoTextData(target_temp, 'ShuMercs_HeadBountyInfo', 2);",
              "    }",
              "    else",
              "    {",
              "        target_temp = IdToItem(abs(HeadBountyList['TargetsId', i]));",
              "",
              "        name = ScriptItemTextData(target_temp, 3);",
              "        bounty_type = GetParFromString(ScriptItemTextData(target_temp, 2), ':', 13, 0);",
              "        bounty_type = GetParFromString(bounty_type, ',', 3, 0);",
              "    }",
              "",
              "    tstr1 = tstr1 + Format('<br>') + Format(CT('Script.Mod_ShuMercs.HeadHunting.NameAndBounty' + bounty_type), '<Name'+'>', name, '<BountyAlive'+'>', '<color=0,132,15>' + round(HeadBountyList['AliveMultiplier'] * HeadBountyList['TargetsBounty', i]) + '</color>', '<BountyDead'+'>', HeadBountyList['TargetsBounty', i]);",
              "}",
              "",
              "if(HeadBountyList['TargetsCount']) tstr1 = '</color>' + Format(CT('Script.Mod_ShuMercs.HeadHunting.BountyListBridge'), '<List'+'>', tstr1, '');",
              "else tstr1 = '</color>' + CT('Script.Mod_ShuMercs.HeadHunting.BountyListBridgeNoTargets');",
              "tstr2 = '</color>' + CT('Script.Mod_ShuMercs.HeadHunting.SetHeadBounty');",
              "tstr3 = '</color>' + CT('Script.Mod_ShuMercs.HeadHunting.BackToGalanet');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  442,
          "#":  444,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Выход в раздел \"Галанет\"",
              "if(PlayerBridge()) PlayerBridge(10);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  445,
          "#":  448,
          "Total.Lines":  126,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(ShipMoney(Player()) < 1053) MessageBox(CT('Script.Mod_ShuMercs.HeadHunting.NotEnoughMoneyToSetBounty'));",
              "else",
              "{",
              "    int is_valid = 0;",
              "    str target_name = TextBox(CT('Script.Mod_ShuMercs.HeadHunting.ChooseTarget'));",
              "    if(target_name != '')",
              "    {",
              "        for(i = 0; i < GalaxyStars(); i = i + 1)",
              "        {",
              "            dword star = GalaxyStar(i);",
              "            for(int j = StarShips(star) - 1; j >= 0; j = j - 1)",
              "            {",
              "                dword target = StarShips(star, j);",
              "",
              "                if(lowercase(DeleteTags(ShortName(target))) != lowercase(target_name))",
              "                {",
              "                    if(lowercase(DeleteTags(Name(target))) != lowercase(target_name))",
              "                    {",
              "                        continue; //Цель невозможно найти в поиске",
              "                    }",
              "                }",
              "",
              "                if(ShipStar(target) == GalaxyStar(TortugatzId) || ShipStar(target) == GalaxyStar(NifigatzId))",
              "                {",
              "                    continue; //Цель невозможно найти в поиске, наёмник откажется",
              "                }",
              "",
              "                if(target == Blazer() ||",
              "                   target == Keller() ||",
              "                   target == Terron() ||",
              "                   ShipOwner(target) == Kling ||",
              "",
              "                   ShipType(target) == 'Machpella' ||",
              "                   ShipType(target) == 'Neurolink' ||",
              "                   ShipType(target) == 'Unknown' ||",
              "",
              "                   ShipTypeN(target) == t_Tranclucator ||",
              "                   ObjectType(target) == 4)",
              "                {",
              "                    is_valid = -1;",
              "                    continue; //Цель выходит за рамки здравого смысла",
              "                }",
              "",
              "                is_valid = 1;",
              "                break;",
              "            }",
              "",
              "            for(j = StarItems(star) - 1; j >= 0; j = j - 1)",
              "            {",
              "                target = StarItems(star, j);",
              "",
              "                if(ItemType(target) != t_UselessItem) continue;",
              "                if(EquipmentImageName(target) != 'ShuBounty_EscapePod') continue;",
              "",
              "                str bounty_str = GetParFromString(ScriptItemTextData(target, 2), ':', 13, 0);",
              "                if(bounty_str != '')",
              "                {",
              "                    if(lowercase(GetParFromString(bounty_type, ',', 2, 0)) != lowercase(target_name))",
              "                    {",
              "                        if(lowercase(ScriptItemTextData(target, 3)) != lowercase(target_name))",
              "                        {",
              "                            continue; //Цель невозможно найти в поиске",
              "                        }",
              "                    }",
              "                }",
              "                else continue;",
              "",
              "                is_valid = 2;",
              "                break;",
              "            }",
              "",
              "            if(is_valid > 0) break;",
              "        }",
              "",
              "        if(!is_valid) MessageBox(CT('Script.Mod_ShuMercs.HeadHunting.TargetNotFound'));",
              "        else if(is_valid < 0) MessageBox(CT('Script.Mod_ShuMercs.HeadHunting.TargetIsInvalid'));",
              "        else",
              "        {",
              "            str bounty = NumberBox('Bm.ItemsUseless.2Usl_Elus_s', Format(CT('Script.Mod_ShuMercs.HeadHunting.SetBountyAmount'), '<Commission'+'>', '5%', '0,50,200'), 1053, ShipMoney(Player()), ShipMoney(Player()), 'Bm.FormCount2.2KindCredits');",
              "            if(bounty != 'Cancel')",
              "            {",
              "                ShipMoney(Player(), ShipMoney(Player()) - bounty);",
              "                Sound('Sound.Buy');",
              "",
              "                bounty = int(RoundTo(0.95 * bounty, 1000, 0));",
              "",
              "                if(ShipFindCustomShipInfoByType(target, 'ShuMercs_HeadBountyInfo') == -1)",
              "                {",
              "                    AddToHeadBountyList(target, 1);",
              "                    ArraySort(HeadBountyList['TargetsBounty'], HeadBountyList['TargetsId']);",
              "                    MessageBox(Format(CT('Script.Mod_ShuMercs.HeadHunting.NewBountySet'), '<Bounty'+'>', bounty, '<Target'+'>', Name(target)));",
              "                }",
              "                else //Корабль/капсула уже и так был в списке наград",
              "                {",
              "                    if(is_valid == 1) AddToHeadBountyList(target, 0, bounty);",
              "                    else",
              "                    {",
              "                        for(i = HeadBountyList['TargetsCount'] - 1; i >= 0; i = i - 1)",
              "                        {",
              "                            if(HeadBountyList['TargetsId', i] != -Id(target)) continue;",
              "                            HeadBountyList['TargetsBounty', i] = HeadBountyList['TargetsBounty', i] + bounty;",
              "                            break;",
              "                        }",
              "",
              "                        SetParFromString(bounty_type, ',', 0, HeadBountyList['TargetsBounty', i]); //Награда",
              "                        SetParFromString(bounty_type, ',', 1, 77 + GetParFromString(bounty_type, ',', 1, 0)); //Время истечения",
              "                        SetParFromString(bounty_type, ',', 3, 'Dead'); //Тип получения награды",
              "",
              "                        for(i = HeadBountyList['TargetsCount'] - 1; i >= 0; i = i - 1)",
              "                        {",
              "                            if(HeadBountyList['TargetsId', i] != -Id(target)) continue;",
              "                            HeadBountyList['TargetsBounty', i] = HeadBountyList['TargetsBounty', i] + bounty;",
              "                            break;",
              "                        }",
              "                    }",
              "",
              "                    ArraySort(HeadBountyList['TargetsBounty'], HeadBountyList['TargetsId']);",
              "                    MessageBox(Format(CT('Script.Mod_ShuMercs.HeadHunting.BountyIncreased'), '<Bounty'+'>', bounty, '<Target'+'>', Name(target)));",
              "                }",
              "",
              "                //Чтобы у игрока не возникало вопросов, куда делись лишние наградные после убийства цели",
              "                ShipCustomShipInfoTextData(target, 'ShuMercs_HeadBountyInfo', 2, 'Dead');",
              "            }",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  454,
          "#":  456,
          "Total.Lines":  6,
          "Code.Type":  "Turn",
          "Code":          
          [
              "HeadBountyList['DialogStatus'] = 1;",
              "",
              "if(CurrentMods('ShusRangers\\ShuBounty')) tstr1 = CT('Script.Mod_ShuMercs.HeadHunting.BountyListFirstMBAdd');",
              "else tstr1 = '';",
              "tstr1 = '</color>' + Format(CT('Script.Mod_ShuMercs.HeadHunting.BountyListFirstMB'), '<Add'+'>', tstr1, '');",
              "tstr2 = '</color>' + CT('Script.Mod_ShuMercs.HeadHunting.PlayerGoToList');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  455,
          "#":  459,
          "Total.Lines":  27,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1 = '';",
              "for(i = HeadBountyList['TargetsCount'] - 1; i >= 0; i = i - 1)",
              "{",
              "    if(HeadBountyList['TargetsId', i] > 0)",
              "    {",
              "        dword target_temp2 = IdToShip(HeadBountyList['TargetsId', i]);",
              "",
              "        SetName(target_temp2, ShipCustomShipInfoTextData(target_temp2, 'ShuMercs_HeadBountyInfo', 1));",
              "        str name2 = Name(target_temp2);",
              "        str bounty_type2 = ShipCustomShipInfoTextData(target_temp2, 'ShuMercs_HeadBountyInfo', 2);",
              "    }",
              "    else",
              "    {",
              "        target_temp2 = IdToItem(abs(HeadBountyList['TargetsId', i]));",
              "",
              "        name2 = ScriptItemTextData(target_temp2, 3);",
              "        bounty_type2 = GetParFromString(ScriptItemTextData(target_temp2, 2), ':', 13, 0);",
              "        bounty_type2 = GetParFromString(bounty_type2, ',', 3, 0);",
              "    }",
              "",
              "    tstr1 = tstr1 + Format('<br>') + Format(CT('Script.Mod_ShuMercs.HeadHunting.NameAndBounty' + bounty_type2), '<Name'+'>', name2, '<BountyAlive'+'>', '<color=0,132,15>' + round(HeadBountyList['AliveMultiplier'] * HeadBountyList['TargetsBounty', i]) + '</color>', '<BountyDead'+'>', HeadBountyList['TargetsBounty', i]);",
              "}",
              "",
              "if(HeadBountyList['TargetsCount']) tstr1 = '</color>' + Format(CT('Script.Mod_ShuMercs.HeadHunting.BountyListMB'), '<List'+'>', tstr1, '');",
              "else tstr1 = '</color>' + CT('Script.Mod_ShuMercs.HeadHunting.BountyListMBNoTargets');",
              "tstr2 = '</color>' + CT('Script.Mod_ShuMercs.HeadHunting.SetHeadBounty');",
              "tstr3 = '</color>' + CT('Script.Mod_ShuMercs.HeadHunting.PlayerDone');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  461,
          "#":  462,
          "Total.Lines":  45,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Стейт охоты за целью (выставляется из MercNormal)",
              "//Data0 - маркер, прыгаем ли за целью или забиваем",
              "//Data1 - Id цели",
              "",
              "dword target = IdToShip(GetData(1));",
              "",
              "if(target)",
              "{",
              "    ShipSetBad(CurShip, target);",
              "",
              "    if(ShipStar(CurShip) == ShipStar(target))",
              "    {",
              "        SetData(0, 0);",
              "        OrderFollowShip(CurShip, target, 1);",
              "    }",
              "    else if(GetData(0))",
              "    {",
              "        OrderJump(CurShip, ShipStar(target));",
              "    }",
              "    else if(RndObject(0, 1, CurShip))",
              "    {",
              "        SetData(1, 0);",
              "        OrderJump(CurShip, ShipStar(target));",
              "    }",
              "    else",
              "    {",
              "        ShipSetBad(CurShip, 0);",
              "        OrderLock(CurShip, 0);",
              "        SetData(0, 0);",
              "        SetData(0, 1);",
              "        ShipFreeFlight(CurShip);",
              "        ChangeState('MercNormal');",
              "        exit;",
              "    }",
              "}",
              "else",
              "{",
              "    ShipSetBad(CurShip, 0);",
              "    OrderLock(CurShip, 0);",
              "    SetData(0, 0);",
              "    SetData(0, 1);",
              "    ShipFreeFlight(CurShip);",
              "    ChangeState('MercNormal');",
              "    exit;",
              "}"          
          ]        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "InitPlanet",
          "Pos.x":  100,
          "Pos.y":  590,
          "Parent":  -1,
          "#":  1,
          "Race":  62,
          "Owner":  62,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  190,
          "Pos.y":  620,
          "Parent":  -1,
          "#":  2,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "InitStar",
          "Pos.x":  100,
          "Pos.y":  620,
          "Parent":  -1,
          "#":  0,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "Statements":      
      [
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  30,
          "Parent":  391,
          "#":  233,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cur_ruin_type == 'Manaan'"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  391,
          "#":  234,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cur_ruin_type == 'MB'"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  60,
          "Parent":  273,
          "#":  266,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "MercOrganisationsData['FreeRecruitsReserve']"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  60,
          "Parent":  272,
          "#":  267,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "MercOrganisationsData['Faeyangelion', 'RecruitsReserve'] && MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] > 25"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  60,
          "Parent":  272,
          "#":  268,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "MercOrganisationsData['RedAxes', 'RecruitsReserve'] && MercOrganisationsData['RedAxes', 'RelationToPlayer'] > 25"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  60,
          "Parent":  272,
          "#":  269,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "MercOrganisationsData['Atlant', 'RecruitsReserve'] && MercOrganisationsData['Atlant', 'RelationToPlayer'] > 25"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  60,
          "Parent":  271,
          "#":  270,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  330,
          "Pos.y":  0,
          "Parent":  32,
          "#":  271,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  200,
          "Pos.y":  0,
          "Parent":  32,
          "#":  272,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  310,
          "Pos.y":  0,
          "Parent":  32,
          "#":  273,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  60,
          "Parent":  277,
          "#":  274,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "MercOrganisationsData['Atlant', 'RelationToPlayer'] < 50 && GroupCount(AtlantLeader)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  60,
          "Parent":  277,
          "#":  275,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "MercOrganisationsData['RedAxes', 'RelationToPlayer'] < 50 && GroupCount(RedAxesLeader)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  40,
          "Pos.y":  60,
          "Parent":  277,
          "#":  276,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "MercOrganisationsData['Faeyangelion', 'RelationToPlayer'] < 50 && GroupCount(FaeyangelionLeader)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  50,
          "Pos.y":  20,
          "Parent":  32,
          "#":  277,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  61,
          "#":  278,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) >= cost && CurTurn() >= red_call"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  60,
          "#":  279,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) >= cost && CurTurn() >= atlant_call"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  62,
          "#":  280,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) >= cost && CurTurn() >= fei_call"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  80,
          "Pos.y":  150,
          "Parent":  277,
          "#":  281,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  70,
          "Parent":  92,
          "#":  282,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  620,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  283,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "Soldats >= 3 && Squad != 2 && Squad && ShipSkill(Player(), 'LeadershipCur') >= 2 &&",
              "(ShipRank(Player()) >= 3 || GetShipPirateRank(Player()) >= 3)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  640,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  284,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "CurTurn() < timer_attack"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  620,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  285,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "CurTurn() >= timer_attack"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  740,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  286,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  800,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  287,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "Soldats >= 3 && Squad != 1 &&",
              "(ShipRank(Player()) >= 1 || GetShipPirateRank(Player()) >= 1)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -10,
          "Pos.y":  20,
          "Parent":  288,
          "#":  289,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "CurTurn() >= i"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  10,
          "Pos.y":  20,
          "Parent":  288,
          "#":  290,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "CurTurn() < i"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  850,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  291,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  830,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  292,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  790,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  293,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  740,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  294,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) >= cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  560,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  295,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) >= cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  650,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  296,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) >= cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  670,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  297,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  760,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  298,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  580,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  299,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  30,
          "Pos.y":  30,
          "Parent":  195,
          "#":  300,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "RelationToRanger(cur_ship, Player()) <= 25 ||",
              "ShipGetBad(cur_ship) == Player()"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -30,
          "Pos.y":  30,
          "Parent":  195,
          "#":  301,
          "Total.Lines":  3,
          "Code.Type":  "Turn",
          "Code":          
          [
              "HullDamage(cur_ship) > 50 &&",
              "RelationToRanger(cur_ship, Player()) > 25 &&",
              "ShipGetBad(cur_ship) != Player()"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  10,
          "Pos.y":  30,
          "Parent":  195,
          "#":  302,
          "Total.Lines":  4,
          "Code.Type":  "Turn",
          "Code":          
          [
              "HullDamage(cur_ship) <= 50 &&",
              "ShipOrder(cur_ship) != 6 &&",
              "RelationToRanger(cur_ship, Player()) > 25 &&",
              "ShipGetBad(cur_ship) != Player()"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -10,
          "Pos.y":  30,
          "Parent":  195,
          "#":  303,
          "Total.Lines":  4,
          "Code.Type":  "Turn",
          "Code":          
          [
              "HullDamage(cur_ship) <= 50 &&",
              "ShipOrder(cur_ship) == 6 &&",
              "RelationToRanger(cur_ship, Player()) > 25 &&",
              "ShipGetBad(cur_ship) != Player()"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  80,
          "Pos.y":  0,
          "Parent":  305,
          "#":  304,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  80,
          "Pos.y":  50,
          "Parent":  195,
          "#":  305,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  850,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  306,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -60,
          "Pos.y":  30,
          "Parent":  238,
          "#":  307,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check == 3 && merc_type == 1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -40,
          "Pos.y":  30,
          "Parent":  238,
          "#":  308,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check == 4 && merc_type == 1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  30,
          "Parent":  238,
          "#":  309,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check == 5 && merc_type == 1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  238,
          "#":  310,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check == 2 && merc_type == 2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  30,
          "Parent":  238,
          "#":  311,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check == 3 && merc_type == 2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  40,
          "Pos.y":  30,
          "Parent":  238,
          "#":  312,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check == 4 && merc_type == 2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  60,
          "Pos.y":  30,
          "Parent":  238,
          "#":  313,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check == 5 && merc_type == 2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -30,
          "Pos.y":  150,
          "Parent":  195,
          "#":  314,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) >= cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  50,
          "Parent":  103,
          "#":  315,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -80,
          "Pos.y":  30,
          "Parent":  238,
          "#":  316,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check == 2 && merc_type == 1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  322,
          "#":  317,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check == 8"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  30,
          "Parent":  322,
          "#":  318,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check == 9"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  30,
          "Parent":  322,
          "#":  319,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check == 1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  50,
          "Parent":  51,
          "#":  320,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check == 7"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  50,
          "Parent":  50,
          "#":  321,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check == 6"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -160,
          "Pos.y":  0,
          "Parent":  238,
          "#":  322,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  58,
          "#":  325,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) >= cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  30,
          "Pos.y":  20,
          "Parent":  58,
          "#":  326,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  40,
          "Parent":  188,
          "#":  327,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipStar(cur_ship) == GalaxyStar(attack_star)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  60,
          "Pos.y":  40,
          "Parent":  188,
          "#":  328,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipStar(cur_ship) != GalaxyStar(attack_star)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  40,
          "Parent":  81,
          "#":  330,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "enemy_for_all"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  40,
          "Pos.y":  0,
          "Parent":  211,
          "#":  331,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  60,
          "Parent":  210,
          "#":  332,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  140,
          "Parent":  334,
          "#":  333,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -80,
          "Pos.y":  60,
          "Parent":  188,
          "#":  334,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  40,
          "Parent":  81,
          "#":  336,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  40,
          "Parent":  81,
          "#":  337,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  60,
          "Parent":  82,
          "#":  338,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  60,
          "Pos.y":  50,
          "Parent":  81,
          "#":  339,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  90,
          "#":  341,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  73,
          "#":  342,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  73,
          "#":  343,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  30,
          "Parent":  78,
          "#":  346,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  78,
          "#":  347,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  40,
          "Parent":  118,
          "#":  348,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  40,
          "Parent":  117,
          "#":  349,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -50,
          "Pos.y":  40,
          "Parent":  113,
          "#":  350,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  30,
          "Pos.y":  40,
          "Parent":  113,
          "#":  351,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -100,
          "Pos.y":  30,
          "Parent":  63,
          "#":  352,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  350,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  385,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!ShipIsTakeoff(Player())"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  169,
          "#":  401,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  172,
          "#":  402,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  161,
          "#":  403,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  163,
          "#":  404,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -180,
          "Pos.y":  0,
          "Parent":  399,
          "#":  405,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  170,
          "#":  407,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  60,
          "Pos.y":  920,
          "Parent":  -1,
          "#":  408,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  85,
          "#":  409,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipsInAttack() > 1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  85,
          "#":  410,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  87,
          "#":  411,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  87,
          "#":  412,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  84,
          "#":  413,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipsInAttack() > 1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  84,
          "#":  414,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  590,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  421,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  30,
          "Parent":  422,
          "#":  430,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  439,
          "#":  443,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "PlayerBridge()"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  441,
          "#":  446,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "HeadBountyList['TargetsCount'] < 30"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  441,
          "#":  447,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  448,
          "#":  449,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "PlayerBridge()"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  -80,
          "Parent":  449,
          "#":  450,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  441,
          "#":  451,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "HeadBountyList['TargetsCount'] >= 30"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  439,
          "#":  453,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!PlayerBridge()"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  453,
          "#":  454,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!HeadBountyList['DialogStatus']"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  453,
          "#":  455,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "HeadBountyList['DialogStatus']"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  60,
          "Pos.y":  0,
          "Parent":  448,
          "#":  460,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!PlayerBridge()"          
          ]        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "RaidTakeoff",
          "Pos.x":  -80,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  139,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "RaidDialog",
          "OnActCode":  "RaidDialog",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "RaidJump",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  139,
          "#":  140,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "RaidDialog",
          "OnActCode":  "RaidDialog",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "RaidAct",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  140,
          "#":  141,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "RaidDialog",
          "OnActCode":  "RaidDialog",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "RaidReturn",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  141,
          "#":  142,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "RaidDialog",
          "OnActCode":  "RaidDialog",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "RaidLand",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  142,
          "#":  143,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "RaidDialog",
          "OnActCode":  "RaidDialog",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "AttackTakeoff",
          "Pos.x":  100,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  144,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "AttackDialog",
          "OnActCode":  "AttackDialog",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "AttackJump",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  144,
          "#":  145,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "AttackDialog",
          "OnActCode":  "AttackDialog",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "AttackMain",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  145,
          "#":  146,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "AttackDialog",
          "OnActCode":  "AttackDialog",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "MercSpeedReturnToMB",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  149,
          "#":  147,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "RunDialog",
          "OnActCode":  "RunDialog",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "MercLandingMB",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  159,
          "#":  148,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "MercReturnToMB",
          "Pos.x":  -80,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  149,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "RunDialog",
          "OnActCode":  "RunDialog",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "MBState",
          "Pos.x":  0,
          "Pos.y":  -20,
          "Parent":  132,
          "#":  150,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "[t_OnDeath|]\r\nMercCenterActCode();",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "PlayerState",
          "Pos.x":  0,
          "Pos.y":  -20,
          "Parent":  128,
          "#":  151,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "MercJump",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  158,
          "#":  152,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "MercAttack",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  152,
          "#":  153,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "LeaderMeeting",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  155,
          "#":  154,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "[t_OnDeath,t_OnStep|11]\r\nMercLeaderActCode();",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "LeaderInactive",
          "Pos.x":  100,
          "Pos.y":  880,
          "Parent":  -1,
          "#":  155,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "[t_OnDeath,t_OnStep|11]\r\nMercLeaderActCode();",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "LeaderReturning",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  154,
          "#":  156,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "[t_OnDeath,t_OnStep|11]\r\nMercLeaderActCode();",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "LeaderAttacking",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  156,
          "#":  157,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "[t_OnDeath,t_OnStep|11]\r\nMercLeaderActCode();",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "MercEscort",
          "Pos.x":  0,
          "Pos.y":  40,
          "Parent":  425,
          "#":  158,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "MercFreeHireState",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  153,
          "#":  159,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "MercToDieState",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  148,
          "#":  397,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "MercNormal",
          "Pos.x":  100,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  423,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "MercReturningHQ",
          "Pos.x":  0,
          "Pos.y":  40,
          "Parent":  427,
          "#":  425,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "MercGuardingQuest",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  423,
          "#":  426,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "MercDeliveryQuest",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  426,
          "#":  427,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "OrgHQState",
          "Pos.x":  0,
          "Pos.y":  -20,
          "Parent":  431,
          "#":  434,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "[t_OnDeath|]\r\nMercHQActCode();",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "MercHunting",
          "Pos.x":  100,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  461,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "Squad",
          "Pos.x":  1320,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  5,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cnt",
          "Pos.x":  390,
          "Pos.y":  720,
          "Parent":  -1,
          "#":  6,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "Soldats",
          "Pos.x":  1320,
          "Pos.y":  420,
          "Parent":  -1,
          "#":  7,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "rel",
          "Pos.x":  1580,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  8,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "coef",
          "Pos.x":  390,
          "Pos.y":  660,
          "Parent":  -1,
          "#":  9,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "coef2",
          "Pos.x":  1580,
          "Pos.y":  260,
          "Parent":  -1,
          "#":  10,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "i",
          "Pos.x":  390,
          "Pos.y":  620,
          "Parent":  -1,
          "#":  11,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "raid_star",
          "Pos.x":  1000,
          "Pos.y":  420,
          "Parent":  -1,
          "#":  12,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "raid_return",
          "Pos.x":  1000,
          "Pos.y":  460,
          "Parent":  -1,
          "#":  13,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "timer_attack",
          "Pos.x":  1100,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  14,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "timer_raid",
          "Pos.x":  1000,
          "Pos.y":  440,
          "Parent":  -1,
          "#":  15,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "attack_type",
          "Pos.x":  1400,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  16,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "attack_star",
          "Pos.x":  1400,
          "Pos.y":  420,
          "Parent":  -1,
          "#":  17,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "rand",
          "Pos.x":  390,
          "Pos.y":  640,
          "Parent":  -1,
          "#":  18,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "enemy_for_all",
          "Pos.x":  590,
          "Pos.y":  840,
          "Parent":  -1,
          "#":  19,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "free_id",
          "Pos.x":  1210,
          "Pos.y":  440,
          "Parent":  -1,
          "#":  20,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "target_id",
          "Pos.x":  1210,
          "Pos.y":  460,
          "Parent":  -1,
          "#":  21,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "merc_type",
          "Pos.x":  1580,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  22,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "target_name",
          "Pos.x":  1210,
          "Pos.y":  420,
          "Parent":  -1,
          "#":  23,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "free_name",
          "Pos.x":  1210,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  24,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "atlant_call",
          "Pos.x":  1000,
          "Pos.y":  550,
          "Parent":  -1,
          "#":  25,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "red_call",
          "Pos.x":  1000,
          "Pos.y":  530,
          "Parent":  -1,
          "#":  26,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "fei_call",
          "Pos.x":  1000,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  27,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "subowner",
          "Pos.x":  1580,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  28,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "enemy",
          "Pos.x":  1400,
          "Pos.y":  440,
          "Parent":  -1,
          "#":  29,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "free_timer",
          "Pos.x":  1100,
          "Pos.y":  420,
          "Parent":  -1,
          "#":  30,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "raid_status",
          "Pos.x":  1000,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  31,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "razr",
          "Pos.x":  1580,
          "Pos.y":  320,
          "Parent":  -1,
          "#":  126,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "rospusk_raida",
          "Pos.x":  1000,
          "Pos.y":  480,
          "Parent":  -1,
          "#":  127,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr1",
          "Pos.x":  460,
          "Pos.y":  620,
          "Parent":  -1,
          "#":  262,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ship",
          "Pos.x":  290,
          "Pos.y":  680,
          "Parent":  -1,
          "#":  263,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint1",
          "Pos.x":  390,
          "Pos.y":  760,
          "Parent":  -1,
          "#":  264,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "j",
          "Pos.x":  420,
          "Pos.y":  620,
          "Parent":  -1,
          "#":  265,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ruin",
          "Pos.x":  290,
          "Pos.y":  660,
          "Parent":  -1,
          "#":  354,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint2",
          "Pos.x":  390,
          "Pos.y":  780,
          "Parent":  -1,
          "#":  355,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint3",
          "Pos.x":  390,
          "Pos.y":  800,
          "Parent":  -1,
          "#":  362,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr2",
          "Pos.x":  460,
          "Pos.y":  640,
          "Parent":  -1,
          "#":  373,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr3",
          "Pos.x":  460,
          "Pos.y":  660,
          "Parent":  -1,
          "#":  374,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_item",
          "Pos.x":  290,
          "Pos.y":  720,
          "Parent":  -1,
          "#":  375,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_star",
          "Pos.x":  290,
          "Pos.y":  620,
          "Parent":  -1,
          "#":  376,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_planet",
          "Pos.x":  290,
          "Pos.y":  640,
          "Parent":  -1,
          "#":  377,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tarr1",
          "Pos.x":  460,
          "Pos.y":  790,
          "Parent":  -1,
          "#":  378,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "check",
          "Pos.x":  390,
          "Pos.y":  680,
          "Parent":  -1,
          "#":  379,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint4",
          "Pos.x":  390,
          "Pos.y":  820,
          "Parent":  -1,
          "#":  380,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr4",
          "Pos.x":  460,
          "Pos.y":  680,
          "Parent":  -1,
          "#":  381,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr5",
          "Pos.x":  460,
          "Pos.y":  700,
          "Parent":  -1,
          "#":  382,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr6",
          "Pos.x":  460,
          "Pos.y":  720,
          "Parent":  -1,
          "#":  383,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cost",
          "Pos.x":  390,
          "Pos.y":  700,
          "Parent":  -1,
          "#":  384,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GTL",
          "Pos.x":  390,
          "Pos.y":  840,
          "Parent":  -1,
          "#":  386,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tflt1",
          "Pos.x":  390,
          "Pos.y":  880,
          "Parent":  -1,
          "#":  387,
          "Var.Type":  "Float",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tarr2",
          "Pos.x":  460,
          "Pos.y":  810,
          "Parent":  -1,
          "#":  388,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "dialogs_path",
          "Pos.x":  290,
          "Pos.y":  760,
          "Parent":  -1,
          "#":  392,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "NifigatzId",
          "Pos.x":  290,
          "Pos.y":  800,
          "Parent":  -1,
          "#":  395,
          "Var.Type":  "Dword",
          "Init":  "71",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "TortugatzId",
          "Pos.x":  290,
          "Pos.y":  780,
          "Parent":  -1,
          "#":  396,
          "Var.Type":  "Dword",
          "Init":  "70",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "target_ship",
          "Pos.x":  290,
          "Pos.y":  700,
          "Parent":  -1,
          "#":  400,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "MercOrganisationsData",
          "Pos.x":  370,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  416,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  true        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ruin_type",
          "Pos.x":  460,
          "Pos.y":  740,
          "Parent":  -1,
          "#":  420,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "HeadBountyList",
          "Pos.x":  370,
          "Pos.y":  590,
          "Parent":  -1,
          "#":  436,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  true        
        },
        {
          "Type":  "TVar",
          "Name":  "tempVar1",
          "Pos.x":  310,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  437,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  2,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  1,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  128,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  129,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  130,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  131,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  132,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  133,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  134,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  135,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  136,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  128,
      "End":  151,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  132,
      "End":  150,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  134,
      "End":  155,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  135,
      "End":  155,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  136,
      "End":  155,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  139,
      "End":  160,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  140,
      "End":  161,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  141,
      "End":  162,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  142,
      "End":  163,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  143,
      "End":  164,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  147,
      "End":  168,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  148,
      "End":  169,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  149,
      "End":  170,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  150,
      "End":  171,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  152,
      "End":  172,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  153,
      "End":  173,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  154,
      "End":  174,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  155,
      "End":  178,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  157,
      "End":  176,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  159,
      "End":  177,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  179,
      "End":  193,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  180,
      "End":  194,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  181,
      "End":  195,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  183,
      "End":  196,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  184,
      "End":  197,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  185,
      "End":  198,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  186,
      "End":  199,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  187,
      "End":  200,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  189,
      "End":  201,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  190,
      "End":  86,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  192,
      "End":  90,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  38,
      "End":  221,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  56,
      "End":  222,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  63,
      "End":  112,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  63,
      "End":  117,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  63,
      "End":  118,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  64,
      "End":  113,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  65,
      "End":  116,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  68,
      "End":  217,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  69,
      "End":  224,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  72,
      "End":  120,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  72,
      "End":  121,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  72,
      "End":  122,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  74,
      "End":  124,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  76,
      "End":  125,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  76,
      "End":  202,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  76,
      "End":  203,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  77,
      "End":  204,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  80,
      "End":  210,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  83,
      "End":  225,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  220,
      "End":  226,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  93,
      "End":  227,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  227,
      "End":  34,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  95,
      "End":  228,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  228,
      "End":  34,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  97,
      "End":  229,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  229,
      "End":  35,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  98,
      "End":  230,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  230,
      "End":  33,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  231,
      "End":  38,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  99,
      "End":  232,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  233,
      "End":  91,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  234,
      "End":  32,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  100,
      "End":  235,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  101,
      "End":  236,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  102,
      "End":  237,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  105,
      "End":  239,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  107,
      "End":  240,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  108,
      "End":  241,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  241,
      "End":  60,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  109,
      "End":  242,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  242,
      "End":  61,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  110,
      "End":  243,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  243,
      "End":  62,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  111,
      "End":  244,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  112,
      "End":  64,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  115,
      "End":  66,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  116,
      "End":  63,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  117,
      "End":  67,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  118,
      "End":  246,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  119,
      "End":  247,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  247,
      "End":  68,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  120,
      "End":  73,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  121,
      "End":  74,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  122,
      "End":  248,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  123,
      "End":  250,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  250,
      "End":  75,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  124,
      "End":  249,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  125,
      "End":  78,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  203,
      "End":  251,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  205,
      "End":  253,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  253,
      "End":  79,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  206,
      "End":  254,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  207,
      "End":  255,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  208,
      "End":  83,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  209,
      "End":  256,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  212,
      "End":  257,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  257,
      "End":  84,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  213,
      "End":  258,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  214,
      "End":  259,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  215,
      "End":  260,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  226,
      "End":  34,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  94,
      "End":  261,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  261,
      "End":  34,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  104,
      "End":  238,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  156,
      "End":  175,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  224,
      "End":  106,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  222,
      "End":  106,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  266,
      "End":  220,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  269,
      "End":  95,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  268,
      "End":  94,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  267,
      "End":  93,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  270,
      "End":  92,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  91,
      "End":  271,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  32,
      "End":  271,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  271,
      "End":  270,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  272,
      "End":  268,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  272,
      "End":  269,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  272,
      "End":  267,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  32,
      "End":  272,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  91,
      "End":  273,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  273,
      "End":  266,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  274,
      "End":  108,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  275,
      "End":  109,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  276,
      "End":  110,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  59,
      "End":  271,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  59,
      "End":  277,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  277,
      "End":  275,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  277,
      "End":  274,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  277,
      "End":  276,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  61,
      "End":  278,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  278,
      "End":  206,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  60,
      "End":  279,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  279,
      "End":  111,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  62,
      "End":  280,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  280,
      "End":  207,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  61,
      "End":  281,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  60,
      "End":  281,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  62,
      "End":  281,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  282,
      "End":  92,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  283,
      "End":  284,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  283,
      "End":  285,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  284,
      "End":  219,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  285,
      "End":  97,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  286,
      "End":  98,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  287,
      "End":  288,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  288,
      "End":  289,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  288,
      "End":  290,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  289,
      "End":  100,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  290,
      "End":  218,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  291,
      "End":  282,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  292,
      "End":  96,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  235,
      "End":  293,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  294,
      "End":  99,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  194,
      "End":  40,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  193,
      "End":  39,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  39,
      "End":  295,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  40,
      "End":  296,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  296,
      "End":  102,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  295,
      "End":  101,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  37,
      "End":  298,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  37,
      "End":  294,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  40,
      "End":  297,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  39,
      "End":  299,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  195,
      "End":  300,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  195,
      "End":  301,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  195,
      "End":  302,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  195,
      "End":  303,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  300,
      "End":  44,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  301,
      "End":  41,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  303,
      "End":  42,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  302,
      "End":  43,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  304,
      "End":  103,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  51,
      "End":  304,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  50,
      "End":  304,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  44,
      "End":  304,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  43,
      "End":  304,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  42,
      "End":  304,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  41,
      "End":  304,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  43,
      "End":  305,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  50,
      "End":  305,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  51,
      "End":  305,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  305,
      "End":  104,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  306,
      "End":  283,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  306,
      "End":  286,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  306,
      "End":  287,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  306,
      "End":  292,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  306,
      "End":  291,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  34,
      "End":  306,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  238,
      "End":  307,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  238,
      "End":  308,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  238,
      "End":  309,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  307,
      "End":  47,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  308,
      "End":  48,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  238,
      "End":  310,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  311,
      "End":  53,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  238,
      "End":  311,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  310,
      "End":  52,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  312,
      "End":  54,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  313,
      "End":  55,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  238,
      "End":  312,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  238,
      "End":  313,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  314,
      "End":  105,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  315,
      "End":  103,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  55,
      "End":  315,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  54,
      "End":  315,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  53,
      "End":  315,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  52,
      "End":  315,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  49,
      "End":  315,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  48,
      "End":  315,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  47,
      "End":  315,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  47,
      "End":  314,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  48,
      "End":  314,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  49,
      "End":  314,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  52,
      "End":  314,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  53,
      "End":  314,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  54,
      "End":  314,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  55,
      "End":  314,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  309,
      "End":  49,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  316,
      "End":  46,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  238,
      "End":  316,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  46,
      "End":  314,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  46,
      "End":  315,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  238,
      "End":  321,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  321,
      "End":  50,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  238,
      "End":  320,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  317,
      "End":  88,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  318,
      "End":  89,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  45,
      "End":  315,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  89,
      "End":  315,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  88,
      "End":  315,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  322,
      "End":  317,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  322,
      "End":  318,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  322,
      "End":  319,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  238,
      "End":  322,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  201,
      "End":  85,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  198,
      "End":  70,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  196,
      "End":  58,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  325,
      "End":  107,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  327,
      "End":  81,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  328,
      "End":  80,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  86,
      "End":  329,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  81,
      "End":  330,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  330,
      "End":  209,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  225,
      "End":  331,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  331,
      "End":  211,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  332,
      "End":  210,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  211,
      "End":  333,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  334,
      "End":  81,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  333,
      "End":  334,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  225,
      "End":  332,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  81,
      "End":  336,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  336,
      "End":  208,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  81,
      "End":  337,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  337,
      "End":  212,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  256,
      "End":  338,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  338,
      "End":  82,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  339,
      "End":  210,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  82,
      "End":  339,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  81,
      "End":  339,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  90,
      "End":  341,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  341,
      "End":  340,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  199,
      "End":  72,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  73,
      "End":  343,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  343,
      "End":  122,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  73,
      "End":  342,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  342,
      "End":  123,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  75,
      "End":  344,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  200,
      "End":  76,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  79,
      "End":  345,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  78,
      "End":  346,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  78,
      "End":  347,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  347,
      "End":  205,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  197,
      "End":  63,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  67,
      "End":  348,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  348,
      "End":  118,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  67,
      "End":  349,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  349,
      "End":  119,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  65,
      "End":  350,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  350,
      "End":  115,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  65,
      "End":  351,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  114,
      "End":  245,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  351,
      "End":  114,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  66,
      "End":  114,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  64,
      "End":  114,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  113,
      "End":  65,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  64,
      "End":  352,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  352,
      "End":  116,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  58,
      "End":  325,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  58,
      "End":  326,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  70,
      "End":  353,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  182,
      "End":  57,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  57,
      "End":  223,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  356,
      "End":  71,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  71,
      "End":  357,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  358,
      "End":  359,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  357,
      "End":  324,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  324,
      "End":  70,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  326,
      "End":  360,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  363,
      "End":  231,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  35,
      "End":  361,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  33,
      "End":  364,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  365,
      "End":  366,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  366,
      "End":  36,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  36,
      "End":  367,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  368,
      "End":  369,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  369,
      "End":  37,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  299,
      "End":  370,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  297,
      "End":  371,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  298,
      "End":  372,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  385,
      "End":  137,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  391,
      "End":  234,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  391,
      "End":  233,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  394,
      "End":  69,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  393,
      "End":  56,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  397,
      "End":  398,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  45,
      "End":  319,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  144,
      "End":  165,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  165,
      "End":  399,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  145,
      "End":  166,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  166,
      "End":  399,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  146,
      "End":  167,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  167,
      "End":  399,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  172,
      "End":  402,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  173,
      "End":  402,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  177,
      "End":  401,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  398,
      "End":  401,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  401,
      "End":  399,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  402,
      "End":  399,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  405,
      "End":  399,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  403,
      "End":  405,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  404,
      "End":  405,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  160,
      "End":  403,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  161,
      "End":  403,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  162,
      "End":  403,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  163,
      "End":  404,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  164,
      "End":  404,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  158,
      "End":  406,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  293,
      "End":  38,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  169,
      "End":  401,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  170,
      "End":  407,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  168,
      "End":  407,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  407,
      "End":  405,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  175,
      "End":  408,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  176,
      "End":  408,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  408,
      "End":  399,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  346,
      "End":  204,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  202,
      "End":  252,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  252,
      "End":  77,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  174,
      "End":  408,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  85,
      "End":  409,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  409,
      "End":  214,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  85,
      "End":  410,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  410,
      "End":  323,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  87,
      "End":  411,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  411,
      "End":  215,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  87,
      "End":  412,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  412,
      "End":  216,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  84,
      "End":  413,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  413,
      "End":  213,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  84,
      "End":  414,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  414,
      "End":  335,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  188,
      "End":  415,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  415,
      "End":  327,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  415,
      "End":  328,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  191,
      "End":  417,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  417,
      "End":  87,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  96,
      "End":  418,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  418,
      "End":  32,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  390,
      "End":  419,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  419,
      "End":  59,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  281,
      "End":  421,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  421,
      "End":  282,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  423,
      "End":  422,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  131,
      "End":  423,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  129,
      "End":  423,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  130,
      "End":  423,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  133,
      "End":  423,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  406,
      "End":  402,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  425,
      "End":  424,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  426,
      "End":  428,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  427,
      "End":  429,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  430,
      "End":  399,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  422,
      "End":  430,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  428,
      "End":  430,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  429,
      "End":  430,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  424,
      "End":  430,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  433,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  432,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  431,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  431,
      "End":  434,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  434,
      "End":  435,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  432,
      "End":  434,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  433,
      "End":  434,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  320,
      "End":  51,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  440,
      "End":  441,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  439,
      "End":  443,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  443,
      "End":  440,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  442,
      "End":  444,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  441,
      "End":  447,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  447,
      "End":  442,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  441,
      "End":  446,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  446,
      "End":  445,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  445,
      "End":  448,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  448,
      "End":  449,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  449,
      "End":  450,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  450,
      "End":  440,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  441,
      "End":  451,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  451,
      "End":  452,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  439,
      "End":  453,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  453,
      "End":  454,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  453,
      "End":  455,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  455,
      "End":  459,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  454,
      "End":  456,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  456,
      "End":  457,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  457,
      "End":  458,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  448,
      "End":  460,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  460,
      "End":  459,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  459,
      "End":  441,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  461,
      "End":  462,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  462,
      "End":  430,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  458,
      "End":  460,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "Rect.Text":  
  [
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  1532,
      "Rect.Top":  154,
      "Rect.Right":  1557,
      "Rect.Bottom":  506,
      "FStyle":  1,
      "FColor":  10710818,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0.300000011920929",
      "AlignX":  0,
      "AlignY":  0,
      "AlignRect":  false,
      "Text":  "н\r\nе\r\nс\r\nо\r\nр\r\nт\r\nи\r\nр\r\nо\r\nв\r\nа\r\nн\r\nо",
      "Color":  0,
      "Font":  "Arial",
      "FontSize":  10,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    },
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  569,
      "Rect.Top":  788,
      "Rect.Right":  734,
      "Rect.Bottom":  831,
      "FStyle":  1,
      "FColor":  10710818,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0.300000011920929",
      "AlignX":  0,
      "AlignY":  0,
      "AlignRect":  false,
      "Text":  "Командование во время\r\nвоенной операции:",
      "Color":  0,
      "Font":  "Arial",
      "FontSize":  10,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    }  
  ],
  "BlockPar.EC.Total.Strings":  135,
  "BlockPar.EC":  
  [
    {
      "#":  "100",
      "String":  "Не отвлекай меня, <Player>, я сейчас выполняю другое задание."    
    },
    {
      "#":  "101",
      "String":  "Сейчас <0> исполняет контракт на убийство корабля <1>. Преследование будет продолжаться до <2>."    
    },
    {
      "#":  "102",
      "String":  "<0>? Мы на территории <clr>Обмена<clrEnd>, здесь запрещена стрельба между наемниками. Тебе необходимо выманить цель из системы."    
    },
    {
      "#":  "104",
      "String":  "<0> - мой коллега. Я не пойду на нарушение наших договоренностей ради подобного заказа."    
    },
    {
      "#":  "105",
      "String":  "Отступаю в Центр наемников, босс."    
    },
    {
      "#":  "107",
      "String":  "<0>"    
    },
    {
      "#":  "108",
      "String":  "<0> разорвал контракт по ликвидации корабля <1> в связи с истечением срока. <br> - <clr>Центр наемников Обмен<clrEnd>"    
    },
    {
      "#":  "109",
      "String":  "<0> успешно выполнил ваш контракт на убийство корабля <1>. <br> - <clr>Центр наемников Обмен<clrEnd>"    
    },
    {
      "#":  "111",
      "String":  "Фэйенгелиона"    
    },
    {
      "#":  "112",
      "String":  "Красных топоров"    
    },
    {
      "#":  "113",
      "String":  "Атланта"    
    },
    {
      "#":  "114",
      "String":  "Я передумал"    
    },
    {
      "#":  "115",
      "String":  "Мне нужны воины \"Фэйенгелиона\", определенно"    
    },
    {
      "#":  "116",
      "String":  "\"Красные топоры\" - выбор настоящих мужчин!"    
    },
    {
      "#":  "117",
      "String":  "Выбираю пилотов \"Атланта\" - дешево и сердито"    
    },
    {
      "#":  "118",
      "String":  "Назад"    
    },
    {
      "#":  "119",
      "String":  "Одного вполне достаточно"    
    },
    {
      "#":  "120",
      "String":  "Дайте два"    
    },
    {
      "#":  "121",
      "String":  "Ровно три штуки"    
    },
    {
      "#":  "122",
      "String":  "Найму четыре и точка"    
    },
    {
      "#":  "123",
      "String":  "Беру пятерку"    
    },
    {
      "#":  "124",
      "String":  "Чего мелочиться - нанимаю шесть!"    
    },
    {
      "#":  "125",
      "String":  "Военная операция"    
    },
    {
      "#":  "126",
      "String":  "Эскорт"    
    },
    {
      "#":  "127",
      "String":  "Три"    
    },
    {
      "#":  "128",
      "String":  "Четыре"    
    },
    {
      "#":  "129",
      "String":  "Пять"    
    },
    {
      "#":  "130",
      "String":  "Шесть"    
    },
    {
      "#":  "131",
      "String":  "Восемь"    
    },
    {
      "#":  "132",
      "String":  "Семь"    
    },
    {
      "#":  "133",
      "String":  "Десять"    
    },
    {
      "#":  "134",
      "String":  "Девять"    
    },
    {
      "#":  "135",
      "String":  "Один год"    
    },
    {
      "#":  "136",
      "String":  "Два года"    
    },
    {
      "#":  "137",
      "String":  "Три года"    
    },
    {
      "#":  "138",
      "String":  "Четыре года"    
    },
    {
      "#":  "139",
      "String":  "Пять лет"    
    },
    {
      "#":  "140",
      "String":  "Да, я готов заплатить"    
    },
    {
      "#":  "142",
      "String":  "Рейд"    
    },
    {
      "#":  "143",
      "String":  "Ввести имя цели"    
    },
    {
      "#":  "144",
      "String":  "Плачу <0> cr."    
    },
    {
      "#":  "146",
      "String":  "Думаю, мои партнеры обойдутся и без этого"    
    },
    {
      "#":  "147",
      "String":  "Подтверждаю, заменяйте"    
    },
    {
      "#":  "149",
      "String":  "Я хочу улучшить отношения с \"Атлантом\""    
    },
    {
      "#":  "150",
      "String":  "Нужно задобрить \"Красных топоров\""    
    },
    {
      "#":  "151",
      "String":  "Мне важно расположение \"Фэйенгелиона\""    
    },
    {
      "#":  "152",
      "String":  "Я готов к переговорам"    
    },
    {
      "#":  "153",
      "String":  "Послушай свою смерть, <clr>Норт<clrEnd>!"    
    },
    {
      "#":  "154",
      "String":  "Что \"один\"?"    
    },
    {
      "#":  "155",
      "String":  "Зачем ты считаешь?"    
    },
    {
      "#":  "156",
      "String":  "Я пошутил, успокойся"    
    },
    {
      "#":  "157",
      "String":  "Мне нужно поправить отношения с <clr>\"Атлантом\"<clrEnd>"    
    },
    {
      "#":  "158",
      "String":  "Я согласен заплатить"    
    },
    {
      "#":  "166",
      "String":  "Один"    
    },
    {
      "#":  "167",
      "String":  "Два"    
    },
    {
      "#":  "168",
      "String":  "Мне нужно поправить отношения с <clr>\"Красными топорами\"<clrEnd>"    
    },
    {
      "#":  "169",
      "String":  "Я задержу тебя навсегда! Жди распыления на атомы, красномордый"    
    },
    {
      "#":  "170",
      "String":  "Мне нужно поправить отношения с <clr>\"Фэйенгелионом\"<clrEnd>"    
    },
    {
      "#":  "171",
      "String":  "Ответь на мой вопрос: кто из нас первым отправится в биореактор?"    
    },
    {
      "#":  "172",
      "String":  "Пяти лет недостаточно, оформляем на шесть <clr>(лидерство)<clrEnd>"    
    },
    {
      "#":  "173",
      "String":  "Десять лет и не меньше <clr>(лидерство)<clrEnd>"    
    },
    {
      "#":  "174",
      "String":  "Нужно атаковать корабль"    
    },
    {
      "#":  "175",
      "String":  "Отмена атаки"    
    },
    {
      "#":  "176",
      "String":  "Конец связи"    
    },
    {
      "#":  "177",
      "String":  "Отмена"    
    },
    {
      "#":  "178",
      "String":  "Возвращайся назад"    
    },
    {
      "#":  "179",
      "String":  "И передай этот приказ всем остальным"    
    },
    {
      "#":  "180",
      "String":  "Отменить контракт"    
    },
    {
      "#":  "181",
      "String":  "На мостик"    
    },
    {
      "#":  "182",
      "String":  "Рейд (<0> дней)"    
    },
    {
      "#":  "183",
      "String":  "Военная операция (<0> дней)"    
    },
    {
      "#":  "185",
      "String":  "Тогда найму фрилансеров"    
    },
    {
      "#":  "186",
      "String":  "Фрилансеры"    
    },
    {
      "#":  "187",
      "String":  "Корпорация Фэйенгелион"    
    },
    {
      "#":  "188",
      "String":  "Отряд Красные топоры"    
    },
    {
      "#":  "189",
      "String":  "ЧОП Атлант"    
    },
    {
      "#":  "191",
      "String":  "Введите имя цели"    
    },
    {
      "#":  "25",
      "String":  "<0> погиб, выполняя контракт на убийство корабля <1>. <br> - <clr>Центр наемников Обмен<clrEnd>"    
    },
    {
      "#":  "36",
      "String":  "Рейд на систему <0> <clr>успешно завершен<clrEnd>. <br> Добыча:"    
    },
    {
      "#":  "37",
      "String":  "Рейд на систему <0> <clr>провален<clrEnd>."    
    },
    {
      "#":  "38",
      "String":  "Управление контрактом"    
    },
    {
      "#":  "39",
      "String":  "Я хочу предложить тебе контракт на убийство (<0>) дней"    
    },
    {
      "#":  "40",
      "String":  "Я хочу предложить тебе контракт на убийство"    
    },
    {
      "#":  "46",
      "String":  "Согласно политике нашей станции, эскорт можно нанимать вне зависимости от вашего навыка лидерства. Но стоит предупредить, что <clr>некоторые наемники, не увидев в вас достойного лидера, могут разорвать контракт,<clrEnd> так что нанимайте бойцов \"сверху\" навыка на свой страх и риск. <br><br>Сколько кораблей наймете?"    
    },
    {
      "#":  "47",
      "String":  "Как вы знаете, существуют три типа контрактов: <clr>эскорт<clrEnd>, <clr>рейд<clrEnd> и <clr>военная операция<clrEnd>.<br><br><clr>Эскорт<clrEnd> - это обычный партнерский контракт на определенную длительность. Заказчика сопровождают сотрудники охранного агентства, универсальные почти в любой ситуации. Но подобные агенты не подготовлены для атак вражеских систем, поэтому при нападении могут струсить.<br><br><clr>Рейд<clrEnd> - специальная операция, проводимая в доминаторской системе. Отряд численностью 3 корабля совершает прыжок, \"Аварийными сигналами\" заставляет доминаторов сбросить оборудование и возвращается на базу с добытыми трофеями. <br><clr>Контракт оформляется не чаще, чем раз в 90 дней - \"Атлантом\" и 150 дней - \"Фэйенгелионом\". Необходим навык лидерства не ниже трех и звание кадета/юнги.<clrEnd><br><br><clr>Военная операция<clrEnd> - атака выбранной вами системы ударной группой от 3 до 10 кораблей.<br>Ударная группа будет подчиняться вашим приказам и беспрекословно атакует указанный вами вражеский корабль. Также вы сможете приказать отряду следовать за вами либо же отступить, дабы сберечь жизни бойцов.<br><clr>Организация подобной операции доступна начиная со звания капитана или шкипера и навыка лидерства 3. Осуществляется раз в 3 месяца.<clrEnd><br><br>Ну что, какой тип контракта выбираете?"    
    },
    {
      "#":  "48",
      "String":  "Сколько кораблей наймете?"    
    },
    {
      "#":  "49",
      "String":  "Какой укажем срок найма? Мы можем оформить контракт на один, два, три, четыре года или на пять лет."    
    },
    {
      "#":  "50",
      "String":  "Вы хотите нанять <0> бойцов для охраны вашего корабля. Согласно расценкам группировки <1>, один наемник на <2> дней обойдется вам в <3> cr., итого (с учетом скидки <4>%) <5> cr. Оформляем контракт?"    
    },
    {
      "#":  "51",
      "String":  "Укажите систему для атаки."    
    },
    {
      "#":  "53",
      "String":  "Вы хотите нанять <0> бойцов на военную операцию в системе <1>. Согласно расценкам группировки <2>, участие одного наемника обойдется вам в <3> cr., итого (с учетом скидки <4>%) <5> cr. Оформляем контракт?"    
    },
    {
      "#":  "54",
      "String":  "90=Вы хотите нанять <0> бойцов на рейд в системе <1>. Согласно расценкам группировки <2>, участие одного наемника обойдется вам в <3> cr., итого (с учетом скидки <4>%) <5> cr. Оформляем контракт?"    
    },
    {
      "#":  "55",
      "String":  "Ты не видишь, моя ласточка разваливается налету? Какой контракт, <Player>?"    
    },
    {
      "#":  "56",
      "String":  "Я сейчас выполняю другое задание. Отбой."    
    },
    {
      "#":  "57",
      "String":  "Я готов поработать на тебя. Назови цель, а там определимся с ценой. Мы общаемся по зашифрованному каналу связи, так что не беспокойся, жертва нас не услышит."    
    },
    {
      "#":  "58",
      "String":  "Я не настолько доверяю тебе, чтобы заключать с тобой контракт. Ищи себе другого киллера."    
    },
    {
      "#":  "59",
      "String":  "<0>? Нет уж, мне жизнь еще дорога, я за это дело не возьмусь."    
    },
    {
      "#":  "60",
      "String":  "<0>? Столь серьезный риск должен хорошо оплачиваться. С учетом скидки <1> (<2>%) - скажем, <3> cr."    
    },
    {
      "#":  "61",
      "String":  "<0>, значит... О'кей, но тебе это выйдет в кругленькую сумму. Со скидкой <1> (<2>%) - <3> cr."    
    },
    {
      "#":  "62",
      "String":  "<0>? Разберемся, деньги вперед. Учитывая скидку <1> (<2>%), тебе это обойдется в <3> cr."    
    },
    {
      "#":  "63",
      "String":  "<0>? Ничего трудного. Плати <1> cr. (с учетом скидки <2>%), и все будет сделано."    
    },
    {
      "#":  "64",
      "String":  "<0>... Пишет, ничего не найдено. Уверен, что правильно ввел имя цели?"    
    },
    {
      "#":  "65",
      "String":  "<0>? Что ж, буду считать это неудачной шуткой. Если не дошло, за этот заказ я не возьмусь."    
    },
    {
      "#":  "66",
      "String":  "<0>? Столь серьезный риск должен хорошо оплачиваться. Cкажем, <1> cr. будет достаточно."    
    },
    {
      "#":  "67",
      "String":  "<0>, значит... О'кей, но такой заказ тебе обойдется в круглую сумму. <1> cr."    
    },
    {
      "#":  "68",
      "String":  "<0> так <1>. Разберемся, деньги вперед. Переведи <2> cr, и все будет сделано в кратчайшие сроки."    
    },
    {
      "#":  "69",
      "String":  "<0>? Ничего трудного. Плати <1> cr., и все будет сделано."    
    },
    {
      "#":  "70",
      "String":  "Какому из ваших партнеров необходимо сменить корпус?"    
    },
    {
      "#":  "71",
      "String":  "Теперь выберите нужный корпус со склада."    
    },
    {
      "#":  "72",
      "String":  "Вы хотите заменить корпус корабля <0> на <1>. Эту операцию нашу техники оценивают в <2> cr, подтверждаете?"    
    },
    {
      "#":  "74",
      "String":  "Для того, чтобы улучшить отношения с <clr>\"Атлантом\"<clrEnd>, вам придется встретиться с лидером группировки.<br><br>Лидером <clr>ЧОП \"Атлант\"<clrEnd> является <clr>Кайло Норт<clrEnd> - прославленный наемный убийца, на скопленные деньги основавший гильдию охранников и киллеров. Чрезвычайно опасен.<br><br><clr>Норт<clrEnd> согласен переговорить с вами за <0> cr.<br><br>Следующий вызов доступен <1>."    
    },
    {
      "#":  "75",
      "String":  "Для того, чтобы улучшить отношения с <clr>\"Красными топорами\"<clrEnd>, вам придется встретиться с лидером группировки.<br><br>Лидером <clr>отряда \"Красные топоры\"<clrEnd> является <clr>Бордюрг Ебрын<clrEnd> - бывалый малокский воин и пират, печально известный ненавистью к торгашам и животной жестокостью.<br> <br>Вы можете попробовать поговорить с <clr>Ебрыном<clrEnd> за <0> cr.<br><br>Следующий вызов <1>."    
    },
    {
      "#":  "76",
      "String":  "Для того, чтобы улучшить отношения с <clr>\"Красными топорами\"<clrEnd>, вам придется встретиться с лидером группировки.<br><br>Пост гененрального директора <clr>Корпорации \"Фэйенгелион\"<clrEnd> занимает <clr>Элайма Фэй<clrEnd> - отличившийся инженер, осужденный за похищение секретных чертежей и впоследствии амнистированный, а также ксенофоб и автор нескольких евгенических концепций. <br> <br><clr>Фэй<clrEnd> может организовать вам встречу за <0> cr. <br><br>Следующий вызов доступен <1>."    
    },
    {
      "#":  "77",
      "String":  "Я слушаю."    
    },
    {
      "#":  "78",
      "String":  "Один."    
    },
    {
      "#":  "79",
      "String":  "Два."    
    },
    {
      "#":  "80",
      "String":  "Три. Умри."    
    },
    {
      "#":  "81",
      "String":  "Заплатишь <0> cr. - обеспечу тебе лояльность <1>%. Дальше сам."    
    },
    {
      "#":  "82",
      "String":  "Приятно иметь с тобой дело."    
    },
    {
      "#":  "83",
      "String":  "Для наших клиентов мы предлагаем множество тренажеров, начиная пилотными симуляторами и заканчивая логическими головоломками. Используя все это разнообразие методов, вы можете увеличить любой навык ваших партнеров. Стоит учитывать, что эффективность тренировок прямо зависит от ваших лидерских качеств: количество сеансов, которое можно провести без ущерба для развиваемых навыков, прямо равно навыку лидерства тренера. То есть, с максимальным лидерством каждого напарника можно будет натренировать 6 раз. А, да, чуть не забыл: для наших наемников тренировки стоят вдвое дешевле.<br><br>Теперь выберите пилота, которого хотите тренировать."    
    },
    {
      "#":  "84",
      "String":  "Теперь выберите навык, который желаете развить."    
    },
    {
      "#":  "85",
      "String":  "Одна тренировка будет стоить <0> cr. Сколько сеансов проведем?"    
    },
    {
      "#":  "86",
      "String":  "Говори, <Player>, и не задерживай меня."    
    },
    {
      "#":  "87",
      "String":  "Воинам нашего отряда неинтересны деньги!.. Впрочем, аммуницию тоже на какие-то шиши надо брать... Так и быть, пилот, выкладывай <0> cr, и презрение моих солдат сменится безразличием."    
    },
    {
      "#":  "88",
      "String":  "Что ты сказал, ничтожество?! Арр-р-ргх, бортовой компьютер, все орудия к бою!"    
    },
    {
      "#":  "89",
      "String":  "Будь уверен, пилот: все твои ресурсы уйдут на снаряжение прославленных \"Красных топоров\"!"    
    },
    {
      "#":  "90",
      "String":  "<Player>, я, как официальный представитель Корпорации, уполномочен отвечать на все ваши вопросы."    
    },
    {
      "#":  "91",
      "String":  "Какая примитивная грубость... Мне будет нисколько ни жаль вас ликвидировать."    
    },
    {
      "#":  "92",
      "String":  "За <0> cr. гарантирую вам лояльность <1>%. Выгодное предложение, не сомневайтесь."    
    },
    {
      "#":  "93",
      "String":  "Рад, что нам удалось договориться. Желаем вам только преумножить ваши материальные блага вместе с наемниками Корпорации."    
    },
    {
      "#":  "94",
      "String":  "Готовлюсь к прыжку в систему <0>, босс. Не отвлекайте меня."    
    },
    {
      "#":  "95",
      "String":  "Говорите, босс, я весь в вашем распоряжении."    
    },
    {
      "#":  "96",
      "String":  "Как скажете, босс. Передам остальным, чтобы сосредоточились на более приоритетных целях."    
    },
    {
      "#":  "97",
      "String":  "И кого же, собственно, надо атаковать?"    
    },
    {
      "#":  "98",
      "String":  "Вас понял, босс. Возвращаюсь в Центр."    
    },
    {
      "#":  "99",
      "String":  "Вас понял, босс, атакую корабль <0>."    
    }  
  ]
}