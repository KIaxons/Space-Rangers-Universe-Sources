{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -295,
  "ViewPos.y":  -114,
  "ScriptName":  "Mod_ShuRangersAcryns",
  "ScriptFileOut":  "H:\\Mod_ShuRangersAcryns.scr",
  "ScriptTextOut":  "H:\\Mod_ShuRangersAcryns.txt",
  "GraphPoint.Count":  21,
  "GraphLink.Count":  4,
  "GraphRectText.Count":  0,
  "Variables.Count":  13,
  "Stars.Count":  1,
  "Planets.Count":  1,
  "Ships.Count":  1,
  "States.Count":  1,
  "Groups.Count":  1,
  "Places.Count":  0,
  "Items.Count":  0,
  "Ethers.Count":  0,
  "Dialogs.Count":  0,
  "DialogMessages.Count":  0,
  "DialogAnswers.Count":  0,
  "Operations.Count":  3,
  "Statements.Count":  0,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "PlayerGroup",
          "Pos.x":  450,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  4,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  490,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  0,
          "Total.Lines":  1,
          "Code.Type":  "Global",
          "Code":          
          [
              "GRun();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  530,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  6,
          "Total.Lines":  42,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Если параметр версии массива корпусов в Lang был изменён, запускаем обновление массива корпусов",
              "tstr1 = CT('ShuRangersAcryns.RangerHullsArrayVersion');",
              "if(RangerHullsRefillCheck != tstr1)",
              "{",
              "    RangerHullsArrayRefill();",
              "    RangerHullsRefillCheck = tstr1;",
              "}",
              "",
              "//Ищем всех новорождённых рейнджеров в Галактике и начинаем их подробный перебор",
              "tint1 = BuildListOfNewShips(tarr1, lastShipId, 2, 31, 1, '', ',RangerExplorer'); //Сет-фильтр 1+2+4+8+16",
              "if(tint1)//Если был обнаружен хотя бы один новый корабль, подходящий по заданным фильтрам",
              "{",
              "    GTL = GalaxyTechLevel();",
              "    cur_star = ShipStar(Player());",
              "",
              "    for(i = 0; i < ArrayDim(tarr1); i = i + 1)",
              "    {",
              "        cur_ship = tarr1[i];",
              "",
              "        //Исключаем скриптовые корабли, не считая корабли с OrderLock",
              "        if(ShipInScript(cur_ship, 0)) continue;",
              "        //Пропускаем рейнджеров уже имеющих акриновые корпуса",
              "        if(~HullSpecial(cur_ship)) continue;",
              "        //Также проверяем, не висит ли на рейнджере скин корпуса \"Таухито\"",
              "        if(!(Id(cur_ship) % 6)) continue;",
              "        //Пропускаем уже взлетевшие с планеты корабли, если в той же системе находится игрок",
              "        if(ShipInNormalSpace(cur_ship))",
              "        {",
              "            if(ShipStar(cur_ship) == cur_star) continue;",
              "        }",
              "",
              "        //Определяем шанс в зависимости от типа корабля",
              "        tstr1 = ShipType(cur_ship);",
              "        if(tstr1 == 'FemRanger') continue;//Пропускаем спецагентов",
              "",
              "        //Бросок на шанс получения рейнджером акринового корпуса",
              "        if(RndObject(1, 100, cur_ship) > RangerHullsArray[0, 0]) continue;",
              "",
              "        AddHullAcrynToRanger(cur_ship);",
              "    }",
              "}",
              "lastShipId = GalaxyShipId();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  510,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  7,
          "Total.Lines":  274,
          "Code.Type":  "Init",
          "Code":          
          [
              "//Производим стартовое заполнение массива корпусов и запоминаем версию",
              "RangerHullsArrayRefill();",
              "RangerHullsRefillCheck = CT('ShuRangersAcryns.RangerHullsArrayVersion');",
              "",
              "//Собираем в массив всех стартовых рейнджеров в Галактике и начинаем их подробный перебор",
              "tint1 = BuildListOfNewShips(tarr1, lastShipId, 2, 31, 1, '', ',RangerExplorer'); //Сет-фильтр 1+2+4+8+16",
              "if(tint1)//Если был обнаружен хотя бы один новый корабль, подходящий по заданным фильтрам",
              "{",
              "    GTL = GalaxyTechLevel();",
              "",
              "    for(i = 0; i < ArrayDim(tarr1); i = i + 1)",
              "    {",
              "        cur_ship = tarr1[i];",
              "",
              "        if(cur_ship == Player()) continue;",
              "        //Исключаем скриптовые корабли, не считая корабли с OrderLock",
              "        if(ShipInScript(cur_ship, 0)) continue;",
              "        //Пропускаем рейнджеров уже имеющих акриновые корпуса",
              "        if(~HullSpecial(cur_ship)) continue;",
              "        //Также проверяем, не висит ли на рейнджере скин корпуса \"Таухито\"",
              "        if(!(Id(cur_ship) % 6)) continue;",
              "",
              "        //Определяем шанс в зависимости от типа корабля",
              "        tstr1 = ShipType(cur_ship);",
              "        if(tstr1 == 'FemRanger') continue;//Пропускаем спецагентов",
              "",
              "        //Бросок на шанс получения рейнджером акринового корпуса",
              "        if(RndObject(1, 100, cur_ship) > RangerHullsArray[0, 0]) continue;",
              "",
              "        AddHullAcrynToRanger(cur_ship);",
              "    }",
              "}",
              "lastShipId = GalaxyShipId();",
              "",
              "//Функция, добавляющая случайный акрин из массива на корпус рейнджера",
              "function AddHullAcrynToRanger(dword ship)",
              "{",
              "    //Определяем бит расы рейнджера",
              "    int ship_race = ShipPilotRace(ship);",
              "    if(!ship_race) ship_race = 1;",
              "    else if(ship_race == 1) ship_race = 2;",
              "    else if(ship_race == 2) ship_race = 4;",
              "    else if(ship_race == 3) ship_race = 8;",
              "    else if(ship_race == 4) ship_race = 16;",
              "",
              "    //Определяем бит характера рейнджера",
              "    int ship_char = RangerStatus(ship);",
              "    if(!ship_char) ship_char = 2;",
              "    else if(ship_char == 1) ship_char = 4;",
              "    else if(ship_char == 2) ship_char = 1;",
              "",
              "    //Рандомно перебираем акрины корпусов в массиве до тех пор, пока не найдём подходящий данному рейнджеру",
              "    int o;",
              "    o = RndObject(1, RangerHullsArray[0, GTL], ship);",
              "    while(!(RangerHullsArray[o, 1] & ship_race) || !(RangerHullsArray[o, 2] & ship_char)) o = RndObject(1, RangerHullsArray[0, GTL], ship);",
              "",
              "    //Вешаем на корпус рейнджера выбранный акрин и обновляем его визуальный скин",
              "    SpecialToEquipment(FindBonusByNameInCfg(RangerHullsArray[o, 0]), ShipItems(ship, 0));",
              "    Chameleon(ship);",
              "",
              "    //Под конец на всякий случай делаем проверку на возможный перевес",
              "    ShipImproveItems(ship, 0);",
              "}",
              "",
              "//Функция для заполнения / обновления массива с доступными для рейнджеров акриновыми корпусами",
              "function RangerHullsArrayRefill()",
              "{",
              "    //Перебираем бонусы, запоминаем все подходящие рейнджерам акрины корпусов и их общее количество",
              "    ArrayClear(tarr1);",
              "    str temp_fun_str;",
              "    for(i = 0; i < BonusCount(); i = i + 1)",
              "    {",
              "        tstr1 = BonusNumInCfg(i);",
              "        if(findsubstr(CT('MicroModuls.' + tstr1 + '.Equipments'), 'Hull') == -1) continue;",
              "        //Проверяем, можно ли в принципе использовать данный корпус для выдачи NPC",
              "        tstr2 = CT('MicroModuls.' + tstr1 + '.ForNPCTypes');",
              "        if(tstr2 == '') continue;",
              "        //Проверяем, может ли данный корпус быть применён к рейнджеру",
              "        j = 0;",
              "        check = 0;",
              "        temp_fun_str = '#Begin#';",
              "        while(temp_fun_str != '')",
              "        {",
              "            temp_fun_str = GetParFromString(tstr2, ',', j, 1);",
              "            if(temp_fun_str == 'Ranger')",
              "            {",
              "                check = 1;",
              "                break;",
              "            }",
              "",
              "            j = j + 1;",
              "        }",
              "        //Если оказалось, что может",
              "        if(check) ArrayAdd(tarr1, i);",
              "    }",
              "",
              "    //Выяснили и запомнили сколько всего бонусов подходят рейнджерам, теперь объявляем многомерный массив",
              "    //И заносим в него все эти бонусы уже подробно",
              "    //На всякий случай перед этим очищаем массив, чтобы избежать возможной утечки памяти",
              "    free(RangerHullsArray);",
              "    RangerHullsArray = newarray(ArrayDim(tarr1), 9);//9 ячеек под 1-8 ГТУ плюс одна (нулевая) под шанс акринации рейнджера",
              "    //Теперь сортируем все доступные рейнджерам корпуса по их ГТУ",
              "    GTL = 1;",
              "    j = 0;",
              "    while(GTL < 8)",
              "    {",
              "        for(i = 1; i < ArrayDim(tarr1); i = i + 1)",
              "        {",
              "            tstr1 = BonusNumInCfg(tarr1[i]);",
              "",
              "            //Отсеиваем бонусы не подходящие для текущего ГТУ",
              "            tint1 = RoundTo(8.0 * (0.01 * CT('MicroModuls.' + tstr1 + '.Priority')), 1, 1);",
              "            if(tint1 != GTL) continue;",
              "",
              "            //Заносим имя раздела бонуса в массив",
              "            j = j + 1;",
              "            RangerHullsArray[j, 0] = tstr1;",
              "",
              "            //Определяем сет возможных рас для данного корпуса",
              "            tstr2 = CT('MicroModuls.' + tstr1 + '.Owner');",
              "            RangerHullsArray[j, 1] = RaceSetDefine(tstr2);",
              "",
              "            //Определяем сет подходящих характеров рейнджеров для данного корпуса",
              "            tstr2 = CT('MicroModuls.' + tstr1 + '.ForCharacterTypes');",
              "            RangerHullsArray[j, 2] = CharacterSetDefine(tstr2);",
              "",
              "            RangerHullsArray[0, GTL] = 1 + RangerHullsArray[0, GTL];//А если написать RangerHullsArray[0, GTL] + 1, то элемент массива не инициализируется :|",
              "        }",
              "",
              "        //Начинаем перебирать бонусы следующего ГТУ,",
              "        //а также запоминаем число доступных бонусов на текущий и последующий ГТУ",
              "        GTL = GTL + 1;",
              "        RangerHullsArray[0, GTL] = RangerHullsArray[0, GTL - 1];",
              "    }",
              "",
              "    //Запоминаем шанс наложения акрина на рейнджера в цикле перебора",
              "    RangerHullsArray[0, 0] = 0 + CT('ShuRangersAcryns.RangersWithAcrynsPercent');",
              "}",
              "",
              "//Функция для перевода строчного набора овнеров бонуса в числовой сет",
              "function RaceSetDefine(str race_str)",
              "{",
              "    //Определяем сет рас",
              "    int race_set = 0;",
              "",
              "    if(race_str == '' || race_str == 'Any')",
              "    {",
              "        race_set = 1951; //По умолчанию все расы, кроме неизвестной (1 + 2 + 4 + 8 + 16 + 128 + 256 + 512 + 1024)",
              "    }",
              "    else",
              "    {",
              "        int dom_race_restrict = 0;",
              "        int cycle_count = 0;",
              "",
              "        str par_str = '#Begin#';",
              "        while(par_str != '')",
              "        {",
              "            par_str = GetParFromString(race_str, ',', cycle_count, 1);",
              "",
              "            if(par_str == 'Maloc')",
              "            {",
              "                if(!(race_set & 1)) race_set = race_set + 1;",
              "            }",
              "            else if(par_str == 'Peleng')",
              "            {",
              "                if(!(race_set & 2)) race_set = race_set + 2;",
              "            }",
              "            else if(par_str == 'People')",
              "            {",
              "                if(!(race_set & 4)) race_set = race_set + 4;",
              "            }",
              "            else if(par_str == 'Fei')",
              "            {",
              "                if(!(race_set & 8)) race_set = race_set + 8;",
              "            }",
              "            else if(par_str == 'Gaal')",
              "            {",
              "                if(!(race_set & 16)) race_set = race_set + 16;",
              "            }",
              "            else if(par_str == 'None')",
              "            {",
              "                if(!(race_set & 64)) race_set = race_set + 64;",
              "            }",
              "            else if(par_str == 'PirateClan')",
              "            {",
              "                if(!(race_set & 128)) race_set = race_set + 128;",
              "            }",
              "    // Не используется в оригинальной игре! /////////////",
              "            else if(par_str == 'Kling')",
              "            {",
              "                if(!(race_set & 256)) race_set = race_set + 256;",
              "                if(!(race_set & 512)) race_set = race_set + 512;",
              "                if(!(race_set & 1024)) race_set = race_set + 1024;",
              "                dom_race_restrict = 1;",
              "            }",
              "    ////////////////////////////////////////////////////",
              "            else if(par_str == 'Blazer')",
              "            {",
              "                if(!(race_set & 256)) race_set = race_set + 256;",
              "                dom_race_restrict = 1;",
              "            }",
              "            else if(par_str == 'Keller')",
              "            {",
              "                if(!(race_set & 512)) race_set = race_set + 512;",
              "                dom_race_restrict = 1;",
              "            }",
              "            else if(par_str == 'Terron')",
              "            {",
              "                if(!(race_set & 1024)) race_set = race_set + 1024;",
              "                dom_race_restrict = 1;",
              "            }",
              "            else if(par_str == 'NonKling')",
              "            {",
              "                dom_race_restrict = 2;",
              "            }",
              "",
              "            cycle_count = cycle_count + 1;",
              "        }",
              "",
              "        if(!dom_race_restrict) race_set = race_set + 1792; //По умолчанию добавляем в сет все доминаторские серии",
              "        //Удаляем все доминаторские серии, если был установлен параметр NonKling",
              "        else if(dom_race_restrict == 2)",
              "        {",
              "            if((race_set & 256)) race_set = race_set - 256;",
              "            if((race_set & 512)) race_set = race_set - 512;",
              "            if((race_set & 1024)) race_set = race_set - 1024;",
              "        }",
              "    }",
              "",
              "    //Страховая проверка на идиота",
              "    if(!race_set) race_set = 1951;",
              "    result = race_set;",
              "}",
              "",
              "//Функция для перевода строчного набора подходящих типов характера в числовой сет",
              "function CharacterSetDefine(str char_str)",
              "{",
              "    //Определяем сет рас",
              "    int char_set = 0;",
              "",
              "    if(char_str == '' || char_str == 'Any')",
              "    {",
              "        char_set = 7; //По умолчанию корпус будет считаться подходящим для любого характера рейнджера",
              "    }",
              "    else",
              "    {",
              "        int cycle_count = 0;",
              "",
              "        str par_str = '#Begin#';",
              "        while(par_str != '')",
              "        {",
              "            par_str = GetParFromString(char_str, ',', cycle_count, 1);",
              "",
              "            if(par_str == 'Warrior')",
              "            {",
              "                if(!(char_set & 1)) char_set = char_set + 1;",
              "            }",
              "            else if(par_str == 'Trader')",
              "            {",
              "                if(!(char_set & 2)) char_set = char_set + 2;",
              "            }",
              "            else if(par_str == 'Pirate')",
              "            {",
              "                if(!(char_set & 4)) char_set = char_set + 4;",
              "            }",
              "",
              "            cycle_count = cycle_count + 1;",
              "        }",
              "    }",
              "",
              "    //Страховая проверка на идиота",
              "    if(!char_set) char_set = 7;",
              "    result = char_set;",
              "}"          
          ]        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "InitPlanet",
          "Pos.x":  450,
          "Pos.y":  260,
          "Parent":  -1,
          "#":  2,
          "Race":  62,
          "Owner":  62,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  450,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  3,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "InitStar",
          "Pos.x":  450,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  1,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "PlayerState",
          "Pos.x":  450,
          "Pos.y":  320,
          "Parent":  -1,
          "#":  5,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "i",
          "Pos.x":  360,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  8,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr1",
          "Pos.x":  300,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  9,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "j",
          "Pos.x":  390,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  10,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr2",
          "Pos.x":  300,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  11,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "check",
          "Pos.x":  360,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  12,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "RangerHullsArray",
          "Pos.x":  490,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  13,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GTL",
          "Pos.x":  360,
          "Pos.y":  260,
          "Parent":  -1,
          "#":  14,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tarr1",
          "Pos.x":  240,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  15,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint1",
          "Pos.x":  360,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  16,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "RangerHullsRefillCheck",
          "Pos.x":  490,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  17,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "lastShipId",
          "Pos.x":  490,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  18,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ship",
          "Pos.x":  360,
          "Pos.y":  320,
          "Parent":  -1,
          "#":  19,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_star",
          "Pos.x":  360,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  20,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  2,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  3,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  4,
      "End":  2,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  4,
      "End":  5,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "BlockPar.EC.Total.Strings":  0,
  "BlockPar.EC":  
  [
  
  ]
}