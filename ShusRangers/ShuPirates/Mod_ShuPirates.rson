{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  46,
  "ViewPos.y":  13,
  "ScriptName":  "Mod_ShuPirates",
  "ScriptFileOut":  "H:\\Mod_ShuPirates.scr",
  "ScriptTextOut":  "H:\\Mod_ShuPirates.txt",
  "GraphPoint.Count":  36,
  "GraphLink.Count":  4,
  "GraphRectText.Count":  0,
  "Variables.Count":  28,
  "Stars.Count":  1,
  "Planets.Count":  1,
  "Ships.Count":  1,
  "States.Count":  1,
  "Groups.Count":  1,
  "Places.Count":  0,
  "Items.Count":  0,
  "Ethers.Count":  0,
  "Dialogs.Count":  0,
  "DialogMessages.Count":  0,
  "DialogAnswers.Count":  0,
  "Operations.Count":  3,
  "Statements.Count":  0,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "PlayerGroup",
          "Pos.x":  580,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  4,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  690,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  6,
          "Total.Lines":  1,
          "Code.Type":  "Global",
          "Code":          
          [
              "GRun();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  730,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  7,
          "Total.Lines":  201,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Запоминаем текущий ГТУ",
              "GTL = GalaxyTechLevel();",
              "",
              "//Ищем всех новорождённых пиратов в Галактике и бафаем их",
              "if(GalaxyShipId() > lastShipId)",
              "{",
              "    tint1 = BuildListOfNewShips(tempArr, lastShipId, 8, 1+2+4+8+16+128, 1, '', '');",
              "    if(tint1)//Если был обнаружен хотя бы один новый корабль, подходящий по заданным фильтрам",
              "    {",
              "        for(i = 0; i < ArrayDim(tempArr); i = i + 1)",
              "        {",
              "            tint1 = 0;",
              "            cur_ship = tempArr[i];",
              "            //Пропускаем скриптовые корабли",
              "            if(ShipInScript(cur_ship,0)) continue;",
              "            //Пропускаем вольных и странствующих клановых пиратов",
              "            if(!PirateType(cur_ship)) continue;",
              "            ShipMoney(cur_ship,ShipMoney(cur_ship)*RndObject(125,200, cur_ship)/100);",
              "            tint1=GetShipPirateRank(cur_ship);",
              "            if(tint1==0) tint1=RndObject(0,1, cur_ship);",
              "            else if(tint1==1) tint1=RndObject(1,3, cur_ship);",
              "            else if(tint1==2) tint1=RndObject(2,5, cur_ship);",
              "            else if(tint1==3) tint1=RndObject(3,7, cur_ship);",
              "            else if(tint1==4) tint1=RndObject(4,10, cur_ship);",
              "            else tint1=RndObject(5,12, cur_ship);",
              "            ShipImproveItems(cur_ship,tint1);",
              "            ShipMoney(cur_ship,ShipMoney(cur_ship)*(100+GetShipPirateRank(cur_ship)*30)/100);",
              "        }",
              "    }",
              "    lastShipId=GalaxyShipId();",
              "}",
              "//Пока пираты не проиграли войну",
              "if(PirateWin()!=3 && PirateWin()!=4)",
              "{",
              "    for(i=0; i<GalaxyStars(); i=i+1)",
              "    {",
              "        //Если в системе есть ПБ",
              "        tdwd1=GalaxyStar(i);",
              "        //Пропускаем неклановые системы",
              "        if(StarOwner(tdwd1)!=2) continue;",
              "        //Пропускаем Тортугац (потому что СО Хандлер из ShuKlissan считается доминионом)",
              "        if(tdwd1==PlanetToStar(PlanetPirateClan())) continue;",
              "        //Ищем в системе станции",
              "        tdwd2=StarRuins(tdwd1);",
              "        //Если нашли нужную систему",
              "        if(tdwd2)",
              "        {",
              "            //Ищем в списке станций доминионы",
              "            for(j=0; j<tdwd2; j=j+1)",
              "            {",
              "                cur_ruin=StarRuins(tdwd1,j);",
              "                if(ShipTypeN(cur_ruin)==t_CB)",
              "                {",
              "                    //С некоторым шансом (который выше для доминиона)",
              "                    //Спавним пирата на Роджерии и делаем вид, что он появился на доминионе",
              "                    tint1=NewPirateSpawnChancePB;",
              "                    tint1=tint1/3;",
              "                    if(!RndObject(0,tint1, cur_ruin))",
              "                    {",
              "                        tint2=RndObject(6,12, cur_ruin);",
              "                        for(k=0; k<tint2; k=k+1)",
              "                        {",
              "                            cur_ship=BuyWarrior(PlanetPirateClan());",
              "                            ShipMoney(cur_ship,1.25*ShipMoney(cur_ship));",
              "                            ShipRefit(cur_ship);",
              "                            ShipImproveItems(cur_ship,GTL);",
              "                            TransferShip(cur_ship,cur_ruin);",
              "                        }",
              "                    }",
              "",
              "                    //А если число кораблей в системе менее 20, то с некоторым шансом спавним ещё одного пирата на ближайшей к станции планете",
              "                    if(StarShips(tdwd1)<20)",
              "                    {",
              "                        tint1=tint1/3;",
              "                        if(!RndObject(0,tint1, cur_ruin))",
              "                        {",
              "                            //И также переносим его на доминион",
              "                            cur_planet=NearCivilPlanet(cur_ruin);",
              "                            cur_ship=BuyPirate(cur_planet);",
              "                            TransferShip(cur_ship,cur_ruin);",
              "                        }",
              "                    }",
              "                }",
              "            }",
              "        }",
              "    }",
              "    //Если под контролем пиратов находится не только скрытый сектор",
              "    if(ControlledSystems(2)>2)",
              "    {",
              "        //С небольшим шансом происходит массовый спавн (от 1 до 10) пиратов на Роджерии",
              "        //Которые будут направлены в случайную систему неподалёку от скрытого сектора",
              "        tint1=NewPirateSpawnChanceSys;",
              "        if(!RndObject(0, tint1, , PlanetPirateClan()))",
              "        {",
              "            tint1=3+GTL*4;",
              "            tint2 = RndObject(1, 10, PlanetPirateClan());",
              "            tdwd1=PlanetToStar(PlanetPirateClan());",
              "            for(i=0; i<50; i=i+1)",
              "            {",
              "                //Рандомим случайную систему вокруг Тортугаца, исключая Нифигац",
              "                cur_star=StarNearbyStars(tdwd1,RndObject(2, tint1, PlanetPirateClan()));",
              "                if(StarOwner(cur_star)==2)",
              "                {",
              "                    for(j=0; j<tint2; j=j+1)",
              "                    {",
              "                        //Спавним пиратов на Роджерии",
              "                        cur_ship=BuyWarrior(PlanetPirateClan());",
              "                        //Если игрок сам находится в Тортугаце, то пираты появятся из Нифигаца",
              "                        if(ShipStar(Player())==tdwd1) MakeShipEnterStar(cur_ship,cur_star,StarNearbyStars(tdwd1,1), RndObject(3, 6, PlanetPirateClan()));",
              "                        //Иначе пираты вылетят из Тортугаца (где и были заспавлены)",
              "                        else MakeShipEnterStar(cur_ship,cur_star,ShipStar(cur_ship), RndObject(3, 6, PlanetPirateClan()));",
              "                    }",
              "                    break;",
              "                }",
              "            }",
              "        }",
              "    }",
              "}",
              "",
              "//Создаём головорезов",
              "if(timerThug<=CurTurn())",
              "{",
              "    //Определяем максимальное количество головорезов",
              "    if(ControlledSystems(2)>=30) thugsCount=25;",
              "    else thugsCount=round(0.5*ControlledSystems(2))+5;",
              "    if(PirateWin()==1) thugsCount=thugsCount*1.6;",
              "    if(PirateWin()==2) thugsCount=thugsCount*1.6;",
              "    if(PirateWin()==3) thugsCount=thugsCount*60/100;",
              "    if(PirateWin()==5) thugsCount=thugsCount*2;",
              "    //Удаляем из массива мертвых головорезов",
              "    for(i=1; i<ArrayDim(arrThug); i=i+1)",
              "    {",
              "        if(!IdToShip(arrThug[i])) ArrayDelete(arrThug,i);",
              "    }",
              "    //Проверяем, не достигнуто ли максимальное количество головорезов",
              "    if((ArrayDim(arrThug)) < thugsCount)",
              "    {",
              "        //Определяем планету для появления",
              "        spawnPlanet=PlanetChoice(spawnPlanet);",
              "        //Если нашли подходящую планету, создаем там головорезов",
              "        if(spawnPlanet)",
              "        {",
              "            cnt = RndObject(2, 4, spawnPlanet);",
              "            for(i=0; i<cnt; i=i+1) BuyThug(spawnPlanet);",
              "        }",
              "    }",
              "    //Обновляем таймер появления",
              "    //Если головорезов слишком мало, ускоряем появление",
              "    if(ArrayDim(arrThug)<(0.5*thugsCount)) timerThug=CurTurn()+round(0.67*RndObject(210,360, PlanetPirateClan()));",
              "    else timerThug=CurTurn()+RndObject(210,360, PlanetPirateClan());",
              "}",
              "",
              "//Создаем хана(-ов)",
              "if(timerKhan <= CurTurn())",
              "{",
              "    if(ControlledSystems(2) >= 30) khansCount = 9;",
              "    else khansCount = round(0.25 * ControlledSystems(2)) + 1;",
              "",
              "    if(PirateWin() == 1) khansCount = khansCount * 2.0;",
              "    else if(PirateWin() == 2) khansCount = khansCount * 1.3;",
              "    else if(PirateWin() == 3) khansCount = khansCount * 50 / 100;",
              "    else if(PirateWin() == 5) khansCount = khansCount * 2.5;",
              "",
              "    for(i = 1; i < ArrayDim(arrKhan); i = i + 1)",
              "    {",
              "        if(!IdToShip(arrKhan[i])) ArrayDelete(arrKhan, i);",
              "    }",
              "",
              "    if((ArrayDim(arrKhan)) < khansCount)",
              "    {",
              "        spawnPlanet = PlanetChoice(spawnPlanet);",
              "        if(spawnPlanet)",
              "        {",
              "            cnt = RndObject(1, 3, spawnPlanet);",
              "            for(i = 0; i < cnt; i = i + 1) BuyKhan(spawnPlanet);",
              "        }",
              "    }",
              "",
              "    if(ArrayDim(arrKhan) < (0.5 * khansCount)) timerKhan = CurTurn() + round(0.67 * RndObject(360, 540, PlanetPirateClan()));",
              "    else timerKhan = CurTurn() + RndObject(360, 540, PlanetPirateClan());",
              "}",
              "",
              "//Время от времени чиним пиратам артефакты, если они поломаны",
              "if(timerRepair <= CurTurn())",
              "{",
              "    //Удаляем из массива мертвых пиратов, а живым чиним артефакты",
              "    for(i = 1; i < ArrayDim(arrKhan); i = i + 1)",
              "    {",
              "        if(!IdToShip(arrKhan[i])) ArrayDelete(arrKhan, i);",
              "        else RepairArts(IdToShip(arrKhan[i]));",
              "    }",
              "",
              "    for(i = 1; i < ArrayDim(arrThug); i = i + 1)",
              "    {",
              "        if(!IdToShip(arrThug[i])) ArrayDelete(arrThug, i);",
              "        else RepairArts(IdToShip(arrThug[i]));",
              "    }",
              "",
              "    //Обновляем таймер починки",
              "    timerRepair = CurTurn() + RndObject(180, 240, PlanetPirateClan());",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  710,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  8,
          "Total.Lines":  460,
          "Code.Type":  "Init",
          "Code":          
          [
              "//Запоминаем текущий ГТУ",
              "GTL = GalaxyTechLevel();",
              "",
              "//Запрещаем Роджерии спавнить пиратов на ПБ в Коалиционных системах",
              "PlanetExtraFlags(PlanetPirateClan(), PlanetExtraFlags(PlanetPirateClan()) | 2);",
              "",
              "i = GalaxyDiffLevels(0);",
              "if(i <= 50)",
              "{",
              "    NewPirateSpawnChancePB = 720;",
              "    NewPirateSpawnChanceSys = 90;",
              "}",
              "else if(i <= 100)",
              "{",
              "    NewPirateSpawnChancePB = 600;",
              "    NewPirateSpawnChanceSys = 75;",
              "}",
              "else if(i <= 150)",
              "{",
              "    NewPirateSpawnChancePB = 480;",
              "    NewPirateSpawnChanceSys = 60;",
              "}",
              "else if(i <= 200)",
              "{",
              "    NewPirateSpawnChancePB = 360;",
              "    NewPirateSpawnChanceSys = 45;",
              "}",
              "else if(i <= 250)",
              "{",
              "    NewPirateSpawnChancePB = 330;",
              "    NewPirateSpawnChanceSys = 40;",
              "}",
              "else if(i <= 300)",
              "{",
              "    NewPirateSpawnChancePB = 300;",
              "    NewPirateSpawnChanceSys = 35;",
              "}",
              "else if(i <= 350)",
              "{",
              "    NewPirateSpawnChancePB = 270;",
              "    NewPirateSpawnChanceSys = 30;",
              "}",
              "else if(i <= 400)",
              "{",
              "    NewPirateSpawnChancePB = 240;",
              "    NewPirateSpawnChanceSys = 25;",
              "}",
              "else if(i <= 450)",
              "{",
              "    NewPirateSpawnChancePB = 210;",
              "    NewPirateSpawnChanceSys = 20;",
              "}",
              "else",
              "{",
              "    NewPirateSpawnChancePB = 180;",
              "    NewPirateSpawnChanceSys = 15;",
              "}",
              "",
              "tint1 = BuildListOfNewShips(tempArr, lastShipId, 8, 1+2+4+8+16+128, 1, '', '');",
              "if(tint1) //Если был обнаружен хотя бы один корабль, подходящий по заданным фильтрам",
              "{",
              "    for(i = 0; i < ArrayDim(tempArr); i = i + 1)",
              "    {",
              "        tint1 = 0;",
              "        cur_ship = tempArr[i];",
              "        //Пропускаем скриптовые корабли",
              "        if(ShipInScript(cur_ship, 0)) continue;",
              "        //Пропускаем вольных и странствующих клановых пиратов",
              "        if(!PirateType(cur_ship)) continue;",
              "        ShipMoney(cur_ship, ShipMoney(cur_ship) * RndObject(125, 200, cur_ship) / 100);",
              "",
              "        tint1 = GetShipPirateRank(cur_ship);",
              "        if(tint1 == 0) tint1 = RndObject(0, 1, cur_ship);",
              "        else if(tint1 == 1) tint1 = RndObject(1, 3, cur_ship);",
              "        else if(tint1 == 2) tint1 = RndObject(2, 5, cur_ship);",
              "        else if(tint1 == 3) tint1 = RndObject(3, 7, cur_ship);",
              "        else if(tint1 == 4) tint1 = RndObject(4, 10, cur_ship);",
              "        else tint1 = RndObject(5, 12, cur_ship);",
              "        ShipImproveItems(cur_ship, tint1);",
              "",
              "        ShipMoney(cur_ship, ShipMoney(cur_ship) * (100 + GetShipPirateRank(cur_ship) * 30) / 100);",
              "    }",
              "}",
              "lastShipId = GalaxyShipId();",
              "",
              "ArrayClear(piratePlanets);",
              "ArrayClear(arrKhan);",
              "//Функция определения планеты для появления",
              "function PlanetChoice (dword planet)",
              "{",
              "    int i, j;",
              "    dword tdw, tdw2, tdw3;",
              "    ArrayClear(piratePlanets);",
              "",
              "    //Перебираем системы в Галактике",
              "    for(i = 0; i < GalaxyStars(); i = i + 1)",
              "    {",
              "        tdw2 = GalaxyStar(i);",
              "        //Пропускаем пиратский сектор",
              "        if(StarToCon(tdw2) == StarToCon(PlanetToStar(PlanetPirateClan()))) continue;",
              "        //Ищем пиратские планеты и заносим в массив",
              "        if(StarOwner(tdw2) == 2)",
              "        {",
              "            for(j = 0; j < StarPlanets(tdw2); j = j + 1)",
              "            {",
              "                planet = StarPlanets(tdw2, j);",
              "                if(PlanetOwner(planet) == PirateClan) ArrayAdd(piratePlanets, planet);",
              "            }",
              "        }",
              "    }",
              "",
              "    //Если подходящих планет не нашлось, присваиваем 0, чтобы никто не заспавнился",
              "    if(ArrayDim(piratePlanets) <= 1) planet = 0;",
              "    else planet = piratePlanets[RndObject(1, ArrayDim(piratePlanets) - 1, PlanetPirateClan())];",
              "    result = planet;",
              "}",
              "",
              "//Функция починки артефактов",
              "function RepairArts(dword ship)",
              "{",
              "    int i;",
              "    dword tdw;",
              "    //Перебираем все артефакты на бору корабля, чиним хотя бы наполовину сломанные",
              "    for(i = 0; i < ShipArts(ship); i = i + 1)",
              "    {",
              "        tdw = ShipArts(ship, i);",
              "        if(ItemDurability(tdw) <= 50) ItemDurability(tdw, 100);",
              "    }",
              "}",
              "",
              "//Функция выдачи артефактов",
              "function GiveArts(dword ship, dword artsNumber)",
              "{",
              "    //Обнуляем данные в массиве с типами оружия",
              "    for(int i = 0; i < ArrayDim(weaponTypes); i = i + 1) weaponTypes[i] = 0;",
              "    //Определяем, какой тип оружия предпочитает пират",
              "    //Перебираем все оружие на корабле",
              "    for(i = 1; i <= 5; i = i + 1)",
              "    {",
              "        dword tdw = ShipWeapon(ship, i);",
              "        //Если в слоте есть оружие, определяем его тип по дамагсету и фиксируем количество оружия с каждым типом урона",
              "        if(tdw)",
              "        {",
              "            dword tdw2 = GetEquipmentStats(tdw, 6);",
              "            //Энергетическое",
              "            if(tdw2 & 1) weaponTypes[0] = weaponTypes[0] + 1;",
              "            //Осколочное",
              "            else if(tdw2 & 2) weaponTypes[1] = weaponTypes[1] + 1;",
              "            //Ракетное",
              "            else weaponTypes[2] = weaponTypes[2] + 1;",
              "        }",
              "    }",
              "",
              "    //Находим наиболее используемый тип оружия",
              "    dword maxW = 0;",
              "    for(i = 0; i < ArrayDim(weaponTypes); i = i + 1)",
              "    {",
              "        if(maxW < weaponTypes[i])",
              "        {",
              "            tdw2 = i;",
              "            maxW = weaponTypes[i];",
              "        }",
              "        //Если пират предпочитает несколько типов оружия, в дело вступает рандом",
              "        if(maxW == weaponTypes[i])",
              "        {",
              "            if(RndObject(1, 100, ship) > 50) tdw2 = i;",
              "        }",
              "    }",
              "",
              "    //Создаем артефакт, подходящий под наибольшее число орудий",
              "    //Пятерик",
              "    if(tdw2 == 0) tdw = CreateArt(t_ArtEnergyPulse, RndObject(0, 4, ship));",
              "    //Навинт",
              "    else if(tdw2 == 1) tdw = CreateArt(t_ArtSplinter, RndObject(0, 4, ship));",
              "    //Ралс",
              "    else tdw = CreateArt(t_ArtFastRacks, RndObject(0, 4, ship));",
              "",
              "    //Выдаем артефакт",
              "    AddItemToShip(ship, tdw);",
              "",
              "    //15% шанс на дроп после смерти",
              "    if(RndObject(1, 100, ship) > 15) NoDropItem(tdw, 1);",
              "    ItemIsInUse(tdw, ship, 1);",
              "",
              "    //Если есть ГЗП, выдаем поляризатор",
              "    if(artsNumber >= 2)",
              "    {",
              "        if(ShipEqInSlot(ship, t_DefGenerator)) tdw = CreateArt(t_ArtefactDef, RndObject(0, 4, ship));",
              "        //В противном случае - проглот",
              "        else tdw = CreateArt(t_ArtEnergyDef, RndObject(0, 4, ship));",
              "        AddItemToShip(ship, tdw);",
              "        //15% шанс на дроп после смерти",
              "        if(RndObject(1, 100, ship) > 15) NoDropItem(tdw, 1);",
              "        ItemIsInUse(tdw, ship, 1);",
              "    }",
              "    //Рандомим еще один артефакт на защиту",
              "    if(artsNumber >= 3)",
              "    {",
              "        //Железные жупи",
              "        if(RndObject(1, 100, ship) > 50) tdw = CreateArt(t_ArtefactHull, RndObject(0, 4, ship));",
              "        //Аэгис",
              "        else tdw = CreateArt(t_ArtPDTurret, RndObject(0, 4, ship));",
              "        AddItemToShip(ship, tdw);",
              "        //15% шанс на дроп после смерти",
              "        if(RndObject(1, 100, ship) > 15) NoDropItem(tdw, 1);",
              "        ItemIsInUse(tdw, ship, 1);",
              "    }",
              "    //Если у пирата аж 4 слота, выдаем ему артефакт на мобильность",
              "    if(artsNumber == 4)",
              "    {",
              "        //Пси-ускоритель материи",
              "        if(RndObject(1, 100, ship) > 50) tdw = CreateArt(t_ArtefactSpeed, RndObject(0, 4, ship));",
              "        //Антигравитатор",
              "        else tdw = CreateArt(t_ArtefactAntigrav, RndObject(0, 4, ship));",
              "        AddItemToShip(ship, tdw);",
              "        //15% шанс на дроп после смерти",
              "        if(RndObject(1, 100, ship) > 15) NoDropItem(tdw, 1);",
              "        ItemIsInUse(tdw, ship, 1);",
              "    }",
              "    //Устраняем возможный перевес",
              "    ShipCalcParam(ship);",
              "    if(ShipFreeSpace(ship) < 0)",
              "    {",
              "        ItemSize(ShipItems(ship, 0), ItemSize(ShipItems(ship, 0)) + abs(ShipFreeSpace(ship)) + RndObject(1, 5, ship));",
              "        HullHP(ship, ItemSize(ShipItems(ship, 0)));",
              "    }",
              "}",
              "",
              "//Функция создания головореза",
              "function BuyThug(dword planet)",
              "{",
              "    //Создаем пирата или пирата-воина",
              "    if(RndObject(1, 100, planet) <= 50) dword ship = BuyPirate(planet, 500);",
              "    else ship = BuyWarrior(planet, 500);",
              "",
              "    dword hull = ShipEqInSlot(ship, t_Hull);",
              "    //Устанавливаем размер корпуса в зависимости от сложности пиратов",
              "    ItemSize(hull, max(round((0.00085 * GalaxyDiffLevels(0) + 1) * GTL * 100) + RndObject(-25, 45, ship), 250));",
              "    //Восполняем прочность корпуса",
              "    HullHP(ship, 'To100');",
              "",
              "    //Меняем внешний вид корабля на клановый, в зависимости от расы пилота",
              "    if(!ShipPilotRace(ship)) Chameleon(ship, 'Ship.Maloc.PirateClan');",
              "    else if(ShipPilotRace(ship) == 1) Chameleon(ship, 'Ship.Peleng.PirateClan');",
              "    else if(ShipPilotRace(ship) == 2) Chameleon(ship, 'Ship.People.PirateClan');",
              "    else if(ShipPilotRace(ship) == 3) Chameleon(ship, 'Ship.Fei.PirateClan');",
              "    else Chameleon(ship, 'Ship.Gaal.PirateClan');",
              "",
              "    //Прокачиваем навыки точности, маневренности и техники",
              "    for(int i = 0; i < 3; i = i + 1) ShipSkill(ship, i, round(0.5 * GTL + RndObject(0, 2, ship)));",
              "    //Заставляем головореза обновить снаряжение",
              "    for(i = 0; i <= 4; i = i + 1) ShipRefit(ship);",
              "",
              "    //Если в корпусе открыт слот дроида, но самого дроида нет - выдаем",
              "    if(GetEquipmentStats(hull, 5))",
              "    {",
              "        if(!ShipEqInSlot(ship, t_RepairRobot))",
              "        {",
              "            dword tdw = CreateEquipment(t_RepairRobot, RndObject(20, 40, ship), GTL, 7);",
              "            AddItemToShip(ship, tdw);",
              "            ItemIsInUse(tdw, ship, 1);",
              "        }",
              "    }",
              "",
              "    //Аналогично для ГЗП",
              "    if(GetEquipmentStats(hull, 7))",
              "    {",
              "        if(!ShipEqInSlot(ship, t_DefGenerator))",
              "        {",
              "            tdw = CreateEquipment(t_DefGenerator, RndObject(20, 40, ship), GTL, 7);",
              "            AddItemToShip(ship, tdw);",
              "            ItemIsInUse(tdw, ship, 1);",
              "        }",
              "    }",
              "",
              "    //Добавляем ящик золота в качестве трофея с головореза",
              "    tdw = CreateQuestItem('Usl_PTQ70', 6);",
              "    ShipAddDropItem(ship, tdw);",
              "    //Рандомно улучшаем оборудование в зависимости от ГТУ",
              "    ShipImproveItems(ship, 2 * GTL);",
              "    //Заносим Id головореза в массив",
              "    ArrayAdd(arrThug, Id(ship));",
              "    //Прописываем уникальный тип",
              "    ShipType(ship, 'Thug');",
              "    //Поднимаем ранг до головореза",
              "    if(GetShipPirateRank(ship) < 4) RaisePirateRank(ship, 4);",
              "",
              "    //Если на корабле есть хоть один слот под артефакты, выдаем их",
              "    int numArts = ShipSlots(ship, 2);",
              "    GiveArts(ship, numArts);",
              "}",
              "",
              "//Функция создания хана",
              "function BuyKhan(dword planet)",
              "{",
              "    //Создаем пирата или пирата-воина",
              "    if(RndObject(1, 100, planet) <= 50) dword ship = BuyPirate(planet, 1000);",
              "    else ship = BuyWarrior(planet, 1000);",
              "    dword hull = ShipEqInSlot(ship, t_Hull);",
              "    //Устанавливаем размер корпуса в зависимости от сложности пиратов",
              "    ItemSize(hull, max(round((0.0015 * GalaxyDiffLevels(0) + 1) * GTL * 125) + RndObject(15, 65, ship), 400));",
              "    //Восполняем прочность корпуса",
              "    HullHP(ship, 'To100');",
              "",
              "    //Прописываем уникальный тип",
              "    ShipType(ship, 'Khan');",
              "    //Заносим Id хана в массив",
              "    ArrayAdd(arrKhan, Id(ship));",
              "    //Повышаем пиратское звание до хана",
              "    if(GetShipPirateRank(ship) < 6) RaisePirateRank(ship, 6);",
              "     //Прокачиваем навыки точности, маневренности и техники",
              "    for(int i = 0; i < 3; i = i + 1) ShipSkill(ship, i, round(0.5 * GTL + 2));",
              "    //Отдельно прокачиваем лидерство",
              "    ShipSkill(ship, 5, round(0.5 * GTL + 2));",
              "    //Награждаем чёрным сердцем",
              "    GiveRewardByNom(ship, 39);",
              "    //Награждаем чёрной меткой",
              "    GiveRewardByNom(ship, 37);",
              "",
              "    //С вероятностью 25% хан будет летать на \"убийце\"",
              "    if(RndObject(1, 100, ship) <= 25) str tStr1 = '350';",
              "    //В противном случае - накладываем другой акрин, в зависимости от расы",
              "    else",
              "    {",
              "        int pilot_race = ShipPilotRace(ship);",
              "        if(pilot_race == Maloc)",
              "        {",
              "            //Накладываем акрин, в зависимости от ГТУ",
              "            if(GTL < 5)",
              "            {",
              "                //Миоплазменный корпус I",
              "                if(RndObject(1, 100, ship) <= 50) tStr1 = '365';",
              "                //Миоплазменный корпус  II",
              "                else tStr1 = '366';",
              "            }",
              "            //Миоплазменный корпус  IV",
              "            else if(GTL > 6) tStr1 = '368';",
              "            //Миоплазменный корпус III",
              "            else tStr1 = '367';",
              "        }",
              "        else if(pilot_race == Peleng)",
              "        {",
              "            if(GTL < 5)",
              "            {",
              "                //Добрый лякуша I",
              "                if(RndObject(1, 100, ship) <= 50) tStr1 = '460';",
              "                //Добрый лякуша II",
              "                else tStr1 = '461';",
              "            }",
              "            //Добрый лякуша IV",
              "            else if(GTL > 6) tStr1 = '462';",
              "            //Добрый лякуша III",
              "            else tStr1 = '463';",
              "        }",
              "        else if(pilot_race == People)",
              "        {",
              "            if(GTL < 5)",
              "            {",
              "                //Мирный корсар I",
              "                if(RndObject(1, 100, ship) <= 50) tStr1 = '464';",
              "                //Мирный корсар II",
              "                else tStr1 = '465';",
              "            }",
              "            //Мирный корсар IV",
              "            else if(GTL > 6) tStr1 = '467';",
              "            //Мирный корсар III",
              "            else tStr1 = '466';",
              "        }",
              "        else if(pilot_race == Fei)",
              "        {",
              "            if(GTL < 5)",
              "            {",
              "                //Ремонтный корпус I",
              "                if(RndObject(1, 100, ship) <= 50) tStr1 = '361';",
              "                //Ремонтный корпус II",
              "                else tStr1 = '362';",
              "            }",
              "            //Ремонтный корпус III",
              "            else if(GTL > 6) tStr1 = '364';",
              "            //Ремонтный корпус IV",
              "            else tStr1 = '363';",
              "        }",
              "        else //if(pilot_race == Gaal)",
              "        {",
              "            if(GTL < 5)",
              "            {",
              "                //Честный ренегал I",
              "                if(RndObject(1, 100, ship) <= 50) tStr1 = '468';",
              "                //Честный ренегал II",
              "                else tStr1 = '469';",
              "            }",
              "            //Честный ренегал IV",
              "            else if(GTL > 6) tStr1 = '471';",
              "            //Честный ренегал III",
              "            else tStr1 = '470';",
              "        }",
              "    }",
              "",
              "    //Накладываем выбранный акрин",
              "    SpecialToEquipment(FindBonusByNameInCfg(tStr1), hull);",
              "    Chameleon(ship);",
              "",
              "    //Заставляем хана обновить снаряжение",
              "    for(i = 0; i <= 4; i = i + 1) ShipRefit(ship);",
              "",
              "    //Повышаем технический уровень оборудования",
              "    for(i = ShipItems(ship) - 1; i >= 1; i = i - 1)",
              "    {",
              "        dword tdw = ShipItems(ship, i);",
              "        //Пропускаем оборудование в трюме",
              "        if(!ItemIsInUse(tdw)) continue;",
              "",
              "        if(ItemLevel(tdw) < GTL)",
              "        {",
              "            //Отдельное условие для кастомного оружия",
              "            if(ItemType(tdw) == t_CustomWeapon) dword tdw2 = CreateCustomWeapon(CustomWeaponType(tdw), ItemSize(tdw), GTL, ItemOwner(tdw));",
              "            //Создаем идентичный предмет текущего ГТУ",
              "            else tdw2 = CreateEquipment(ItemType(tdw), ItemSize(tdw), GTL, ItemOwner(tdw));",
              "            //Если у оригинального предмета был акрин, накладываем его на копию",
              "            if(~EqSpecial(tdw)) SpecialToEquipment(EqSpecial(tdw), tdw2);",
              "            //Аналогично для микромодулей",
              "            if(~EqModule(tdw)) ModuleToEquipment(EqModule(tdw), tdw2);",
              "            //Повышаем технологический уровень оригинального предмета",
              "            ItemLevel(tdw, GTL);",
              "            //Повышаем стоимость предмета",
              "            ItemCost(tdw, ItemCost(tdw2));",
              "            //Копия нам больше не нужна",
              "            FreeItem(tdw2);",
              "        }",
              "    }",
              "",
              "    //Если в корпусе открыт слот дроида, но самого дроида нет - выдаем",
              "    if(GetEquipmentStats(hull, 5))",
              "    {",
              "        if(!ShipEqInSlot(ship, t_RepairRobot))",
              "        {",
              "            tdw = CreateEquipment(t_RepairRobot, RndObject(20, 40, ship), GTL, PirateClan);",
              "            AddItemToShip(ship, tdw);",
              "            ItemIsInUse(tdw, ship, 1);",
              "        }",
              "    }",
              "",
              "    //Аналогично для ГЗП",
              "    if(GetEquipmentStats(hull, 7))",
              "    {",
              "        if(!ShipEqInSlot(ship, t_DefGenerator))",
              "        {",
              "            tdw = CreateEquipment(t_DefGenerator, RndObject(20, 40, ship), GTL, PirateClan);",
              "            AddItemToShip(ship, tdw);",
              "            ItemIsInUse(tdw, ship, 1);",
              "        }",
              "    }",
              "",
              "    //Рандомно улучшаем оборудование в зависимости от ГТУ",
              "    ShipImproveItems(ship, 3 * GTL);",
              "",
              "    //Если на корабле есть хоть один слот под артефакты, выдаем их",
              "    int numArts = ShipSlots(ship, 2);",
              "    if(numArts) GiveArts(ship, numArts);",
              "}"          
          ]        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "InitPlanet",
          "Pos.x":  580,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  3,
          "Race":  62,
          "Owner":  62,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  580,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  2,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "InitStar",
          "Pos.x":  580,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  1,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "PlayerState",
          "Pos.x":  580,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  5,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "i",
          "Pos.x":  790,
          "Pos.y":  420,
          "Parent":  -1,
          "#":  0,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "NewPirateSpawnChancePB",
          "Pos.x":  690,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  9,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "NewPirateSpawnChanceSys",
          "Pos.x":  690,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  10,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint1",
          "Pos.x":  790,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  11,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tempArr",
          "Pos.x":  960,
          "Pos.y":  360,
          "Parent":  -1,
          "#":  12,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ship",
          "Pos.x":  690,
          "Pos.y":  420,
          "Parent":  -1,
          "#":  13,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr1",
          "Pos.x":  870,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  14,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "lastShipId",
          "Pos.x":  750,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  15,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "j",
          "Pos.x":  790,
          "Pos.y":  440,
          "Parent":  -1,
          "#":  16,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint2",
          "Pos.x":  790,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  17,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_planet",
          "Pos.x":  690,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  18,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_star",
          "Pos.x":  690,
          "Pos.y":  360,
          "Parent":  -1,
          "#":  19,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tdwd1",
          "Pos.x":  690,
          "Pos.y":  440,
          "Parent":  -1,
          "#":  20,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ruin",
          "Pos.x":  690,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  21,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "k",
          "Pos.x":  790,
          "Pos.y":  460,
          "Parent":  -1,
          "#":  22,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tdwd2",
          "Pos.x":  690,
          "Pos.y":  460,
          "Parent":  -1,
          "#":  23,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "weaponTypes",
          "Pos.x":  960,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  24,
          "Var.Type":  "Array",
          "Init":  "3",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "piratePlanets",
          "Pos.x":  960,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  25,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "arrKhan",
          "Pos.x":  960,
          "Pos.y":  420,
          "Parent":  -1,
          "#":  26,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "arrThug",
          "Pos.x":  960,
          "Pos.y":  440,
          "Parent":  -1,
          "#":  27,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "timerKhan",
          "Pos.x":  850,
          "Pos.y":  360,
          "Parent":  -1,
          "#":  28,
          "Var.Type":  "Dword",
          "Init":  "800",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "timerThug",
          "Pos.x":  850,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  29,
          "Var.Type":  "Dword",
          "Init":  "665",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "khansCount",
          "Pos.x":  850,
          "Pos.y":  440,
          "Parent":  -1,
          "#":  30,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "thugsCount",
          "Pos.x":  850,
          "Pos.y":  420,
          "Parent":  -1,
          "#":  31,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "spawnPlanet",
          "Pos.x":  850,
          "Pos.y":  460,
          "Parent":  -1,
          "#":  32,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "timerRepair",
          "Pos.x":  850,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  33,
          "Var.Type":  "Dword",
          "Init":  "840",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GTL",
          "Pos.x":  790,
          "Pos.y":  360,
          "Parent":  -1,
          "#":  34,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cnt",
          "Pos.x":  790,
          "Pos.y":  480,
          "Parent":  -1,
          "#":  35,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  3,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  2,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  4,
      "End":  3,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  4,
      "End":  5,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "BlockPar.EC.Total.Strings":  0,
  "BlockPar.EC":  
  [
  
  ]
}