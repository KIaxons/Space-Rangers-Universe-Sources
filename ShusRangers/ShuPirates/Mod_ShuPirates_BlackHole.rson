{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -326,
  "ViewPos.y":  198,
  "ScriptName":  "Mod_ShuPirates_BlackHole",
  "ScriptFileOut":  "H:\\Mod_ShuPirates_BlackHole.scr",
  "ScriptTextOut":  "H:\\Mod_ShuPirates_BlackHole.txt",
  "GraphPoint.Count":  33,
  "GraphLink.Count":  11,
  "GraphRectText.Count":  0,
  "Variables.Count":  17,
  "Stars.Count":  2,
  "Planets.Count":  2,
  "Ships.Count":  1,
  "States.Count":  3,
  "Groups.Count":  2,
  "Places.Count":  0,
  "Items.Count":  0,
  "Ethers.Count":  0,
  "Dialogs.Count":  0,
  "DialogMessages.Count":  0,
  "DialogAnswers.Count":  0,
  "Operations.Count":  5,
  "Statements.Count":  1,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "PlayerGroup",
          "Pos.x":  240,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  8,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "PiratesGroup",
          "Pos.x":  350,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  9,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  290,
          "Pos.y":  480,
          "Parent":  -1,
          "#":  1,
          "Total.Lines":  16,
          "Code.Type":  "Global",
          "Code":          
          [
              "//Если таймер закончил отсчёт (установлен на 4 года от начала игры)",
              "if(CurTurn() >= GPirateHoleDate)",
              "{",
              "    //Пока пираты ещё не проиграли/победили",
              "    if(!PirateWin())",
              "    {",
              "        //И только если сам игрок не находится на стороне пиратов",
              "        if(!ShipOnSidePirateClan(Player()))",
              "        {",
              "            //Запускаем скрипт",
              "            GRun();",
              "            //Обновляем таймер на срок от 1.4 до 2.1 лет",
              "            GPirateHoleDate = CurTurn() + Rnd(511, 766);",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  310,
          "Pos.y":  480,
          "Parent":  -1,
          "#":  10,
          "Total.Lines":  26,
          "Code.Type":  "Init",
          "Code":          
          [
              "//HoleWasVisited == -1 - нельзя запускать скрипт, т.к. в системе игрока уже есть другая ЧД, либо пиратская система находится под атакой",
              "//HoleWasVisited ==  0 - скриптовая ЧД создана и ждёт игрока",
              "//HoleWasVisited ==  1 - скриптовая ЧД была посещена игроком",
              "HoleWasVisited = -1;",
              "if(!StarHoles(PlayerStar) && !StarBattle(PirateStar))",
              "{",
              "    if(!StarHoles(PirateStar) && SectorVisible(StarToCon(PirateStar)))",
              "    {",
              "        //Создаём саму ЧД и выставляем таймер её продолжительности",
              "        BlackHoleId = Id(HoleCreate2(PlayerStar, PirateStar));",
              "        HoleWasVisited = 0;",
              "    }",
              "    //Завершаем скрипт, если в системе игрока уже есть открытая ЧД",
              "    else",
              "    {",
              "        AllShipOut();",
              "        //Повторная проверка запуска в случае неудачи случится примерно через месяц",
              "        GPirateHoleDate = CurTurn() + Rnd(21, 43);",
              "    }",
              "}",
              "else",
              "{",
              "    AllShipOut();",
              "    //Повторная проверка запуска в случае неудачи случится примерно через месяц",
              "    GPirateHoleDate = CurTurn() + Rnd(21, 43);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  330,
          "Pos.y":  480,
          "Parent":  -1,
          "#":  11,
          "Total.Lines":  284,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Создаём группу \"засадных\" пиратов на планете в системе выхода из созданной ЧД",
              "//Делаем это в терне, потому что в ините нельзя добавлять в группы (групп в тот момент ещё не существует)",
              "if(!PiratesSpawned)",
              "{",
              "    cnt = RndObject(4, 6, PirateStar);",
              "    for(i = 0; i < cnt; i = i + 1)",
              "    {",
              "        //Спавним клановых пиратов",
              "        cur_ship = BuyWarrior(PlanetPirateClan(), 250);",
              "        //Случайно поднимаем ранг пиратов",
              "        tint1 = RndObject(2, 4, cur_ship);",
              "        while(GetShipPirateRank(cur_ship) < tint1)",
              "        {",
              "            ShipPirateRankPoints(cur_ship, ShipNextPirateRankPoints(cur_ship));",
              "            RaisePirateRank(cur_ship);",
              "        }",
              "        //Реэкипируем пиратов",
              "        ShipRefit(cur_ship);",
              "        ShipRefit(cur_ship);",
              "        ShipRefit(cur_ship);",
              "        ShipRefit(cur_ship);",
              "        //Поднимаем их навыки",
              "        ShipSkill(cur_ship, 0, RndObject(3, 6, cur_ship));",
              "        ShipSkill(cur_ship, 1, RndObject(3, 6, cur_ship));",
              "        ShipSkill(cur_ship, 2, RndObject(0, 6, cur_ship));",
              "        ShipSkill(cur_ship, 3, RndObject(0, 4, cur_ship));",
              "        ShipSkill(cur_ship, 4, RndObject(0, 4, cur_ship));",
              "        ShipSkill(cur_ship, 5, RndObject(0, 4, cur_ship));",
              "        //И отправляем на планету у точки выхода из ЧД, поджидать игрока",
              "        TransferShip(cur_ship, PiratePlanet);",
              "        ShipJoin(PiratesGroup, cur_ship);",
              "    }",
              "",
              "    PiratesSpawned = 1;",
              "}",
              "",
              "//Если игрок залетел в ЧД, созданную данным скриптом",
              "if(!HoleWasVisited)",
              "{",
              "    if(ShipInHole(Player()))",
              "    {",
              "        if(!StartAB() && !GABStatus)",
              "        {",
              "            cur_hole = ShipOrderObj(Player());",
              "            if(HoleStar1(cur_hole) == PlayerStar && HoleStar2(cur_hole) == PirateStar)",
              "            {",
              "                //Ставим маркер о посещении пиратской ЧД в этой итерации запуска скрипта",
              "                HoleWasVisited = 1;",
              "                //На всякий случай запрещаем игроку повторный влёт в данную ЧД (боты могут случайно продлить её время жизни своими залётами)",
              "                if(HoleMap(cur_hole) != 'SkipAB') HoleMap(cur_hole, 'NoEntry');",
              "",
              "                //Проверяем, не попали ли в ЧД одновременно с игроком другие корабли",
              "                check = 0;",
              "                cur_star = HoleStar1(cur_hole);",
              "                tint2 = StarShips(cur_star);",
              "                tint3 = tint2 + StarShips(HoleStar2(cur_hole));",
              "                for(i = 0; i < tint3; i = i + 1)",
              "                {",
              "                    if(i < tint2) cur_ship = StarShips(cur_star, i);",
              "                    else cur_ship = StarShips(HoleStar2(cur_hole), i - tint2);",
              "",
              "                    if(IsPlayer(cur_ship)) continue;",
              "                    if(!ShipInHole(cur_ship)) continue;",
              "                    if(HoleStar1(ShipOrderObj(cur_ship)) != HoleStar1(cur_hole)) continue;",
              "",
              "                    //Проверяем отношение корабля к игроку, если оно враждебно, то корабль останется врагом игрока и в АБ",
              "                    if(RelationToShip(cur_ship, Player()) <= 9)",
              "                    {",
              "                        tstr1 = ShipTypeN(cur_ship) + ',' + ShipSubType(cur_ship) + ',' + ShipType(cur_ship) + ',' + ShipName(cur_ship) + ',' + Name(cur_ship) + ',' + ShipOwner(cur_ship) + ',' + 'ShipId_' + Id(cur_ship);",
              "                        tint1 = 2;",
              "                    }",
              "                    //Также враждебным к игроку станет любой влетевший с ним в данную ЧД рейнджер-изменник или пират",
              "                    else if(ShipTypeN(cur_ship) == t_Pirate || ShipType(cur_ship) == 'RangerPirate' || ShipType(cur_ship) == 'RangerPirateExplorer')",
              "                    {",
              "                        tstr1 = '' + ShipTypeN(cur_ship) + ',' + ShipSubType(cur_ship) + ',' + ShipType(cur_ship) + ',' + ShipName(cur_ship) + ',' + Name(cur_ship) + ',' + ShipOwner(cur_ship) + ',' + 'ShipId_' + Id(cur_ship);",
              "                        tint1 = 0;",
              "                    }",
              "                    else",
              "                    {",
              "                        tstr1 = '' + ShipTypeN(cur_ship) + ',' + ShipSubType(cur_ship) + ',' + ShipType(cur_ship) + '_Friend' + ',' + ShipName(cur_ship) + ',' + Name(cur_ship) + ',' + ShipOwner(cur_ship) + ',' + 'ShipId_' + Id(cur_ship);",
              "                        tint1 = 1;",
              "                    }",
              "",
              "                    //Определяем общую силу корабля в АБ",
              "                    //tint2 = ShipTypeN(cur_ship);",
              "                    //if(tint2 == t_Pirate) tint2 = 105;",
              "                    //else if(tint2 == t_Tranclucator) tint2 = 80;",
              "                    //else tint2 = 120;",
              "                    //Включаем этот корабль в будущую аркадную битву",
              "                    tdwd3 = ConvertToABShip(cur_ship, tint1, 100, 100, tstr1);",
              "                    //Добавляем автореген за каждого экипированного младшего дроида",
              "                    ABShipModifiers(tdwd3, 'regen', 100 * ArtefactTypeInUse(cur_ship, t_ArtefactDroid));",
              "                    //Ставим кораблю метку, что он попал в ЧД вместе с игроком",
              "                    tint1 = ShipFindCustomShipInfoByType(cur_ship, 'BraveExplorer');",
              "                    if(tint1 > -1) ShipCustomShipInfoData(cur_ship, tint1, 1, 5);",
              "                    //Считаем число посторонних кораблей, попавших в данную ЧД вместе с игроком",
              "                    check = check + 1;",
              "                }",
              "                if(check) check = check - 1;",
              "",
              "                //Создаём аркадные корабли и маскируем их под пиратов",
              "                cnt = RndObject(3 + check, 6 + check, PlayerStar);",
              "                for(i = 1; i <= cnt; i = i + 1)",
              "                {",
              "                    tint1 = RndObject(1, 5, PlayerStar);",
              "                    if(tint1 == 1) tstr1 = 'Ship.Maloc.PirateClan';",
              "                    else if(tint1 == 2) tstr1 = 'Ship.Peleng.PirateClan';",
              "                    else if(tint1 == 3) tstr1 = 'Ship.People.PirateClan';",
              "                    else if(tint1 == 4) tstr1 = 'Ship.Fei.PirateClan';",
              "                    else tstr1 = 'Ship.Gaal.PirateClan';",
              "",
              "                    //Случайно определяем дроп из пиратских кораблей",
              "                    if(RndObject(0, 5, PlayerStar))",
              "                    {",
              "                        tint1 = RndObject(1, 100, PlayerStar);",
              "                        //Эсодафер",
              "                        if(tint1 <= 12)",
              "                        {",
              "                            tint1 = GalaxyTechLevel() - RndObject(0, 2, PlayerStar);",
              "                            if(tint1 <= 0) tint1 = 1;",
              "                            tdwd1 = CreateEquipment(t_Weapon16, RndObject(30, 65, PlayerStar), tint1, 7);",
              "                        }",
              "                        //Кафаситор",
              "                        else if(tint1 <= 25)",
              "                        {",
              "                            tint1 = GalaxyTechLevel() - RndObject(0, 2, PlayerStar);",
              "                            if(tint1 <= 0) tint1 = 1;",
              "                            tdwd1 = CreateEquipment(t_Weapon17, RndObject(25, 55, PlayerStar), tint1, 7);",
              "                        }",
              "                        //Лирекрон",
              "                        else if(tint1 <= 37)",
              "                        {",
              "                            tint1 = GalaxyTechLevel() - RndObject(0, 2, PlayerStar);",
              "                            if(tint1 <= 0) tint1 = 1;",
              "                            tdwd1 = CreateEquipment(t_Weapon18, RndObject(15, 45, PlayerStar), tint1, 7);",
              "                        }",
              "                        else",
              "                        {",
              "                            //Если подключён мод ExpArts",
              "                            if(IsScriptActive('Mod_ExpArts'))",
              "                            {",
              "                                tint1 = RndObject(1, 100, PlayerStar);",
              "                                //Нуль-генератор",
              "                                if(tint1 <= 5)",
              "                                {",
              "                                    tdwd1 = CreateQuestItem('RNDmoditem_2', 6);",
              "                                }",
              "                                //Хаскер_PROx64",
              "                                else if(tint1 <= 27)",
              "                                {",
              "                                    tdwd1 = CreateCustomArt('RNDart_03', CustomArtSizeCalc(0 + CT('Artefacts.CustomArtefacts.RNDart_03.Size')), CustomArtCostCalc(0 + CT('Artefacts.CustomArtefacts.RNDart_03.Cost')), 7);",
              "                                }",
              "                                //Кварковая бомба",
              "                                else if(tint1 <= 63)",
              "                                {",
              "                                    tdwd1 = CreateArt(t_ArtefactBomb, 7);",
              "                                }",
              "                                //Оглушающая бомба",
              "                                else if(tint1 <= 78)",
              "                                {",
              "                                    tdwd1 = CreateQuestItem('RNDbomb_2', 7);",
              "                                }",
              "                                //ЭМП бомба",
              "                                else",
              "                                {",
              "                                    tdwd1 = CreateQuestItem('RNDbomb_3', 7);",
              "                                }",
              "                            }",
              "                            //Иначе ракетомет",
              "                            else",
              "                            {",
              "                                tint1 = GalaxyTechLevel() - RndObject(0, 2, PlayerStar);",
              "                                if(tint1 <= 0) tint1 = 1;",
              "                                tdwd1 = CreateEquipment(t_Weapon4, RndObject(15, 40, PlayerStar), tint1, 7);",
              "                            }",
              "                        }",
              "                    }",
              "                    //А если не свезло, то выпадет бесполезный хлам",
              "                    else",
              "                    {",
              "                        tint1 = RndObject(1, 100, PlayerStar);",
              "                        //Блок сигарет",
              "                        if(tint1 <= 34) tdwd1 = CreateQuestItem('Usl_19', PirateClan);",
              "                        //Ящик с золотом",
              "                        else if(tint1 <= 58) tdwd1 = CreateQuestItem('Usl_PTQ70', PirateClan);",
              "                        //Бронированный ящик с ценным грузом",
              "                        else if(tint1 <= 81) tdwd1 = CreateQuestItem('Usl_RandomItem_03', RndObject(0, 4, PlayerStar));",
              "                        //Или малокский табурет",
              "                        else tdwd1 = CreateQuestItem('Usl_64', Maloc);",
              "                    }",
              "",
              "                    CreateABShip(tstr1, 0, RndObject(50, 175, PlayerStar), RndObject(75, 135, PlayerStar), '' + t_Pirate + ',' + RndObject(1, 3, PlayerStar) + ',Pirate,NoName,NoFullName,' + PirateClan, tdwd1);",
              "                }",
              "",
              "                //Начинаем аркадный бой",
              "                tint1 = 1+2+4+8+16+32+64+128+256+512+1024+2048+4096+8192; //14 оригинальных карт",
              "                //Проверяем, подключёны ли моды RevABMaps и/или SR1ABMaps",
              "                if(ResourceExist('ABMap.Tachanka')) tint1 = tint1 + 16384+32768+65536+131072+262144+524288; //+6",
              "                if(ResourceExist('ABMap.Azure')) tint1 = tint1 + 1048576+2097152+4194304+8388608; //+4",
              "                tint2 = RndObject(0, 23, PlayerStar);",
              "                while(!(tint1 & (1 << tint2))) tint2 = RndObject(0, 23, PlayerStar); //Максимальная выборка - 24 карты",
              "                //Если выпала оригинальная карта",
              "                if(tint2 <= 13) StartAB('ABMap.map_' + (tint2 + 1));",
              "                //Если выпала карта из мода",
              "                else",
              "                {",
              "                    if(tint2 == 14) StartAB('ABMap.Nonsense');",
              "                    else if(tint2 == 15) StartAB('ABMap.Pulsar');",
              "                    else if(tint2 == 16) StartAB('ABMap.Strolocobs');",
              "                    else if(tint2 == 17) StartAB('ABMap.Tachanka');",
              "                    else if(tint2 == 18) StartAB('ABMap.Fifth_Dimension');",
              "                    else if(tint2 == 19) StartAB('ABMap.Spider\\\\\\'s_Lair');",
              "                    else if(tint2 == 20) StartAB('ABMap.Azure', 1); //Для \"Синевы\" всегда синий фон",
              "                    else if(tint2 == 21) StartAB('ABMap.Pseudoball');",
              "                    else if(tint2 == 22) StartAB('ABMap.Thor');",
              "                    else StartAB('ABMap.Bowling_Alley');",
              "                }",
              "            }",
              "        }",
              "        //Игрок завершил данный аркадный бой",
              "        else if(GABStatus == 2)",
              "        {",
              "            //Перебираем галаэвенты и выясняем, что стало с копией корабля, влетевшего в ЧД вместе с игроком (если таковые были)",
              "            for(i = GalaxyEvents() - 1; i >= 0; i = i - 1)",
              "            {",
              "                if(GalaxyEventDate(i) < CurTurn()) break;",
              "                tstr1 = GalaxyEventType(i);",
              "                //Если он погиб",
              "                if(tstr1 == 'LabeledShipKilledInAB')",
              "                {",
              "                    tstr1 = GetParFromString(GalaxyEventsTextData(i, 0), ',', 6, 0);",
              "                    if(~findsubstr(tstr1, 'ShipId_'))",
              "                    {",
              "                        //Определяем Id, а затем ищем и убиваем этот корабль в нормальном гиперпространстве, до его выхода из ЧД",
              "                        HullHP(IdToShip(int(tstr1)), -100000); //Выставляем минусовое ХП, чтобы никакой дроид не успел отхилить его за один ход",
              "                    }",
              "                }",
              "                //Если выжил",
              "                else if(tstr1 == 'LabeledShipSurvivedInAB')",
              "                {",
              "                    tstr1 = GetParFromString(GalaxyEventsTextData(i, 0), ',', 6, 0);",
              "                    if(~findsubstr(tstr1, 'ShipId_'))",
              "                    {",
              "                        //Выставляем ему уровень здоровья, который остался у этого корабля под конец аркадного боя",
              "                        tdwd1 = IdToShip(int(tstr1));",
              "                        HullHP(tdwd1, GalaxyEventData(i, 0));",
              "                        //Проверка на случай, если корабль закончил АБ с минимальным количеством ХП и на выходе получил из события нулевое здоровье",
              "                        if(HullHP(tdwd1) < 1) HullHP(tdwd1, round(0.01 * ItemSize(ShipItems(tdwd1, 0))) + 1);",
              "",
              "                        //Выставляем этому кораблю время вылета из ЧД, идентичное времени вылета игрока",
              "                        ShipOrderData1(tdwd1, ShipOrderData1(Player()));",
              "                    }",
              "                }",
              "            }",
              "        }",
              "    }",
              "}",
              "",
              "//Каждый ход проверяем наличие скриптовой дыры в системе игрока",
              "//Когда она закроется, скрипт должен будет об этом узнать",
              "if(!StarHoles(PlayerStar)) BlackHoleId = -1;",
              "else",
              "{",
              "    for(i = 0; i < StarHoles(PlayerStar); i = i + 1)",
              "    {",
              "        tdwd1 = StarHoles(PlayerStar, i);",
              "        if(BlackHoleId == Id(tdwd1)) break;",
              "        if(i == StarHoles(PlayerStar) - 1) BlackHoleId = -1;",
              "    }",
              "}",
              "",
              "//Если во время работы скрипта игрок вступил в клан, завершаем скрипт",
              "if(ShipOnSidePirateClan(Player())) AllShipOut();",
              "//Если скриптовая ЧД уже закрылась, а игрок её так и не посетил, выводим его из скрипта",
              "else if(!HoleWasVisited)",
              "{",
              "    if(BlackHoleId == -1) ShipOut(Player());",
              "}",
              "",
              "//Выводим игрока из скрипта после посещения пиратской ЧД и выводе из скрипта (или смерти) всех засадных пиратов",
              "else",
              "{",
              "    if(!GroupCount(PiratesGroup)) ShipOut(Player());",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  350,
          "Pos.y":  630,
          "Parent":  -1,
          "#":  15,
          "Total.Lines":  24,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Если на систему внезапно напали, выгоняем всех из скрипта",
              "if(StarBattle(PirateStar))",
              "{",
              "    AllShipOut();",
              "    exit;",
              "}",
              "//Если ЧД закрылась, а игрока так и нет, выводим пиратов из скрипта",
              "else if(BlackHoleId == -1)",
              "{",
              "    if(!HoleWasVisited)",
              "    {",
              "        ShipOut(CurShip);",
              "        exit;",
              "    }",
              "}",
              "//Как только игрок появится в системе, пираты незамедлительно его атакуют",
              "else if(ShipInStar(Player(), PirateStar))",
              "{",
              "    OrderTakeOff(CurShip);",
              "    RelationToRanger(CurShip, Player(), 0);",
              "    ShipSetBad(CurShip, Player());",
              "    ChangeState('PiratesAttack');",
              "    exit;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  350,
          "Pos.y":  680,
          "Parent":  -1,
          "#":  16,
          "Total.Lines":  4,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Если пират огрёб от игрока или чего-то ещё",
              "if(HullDamage(CurShip) >= 66) ShipOut(CurShip);",
              "//Если игрок покинул систему (в том числе в гробу)",
              "else if(!ShipInStar(Player(), PirateStar)) ShipOut(CurShip);"          
          ]        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "PlayerPlanet",
          "Pos.x":  240,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  4,
          "Race":  62,
          "Owner":  63,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        },
        {
          "Type":  "TPlanet",
          "Name":  "PiratePlanet",
          "Pos.x":  350,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  6,
          "Race":  62,
          "Owner":  257,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  240,
          "Pos.y":  480,
          "Parent":  -1,
          "#":  7,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "PlayerStar",
          "Pos.x":  240,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  3,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  true,
          "NoComeKling":  false        
        },
        {
          "Type":  "TStar",
          "Name":  "PirateStar",
          "Pos.x":  350,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  5,
          "Constellation":  0,
          "Priority":  1,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "Statements":      
      [
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  330,
          "Pos.y":  460,
          "Parent":  -1,
          "#":  23,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "~HoleWasVisited"          
          ]        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "PlayerState",
          "Pos.x":  240,
          "Pos.y":  600,
          "Parent":  -1,
          "#":  12,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "PiratesState",
          "Pos.x":  350,
          "Pos.y":  600,
          "Parent":  -1,
          "#":  13,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "PiratesAttack",
          "Pos.x":  350,
          "Pos.y":  650,
          "Parent":  -1,
          "#":  14,
          "Move":  2,
          "MoveObj":  8,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  8            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "GPirateHoleDate",
          "Pos.x":  350,
          "Pos.y":  480,
          "Parent":  -1,
          "#":  0,
          "Var.Type":  "Int",
          "Init":  "1460",
          "Global":  true        
        },
        {
          "Type":  "TVar",
          "Name":  "i",
          "Pos.x":  460,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  2,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint1",
          "Pos.x":  460,
          "Pos.y":  530,
          "Parent":  -1,
          "#":  17,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ship",
          "Pos.x":  520,
          "Pos.y":  610,
          "Parent":  -1,
          "#":  18,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tdwd1",
          "Pos.x":  520,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  19,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr1",
          "Pos.x":  600,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  20,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "HoleWasVisited",
          "Pos.x":  460,
          "Pos.y":  650,
          "Parent":  -1,
          "#":  21,
          "Var.Type":  "Int",
          "Init":  "-1",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "PiratesSpawned",
          "Pos.x":  460,
          "Pos.y":  670,
          "Parent":  -1,
          "#":  22,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "BlackHoleId",
          "Pos.x":  570,
          "Pos.y":  650,
          "Parent":  -1,
          "#":  24,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tdwd2",
          "Pos.x":  520,
          "Pos.y":  530,
          "Parent":  -1,
          "#":  25,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "check",
          "Pos.x":  460,
          "Pos.y":  590,
          "Parent":  -1,
          "#":  26,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tdwd3",
          "Pos.x":  520,
          "Pos.y":  550,
          "Parent":  -1,
          "#":  27,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint2",
          "Pos.x":  460,
          "Pos.y":  550,
          "Parent":  -1,
          "#":  28,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cnt",
          "Pos.x":  460,
          "Pos.y":  610,
          "Parent":  -1,
          "#":  29,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_star",
          "Pos.x":  520,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  30,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint3",
          "Pos.x":  460,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  31,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_hole",
          "Pos.x":  520,
          "Pos.y":  590,
          "Parent":  -1,
          "#":  32,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  4,
      "End":  3,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  6,
      "End":  5,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  7,
      "End":  3,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TStarLink",
      "Begin":  5,
      "End":  3,
      "Nom":  0,
      "Arrow":  false,
      "DistMin":  0,
      "DistMax":  149,
      "Hole":  false    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  9,
      "End":  6,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  8,
      "End":  4,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  8,
      "End":  12,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  9,
      "End":  13,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  14,
      "End":  16,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  13,
      "End":  15,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  23,
      "End":  11,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "BlockPar.EC.Total.Strings":  0,
  "BlockPar.EC":  
  [
  
  ]
}