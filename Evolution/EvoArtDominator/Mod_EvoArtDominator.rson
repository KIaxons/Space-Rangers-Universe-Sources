{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  302,
  "ViewPos.y":  -134,
  "ScriptName":"Mod_EvoArtDominator",
  "ScriptFileOut":"H:\\Mod_EvoArtDominator.scr",
  "ScriptTextOut":"H:\\Mod_EvoArtDominator.txt",
  "GraphPoint.Count":  79,
  "GraphLink.Count":  59,
  "GraphRectText.Count":  0,
  "Variables.Count":  15,
  "Stars.Count":  1,
  "Planets.Count":  1,
  "Ships.Count":  1,
  "States.Count":  1,
  "Groups.Count":  1,
  "Places.Count":  0,
  "Items.Count":  0,
  "Ethers.Count":  0,
  "Dialogs.Count":  4,
  "DialogMessages.Count":  5,
  "DialogAnswers.Count":  12,
  "Operations.Count":  26,
  "Statements.Count":  12,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "DialogAnswers":      
      [
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          1140,
          "Pos.y":          110,
          "Parent":          -1,
          "#":          24,
          "Msg":"<input>",
          "AMsg.Num":"0"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"exit",
          "Pos.x":          1300,
          "Pos.y":          80,
          "Parent":          -1,
          "#":          25,
          "Msg":"",
          "AMsg.Num":"1"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"restart",
          "Pos.x":          1300,
          "Pos.y":          100,
          "Parent":          -1,
          "#":          26,
          "Msg":"<input>",
          "AMsg.Num":"2"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"restart",
          "Pos.x":          1300,
          "Pos.y":          140,
          "Parent":          -1,
          "#":          27,
          "Msg":"<input>",
          "AMsg.Num":"3"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          1140,
          "Pos.y":          130,
          "Parent":          -1,
          "#":          28,
          "Msg":"<input>",
          "AMsg.Num":"4"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          1160,
          "Pos.y":          230,
          "Parent":          -1,
          "#":          43,
          "Msg":"<input>",
          "AMsg.Num":"5"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"restart",
          "Pos.x":          1160,
          "Pos.y":          250,
          "Parent":          -1,
          "#":          44,
          "Msg":"<input>",
          "AMsg.Num":"6"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"restart",
          "Pos.x":          1160,
          "Pos.y":          270,
          "Parent":          -1,
          "#":          45,
          "Msg":"<input>",
          "AMsg.Num":"7"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"restart",
          "Pos.x":          1140,
          "Pos.y":          190,
          "Parent":          -1,
          "#":          46,
          "Msg":"<input>",
          "AMsg.Num":"8"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"restart",
          "Pos.x":          1140,
          "Pos.y":          150,
          "Parent":          -1,
          "#":          47,
          "Msg":"<input>",
          "AMsg.Num":"9"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"block",
          "Pos.x":          1140,
          "Pos.y":          170,
          "Parent":          -1,
          "#":          48,
          "Msg":"<input>",
          "AMsg.Num":"10"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          1030,
          "Pos.y":          60,
          "Parent":          -1,
          "#":          71,
          "Msg":"<input>",
          "AMsg.Num":"11"        
        }      
      ],
      "DialogMessages":      
      [
        {
          "Type":"TDialogMsg",
          "Name":"",
          "Pos.x":          1050,
          "Pos.y":          140,
          "Parent":          -1,
          "#":          16,
          "Msg":"<input>",
          "DMsg.Num":"0"        
        },
        {
          "Type":"TDialogMsg",
          "Name":"",
          "Pos.x":          1230,
          "Pos.y":          110,
          "Parent":          -1,
          "#":          17,
          "Msg":"<input>",
          "DMsg.Num":"1"        
        },
        {
          "Type":"TDialogMsg",
          "Name":"",
          "Pos.x":          1160,
          "Pos.y":          60,
          "Parent":          -1,
          "#":          18,
          "Msg":"<input>",
          "DMsg.Num":"2"        
        },
        {
          "Type":"TDialogMsg",
          "Name":"",
          "Pos.x":          1080,
          "Pos.y":          240,
          "Parent":          -1,
          "#":          19,
          "Msg":"<input>",
          "DMsg.Num":"3"        
        },
        {
          "Type":"TDialogMsg",
          "Name":"",
          "Pos.x":          1080,
          "Pos.y":          270,
          "Parent":          -1,
          "#":          20,
          "Msg":"<input>",
          "DMsg.Num":"4"        
        }      
      ],
      "Dialogs":      
      [
        {
          "Type":"TDialog",
          "Name":"Remains",
          "Pos.x":          1210,
          "Pos.y":          40,
          "Parent":          -1,
          "#":          9        
        },
        {
          "Type":"TDialog",
          "Name":"ArtDominator",
          "Pos.x":          940,
          "Pos.y":          140,
          "Parent":          -1,
          "#":          10        
        },
        {
          "Type":"TDialog",
          "Name":"Arts",
          "Pos.x":          960,
          "Pos.y":          270,
          "Parent":          -1,
          "#":          11        
        },
        {
          "Type":"TDialog",
          "Name":"Moduls",
          "Pos.x":          960,
          "Pos.y":          230,
          "Parent":          -1,
          "#":          12        
        }      
      ],
      "Groups":      
      [
        {
          "Type":"TGroup",
          "Name":"PlayerGroup",
          "Pos.x":          700,
          "Pos.y":          200,
          "Parent":          -1,
          "#":          3,
          "Owner":          62,
          "Group.Type":          126,
          "CntShipMin":          1,
          "CntShipMax":          1,
          "SpeedMin":          100,
          "SpeedMax":          10000,
          "Weapon":          0,
          "CargoHook":          0,
          "EmptySpace":          0,
          "AddPlayer":true,
          "StatusTraderMin":          0,
          "StatusTraderMax":          100,
          "StatusWarriorMin":          0,
          "StatusWarriorMax":          100,
          "StatusPirateMin":          0,
          "StatusPirateMax":          100,
          "DistSearch":          10000,
          "Dialog":          -1,
          "StrengthMin":"0",
          "StrengthMax":"0",
          "Ruins":""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          790,
          "Pos.y":          140,
          "Parent":          -1,
          "#":          5,
          "Total.Lines":          1,
          "Code.Type":"Global",
          "Code":          
          [
"GRun();"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          790,
          "Pos.y":          160,
          "Parent":          -1,
          "#":          6,
          "Total.Lines":          83,
          "Code.Type":"Init",
          "Code":          
          [
"items = newarray(1);",
"RemainsCount = newarray(24); //количество доступных ошметков для изучения",
"RemainsGTL = newarray(24); //с какого ГТУ НБ сможет изучить ошмет",
"RemainsGDRP = newarray(24); //требуемый уровень исследования доминаторов",
"RemainsPercent = newarray(24); //процент изучения ошметка",
"SpeedResearch = newarray(24); //порог исследования",
"SpeedIndex = newarray(24); //скорость исследования;",
"for(i = 0; i <= 23; i = i + 1) RemainsCount[i] = 0;",
"RemainsGTL[0] = 2; //Координатор - Remains_0",
"RemainsGTL[1] = 3; //Стволовик - Remains_1",
"RemainsGTL[2] = 3; //Турбийон - Remains_2",
"RemainsGTL[3] = 2; //Спимер - Remains_3",
"RemainsGTL[4] = 1; //Инбридон - Remains_4",
"RemainsGTL[5] = 2; //Метаблок - Remains_5",
"RemainsGTL[6] = 4; //Гробот - Remains_6",
"RemainsGTL[7] = 4; //Энергопакет - Remains_7",
"RemainsGTL[8] = 4; //Базовая конструкция - Remains_8",
"RemainsGTL[9] = 3; //Стригер - Remains_9 (Блазер)",
"RemainsGTL[10] = 2; //Деструктуризатор - Remains_10 (Блазер)",
"RemainsGTL[11] = 1; //Аргент - Remains_11 (Блазер)",
"RemainsGTL[12] = 4; //Релектор - Remains_12 (Блазер)",
"RemainsGTL[13] = 3; //Рапторизатор - Remains_13 (Блазер)",
"RemainsGTL[14] = 1; //Бином Т-21/4 - Remains_14 (Келлер)",
"RemainsGTL[15] = 4; //Стабилитрон - Remains_15 (Келлер)",
"RemainsGTL[16] = 3; //Дестабилизатор - Remains_16 (Келлер)",
"RemainsGTL[17] = 2; //Спектрон - Remains_17 (Келлер)",
"RemainsGTL[18] = 3; //Мимикрон - Remains_18 (Келлер)",
"RemainsGTL[19] = 3; //Обогатитель - Remains_19 (Террон)",
"RemainsGTL[20] = 3; //Репродуктор - Remains_20 (Террон)",
"RemainsGTL[21] = 4; //Гнездотрон - Remains_21 (Террон)",
"RemainsGTL[22] = 1; //Акселирин - Remains_22 (Террон)",
"RemainsGTL[23] = 2; //Мичурер - Remains_23 (Террон);",
"RemainsGDRP[0] = 10; //Координатор - Remains_0",
"RemainsGDRP[1] = 15; //Стволовик - Remains_1",
"RemainsGDRP[2] = 20; //Турбийон - Remains_2",
"RemainsGDRP[3] = 25; //Спимер - Remains_3",
"RemainsGDRP[4] = 5; //Инбридон - Remains_4",
"RemainsGDRP[5] = 30; //Метаблок - Remains_5",
"RemainsGDRP[6] = 50; //Гробот - Remains_6",
"RemainsGDRP[7] = 35; //Энергопакет - Remains_7",
"RemainsGDRP[8] = 40; //Базовая конструкция - Remains_8",
"RemainsGDRP[9] = 40; //Стригер - Remains_9 (Блазер)",
"RemainsGDRP[10] = 50; //Деструктуризатор - Remains_10 (Блазер)",
"RemainsGDRP[11] = 20; //Аргент - Remains_11 (Блазер)",
"RemainsGDRP[12] = 60; //Релектор - Remains_12 (Блазер)",
"RemainsGDRP[13] = 30; //Рапторизатор - Remains_13 (Блазер)",
"RemainsGDRP[14] = 20; //Бином Т-21/4 - Remains_14 (Келлер)",
"RemainsGDRP[15] = 60; //Стабилитрон - Remains_15 (Келлер)",
"RemainsGDRP[16] = 40; //Дестабилизатор - Remains_16 (Келлер)",
"RemainsGDRP[17] = 30; //Спектрон - Remains_17 (Келлер)",
"RemainsGDRP[18] = 50; //Мимикрон - Remains_18 (Келлер)",
"RemainsGDRP[19] = 40; //Обогатитель - Remains_19 (Террон)",
"RemainsGDRP[20] = 50; //Репродуктор - Remains_20 (Террон)",
"RemainsGDRP[21] = 60; //Гнездотрон - Remains_21 (Террон)",
"RemainsGDRP[22] = 20; //Акселирин - Remains_22 (Террон)",
"RemainsGDRP[23] = 30; //Мичурер - Remains_23 (Террон);",
"for(i = 0; i <= 23; i = i + 1) RemainsPercent[i] = 0;",
"//RemainsPercent[4]=70;//Инбридон;",
"for(i = 0; i <= 23; i = i + 1) SpeedResearch[i] = 0;",
"SpeedIndex[0] = 30; //Координатор - Remains_0",
"SpeedIndex[1] = 35; //Стволовик - Remains_1",
"SpeedIndex[2] = 30; //Турбийон - Remains_2",
"SpeedIndex[3] = 35; //Спимер - Remains_3",
"SpeedIndex[4] = 45; //Инбридон - Remains_4",
"SpeedIndex[5] = 30; //Метаблок - Remains_5",
"SpeedIndex[6] = 35; //Гробот - Remains_6",
"SpeedIndex[7] = 35; //Энергопакет - Remains_7",
"SpeedIndex[8] = 30; //Базовая конструкция - Remains_8",
"SpeedIndex[9] = 30; //Стригер - Remains_9 (Блазер)",
"SpeedIndex[10] = 35; //Деструктуризатор - Remains_10 (Блазер)",
"SpeedIndex[11] = 30; //Аргент - Remains_11 (Блазер)",
"SpeedIndex[12] = 35; //Релектор - Remains_12 (Блазер)",
"SpeedIndex[13] = 30; //Рапторизатор - Remains_13 (Блазер)",
"SpeedIndex[14] = 30; //Бином Т-21/4 - Remains_14 (Келлер)",
"SpeedIndex[15] = 30; //Стабилитрон - Remains_15 (Келлер)",
"SpeedIndex[16] = 35; //Дестабилизатор - Remains_16 (Келлер)",
"SpeedIndex[17] = 35; //Спектрон - Remains_17 (Келлер)",
"SpeedIndex[18] = 30; //Мимикрон - Remains_18 (Келлер)",
"SpeedIndex[19] = 35; //Обогатитель - Remains_19 (Террон)",
"SpeedIndex[20] = 30; //Репродуктор - Remains_20 (Террон)",
"SpeedIndex[21] = 35; //Гнездотрон - Remains_21 (Террон)",
"SpeedIndex[22] = 30; //Акселирин - Remains_22 (Террон)",
"SpeedIndex[23] = 30; //Мичурер - Remains_23 (Террон);"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          790,
          "Pos.y":          180,
          "Parent":          -1,
          "#":          7,
          "Total.Lines":          72,
          "Code.Type":"Turn",
          "Code":          
          [
"//Проверка наличия НБ или их полного уничтожения",
"size = 1;",
"for(i = GalaxyEvents() - 1; i >= 0; i = i - 1)",
"{",
"    if(GalaxyEventDate(i) < CurTurn()) break; //если стали смотреть события других дней",
"    if(GalaxyEventType(i) == 'RuinsDestroyed')",
"    {",
"        if (GalaxyEventData(i, 0) == t_SB) { //уничтожена 'SB'",
"            for (variable = 0; variable < GalaxyStars(); variable = variable + 1)",
"            {",
"                if (StarOwner(GalaxyStar(variable)) != 0) continue; //система не принадлежит коалиции",
"                if (StarRuins(GalaxyStar(variable), 'SB'))",
"                {",
"                    size = 1;",
"                    exit; //не все научные базы уничтожены",
"                } else size = 0;",
"            }",
"        }",
"    }",
"}",
"if(size == 0)",
"{",
"    input = CT('FormRuins.SB.Scn2.EtherSBDestroyed');",
"    Ether(0, '', input);",
"    for(i = 0; i <= 2; i = i + 1)",
"    {",
"        if(GalaxyDominatorResearchPercent(i) < 100) GalaxyDominatorResearchPercent(i, Rnd(GalaxyDominatorResearchPercent(i) / 2, GalaxyDominatorResearchPercent(i)));",
"    }",
"    for(i = 0; i <= 23; i = i + 1)",
"    {",
"        if(RemainsCount[i] > 0) RemainsCount[i] = 0; //сданные ошметки",
"        if(RemainsPercent[i] < 100) RemainsPercent[i] = Rnd(RemainsPercent[i] / 3, RemainsPercent[i]); //процент изучения ошметка",
"        SpeedResearch[i] = 0; //порог исследования",
"    }",
"}",
"//Изучение ошметка",
"variable = 70 + 30 * (GalaxyDiffLevels(2) / 50 - 1); //ученые",
"size = (GalaxyDominatorResearchMaterial(0) + GalaxyDominatorResearchMaterial(1) + GalaxyDominatorResearchMaterial(2) + 50) / 3; //загруженность ученых",
"cost = 0; //к-во изучений (не более 5)",
"for(cur_item = 0; cur_item <= 5 - min(size, 200) / 100; cur_item = cur_item + 1)",
"{",
"    for(i = 0; i <= 23; i = i + 1)",
"    {",
"        if(i >= 0 && i <= 8) size = GalaxyDominatorResearchPercent();",
"        if(i > 8 && i <= 13) size = GalaxyDominatorResearchPercent(0);",
"        if(i > 13 && i <= 18) size = GalaxyDominatorResearchPercent(1);",
"        if(i > 18 && i <= 23) size = GalaxyDominatorResearchPercent(2);",
"        size = int((1.0 * RemainsGDRP[i]) / max(size, 1) + 0.9999);",
"        size = min(5 + 100 / max(size, 1), 100);",
"        if(RemainsPercent[i] < 100 / (max(RemainsGTL[i] - GalaxyTechLevel() + 1, 1)) && RemainsPercent[i] < size && RemainsCount[i] > 0)",
"        {",
"            SpeedResearch[i] = SpeedResearch[i] + SpeedIndex[i] + 1000 / GalaxyDiffLevels(7); //скорость исследования ошметов",
"            if(Rnd(0, 100) <= 10) RemainsCount[i] = RemainsCount[i] - 1; //уменьшение материала  variable/30 от умности ученых еще должно зависеть (32 у дом исслед)",
"            if(SpeedResearch[i] >= variable)",
"            {",
"                RemainsPercent[i] = RemainsPercent[i] + 1;",
"                if(RemainsPercent[i] == 100)",
"                {",
"                    input = '<color=255,240,100>' + CT('UselessItems.Remains_' + i + '.Name') + '</color> ';",
"                    Ether(0, '', input + CT('FormRuins.SB.Scn2.EtherExamine')); //звук выводить?",
"                    RemainsCount[i] = -1;",
"                    SpeedResearch[i] = 0;",
"                    continue;",
"                }",
"                SpeedResearch[i] = SpeedResearch[i] - variable;",
"            }",
"            cost = cost + 1;",
"            if(cost >= 5 - min((GalaxyDominatorResearchMaterial(0) + GalaxyDominatorResearchMaterial(1) + GalaxyDominatorResearchMaterial(2) + 50) / 3, 200) / 100) break;",
"        }",
"    }",
"    if(cost >= 5 - min((GalaxyDominatorResearchMaterial(0) + GalaxyDominatorResearchMaterial(1) + GalaxyDominatorResearchMaterial(2) + 50) / 3, 200) / 100) break;",
"}"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          790,
          "Pos.y":          200,
          "Parent":          -1,
          "#":          8,
          "Total.Lines":          11,
          "Code.Type":"DialogBegin",
          "Code":          
          [
"if(GetShipRuins(Player()))",
"{",
"    if(!PlayerBridge())",
"    {",
"        if(ShipType(GetShipRuins(Player())) == 'SB')",
"        {",
"            if(BlockExist('FormRuins.SB.Scn2')) AddDialogInject('ArtDominator', '', CT('FormRuins.SB.Scn2.PlayerAsk'), 1); //--Получение нового артефакта--}",
"            else SFT('Warning Mod_ArtDominator: Не найден раздел ...SB.Scn2, выдача артов невозможна');",
"        }",
"    }",
"}"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          1060,
          "Pos.y":          240,
          "Parent":          -1,
          "#":          13,
          "Total.Lines":          56,
          "Code.Type":"Turn",
          "Code":          
          [
"input = '<clrEnd>' + CT('FormRuins.SB.Scn2.SBModulInfo0') + ' ' + CT('UselessItems.Remains_' + variable + '.Name'); //исследуемый модуль:",
"",
"if(RemainsPercent[variable] == 100) input = input + \"<br>\" + CT('Artefacts.CustomArtefacts.ArtDominator-' + variable + '.DescriptionLow');",
"else input = input + \"<br>\" + CT('UselessItems.Remains_' + variable + '.Text'); //описание модуля",
"",
"input = input + \"<br>\" + CT('FormRuins.SB.Scn2.SBModulInfo'); //(черта)",
"",
"if(RemainsPercent[variable] < 100) input = input + \"<br>\" + CT('FormRuins.SB.Scn2.SBModulInfo1') + ' <color=255,240,100>' + RemainsCount[variable] + '</color> ' + CT('FormRuins.SB.Scn2.SBModulInfo1_'); //Колличество материала:",
"input = input + \"<br>\" + CT('FormRuins.SB.Scn2.SBModulInfo2') + ' <color=255,240,100>' + RemainsPercent[variable] + '</color>%'; //Процент исследования:",
"",
"input = input + \"<br>\" + CT('FormRuins.SB.Scn2.SBModulInfo'); //(черта)",
"if(RemainsPercent[variable] == 0 && SpeedResearch[variable] == 0) input = input + \"<br>\" + CT('FormRuins.SB.Scn2.SBModulNo'); //К исследованиям не приступали.",
"else",
"{",
"    if(RemainsPercent[variable] == 100) input = input + \"<br>\" + CT('FormRuins.SB.Scn2.SBModulEnd'); //Исследования успешно завершены.",
"    else",
"    {",
"        if(RemainsCount[variable] == 0) input = input + \"<br>\" + CT('FormRuins.SB.Scn2.SBModulMaterial'); //Исследования приостановлены, требуется материал для исследований.",
"        else",
"        {",
"            if(RemainsPercent[variable] >= 100 / max(RemainsGTL[variable] - GalaxyTechLevel() + 1, 1))",
"            {",
"                input = input + \"<br>\" + CT('FormRuins.SB.Scn2.SBModulGTL'); //Исследования приостановлены, необходимо новое технологическое оборудование для изучения.",
"            }",
"            else",
"            {",
"                if(variable >= 0 && variable <= 8) size = GalaxyDominatorResearchPercent();",
"                if(variable > 8 && variable <= 13) size = GalaxyDominatorResearchPercent(0);",
"                if(variable > 13 && variable <= 18) size = GalaxyDominatorResearchPercent(1);",
"                if(variable > 18 && variable <= 23) size = GalaxyDominatorResearchPercent(2);",
"                size = int((1.0 * RemainsGDRP[variable]) / max(size, 1) + 0.9999);",
"                size = min(5 + 100 / max(size, 1), 100);",
"                if(RemainsPercent[variable] >= size) input = input + \"<br>\" + CT('FormRuins.SB.Scn2.SBModulGDRP'); //Исследования приостановлены, необходимы оперативные данные из отделов антидоминаторских исследований.",
"                else input = input + \"<br>\" + CT('FormRuins.SB.Scn2.SBModulOk'); //Исследования ведутся.",
"            }",
"        }",
"    }",
"}",
"//возможность изготовления опытного образца",
"//доделать, это еще не все",
"//",
"//RemainsCount=newarray(24);//количество доступных ошметков для изучения",
"//RemainsGTL=newarray(24);//с какого ГТУ НБ сможет изучить ошмет",
"//RemainsGDRP=newarray(24);//требуемый уровень исследования доминаторов",
"//RemainsPercent=newarray(24);//процент изучения ошметка",
"//SpeedResearch=newarray(24);//порог исследования",
"//SpeedIndex=newarray(24);//скорость исследования",
"//дни исслед-я = variable * (100 - RemainsPercent[i]) / (SpeedIndex[i] + 500 / GalaxyDiffLevels(7));",
"//input = input + variable + ') ' + DeleteTags(ItemFullName(cur_item)) + ' за <clr>' + ItemCost(cur_item) + '<clrEnd> cr.' + \"<br>\";",
"cost = (0.8 * GalaxyMoney(2, ShipOwner(GetShipRuins(Player()))) + 1000) / 100; //стоимость преобразования ошметка в арт",
"cost = cost * 100;",
"if(RemainsPercent[variable] == 100)",
"{",
"    input = input + \"<br>\" + CT('FormRuins.SB.Scn2.SBRemainsToArt');",
"    input = input + \"<br>\" + CT('FormRuins.SB.Scn2.SBNeedCost') + ' <clr>' + cost + '<clrEnd> cr.';",
"}"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          1030,
          "Pos.y":          140,
          "Parent":          -1,
          "#":          14,
          "Total.Lines":          129,
          "Code.Type":"Turn",
          "Code":          
          [
"//заполняем массив ошметками",
"ArrayClear(items);",
"for(i = 0; i < ShipItems(Player()); i = i + 1)",
"{",
"    cur_item = ShipItems(Player(), i);",
"    if(ItemType(cur_item) == t_UselessItem && ItemOwner(cur_item) == Kling)",
"    {",
"        for(variable = 0; variable <= 23; variable = variable + 1)",
"        {",
"            if(findsubstr(Name(cur_item), CT('UselessItems.Remains_' + variable + '.Name')) == 0 && RemainsPercent[variable] < 100)",
"            {",
"                if(RemainsCount[variable] < 2 + (70 + 30 * (GalaxyDiffLevels(2) / 50 - 1)) * (100 - RemainsPercent[variable]) / (10 * (SpeedIndex[variable] + 1000 / GalaxyDiffLevels(7))))",
"                {",
"                    ArrayAdd(items, cur_item); //Remains_variable",
"                    break;",
"                }",
"            }",
"        }",
"    }",
"}",
"",
"variable = 0; //SFT('ArrayDim(RemainsCount) = '+ArrayDim(RemainsCount));",
"//Проверяем, изучен ли какой-нибудь ошметок",
"for(i = 1; i <= ArrayDim(RemainsCount); i = i + 1)",
"{",
"    if(RemainsCount[i - 1] == -1)",
"    {",
"        variable = i;",
"        RemainsCount[i - 1] = 0;",
"        break;",
"    }",
"}",
"//if(!(ArrayDim(items)-1)) SFT('Условие выполнилось !(ArrayDim(items)-1)');",
"//if(!variable) SFT('Условие выполнилось !variable');",
"if(variable > 0)",
"{ //ошметок изучен",
"    input = '<clrEnd>' + CT('FormRuins.SB.Scn2.SBModulInfo0') + ' ' + CT('UselessItems.Remains_' + (variable - 1) + '.Name'); //исследуемый модуль:",
"    input = input + \"<br>\" + CT('Artefacts.CustomArtefacts.ArtDominator-' + (variable - 1) + '.Description');",
"    input = input + \"<br>\" + CT('FormRuins.SB.Scn2.SBModulInfo');",
"    input = input + \"<br>\" + CT('FormRuins.SB.Scn2.SBArtPrize');",
"    input = input + \"<br>\" + CT('FormRuins.SB.Scn2.SBModulInfo');",
"    cost = CT('Artefacts.CustomArtefacts.ArtDominator-' + (variable - 1) + '.Cost');",
"    cost = cost * Rnd(2500, 3500) * (900 + GalaxyDiffLevels(1)) / 10000;",
"    size = CT('UselessItems.Remains_' + (variable - 1) + '.Size'); //SFT('Базовый вес ошметка = '+size);",
"    i = CT('Artefacts.CustomArtefacts.ArtDominator-' + (variable - 1) + '.Size+'); //базовая прибавка веса арта //SFT('Базовая прибавка веса арта = '+i);",
"    size = size + i; //SFT('Сумма весов = '+size); //SFT('Вес от сложности = '+size*(70+3*GalaxyDiffLevels(4)/10)/100);",
"    size = Rnd(3, 7) + size * (70 + 3 * GalaxyDiffLevels(4) / 10) / 100; //в зависимости от сложности оборудования //SFT('Итоговый вес с рандомом = '+size);",
"    cur_art = CreateCustomArt('ArtDominator-' + (variable - 1), size, cost, Kling);",
"    if(variable - 1 >= 0 && variable - 1 <= 8) ItemSubrace(cur_art, Rnd(0, 2));",
"    if(variable - 1 > 8 && variable - 1 <= 13) ItemSubrace(cur_art, 0);",
"    if(variable - 1 > 13 && variable - 1 <= 18) ItemSubrace(cur_art, 1);",
"    if(variable - 1 > 18 && variable - 1 <= 23) ItemSubrace(cur_art, 2);",
"    AddItemToShip(Player(), cur_art); //добавляем арт",
"    Sound('Sound.Buy');",
"    cost = 0;",
"    size = 1;",
"    cur_item = CT('Artefacts.CustomArtefacts.' + EquipmentImageName(cur_art) + '.Equipments');",
"    for(i = t_FuelTanks; i < t_FuelTanks + 7; i = i + 1) {",
"        size = size * 2;",
"        if((cur_item & size / 2) == size / 2)",
"        {",
"            if(i == t_FuelTanks)",
"            {",
"                if(max(GalaxyTechLevel() - 2, 1) == 1) cost = cost + 150; //220",
"                if(max(GalaxyTechLevel() - 2, 1) == 2) cost = cost + 500; //900",
"                if(max(GalaxyTechLevel() - 2, 1) == 3) cost = cost + 1250; //2020",
"                if(max(GalaxyTechLevel() - 2, 1) == 4) cost = cost + 2000; //3600",
"                if(max(GalaxyTechLevel() - 2, 1) == 5) cost = cost + 3000; //5620",
"                if(max(GalaxyTechLevel() - 2, 1) >= 6) cost = cost + 5000; //8100",
"            }",
"            else",
"            {",
"                if(max(GalaxyTechLevel() - 2, 1) == 1) cost = cost + 500; //1000",
"                if(max(GalaxyTechLevel() - 2, 1) == 2) cost = cost + 2000; //4000",
"                if(max(GalaxyTechLevel() - 2, 1) == 3) cost = cost + 4500; //9000",
"                if(max(GalaxyTechLevel() - 2, 1) == 4) cost = cost + 8000; //16000",
"                if(max(GalaxyTechLevel() - 2, 1) == 5) cost = cost + 12500; //25000",
"                if(max(GalaxyTechLevel() - 2, 1) >= 6) cost = cost + 18000; //36000",
"            }",
"        }",
"    }",
"    input = input + \"<br>\" + CT('FormRuins.SB.Scn2.SBFullSet') + ' <color=255,240,100>' + cost + '</color> cr.' + \"<br>\";",
"    input = input + CT('FormRuins.SB.Scn2.SBModulInfo');",
"    input = input + \"<br>\" + CT('FormRuins.SB.Scn2.SBPrize') + ' ' + CT('Artefacts.CustomArtefacts.ArtDominator-' + (variable - 1) + '.Name'); //Награда:",
"    input = input + ' (<color=255,240,100>' + ItemSize(cur_art) + '</color> ';",
"    input = input + CT('FormRuins.SB.Scn2.ItemSubrace' + ItemSubrace(cur_art));",
"}",
"else",
"{ //нет изученных ошметков variable=0",
"    input = '<clrEnd>' + CT('FormRuins.SB.Scn2.SBAnswer'); //стандартное приветствие",
"    input = input + \"<br>\";",
"    input = input + CT('FormRuins.SB.Scn2.SBSectionInfo'); //Перечень исследуемых модулей доминаторов:",
"    for(i = 0; i <= 23; i = i + 1)",
"    {",
"        variable = variable + 1; //для вывода пронумерованного списка",
"        input = input + variable + ') ' + CT('UselessItems.Remains_' + i + '.Name') + ' '; //вывод названия ошметка",
"        if(RemainsPercent[i] == 0 && SpeedResearch[i] == 0) input = input + '<clr>' + CT('FormRuins.SB.Scn2.Status_3') + '<clrEnd>'; //(не изучен)",
"        else",
"        {",
"            if(RemainsPercent[i] == 100) input = input + '<clr>' + CT('FormRuins.SB.Scn2.Status_1') + '<clrEnd>'; //(изучен)",
"            else",
"            {",
"                input = input + '<color=255,240,100>(' + RemainsPercent[i] + '</color>%, '; //вывод процента изучения",
"                if(RemainsCount[i] == 0) input = input + '<clr>' + CT('FormRuins.SB.Scn2.Status_4') + '<clrEnd>'; //(приостановлено) требуется материал для исследований.",
"                else",
"                {",
"                    if(RemainsPercent[i] >= 100 / max(RemainsGTL[i] - GalaxyTechLevel() + 1, 1))",
"                    {",
"                        input = input + '<clr>' + CT('FormRuins.SB.Scn2.Status_4') + '<clrEnd>'; //(приостановлено) необходимо новое технологическое оборудование для изучения.",
"                    }",
"                    else",
"                    {",
"                        if(i >= 0 && i <= 8) size = GalaxyDominatorResearchPercent();",
"                        if(i > 8 && i <= 13) size = GalaxyDominatorResearchPercent(0);",
"                        if(i > 13 && i <= 18) size = GalaxyDominatorResearchPercent(1);",
"                        if(i > 18 && i <= 23) size = GalaxyDominatorResearchPercent(2);",
"                        size = int((1.0 * RemainsGDRP[i]) / max(size, 1) + 0.9999);",
"                        size = min(5 + 100 / max(size, 1), 100);",
"                        if(RemainsPercent[i] >= size) input = input + '<clr>' + CT('FormRuins.SB.Scn2.Status_4') + '<clrEnd>'; //(приостановлено) необходимы оперативные данные из отделов антидоминаторских исследований.",
"                        else input = input + '<clr>' + CT('FormRuins.SB.Scn2.Status_2') + '<clrEnd>'; //(изучается)",
"                    }",
"                }",
"            }",
"        }",
"        input = input + \"<br>\";",
"    }",
"    input = input + CT('FormRuins.SB.Scn2.SBSectionInfoEnd');",
"    variable = 0;",
"}"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          1210,
          "Pos.y":          60,
          "Parent":          -1,
          "#":          15,
          "Total.Lines":          13,
          "Code.Type":"Turn",
          "Code":          
          [
"cur_item = GAnswerData;",
"for(variable = 0; variable <= 23; variable = variable + 1)",
"{",
"    if(findsubstr(Name(cur_item), CT('UselessItems.Remains_' + variable + '.Name')) == 0)",
"    {",
"        RemainsCount[variable] = RemainsCount[variable] + 1; //сдали ошметок",
"        GetItemFromShip(Player(), FindItemInShip(Player(), cur_item));",
"        FreeItem(cur_item);",
"        ArrayDelete(items, ArrayFind(items, cur_item));",
"        break;",
"    }",
"}",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          1050,
          "Pos.y":          60,
          "Parent":          -1,
          "#":          21,
          "Total.Lines":          5,
          "Code.Type":"Turn",
          "Code":          
          [
"for(i = 0; i <= 23; i = i + 1)",
"{",
"    InjectAnswer('Moduls', '</color>' + CT('UselessItems.Remains_' + i + '.Name'), i);",
"}",
"input = '</color>' + CT('FormRuins.SB.Scn2.PlayerSectionBack'); //назад;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          1120,
          "Pos.y":          240,
          "Parent":          -1,
          "#":          22,
          "Total.Lines":          21,
          "Code.Type":"Turn",
          "Code":          
          [
"if(RemainsPercent[variable] == 100)",
"{",
"    ArrayClear(items);",
"    for(i = 0; i < ShipItems(Player()); i = i + 1)",
"    {",
"        cur_item = ShipItems(Player(), i);",
"        if(ItemType(cur_item) == t_UselessItem && ItemOwner(cur_item) == Kling)",
"        {",
"            if (findsubstr(Name(cur_item), CT('UselessItems.Remains_' + variable + '.Name')) == 0) ArrayAdd(items, cur_item); //Remains_variable",
"        }",
"    }",
"    for(i = 1; i < ArrayDim(items); i = i + 1)",
"    {",
"        cur_item = items[i];",
"        input = ' (<color=255,240,100>' + ItemSize(cur_item) + '</color> ';",
"        input = input + CT('FormRuins.SB.Scn2.ItemSubrace' + ItemSubrace(cur_item));",
"        //AddDialogBlock();",
"        //if (ShipMoney(Player())<100000) AddDialogBlock('Координатор',1);",
"        InjectAnswer('Arts', '</color>' + CT('UselessItems.Remains_' + variable + '.Name') + input, cur_item);",
"    }",
"}"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          1140,
          "Pos.y":          270,
          "Parent":          -1,
          "#":          23,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"input = '</color>' + CT('FormRuins.SB.Scn2.PlayerBuyArtNo'); //Хорошо, приду в другой раз;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          1160,
          "Pos.y":          130,
          "Parent":          -1,
          "#":          29,
          "Total.Lines":          37,
          "Code.Type":"Turn",
          "Code":          
          [
"input = '<clrEnd>' + CT('FormRuins.SB.Scn2.SBSectionInfo'); //Мы ведем работу над изучением следующих модулей доминаторов:",
"variable = 0;",
"for(i = 0; i <= 23; i = i + 1)",
"{",
"    variable = variable + 1; //для вывода пронумерованного списка",
"    input = input + variable + ') ' + CT('UselessItems.Remains_' + i + '.Name') + ' '; //вывод названия ошметка",
"    if(RemainsPercent[i] == 0 && SpeedResearch[i] == 0) input = input + '<clr>' + CT('FormRuins.SB.Scn2.Status_3') + '<clrEnd>'; //(не изучен)",
"    else",
"    {",
"        if(RemainsPercent[i] == 100) input = input + '<clr>' + CT('FormRuins.SB.Scn2.Status_1') + '<clrEnd>'; //(изучен)",
"        else",
"        {",
"            input = input + '<color=255,240,100>(' + RemainsPercent[i] + '</color>%, '; //вывод процента изучения",
"            if(RemainsCount[i] == 0) input = input + '<clr>' + CT('FormRuins.SB.Scn2.Status_4') + '<clrEnd>'; //(приостановлено) требуется материал для исследований.",
"            else",
"            {",
"                if(RemainsPercent[i] >= 100 / max(RemainsGTL[i] - GalaxyTechLevel() + 1, 1))",
"                {",
"                    input = input + '<clr>' + CT('FormRuins.SB.Scn2.Status_4') + '<clrEnd>'; //(приостановлено) необходимо новое технологическое оборудование для изучения.",
"                }",
"                else",
"                {",
"                    if(i >= 0 && i <= 8) size = GalaxyDominatorResearchPercent();",
"                    if(i > 8 && i <= 13) size = GalaxyDominatorResearchPercent(0);",
"                    if(i > 13 && i <= 18) size = GalaxyDominatorResearchPercent(1);",
"                    if(i > 18 && i <= 23) size = GalaxyDominatorResearchPercent(2);",
"                    size = int((1.0 * RemainsGDRP[i]) / max(size, 1) + 0.9999);",
"                    size = min(5 + 100 / max(size, 1), 100);",
"                    if(RemainsPercent[i] >= size) input = input + '<clr>' + CT('FormRuins.SB.Scn2.Status_4') + '<clrEnd>'; //(приостановлено) необходимы оперативные данные из отделов антидоминаторских исследований.",
"                    else input = input + '<clr>' + CT('FormRuins.SB.Scn2.Status_2') + '<clrEnd>'; //(изучается)",
"                }",
"            }",
"        }",
"    }",
"    input = input + \"<br>\";",
"}",
"//input=input+CT('FormRuins.SB.Scn2.SBSectionInfoEnd');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          1360,
          "Pos.y":          100,
          "Parent":          -1,
          "#":          30,
          "Total.Lines":          19,
          "Code.Type":"Turn",
          "Code":          
          [
"for(i = 1; i < ArrayDim(items); i = i + 1)",
"{",
"    cur_item = items[i];",
"    for(variable = 0; variable <= 23; variable = variable + 1)",
"    {",
"        if(findsubstr(Name(cur_item), CT('UselessItems.Remains_' + variable + '.Name')) == 0)",
"        {",
"            if(RemainsCount[variable] < 2 + (70 + 30 * (GalaxyDiffLevels(2) / 50 - 1)) * (100 - RemainsPercent[variable]) / (10 * (SpeedIndex[variable] + 1000 / GalaxyDiffLevels(7))))",
"            {",
"                RemainsCount[variable] = RemainsCount[variable] + 1;",
"                GetItemFromShip(Player(), FindItemInShip(Player(), cur_item));",
"                FreeItem(cur_item);",
"            }",
"            break;",
"        }",
"    }",
"}",
"ArrayClear(items);",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          1210,
          "Pos.y":          110,
          "Parent":          -1,
          "#":          31,
          "Total.Lines":          31,
          "Code.Type":"Turn",
          "Code":          
          [
"//создание массива ошметков для сдачи",
"ArrayClear(items);",
"input = '<clrEnd>' + CT('FormRuins.SB.Scn2.SBSeeItems'); //...вот список того, что нам не помешало бы иметь:",
"for(i = 0; i < ShipItems(Player()); i = i + 1)",
"{",
"    cur_item = ShipItems(Player(), i);",
"    if(ItemType(cur_item) == t_UselessItem && ItemOwner(cur_item) == Kling)",
"    {",
"        for(variable = 0; variable <= 23; variable = variable + 1)",
"        {",
"            if(findsubstr(Name(cur_item), CT('UselessItems.Remains_' + variable + '.Name')) == 0 && RemainsPercent[variable] < 100)",
"            {",
"                if(RemainsCount[variable] < 2 + (70 + 30 * (GalaxyDiffLevels(2) / 50 - 1)) * (100 - RemainsPercent[variable]) / (10 * (SpeedIndex[variable] + 1000 / GalaxyDiffLevels(7))))",
"                {",
"                    ArrayAdd(items, cur_item); //Remains_variable",
"                    break;",
"                }",
"            }",
"        }",
"    }",
"}",
"variable = 0;",
"for(i = 1; i < ArrayDim(items); i = i + 1)",
"{",
"    cur_item = items[i];",
"    variable = variable + 1; //для вывода пронумерованного списка",
"    input = input + variable + ') ' + DeleteTags(ItemFullName(cur_item)) + ' (<color=255,240,100>' + ItemSize(cur_item) + '</color> ' + CT('FormRuins.SB.Scn2.ItemSubrace' + ItemSubrace(cur_item)) + \"<br>\";",
"    //может тут серию и вес выводить?",
"}",
"if((ArrayDim(items) - 1)) input = input + CT('FormRuins.SB.Scn2.SBSeeItemsHaveItems'); //Какие из этих предметов вы намерены безвозмездно передать нашему отделу?",
"else input = input + CT('FormRuins.SB.Scn2.SBSeeItemsNotHaveItems'); //Извините, но мы не нашли никаких доминаторских модулей, которые можно было бы исследовать.;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          1200,
          "Pos.y":          150,
          "Parent":          -1,
          "#":          49,
          "Total.Lines":          67,
          "Code.Type":"Turn",
          "Code":          
          [
"size = 1;",
"variable = CT('Artefacts.CustomArtefacts.' + EquipmentImageName(cur_art) + '.Equipments');",
"for(i = t_FuelTanks; i < t_FuelTanks + 7; i = i + 1)",
"{",
"    size = size * 2;",
"    if ((variable & size / 2) == size / 2)",
"    {",
"        if(i == t_FuelTanks)",
"        {",
"            cur_item = CreateEquipment(t_FuelTanks, 20, max(GalaxyTechLevel() - 2, 1), Kling);",
"            SetEquipmentStats(cur_item, 50 * GetEquipmentStats(cur_item, 0) / 100, 0); //Топливо*[0.50]",
"            ContainerFuel(cur_item, GetEquipmentStats(cur_item, 0)); //топлива больше чем емкость бака?",
"            ItemCost(cur_item, ItemCost(cur_item) / 2);",
"            ItemSize(cur_item, Rnd(ItemSize(cur_item) / 2, ItemSize(cur_item)));",
"        }",
"        if(i == t_Engine)",
"        {",
"            cur_item = CreateEquipment(t_Engine, 18, max(GalaxyTechLevel() - 2, 1), Kling);",
"            SetEquipmentStats(cur_item, 80 * GetEquipmentStats(cur_item, 0) / 100, 0); //Скорость*[0.8]",
"            SetEquipmentStats(cur_item, 60 * GetEquipmentStats(cur_item, 1) / 100, 1); //Прыжок*[0.6] двигатель (0-скорость, 1-дальность прыжка)",
"            ItemCost(cur_item, ItemCost(cur_item) / 2);",
"            ItemSize(cur_item, Rnd(ItemSize(cur_item) / 2, ItemSize(cur_item)));",
"        }",
"        if(i == t_Radar)",
"        {",
"            cur_item = CreateEquipment(t_Radar, 15, max(GalaxyTechLevel() - 2, 1), Kling);",
"            SetEquipmentStats(cur_item, 20 * GetEquipmentStats(cur_item, 0) / 100, 0); //Радиус*[0.20]",
"            ItemCost(cur_item, ItemCost(cur_item) / 2);",
"            ItemSize(cur_item, Rnd(ItemSize(cur_item) / 2, ItemSize(cur_item)));",
"        }",
"        if(i == t_Scaner)",
"        {",
"            cur_item = CreateEquipment(t_Scaner, 15, max(GalaxyTechLevel() - 2, 1), Kling);",
"            SetEquipmentStats(cur_item, 60 * GetEquipmentStats(cur_item, 0) / 100, 0); //Сканер*[0.60]",
"            ItemCost(cur_item, ItemCost(cur_item) / 2);",
"            ItemSize(cur_item, Rnd(ItemSize(cur_item) / 2, ItemSize(cur_item)));",
"        }",
"        if(i == t_RepairRobot)",
"        {",
"            cur_item = CreateEquipment(t_RepairRobot, 20, max(GalaxyTechLevel() - 2, 1), Kling);",
"            SetEquipmentStats(cur_item, 70 * GetEquipmentStats(cur_item, 0) / 100, 0); //Дроид*[0.7]",
"            ItemCost(cur_item, ItemCost(cur_item) / 2);",
"            ItemSize(cur_item, Rnd(ItemSize(cur_item) / 2, ItemSize(cur_item)));",
"        }",
"        if(i == t_CargoHook)",
"        {",
"            cur_item = CreateEquipment(t_CargoHook, 20, max(GalaxyTechLevel() - 2, 1), Kling);",
"            SetEquipmentStats(cur_item, 80 * GetEquipmentStats(cur_item, 0) / 100, 0); //Мощность*[0.8]",
"            SetEquipmentStats(cur_item, 60 * GetEquipmentStats(cur_item, 1) / 100, 1); //Дальность*[0.6]захват (0-мощность, 1-дальность)",
"            ItemCost(cur_item, ItemCost(cur_item) / 2);",
"            ItemSize(cur_item, Rnd(ItemSize(cur_item) / 2, ItemSize(cur_item)));",
"        }",
"        if(i == t_DefGenerator)",
"        {",
"            cur_item = CreateEquipment(t_DefGenerator, 20, max(GalaxyTechLevel() - 2, 1), Kling);",
"            SetEquipmentStats(cur_item, 70 * GetEquipmentStats(cur_item, 0) / 100, 0); //Защита*[0.7]",
"            ItemCost(cur_item, ItemCost(cur_item) / 2);",
"            ItemSize(cur_item, Rnd(ItemSize(cur_item) / 2, ItemSize(cur_item)));",
"        }",
"        ItemSubrace(cur_item, ItemSubrace(cur_art)); //Оборудование серии выданного арта",
"        ItemDurability(cur_item, Rnd(30, 90));",
"        AddItemToShip(Player(), cur_item);",
"        ItemIsInUse(cur_item, Player(), 1);",
"    }",
"}",
"ShipMoney(Player(), ShipMoney(Player()) - cost); //извлечение денег",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          1140,
          "Pos.y":          230,
          "Parent":          -1,
          "#":          54,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"input = '</color>' + CT('FormRuins.SB.Scn2.PlayerSectionBack'); //назад;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          1140,
          "Pos.y":          250,
          "Parent":          -1,
          "#":          55,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"input = '</color>' + CT('FormRuins.SB.Scn2.PlayerNo'); //Покинуть отдел исследования;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          1280,
          "Pos.y":          100,
          "Parent":          -1,
          "#":          59,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"input = '</color>' + CT('FormRuins.SB.Scn2.PlayerSaleAllArts'); //Сдать все модули;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          1280,
          "Pos.y":          140,
          "Parent":          -1,
          "#":          60,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"input = '</color>' + CT('FormRuins.SB.Scn2.PlayerSaleNoArts'); //не могу дать модули;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          1280,
          "Pos.y":          120,
          "Parent":          -1,
          "#":          61,
          "Total.Lines":          16,
          "Code.Type":"Turn",
          "Code":          
          [
"//сдача ошметков на исследование поштучно",
"for(i = 1; i < ArrayDim(items); i = i + 1)",
"{",
"    cur_item = items[i];",
"    for(variable = 0; variable <= 23; variable = variable + 1)",
"    {",
"        if(findsubstr(Name(cur_item), CT('UselessItems.Remains_' + variable + '.Name')) == 0)",
"        {",
"            if(RemainsCount[variable] < 2 + (70 + 30 * (GalaxyDiffLevels(2) / 50 - 1)) * (100 - RemainsPercent[variable]) / (10 * (SpeedIndex[variable] + 1000 / GalaxyDiffLevels(7))))",
"            {",
"                input = '</color>' + DeleteTags(ItemFullName(cur_item)) + ' (<color=255,240,100>' + ItemSize(cur_item) + '</color> ' + CT('FormRuins.SB.Scn2.ItemSubrace' + ItemSubrace(cur_item));",
"                InjectAnswer('Remains', input, cur_item);",
"            }",
"        }",
"    }",
"}"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          1100,
          "Pos.y":          190,
          "Parent":          -1,
          "#":          65,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"input = '</color>' + CT('FormRuins.SB.Scn2.PlayerNo'); //Покинуть отдел исследований;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          1100,
          "Pos.y":          110,
          "Parent":          -1,
          "#":          66,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"input = '</color>' + CT('FormRuins.SB.Scn2.PlayerPassArts'); //Сдать модули на исследование;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          1100,
          "Pos.y":          150,
          "Parent":          -1,
          "#":          67,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"input = '</color>' + CT('FormRuins.SB.Scn2.FullSetSubrace' + ItemSubrace(cur_art)); //Покупаю полный комплект оборудки;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          1100,
          "Pos.y":          130,
          "Parent":          -1,
          "#":          68,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"input = '</color>' + CT('FormRuins.SB.Scn2.PlayerToArts'); //Преобразовать модули;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          1060,
          "Pos.y":          270,
          "Parent":          -1,
          "#":          74,
          "Total.Lines":          2,
          "Code.Type":"Turn",
          "Code":          
          [
"input = '<clrEnd>' + CT('FormRuins.SB.Scn2.SBNeedCostArt');",
"    //<Player> у вас не достаточно денежных средств для изготовления опытного образца.;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          1040,
          "Pos.y":          230,
          "Parent":          -1,
          "#":          77,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"variable = GAnswerData;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          1040,
          "Pos.y":          250,
          "Parent":          -1,
          "#":          78,
          "Total.Lines":          22,
          "Code.Type":"Turn",
          "Code":          
          [
"cur_item = GAnswerData;",
"cost = CT('Artefacts.CustomArtefacts.ArtDominator-' + variable + '.Cost');",
"cost = cost * Rnd(2500, 3500) * (900 + GalaxyDiffLevels(1)) / 10000;",
"size = ItemSize(cur_item); //CT('UselessItems.Remains_' + variable + '.Size');//тут должен быть вес ошметка//SFT('вес ошметка = ' + size);",
"i = CT('Artefacts.CustomArtefacts.ArtDominator-' + variable + '.Size+'); //базовая прибавка веса арта//SFT('прибавка веса арта = ' + i);",
"size = size + i; //SFT('вес сумма = ' + size);",
"size = Rnd(0, 2) + size * (70 + 3 * GalaxyDiffLevels(4) / 10) / 100;",
"//SFT('вес итого по формуле (0..2) + (вес.ошмет+вес.прибавл) * (70 + 3 * слож.обор / 10) / 100 = ' + size);",
"//i = CT('Artefacts.CustomArtefacts.ArtDominator-' + variable + '.Size');//базовый размер арта",
"//size = CT('UselessItems.Remains_' + variable + '.Size');//тут должен быть вес ошметка",
"//size = ItemSize(cur_item);",
"//Итоговый размер ошметка получается как Size + (0..Size) * (0.5..3).",
"//Здесь Size - то, что в датнике прописано, 0..Size - рандом, 0.5..3 - в зависимости от ГТУ (0.5 на ГТУ 4 и ниже, 3 на ГТУ 8).",
"//if(size < i - 1) size = i + (GalaxyDiffLevels(4) / 40) - 1;//зависит от сложности оборудования",
"//else size = size + Rnd(2, 6) + (GalaxyDiffLevels(4) / 40);",
"cur_art = CreateCustomArt('ArtDominator-' + variable, size, cost, Kling);",
"ItemSubrace(cur_art, ItemSubrace(cur_item)); //раса должна быть как у ошметка",
"AddItemToShip(Player(), cur_art); //добавляем арт",
"GetItemFromShip(Player(), FindItemInShip(Player(), cur_item)); //изымаем ошмет",
"FreeItem(cur_item); //удаляем ошмет",
"Sound('Sound.Buy');",
"ShipMoney(Player(), ShipMoney(Player()) - cost);"          
          ]        
        }      
      ],
      "Planets":      
      [
        {
          "Type":"TPlanet",
          "Name":"PlanetNew",
          "Pos.x":          700,
          "Pos.y":          180,
          "Parent":          -1,
          "#":          1,
          "Race":          62,
          "Owner":          62,
          "Economy":          14,
          "Goverment":          62,
          "RangeMin":          0,
          "RangeMax":          100,
          "Dialog":          -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":"TStarShip",
          "Name":"",
          "Pos.x":          700,
          "Pos.y":          140,
          "Parent":          -1,
          "#":          2,
          "Count":          1,
          "Owner":          62,
          "Ship.Type":          126,
          "Player":true,
          "SpeedMin":          0,
          "SpeedMax":          10000,
          "Weapon":          0,
          "CargoHook":          0,
          "EmptySpace":          0,
          "StatusTraderMin":          0,
          "StatusTraderMax":          100,
          "StatusWarriorMin":          0,
          "StatusWarriorMax":          100,
          "StatusPirateMin":          0,
          "StatusPirateMax":          100,
          "StrengthMin":"0",
          "StrengthMax":"0",
          "Ruins":""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":"TStar",
          "Name":"StarNew",
          "Pos.x":          700,
          "Pos.y":          160,
          "Parent":          -1,
          "#":          0,
          "Constellation":          0,
          "Priority":          0,
          "NoKling":false,
          "NoComeKling":false        
        }      
      ],
      "Statements":      
      [
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          1260,
          "Pos.y":          80,
          "Parent":          -1,
          "#":          56,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"!(ArrayDim(items) - 1)"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          1260,
          "Pos.y":          100,
          "Parent":          -1,
          "#":          57,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"(ArrayDim(items) - 1) > 1"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          1260,
          "Pos.y":          140,
          "Parent":          -1,
          "#":          58,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"ArrayDim(items) - 1"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          1080,
          "Pos.y":          130,
          "Parent":          -1,
          "#":          62,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"!variable"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          1080,
          "Pos.y":          150,
          "Parent":          -1,
          "#":          63,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"variable"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          1080,
          "Pos.y":          110,
          "Parent":          -1,
          "#":          64,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"(ArrayDim(items) - 1) > 0 && !variable"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          1120,
          "Pos.y":          150,
          "Parent":          -1,
          "#":          69,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"ShipMoney(Player()) >= cost"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          1120,
          "Pos.y":          170,
          "Parent":          -1,
          "#":          70,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"ShipMoney(Player()) < cost"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          1020,
          "Pos.y":          250,
          "Parent":          -1,
          "#":          72,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"ShipMoney(Player()) >= cost"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          1020,
          "Pos.y":          270,
          "Parent":          -1,
          "#":          73,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"ShipMoney(Player()) < cost"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          1080,
          "Pos.y":          190,
          "Parent":          -1,
          "#":          75,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"1"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          1260,
          "Pos.y":          120,
          "Parent":          -1,
          "#":          76,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"1"          
          ]        
        }      
      ],
      "States":      
      [
        {
          "Type":"TState",
          "Name":"PlayerState",
          "Pos.x":          700,
          "Pos.y":          220,
          "Parent":          -1,
          "#":          4,
          "Move":          0,
          "MoveObj":          -1,
          "Attack.Count":          0,
          "TakeItem":          -1,
          "TakeAllItem":false,
          "OnTalk":"",
          "OnActCode":"",
          "EType":          1,
          "EUnique":"",
          "EMsg":""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":"TVar",
          "Name":"GArtDominatorTest",
          "Pos.x":          700,
          "Pos.y":          270,
          "Parent":          -1,
          "#":          32,
          "Var.Type":"Dword",
          "Init":"",
          "Global":true        
        },
        {
          "Type":"TVar",
          "Name":"SpeedResearch",
          "Pos.x":          700,
          "Pos.y":          430,
          "Parent":          -1,
          "#":          33,
          "Var.Type":"Unknown",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"RemainsCount",
          "Pos.x":          700,
          "Pos.y":          350,
          "Parent":          -1,
          "#":          34,
          "Var.Type":"Unknown",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"RemainsGTL",
          "Pos.x":          700,
          "Pos.y":          370,
          "Parent":          -1,
          "#":          35,
          "Var.Type":"Unknown",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"RemainsGDRP",
          "Pos.x":          700,
          "Pos.y":          390,
          "Parent":          -1,
          "#":          36,
          "Var.Type":"Unknown",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"RemainsPercent",
          "Pos.x":          700,
          "Pos.y":          410,
          "Parent":          -1,
          "#":          37,
          "Var.Type":"Unknown",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"cost",
          "Pos.x":          820,
          "Pos.y":          430,
          "Parent":          -1,
          "#":          38,
          "Var.Type":"Dword",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"cur_art",
          "Pos.x":          820,
          "Pos.y":          350,
          "Parent":          -1,
          "#":          39,
          "Var.Type":"Dword",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"cur_item",
          "Pos.x":          820,
          "Pos.y":          370,
          "Parent":          -1,
          "#":          40,
          "Var.Type":"Dword",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"variable",
          "Pos.x":          820,
          "Pos.y":          390,
          "Parent":          -1,
          "#":          41,
          "Var.Type":"Dword",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"size",
          "Pos.x":          820,
          "Pos.y":          410,
          "Parent":          -1,
          "#":          42,
          "Var.Type":"Dword",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"SpeedIndex",
          "Pos.x":          700,
          "Pos.y":          450,
          "Parent":          -1,
          "#":          50,
          "Var.Type":"Unknown",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"input",
          "Pos.x":          700,
          "Pos.y":          300,
          "Parent":          -1,
          "#":          51,
          "Var.Type":"Str",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"i",
          "Pos.x":          820,
          "Pos.y":          330,
          "Parent":          -1,
          "#":          52,
          "Var.Type":"Int",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"items",
          "Pos.x":          700,
          "Pos.y":          330,
          "Parent":          -1,
          "#":          53,
          "Var.Type":"Unknown",
          "Init":"",
          "Global":false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":"TGraphLink",
      "Begin":      2,
      "End":      0,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      1,
      "End":      0,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      3,
      "End":      1,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      3,
      "End":      4,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      10,
      "End":      14,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      9,
      "End":      15,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      18,
      "End":      21,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      19,
      "End":      22,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      20,
      "End":      23,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      24,
      "End":      31,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      26,
      "End":      30,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      28,
      "End":      29,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      47,
      "End":      49,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      31,
      "End":      17,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      29,
      "End":      18,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      23,
      "End":      45,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      22,
      "End":      54,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      22,
      "End":      55,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      54,
      "End":      43,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      55,
      "End":      44,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      57,
      "End":      59,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      58,
      "End":      60,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      60,
      "End":      27,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      56,
      "End":      25,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      59,
      "End":      26,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      63,
      "End":      67,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      67,
      "End":      69,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      67,
      "End":      70,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      64,
      "End":      66,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      62,
      "End":      68,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      66,
      "End":      24,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      68,
      "End":      28,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      69,
      "End":      47,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      70,
      "End":      48,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      65,
      "End":      46,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      21,
      "End":      71,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      14,
      "End":      16,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      13,
      "End":      19,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      73,
      "End":      74,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      74,
      "End":      20,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      11,
      "End":      72,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      11,
      "End":      73,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      75,
      "End":      65,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      43,
      "End":      29,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      15,
      "End":      31,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      76,
      "End":      61,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      71,
      "End":      14,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      12,
      "End":      77,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      77,
      "End":      13,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      72,
      "End":      78,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      78,
      "End":      13,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      16,
      "End":      64,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      16,
      "End":      62,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      16,
      "End":      63,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      16,
      "End":      75,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      17,
      "End":      56,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      17,
      "End":      57,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      17,
      "End":      76,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      17,
      "End":      58,
      "Nom":      0,
      "Arrow":true    
    }  
  ],
  "BlockPar.EC.Total.Strings":  2,
  "BlockPar.EC":  
  [
    {
      "#":"1",
      "String":"<0>"    
    },
    {
      "#":"2",
      "String":"<br>"    
    }  
  ]
}