{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -313,
  "ViewPos.y":  131,
  "ScriptName":  "Mod_EvoArmada",
  "ScriptFileOut":  "H:\\Mod_EvoArmada.scr",
  "ScriptTextOut":  "H:\\Mod_EvoArmada.txt",
  "GraphPoint.Count":  75,
  "GraphLink.Count":  38,
  "GraphRectText.Count":  0,
  "Variables.Count":  30,
  "Stars.Count":  1,
  "Planets.Count":  1,
  "Ships.Count":  1,
  "States.Count":  11,
  "Groups.Count":  4,
  "Places.Count":  3,
  "Items.Count":  0,
  "Ethers.Count":  0,
  "Dialogs.Count":  0,
  "DialogMessages.Count":  0,
  "DialogAnswers.Count":  0,
  "Operations.Count":  12,
  "Statements.Count":  12,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "Dreadnought",
          "Pos.x":  160,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  12,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "PlayerGroup",
          "Pos.x":  420,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  46,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "PirateGalleon",
          "Pos.x":  420,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  55,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "PirateFrigate",
          "Pos.x":  420,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  66,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  580,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  3,
          "Total.Lines":  1,
          "Code.Type":  "Global",
          "Code":          
          [
              "GRun();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  600,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  4,
          "Total.Lines":  1113,
          "Code.Type":  "Init",
          "Code":          
          [
              "//Вешаем на игрока инфошку для подсветки числа батарейных орудий на многопушечных кораблях",
              "ShipAddCustomShipInfo(Player(), 'GunBatteryLabelsSwitcher');",
              "",
              "//Запоминаем текущий ГТУ, который часто используется в различных функциях",
              "GTL = GalaxyTechLevel();",
              "//Также запоминаем общий уровень сложности, который будет использован в функции усиления кораблей",
              "GeneralDiffLevel = GalaxyDiffLevels() / 50;",
              "",
              "//Выставляем маркер о том, что был подключён мод ShuDomiks",
              "if(BlockExist('Script.Mod_ShuDomiks')) ShuDomiksInit = 1;",
              "",
              "//Усиливаем доминаторских боссов",
              "cur_ship = Blazer();",
              "if(cur_ship)",
              "{",
              "    dwd0 = ShipItems(cur_ship, 0);",
              "    ItemExtraSpecialsAddByType(dwd0, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "    //Вешаем Блазеру бонус на силу всех типов орудий и усиливаем броню",
              "    tint = (2 * GeneralDiffLevel) + 10;",
              "    ItemExtraSpecialsAddByType(dwd0, FindBonusByNameInCfg('EvoArmada_bonWEnergy'), tint);",
              "    ItemExtraSpecialsAddByType(dwd0, FindBonusByNameInCfg('EvoArmada_bonWSplinter'), tint);",
              "    ItemExtraSpecialsAddByType(dwd0, FindBonusByNameInCfg('EvoArmada_bonWMissile'), tint);",
              "    SetEquipmentStats(dwd0, GetEquipmentStats(dwd0, 0) + (GeneralDiffLevel + 5), 0);",
              "    //Увеличиваем размер корпуса Блазера",
              "    ItemSize(dwd0, round(ItemSize(dwd0) * (1.0 + (0.5 * GeneralDiffLevel))));",
              "    HullHP(dwd0, ItemSize(dwd0));",
              "",
              "    //Также увеличиваем число его залпов",
              "    ShipSpecialBonuses(cur_ship, bonAttacks, 6);",
              "}",
              "cur_ship = Keller();",
              "if(cur_ship)",
              "{",
              "    dwd0 = ShipItems(cur_ship, 0);",
              "    ItemExtraSpecialsAddByType(dwd0, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "    //Вешаем Келлеру бонус на эффективность дроида и ГЗП",
              "    tint = 10 * GeneralDiffLevel + 50;",
              "    ItemExtraSpecialsAddByType(dwd0, FindBonusByNameInCfg('EvoArmada_bonDroid'), tint);",
              "    tint = 2 * (GeneralDiffLevel / 2) + 10;",
              "    ItemExtraSpecialsAddByType(dwd0, FindBonusByNameInCfg('EvoArmada_bonDef'), tint);",
              "    //Увеличиваем размер корпуса Келлера",
              "    ItemSize(dwd0, round(ItemSize(dwd0) * (1.0 + (0.5 * GeneralDiffLevel))));",
              "    HullHP(dwd0, ItemSize(dwd0));",
              "",
              "    //Также увеличиваем число его залпов",
              "    ShipSpecialBonuses(cur_ship, bonAttacks, 2);",
              "}",
              "cur_ship = Terron();",
              "if(cur_ship)",
              "{",
              "    dwd0 = ShipItems(cur_ship, 0);",
              "    ItemExtraSpecialsAddByType(dwd0, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "    //Вешаем Террону бонус на дальность стрельбы и увеличиваем броню",
              "    tint = 5 * GeneralDiffLevel + 25;",
              "    ItemExtraSpecialsAddByType(dwd0, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
              "    SetEquipmentStats(dwd0, GetEquipmentStats(dwd0, 0) + (GeneralDiffLevel + 15), 0);",
              "    //Увеличиваем размер корпуса Террона",
              "    ItemSize(dwd0, round(ItemSize(dwd0) * (1.0 + (1.5 * GeneralDiffLevel))));",
              "    HullHP(dwd0, ItemSize(dwd0));",
              "",
              "    //Также увеличиваем число его залпов",
              "    ShipSpecialBonuses(cur_ship, bonAttacks, 8);",
              "}",
              "",
              "//Запускаем таймеры до начала появления у пиратов фрегатов и галеонов",
              "FrigateSpawnCount = CurTurn() + Rnd(136, 165);",
              "GalleonSpawnCount = CurTurn() + Rnd(261, 303);",
              "GGalleonArray[0] = 0;",
              "",
              "//Определяем, сколько дредноутов должно появиться в Галактике на старте игры (зависит от уровня сложности)",
              "temp_count = round(PortionInDiapason(GalaxyDiffLevels(), 50, 500, 4, 0));",
              "",
              "//Делаем стартовый перебор секторов для размещения дредноутов (максимум 6 дредноутов на Галактику)",
              "GDreadnoughtArray[0] = 0;",
              "if(temp_count > 0)",
              "{",
              "    for(i = 0; i < GalaxySectors(); i = i + 1)",
              "    {",
              "        ArrayClear(temp_array);",
              "        mark = 0;",
              "        s = GalaxySectors(i);",
              "        //Пропускаем скрытый пиратский сектор и стартовый сектор игрока",
              "        if(s == StarToCon(PlanetToStar(PlanetPirateClan()))) continue;",
              "        if(s == StarToCon(PlanetToStar(GetShipHomePlanet(Player())))) continue;",
              "        for(j = 0; j < ConStars(s); j = j + 1)",
              "        {",
              "            cur_star = ConStar(s, j);",
              "            //Пропускаем не коалиционные системы",
              "            if(StarOwner(cur_star) != 0) continue;",
              "            mark2 = 1;",
              "            for(tint2 = 1; tint2 < ArrayDim(GDreadnoughtArray); tint2 = tint2 + 1)",
              "            {",
              "                if(Id(s) == GDreadnoughtArray[tint2])",
              "                {",
              "                    mark2 = 0;",
              "                    break;",
              "                }",
              "            }",
              "            if(!mark2) continue;",
              "            //Заносим все подходящие системы во временный массив",
              "            ArrayAdd(temp_array, cur_star);",
              "            mark = 1;",
              "        }",
              "        //Если нашли в секторе хоть одну коалиционную систему, то выбираем случайную из возможных",
              "        if(mark)",
              "        {",
              "            //После чего ищем самую развитую планету (по её общему ТУ) в выбранной системе",
              "            cur_star = temp_array[Rnd(1, ArrayDim(temp_array) - 1)];",
              "            mark = 0;",
              "            for(j = 0; j < StarPlanets(cur_star); j = j + 1)",
              "            {",
              "                k = StarPlanets(cur_star, j);",
              "                if(PlanetOwner(k) == 6) continue;",
              "                mark2 = PlanetInventionLevel(k, 7);",
              "                if(mark2 > mark)",
              "                {",
              "                    mark = mark2;",
              "                    cur_planet = k;",
              "                }",
              "                //Добавляем рандомизацию планеты в случае, если ТУ планет совпадает",
              "                else if(mark2 == mark)",
              "                {",
              "                    if(Rnd(1, 100) <= 50) cur_planet = k;",
              "                }",
              "            }",
              "            //Спавним дредноут на выбранной планете",
              "            dwd0 = SpawnDreadnought(cur_planet, 800 - GalaxyDiffLevels());",
              "            //Вводим ебаный костыль по занесению дредноутов в скрипт на первом ходу, т.к. инициализирует свои группы позже иниткода",
              "            ArrayAdd(fucking_crutch, Id(dwd0));",
              "            //Прокручиваем общий счётчик дредноутов в Галактике",
              "            GDreadnoughtArray[0] = 0 + GDreadnoughtArray[0] + 1;",
              "            //И заносим Id текущего сектора в список секторов с дредноутом",
              "            GDreadnoughtArray[GDreadnoughtArray[0]] = Id(s);",
              "            temp_count = temp_count - 1;",
              "        }",
              "        //Проверяем, не является ли этот сектор последним в списке и если да, то гарантированно завершаем while",
              "        if(i == GalaxySectors() - 1)",
              "        {",
              "            if(temp_count > 0) temp_count = 0;",
              "        }",
              "        if(temp_count <= 0) break;",
              "    }",
              "}",
              "//Запускаем таймер до следующей проверки на спавн дредноута",
              "DreadnoughtSpawnCount = CurTurn() + Rnd(328, 453);",
              "",
              "//Функция для спавна дредноута",
              "function SpawnDreadnought(dword planet, int capital)",
              "{",
              "    dword ship = BuyBigWarrior(planet, capital);",
              "",
              "    ShipType(ship, 'Dreadnought');",
              "",
              "    int own = ShipOwner(ship);",
              "    dword item = ShipItems(ship, 0);",
              "    int item_level = ItemLevel(item);",
              "",
              "    if(own == 0)",
              "    {",
              "        SpecialToEquipment(FindBonusByNameInCfg('EvoArmada_DreadnoughtMaloc'), item);",
              "        //Малокам даём дополнительную броню, мощность осколочных пушек и плюс к точности",
              "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "        tint = round((2.5 * GeneralDiffLevel) + (2.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
              "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWSplinter'), tint);",
              "        tint = round((2.0 * GeneralDiffLevel) + (2.0 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
              "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
              "        ShipSkill(ship, 'Accuracy', ShipSkill(ship, 'Accuracy') + 1);",
              "    }",
              "    else if(own == 1)",
              "    {",
              "        SpecialToEquipment(FindBonusByNameInCfg('EvoArmada_DreadnoughtPeleng'), item);",
              "        //Пеленгам даём дополнительную скорость, дальность стрельбы и плюс к манёвренности",
              "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "        tint = (10 * GeneralDiffLevel) + (10 * PortionInDiapason(item_level, 1, 8, 1, 10));",
              "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
              "        tint = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
              "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
              "        tint = (20 * GeneralDiffLevel / 2) + (20 * PortionInDiapason(item_level, 1, 8, 1, 10));",
              "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonSpeed'), tint);",
              "        ShipSkill(ship, 'Mobility', ShipSkill(ship, 'Mobility') + 1);",
              "    }",
              "    else if(own == 2)",
              "    {",
              "        SpecialToEquipment(FindBonusByNameInCfg('EvoArmada_DreadnoughtPeople'), item);",
              "        //Людям даём дополнительный урон для всех видов орудий и плюс к технике",
              "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "        tint = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
              "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWEnergy'), tint);",
              "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWSplinter'), tint);",
              "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWMissile'), tint);",
              "        tint = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
              "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
              "        ShipSkill(ship, 'Technical', ShipSkill(ship, 'Technical') + 2);",
              "    }",
              "    else if(own == 3)",
              "    {",
              "        SpecialToEquipment(FindBonusByNameInCfg('EvoArmada_DreadnoughtFei'), item);",
              "        //Фэянам даём дополнительный урон для энергетических орудий, дальности и плюс к технике",
              "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "        tint = round((2.5 * GeneralDiffLevel) + (2.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
              "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWEnergy'), tint);",
              "        tint = (10 * GeneralDiffLevel) + (10 * PortionInDiapason(item_level, 1, 8, 1, 10));",
              "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
              "        tint = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
              "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
              "        ShipSkill(ship, 'Technical', ShipSkill(ship, 'Technical') + 2);",
              "    }",
              "    else if(own == 4)",
              "    {",
              "        SpecialToEquipment(FindBonusByNameInCfg('EvoArmada_DreadnoughtGaal'), item);",
              "        //Гаальцам даём повышенную эффективность дроида, ГЗП и плюс к манёвренности",
              "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "        tint = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
              "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
              "        tint = round((7.5 * GeneralDiffLevel) + (7.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
              "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonDroid'), tint);",
              "        tint = round((1.75 * GeneralDiffLevel) + (1.75 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
              "        ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonDef'), tint);",
              "        ShipSkill(ship, 'Mobility', ShipSkill(ship, 'Mobility') + 1);",
              "    }",
              "",
              "    //Значительно снижаем получаемый от астероидов урон",
              "    ShipSpecialBonuses(ship, bonResistAsteroid, 50);",
              "",
              "    //Задаём размер корпуса дредноута в зависимости от общей сложности и текущего ТУ",
              "    ItemSize(item, round((0.00085 * GalaxyDiffLevels() + 1) * item_level * 1500) + Rnd(-125, 200));",
              "    //На всякий случай, устанавливаем минимальный размер корпуса в 4500",
              "    if(ItemSize(item) < 4500) ItemSize(item, 4500);",
              "    HullHP(item, ItemSize(item));",
              "",
              "    //Запрещаем дредноутам менять корпус, а то там начинается вакханалия невиданных размеров и спецакрины слетают",
              "    NoDropItem(item, 1);",
              "    Chameleon(ship);",
              "",
              "    ShipRefit(ship);",
              "    ShipRefit(ship);",
              "    ShipRefit(ship);",
              "    ShipRefit(ship);",
              "",
              "    //Гарантированно выдаём дредноуту дроида и ГЗП",
              "    if(!ShipEqInSlot(ship, t_RepairRobot))",
              "    {",
              "        item = CreateEquipment(t_RepairRobot, Rnd(50, 120), GTL, own);",
              "        AddItemToShip(ship, item);",
              "        ItemIsInUse(item, ship, 1);",
              "    }",
              "    if(!ShipEqInSlot(ship, t_DefGenerator))",
              "    {",
              "        item = CreateEquipment(t_DefGenerator, Rnd(50, 120), GTL, own);",
              "        AddItemToShip(ship, item);",
              "        ItemIsInUse(item, ship, 1);",
              "    }",
              "    ShipImproveItems(ship, Rnd(12, 25));",
              "",
              "    //Увеличиваем число дополнительных залпов всех орудий за ход (будет делать по 6 залпов из каждой пушки)",
              "    ShipSpecialBonuses(ship, bonAttacks, 5);",
              "    //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по небольшим судам",
              "    ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 5);",
              "",
              "    item = ShipAddCustomShipInfo(ship, 'Dreadnought_Infos');",
              "    //Запоминаем таймер до проведения следующего патруля",
              "    ShipCustomShipInfoData(0, item, 1, 0);",
              "    //Выставляем маркер текущего местонахождения дредноута",
              "    ShipCustomShipInfoData(0, item, 2, Id(PlanetToStar(planet)));",
              "    //Запоминаем домашнюю систему дредноута",
              "    ShipCustomShipInfoTextData(0, item, 2, (Id(PlanetToStar(planet)) - 1));",
              "    //Запоминаем маркер текущего состояния дредноута",
              "    ShipCustomShipInfoTextData(0, item, 3, 'AtHome');",
              "",
              "    result = ship;",
              "}",
              "",
              "//Функция для спавна корветов",
              "function SpawnCorvette(dword ship, dword planet, int capital)",
              "{",
              "    if(!ship)",
              "    {",
              "        ship = BuyPirate(planet, capital);",
              "        ShipSubType(ship, 2);",
              "    }",
              "    ShipType(ship, 'PirateCorvette');",
              "",
              "    dword item = ShipItems(ship, 0);",
              "    int item_level = ItemLevel(item);",
              "",
              "    HullSeries(item, -1);",
              "",
              "    //Даём корветам дополнительную дальность стрельбы, а также мощность энергетических и ракетных орудий",
              "    int bon_int;",
              "    SpecialToEquipment(FindBonusByNameInCfg('EvoArmada_CorvettePirateClan'), item);",
              "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "    bon_int = round((0.8 * GeneralDiffLevel) + (0.8 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
              "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWEnergy'), bon_int);",
              "    bon_int = round((1.0 * GeneralDiffLevel) + (1.0 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
              "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWMissile'), bon_int);",
              "    bon_int = (3.0 * GeneralDiffLevel) + (3.0 * PortionInDiapason(item_level, 1, 8, 1, 10));",
              "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWRadius'), bon_int);",
              "    bon_int = round((0.5 * GeneralDiffLevel) + (0.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
              "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonDef'), bon_int);",
              "    ShipSkill(ship, 'Accuracy', ShipSkill(ship, 'Accuracy') + 2);",
              "",
              "    //Значительно снижаем получаемый от астероидов урон",
              "    ShipSpecialBonuses(ship, bonResistAsteroid, 30);",
              "",
              "    //Задаём размер корпуса корвета в зависимости от сложности пиратов и текущего ТУ",
              "    ItemSize(item, round((0.00085 * GalaxyDiffLevels(0) + 1) * item_level * 275) + Rnd(-45, 65));",
              "    //На всякий случай, устанавливаем минимальный размер корпуса в 750",
              "    if(ItemSize(item) < 750) ItemSize(item, 750);",
              "    //HullHP(item, ItemSize(item)); //У пиратов выравнивание HP происходит в конце функции общего перебора",
              "    //Запрещаем корветам менять корпус, а то там начинается вакханалия невиданных размеров и спецакрины слетают",
              "    NoDropItem(item, 1);",
              "    Chameleon(ship);",
              "",
              "    ShipRefit(ship);",
              "    ShipRefit(ship);",
              "",
              "    //Гарантированно выдаём корвету дроида и ГЗП",
              "    if(!ShipEqInSlot(ship, t_RepairRobot))",
              "    {",
              "        item = CreateEquipment(t_RepairRobot, Rnd(40, 60), GTL, 7);",
              "        AddItemToShip(ship, item);",
              "        ItemIsInUse(item, ship, 1);",
              "    }",
              "    if(!ShipEqInSlot(ship, t_DefGenerator))",
              "    {",
              "        item = CreateEquipment(t_DefGenerator, Rnd(40, 60), GTL, 7);",
              "        AddItemToShip(ship, item);",
              "        ItemIsInUse(item, ship, 1);",
              "    }",
              "    ShipImproveItems(ship, Rnd(4, 8));",
              "",
              "    //Увеличиваем число дополнительных залпов всех орудий за ход (будет делать по 2 залпа из каждой пушки)",
              "    ShipSpecialBonuses(ship, bonAttacks, 1);",
              "",
              "    //Повышаем пиратский ранг корвета, чтобы был не ниже \"головореза\"",
              "    while(GetShipPirateRank(ship) < 4) RaisePirateRank(ship);",
              "",
              "    result = ship;",
              "}",
              "",
              "//Функция для спавна фрегатов",
              "function SpawnFrigate(dword ship, dword planet, int capital)",
              "{",
              "    if(!ship)",
              "    {",
              "        ship = BuyPirate(planet, capital);",
              "        ShipSubType(ship, 3);",
              "    }",
              "    ShipType(ship, 'PirateFrigate');",
              "",
              "    dword item = ShipItems(ship, 0);",
              "    int item_level = ItemLevel(item);",
              "",
              "    HullSeries(item, -1);",
              "",
              "    //Даём фрегатам дополнительную дальность стрельбы, а также мощность всех типов орудий",
              "    int bon_int;",
              "    SpecialToEquipment(FindBonusByNameInCfg('EvoArmada_FrigatePirateClan'), item);",
              "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "    bon_int = round((1.2 * GeneralDiffLevel) + (1.2 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
              "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWEnergy'), bon_int);",
              "    bon_int = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
              "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWSplinter'), bon_int);",
              "    bon_int = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
              "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWMissile'), bon_int);",
              "    bon_int = (4.0 * GeneralDiffLevel) + (4.0 * PortionInDiapason(item_level, 1, 8, 1, 10));",
              "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWRadius'), bon_int);",
              "    bon_int = round((0.4 * GeneralDiffLevel) + (0.4 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
              "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonHull'), bon_int);",
              "",
              "    //Значительно снижаем получаемый от астероидов урон",
              "    ShipSpecialBonuses(ship, bonResistAsteroid, 40);",
              "",
              "    //Задаём размер корпуса фрегата в зависимости от сложности пиратов и текущего ТУ",
              "    ItemSize(item, round((0.00085 * GalaxyDiffLevels(0) + 1) * item_level * 625) + Rnd(-60, 100));",
              "",
              "    //На всякий случай, устанавливаем минимальный размер корпуса в 1750",
              "    if(ItemSize(item) < 1750) ItemSize(item, 1750);",
              "",
              "    //HullHP(item, ItemSize(item)); //У пиратов выравнивание HP происходит в конце функции общего перебора",
              "    //Запрещаем фрегатам менять корпус, а то там начинается вакханалия невиданных размеров и спецакрины слетают",
              "    NoDropItem(item, 1);",
              "    Chameleon(ship);",
              "",
              "    ShipRefit(ship);",
              "    ShipRefit(ship);",
              "    ShipRefit(ship);",
              "",
              "    //Гарантированно выдаём фрегату дроида и ГЗП",
              "    if(!ShipEqInSlot(ship, t_RepairRobot))",
              "    {",
              "        item = CreateEquipment(t_RepairRobot, Rnd(45, 90), GTL, 7);",
              "        AddItemToShip(ship, item);",
              "        ItemIsInUse(item, ship, 1);",
              "    }",
              "    if(!ShipEqInSlot(ship, t_DefGenerator))",
              "    {",
              "        item = CreateEquipment(t_DefGenerator, Rnd(45, 90), GTL, 7);",
              "        AddItemToShip(ship, item);",
              "        ItemIsInUse(item, ship, 1);",
              "    }",
              "    ShipImproveItems(ship, Rnd(7, 14));",
              "",
              "    //Увеличиваем число дополнительных залпов всех орудий за ход (будет делать по 3 залпа из каждой пушки)",
              "    ShipSpecialBonuses(ship, bonAttacks, 2);",
              "    //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по небольшим судам",
              "    ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 2);",
              "",
              "    //Повышаем пиратский ранг фрегата, чтобы был не ниже \"атамана\"",
              "    while(GetShipPirateRank(ship) < 5) RaisePirateRank(ship);",
              "",
              "    result = ship;",
              "}",
              "",
              "//Функция для спавна галеонов",
              "function SpawnGalleon(dword ship, dword planet, int capital)",
              "{",
              "    if(!ship)",
              "    {",
              "        ship = BuyPirate(planet, capital);",
              "        ShipSubType(ship, 1);",
              "    }",
              "    ShipType(ship, 'PirateGalleon');",
              "",
              "    dword item = ShipItems(ship, 0);",
              "    int item_level = ItemLevel(item);",
              "",
              "    HullSeries(item, -1);",
              "",
              "    //Даём галеонам дополнительную броню, а также мощность всех типов орудий и эффективность дроида",
              "    int bon_int;",
              "    SpecialToEquipment(FindBonusByNameInCfg('EvoArmada_GalleonPirateClan'), item);",
              "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "    bon_int = round((1.2 * GeneralDiffLevel) + (1.2 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
              "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWEnergy'), bon_int);",
              "    bon_int = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
              "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWSplinter'), bon_int);",
              "    bon_int = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
              "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWMissile'), bon_int);",
              "    bon_int = (4.0 * GeneralDiffLevel) + (4.0 * PortionInDiapason(item_level, 1, 8, 1, 10));",
              "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonWRadius'), bon_int);",
              "    bon_int = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(item_level, 1, 8, 1, 10)));",
              "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonHull'), bon_int);",
              "    bon_int = (4.0 * GeneralDiffLevel) + (4.0 * PortionInDiapason(item_level, 1, 8, 1, 10));",
              "    ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('EvoArmada_bonDroid'), bon_int);",
              "",
              "    //Значительно снижаем получаемый от астероидов урон",
              "    ShipSpecialBonuses(ship, bonResistAsteroid, 50);",
              "",
              "    //Задаём размер корпуса галеона в зависимости от сложности пиратов и текущего ТУ",
              "    ItemSize(item, round((0.00085 * GalaxyDiffLevels(0) + 1) * item_level * 1050) + Rnd(-75, 125));",
              "    //На всякий случай, устанавливаем минимальный размер корпуса в 3000",
              "    if(ItemSize(item) < 3000) ItemSize(item, 3000);",
              "",
              "    //HullHP(item, ItemSize(item)); //У пиратов выравнивание HP происходит в конце функции общего перебора",
              "    //Запрещаем галеонам менять корпус, а то там начинается вакханалия невиданных размеров и спецакрины слетают",
              "    NoDropItem(item, 1);",
              "    Chameleon(ship);",
              "",
              "    ShipRefit(ship);",
              "    ShipRefit(ship);",
              "    ShipRefit(ship);",
              "    ShipRefit(ship);",
              "",
              "    //Гарантированно выдаём галеону дроида и ГЗП",
              "    if(!ShipEqInSlot(ship, t_RepairRobot))",
              "    {",
              "        item = CreateEquipment(t_RepairRobot, Rnd(50, 110), GTL, 7);",
              "        AddItemToShip(ship, item);",
              "        ItemIsInUse(item, ship, 1);",
              "    }",
              "    if(!ShipEqInSlot(ship, t_DefGenerator))",
              "    {",
              "        item = CreateEquipment(t_DefGenerator, Rnd(50, 110), GTL, 7);",
              "        AddItemToShip(ship, item);",
              "        ItemIsInUse(item, ship, 1);",
              "    }",
              "    ShipImproveItems(ship, Rnd(9, 16));",
              "",
              "    //Увеличиваем число дополнительных залпов всех орудий за ход (будет делать по 4 залпа из каждой пушки)",
              "    ShipSpecialBonuses(ship, bonAttacks, 3);",
              "    //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по небольшим судам",
              "    ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 3);",
              "",
              "    //Повышаем пиратский ранг галеона, чтобы был не ниже \"хана\"",
              "    while(GetShipPirateRank(ship) < 6) RaisePirateRank(ship);",
              "",
              "    //Вешаем инфошку для удаления сектора с галеоном из списка при уничтожении галеона",
              "    ShipAddCustomShipInfo(ship, 'PirateGalleon_Infos');",
              "",
              "    result = ship;",
              "}",
              "",
              "//Начальный перебор Галактики, раздаём кораблям дополнительные залпы и бонусы",
              "if(!ShuDomiksInit) tint = BuildListOfNewShips(temp_array, lastShipId, 1+8+16+64+128+256+512+1024+2048+4096+8192, 1+2+4+8+16+32+128, 1, ',SubFactionPlayerMercsFixedStanding', ',TC,SSB,BM,MB,Manaan');",
              "else tint = BuildListOfNewShips(temp_array, lastShipId, 8+16+64+128+256+512+1024+2048+4096+8192, 1+2+4+8+16+128, 1, ',SubFactionPlayerMercsFixedStanding', ',TC,SSB,BM,MB,Manaan,PlayerMB,PlayerMB_licensed');",
              "//Если нашли хоть один корабль по требуемым условиям",
              "if(tint)",
              "{",
              "    for(i = 0; i < ArrayDim(temp_array); i = i + 1)",
              "    {",
              "        cur_ship = temp_array[i];",
              "",
              "        //Сразу исключаем все скриптовые корабли (нет, потому что большинство ванильных станций находится в скриптах)",
              "        //if(ShipInScript(cur_ship, 0)) continue;",
              "",
              "        tint = ShipOwner(cur_ship);",
              "        tint2 = ShipSubType(cur_ship);",
              "        //Пропускаем доминаторских боссов",
              "        if(tint == 5 && tint2 == 0) continue;",
              "",
              "        AddExtraAttacksToShip(cur_ship, tint, ShipTypeN(cur_ship), ShipType(cur_ship), tint2);",
              "    }",
              "",
              "    //Незначительно увеличиваем таймеры спавна фрегатов и галеонов, если в текущем проходе цикла ни один пират ими так и не стал",
              "    //(необходимо в целях оптимизации)",
              "    if(FrigateSpawnCount <= CurTurn()) FrigateSpawnCount = CurTurn() + Rnd(25, 50);",
              "    if(GalleonSpawnCount <= CurTurn()) GalleonSpawnCount = CurTurn() + Rnd(40, 80);",
              "}",
              "lastShipId = GalaxyShipId();",
              "",
              "//Общая функция добавления залпов/усиления кораблей и спавна новых пиратских \"флагманов\"",
              "function AddExtraAttacksToShip(ship, own, num_type, str_type, sub_type)",
              "{",
              "    dword hull = ShipItems(ship, 0);",
              "    int hull_level = ItemLevel(hull);",
              "    dword item;",
              "    int bon;",
              "",
              "    //Перебираем коалиционные корабли",
              "    if(own < 5)",
              "    {",
              "        //Всем коалиционным станциям вешаем дополнительные залпы, а конкретно ВБ ещё выдаём дополнительную броню и дальность стрельбы",
              "        if(ObjectType(ship) == 4)",
              "        {",
              "            //Военные базы",
              "            if(str_type == 'WB')",
              "            {",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "                tint = round((7.5 * GeneralDiffLevel) + (7.5 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
              "                tint = round((2.0 * GeneralDiffLevel) + (2.0 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
              "                //Также увеличиваем скорость для компенсации замедления от возросших размеров базы",
              "                tint = 400;",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonSpeed'), tint);",
              "",
              "                ShipSpecialBonuses(ship, bonAttacks, 4);",
              "",
              "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
              "                ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 4);",
              "            }",
              "            //Центр наёмников",
              "            else if(str_type == 'MB' || str_type == 'Manaan')",
              "            {",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "                tint = round((6 * GeneralDiffLevel) + (6 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
              "                tint = round((0.6 * GeneralDiffLevel) + (0.6 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
              "",
              "                ShipSpecialBonuses(ship, bonAttacks, 4);",
              "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
              "                ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 4);",
              "            }",
              "            //Подпространственная база",
              "            else if(str_type == 'SSB')",
              "            {",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "                tint = round((5 * GeneralDiffLevel) + (5 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
              "                tint = round((0.5 * GeneralDiffLevel) + (0.5 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
              "                tint = round((0.75 * GeneralDiffLevel) + (0.75 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonDef'), tint);",
              "",
              "                ShipSpecialBonuses(ship, bonAttacks, 4);",
              "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
              "                ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 4);",
              "            }",
              "            //Все прочие базы с коалиционным овнером",
              "            else",
              "            {",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "                tint = round((3 * GeneralDiffLevel) + (3 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
              "                tint = round((0.5 * GeneralDiffLevel) + (0.5 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
              "",
              "                ShipSpecialBonuses(ship, bonAttacks, 2);",
              "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
              "                ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 2);",
              "            }",
              "",
              "            //Также повышаем всем станциям количество HP",
              "            ItemSize(hull, round(1.0 * ItemSize(hull) * (1.0 + (1.0 * GeneralDiffLevel))));",
              "            //И значительно снижаем получаемый от астероидов урон",
              "            ShipSpecialBonuses(ship, bonResistAsteroid, 75);",
              "",
              "            //Вешаем блядоинфошку на каждую станцию с дополнительными залпами, просто чтобы эти залпы в слотах подсвечивать (иначе никак)",
              "            ShipAddCustomShipInfo(ship, 'GunBatteryLabelsSwitcherForRuinsBlyat');",
              "        }",
              "        else if(num_type == t_Warrior)",
              "        {",
              "            //Бафаем линкоры (флагманы), уровень бафа зависит от ГТУ и уровня корпуса линкора",
              "            if(sub_type)",
              "            {",
              "                //Проводим всю эту хероборию чтобы не вешать на линкоры валидный акрин и не ломать их скин",
              "                tint = FindBonusByNameInCfg('EvoArmada_CoalitionBattleshipHull');",
              "                bon = EqModule(hull);",
              "                if(bon > -1) ModuleToEquipment(-1, hull);",
              "                ModuleToEquipment(tint, hull);",
              "                EqModule(hull, -1);",
              "                if(bon > -1) ModuleToEquipment(bon, hull);",
              "                //После чего вешаем на них чисто текстовый акрин",
              "                if(HullSpecial(hull) == -1) HullSpecial(hull, tint);",
              "",
              "                //Задаём размер корпуса линкора в зависимости от общей сложности и текущего ТУ",
              "                ItemSize(hull, round((0.00085 * GalaxyDiffLevels() + 1) * hull_level * 1325) + Rnd(-100, 175));",
              "                //На всякий случай, устанавливаем минимальный размер корпуса в 4000",
              "                if(ItemSize(hull) < 4000) ItemSize(hull, 4000);",
              "                HullHP(hull, ItemSize(hull));",
              "",
              "                //Запрещаем линкору менять корпус, а то там начинается вакханалия невиданных размеров и спецакрины слетают",
              "                NoDropItem(hull, 1);",
              "",
              "                ShipMoney(ship, ShipMoney(ship) * 3);",
              "                ShipRefit(ship);",
              "                ShipRefit(ship);",
              "                ShipRefit(ship);",
              "",
              "                //Значительно снижаем получаемый от астероидов урон",
              "                ShipSpecialBonuses(ship, bonResistAsteroid, 50);",
              "",
              "                //Гарантированно выдаём линкору дроида и ГЗП",
              "                if(!ShipEqInSlot(ship, t_RepairRobot))",
              "                {",
              "                    item = CreateEquipment(t_RepairRobot, Rnd(50, 120), GTL, own);",
              "                    AddItemToShip(ship, item);",
              "                    ItemIsInUse(item, ship, 1);",
              "                }",
              "                if(!ShipEqInSlot(ship, t_DefGenerator))",
              "                {",
              "                    item = CreateEquipment(t_DefGenerator, Rnd(50, 120), GTL, own);",
              "                    AddItemToShip(ship, item);",
              "                    ItemIsInUse(item, ship, 1);",
              "                }",
              "                ShipImproveItems(ship, Rnd(9, 18));",
              "",
              "                //Малокские линкоры",
              "                if(own == 0)",
              "                {",
              "                    //Малокам даём дополнительную броню, мощность осколочных пушек и плюс к точности",
              "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "                    tint = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWSplinter'), tint);",
              "                    tint = round((2 * GeneralDiffLevel) + (2 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
              "                    ShipSkill(ship, 'Accuracy', ShipSkill(ship, 'Accuracy') + 1);",
              "",
              "                    ShipSpecialBonuses(ship, bonAttacks, 4);",
              "                    //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
              "                    ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 4);",
              "                }",
              "                //Пеленгские линкоры",
              "                else if(own == 1)",
              "                {",
              "                    //Пеленгам даём дополнительную скорость, дальность стрельбы и плюс к манёвренности",
              "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "                    tint = (7.5 * GeneralDiffLevel) + (7.5 * PortionInDiapason(hull_level, 1, 8, 1, 10));",
              "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
              "                    tint = round((0.8 * GeneralDiffLevel) + (0.8 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
              "                    tint = (15 * GeneralDiffLevel) + (15 * (PortionInDiapason(hull_level, 1, 8, 1, 10) / 2));",
              "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonSpeed'), tint);",
              "                    ShipSkill(ship, 'Mobility', ShipSkill(ship, 'Mobility') + 1);",
              "",
              "                    ShipSpecialBonuses(ship, bonAttacks, 4);",
              "                    //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
              "                    ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 4);",
              "                }",
              "                //Человеческие линкоры",
              "                else if(own == 2)",
              "                {",
              "                    //Людям даём дополнительный урон для всех видов орудий и плюс к технике",
              "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "                    tint = GeneralDiffLevel + PortionInDiapason(hull_level, 1, 8, 1, 10);",
              "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWEnergy'), tint);",
              "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWSplinter'), tint);",
              "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWMissile'), tint);",
              "                    tint = round((0.8 * GeneralDiffLevel) + (0.8 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
              "                    ShipSkill(ship, 'Technical', ShipSkill(ship, 'Technical') + 2);",
              "",
              "                    ShipSpecialBonuses(ship, bonAttacks, 4);",
              "                    //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
              "                    ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 4);",
              "                }",
              "                //Фэянские линкоры",
              "                else if(own == 3)",
              "                {",
              "                    //Фэянам даём дополнительный урон для энергетических орудий, дальности и плюс к технике",
              "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "                    tint = round((1.5 * GeneralDiffLevel) + (1.5 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWEnergy'), tint);",
              "                    tint = (6 * GeneralDiffLevel) + (6 * PortionInDiapason(hull_level, 1, 8, 1, 10));",
              "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
              "                    tint = round((0.8 * GeneralDiffLevel) + (0.8 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
              "                    ShipSkill(ship, 'Technical', ShipSkill(ship, 'Technical') + 2);",
              "",
              "                    ShipSpecialBonuses(ship, bonAttacks, 4);",
              "                    //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
              "                    ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 4);",
              "                }",
              "                //Гаальские линкоры",
              "                else if(own == 4)",
              "                {",
              "                    //Гаальцам даём повышенную эффективность дроида, ГЗП и плюс к манёвренности",
              "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "                    tint = round((0.8 * GeneralDiffLevel) + (0.8 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
              "                    tint = (5 * GeneralDiffLevel) + (5 * PortionInDiapason(hull_level, 1, 8, 1, 10));",
              "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonDroid'), tint);",
              "                    tint = round((1.2 * GeneralDiffLevel) + (1.2 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                    ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonDef'), tint);",
              "                    ShipSkill(ship, 'Mobility', ShipSkill(ship, 'Mobility') + 1);",
              "",
              "                    ShipSpecialBonuses(ship, bonAttacks, 4);",
              "                    //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
              "                    ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 4);",
              "                }",
              "            }",
              "            //Бафаем обычных военных, повышаем их навык манёвренности",
              "            else if(ShipSkill(ship, 'MobilityCur') < 3) ShipSkill(ship, 'Mobility', Rnd(2, 4));",
              "        }",
              "    }",
              "    //Перебираем доминаторов",
              "    else if(own == 5)",
              "    {",
              "        //Производим обновление доминаторских кораблей только если выключен мод ShuDomiks",
              "        //В ином случае то же самое обновление выполнится в ShuDomiks",
              "        //Вешаем особые бонусы на корпуса всех доминаторов",
              "        //Добавляем общий акрин с описанием и Fragility, а также \"динамические\" спецакрины в зависимости от общего уровня сложности и ТУ доминатора",
              "        //Эквентор",
              "        if(!ShuDomiksInit)",
              "        {",
              "            //Эквентор",
              "            if(sub_type == 1)",
              "            {",
              "                //Проводим всю эту хероборию чтобы не вешать на доминатора валидный акрин и не ломать его скин",
              "                tint = FindBonusByNameInCfg('EvoArmada_EquantorDomHull');",
              "                bon = EqModule(hull);",
              "                if(bon > -1) ModuleToEquipment(-1, hull);",
              "                ModuleToEquipment(tint, hull);",
              "                EqModule(hull, -1);",
              "                if(bon > -1) ModuleToEquipment(bon, hull);",
              "                //После чего вешаем на него чисто текстовый акрин",
              "                if(HullSpecial(hull) == -1) HullSpecial(hull, tint);",
              "",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "                //Эквентору вешаем бонус на силу энергетических орудий и броню",
              "                tint = round((1.8 * GeneralDiffLevel / 2) + (1.8 * PortionInDiapason(hull_level, 1, 8, 1, 10) / 2));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWEnergy'), tint);",
              "                tint = round((0.8 * GeneralDiffLevel / 2) + (0.8 * PortionInDiapason(hull_level, 1, 8, 1, 10) / 2));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
              "",
              "                ShipSpecialBonuses(ship, bonAttacks, 3);",
              "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
              "                ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 3);",
              "",
              "                //Ограничиваем максимальный уровень навыка атаки",
              "                if(ShipSkill(ship, 'Accuracy') > 2) ShipSkill(ship, 'Accuracy', Rnd(2, 3));",
              "            }",
              "            //Ургант",
              "            else if(sub_type == 2)",
              "            {",
              "                //Проводим всю эту хероборию чтобы не вешать на доминатора валидный акрин и не ломать его скин",
              "                tint = FindBonusByNameInCfg('EvoArmada_UrgantDomHull');",
              "                bon = EqModule(hull);",
              "                if(bon > -1) ModuleToEquipment(-1, hull);",
              "                ModuleToEquipment(tint, hull);",
              "                EqModule(hull, -1);",
              "                if(bon > -1) ModuleToEquipment(bon, hull);",
              "                //После чего вешаем на него чисто текстовый акрин",
              "                if(HullSpecial(hull) == -1) HullSpecial(hull, tint);",
              "",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "                //Урганту вешаем бонус на силу осколочных орудий и ГЗП",
              "                tint = round((1.8 * GeneralDiffLevel / 2) + (1.8 * PortionInDiapason(hull_level, 1, 8, 1, 10) / 2));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWSplinter'), tint);",
              "                tint = round((1.5 * GeneralDiffLevel / 2) + (1.5 * PortionInDiapason(hull_level, 1, 8, 1, 10) / 2));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonDef'), tint);",
              "                ShipSpecialBonuses(ship, bonAttacks, 1);",
              "                ShipSkill(ship, 'Accuracy', ShipSkill(ship, 'Accuracy') + 2);",
              "            }",
              "            //Смерш",
              "            else if(sub_type == 3)",
              "            {",
              "                //Проводим всю эту хероборию чтобы не вешать на доминатора валидный акрин и не ломать его скин",
              "                tint = FindBonusByNameInCfg('EvoArmada_SmershDomHull');",
              "                bon = EqModule(hull);",
              "                if(bon > -1) ModuleToEquipment(-1, hull);",
              "                ModuleToEquipment(tint, hull);",
              "                EqModule(hull, -1);",
              "                if(bon > -1) ModuleToEquipment(bon, hull);",
              "                //После чего вешаем на него чисто текстовый акрин",
              "                if(HullSpecial(hull) == -1) HullSpecial(hull, tint);",
              "",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "                //Смершу вешаем бонус на силу ракетных орудий и дальность стрельбы, а также повышаем навык точности",
              "                tint = GeneralDiffLevel + PortionInDiapason(hull_level, 1, 8, 1, 10);",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWMissile'), tint);",
              "                tint = (5 * GeneralDiffLevel) + (5 * PortionInDiapason(hull_level, 1, 8, 1, 10));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
              "                ShipSkill(ship, 'Accuracy', ShipSkill(ship, 'Accuracy') + 2);",
              "            }",
              "            //Менок",
              "            else if(sub_type == 4)",
              "            {",
              "                //Проводим всю эту хероборию чтобы не вешать на доминатора валидный акрин и не ломать его скин",
              "                tint = FindBonusByNameInCfg('EvoArmada_MenocDomHull');",
              "                bon = EqModule(hull);",
              "                if(bon > -1) ModuleToEquipment(-1, hull);",
              "                ModuleToEquipment(tint, hull);",
              "                EqModule(hull, -1);",
              "                if(bon > -1) ModuleToEquipment(bon, hull);",
              "                //После чего вешаем на него чисто текстовый акрин",
              "                if(HullSpecial(hull) == -1) HullSpecial(hull, tint);",
              "",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "                //Менку вешаем бонусы на силу энергетического и ракетного оружия, а также повышаем навык точности",
              "                tint = GeneralDiffLevel + PortionInDiapason(hull_level, 1, 8, 1, 10);",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWEnergy'), tint);",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWMissile'), tint);",
              "                ShipSkill(ship, 'Accuracy', ShipSkill(ship, 'Accuracy') + 1);",
              "                ShipSkill(ship, 'Mobility', ShipSkill(ship, 'Mobility') + 2);",
              "            }",
              "            //Штип",
              "            else if(sub_type == 5)",
              "            {",
              "                //Проводим всю эту хероборию чтобы не вешать на доминатора валидный акрин и не ломать его скин",
              "                tint = FindBonusByNameInCfg('EvoArmada_ShtipDomHull');",
              "                bon = EqModule(hull);",
              "                if(bon > -1) ModuleToEquipment(-1, hull);",
              "                ModuleToEquipment(tint, hull);",
              "                EqModule(hull, -1);",
              "                if(bon > -1) ModuleToEquipment(bon, hull);",
              "                //После чего вешаем на него чисто текстовый акрин",
              "                if(HullSpecial(hull) == -1) HullSpecial(hull, tint);",
              "",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "                //Штипу вешаем бонус на скорость и повышаем навык манёвренности",
              "                tint = (10 * GeneralDiffLevel) + (10 * PortionInDiapason(hull_level, 1, 8, 1, 10));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonSpeed'), tint);",
              "                ShipSkill(ship, 'Mobility', ShipSkill(ship, 'Mobility') + 3);",
              "            }",
              "            //Бертор",
              "            else if(sub_type == 6)",
              "            {",
              "                //Проводим всю эту хероборию чтобы не вешать на доминатора валидный акрин и не ломать его скин",
              "                tint = FindBonusByNameInCfg('EvoArmada_BertorDomHull');",
              "                bon = EqModule(hull);",
              "                if(bon > -1) ModuleToEquipment(-1, hull);",
              "                ModuleToEquipment(tint, hull);",
              "                EqModule(hull, -1);",
              "                if(bon > -1) ModuleToEquipment(bon, hull);",
              "                //После чего вешаем на него чисто текстовый акрин",
              "                if(HullSpecial(hull) == -1) HullSpecial(hull, tint);",
              "",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "                //Бертору вешаем бонус на броню",
              "                tint = round((1.2 * GeneralDiffLevel / 2) + (1.2 * PortionInDiapason(hull_level, 1, 8, 1, 10) / 2));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
              "",
              "                ShipSpecialBonuses(ship, bonAttacks, 4);",
              "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
              "                ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 4);",
              "",
              "                //Ограничиваем максимальный уровень навыка атаки",
              "                if(ShipSkill(ship, 'Accuracy') > 1) ShipSkill(ship, 'Accuracy', Rnd(1, 2));",
              "            }",
              "            //Клиг",
              "            else if(sub_type == 7)",
              "            {",
              "                //Проводим всю эту хероборию чтобы не вешать на доминатора валидный акрин и не ломать его скин",
              "                tint = FindBonusByNameInCfg('EvoArmada_KligDomHull');",
              "                bon = EqModule(hull);",
              "                if(bon > -1) ModuleToEquipment(-1, hull);",
              "                ModuleToEquipment(tint, hull);",
              "                EqModule(hull, -1);",
              "                if(bon > -1) ModuleToEquipment(bon, hull);",
              "                //После чего вешаем на него чисто текстовый акрин",
              "                if(HullSpecial(hull) == -1) HullSpecial(hull, tint);",
              "",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "                //Клигу вешаем бонус на скорость",
              "                tint = (10 * GeneralDiffLevel) + (10 * PortionInDiapason(hull_level, 1, 8, 1, 10));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonSpeed'), tint);",
              "                ShipSkill(ship, 'Mobility', ShipSkill(ship, 'Mobility') + 4);",
              "            }",
              "        }",
              "    }",
              "    //Перебираем пиратские станции и корабли",
              "    else",
              "    {",
              "        //Всем пиратским станциям вешаем дополнительные залпы, а конкретно доминиону ещё выдаём дополнительную силу энергетического оружия и дальность стрельбы",
              "        if(ObjectType(ship) == 4)",
              "        {",
              "            //Доминионы",
              "            if(str_type == 'CB')",
              "            {",
              "                tint = (2 * GeneralDiffLevel) + (2 * PortionInDiapason(hull_level, 1, 8, 1, 10));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWEnergy'), tint);",
              "                tint = (5 * GeneralDiffLevel) + (5 * PortionInDiapason(hull_level, 1, 8, 1, 10));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
              "                tint = round((0.5 * GeneralDiffLevel) + (0.5 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
              "                tint = round((0.5 * GeneralDiffLevel) + (0.5 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonDef'), tint);",
              "",
              "                ShipSpecialBonuses(ship, bonAttacks, 3);",
              "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
              "                ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 3);",
              "            }",
              "            //Центр наёмников",
              "            else if(str_type == 'MB' || str_type == 'Manaan' || str_type == 'PlayerMB' || str_type == 'PlayerMB_licensed')",
              "            {",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "                tint = round((6 * GeneralDiffLevel) + (6 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
              "                tint = round((0.6 * GeneralDiffLevel) + (0.6 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
              "",
              "                ShipSpecialBonuses(ship, bonAttacks, 4);",
              "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
              "                ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 4);",
              "            }",
              "            //Все прочие базы с пиратским овнером",
              "            else",
              "            {",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_ExtraSpecialsLineBreak'));",
              "                tint = round((3 * GeneralDiffLevel) + (3 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonWRadius'), tint);",
              "                tint = round((0.5 * GeneralDiffLevel) + (0.5 * PortionInDiapason(hull_level, 1, 8, 1, 10)));",
              "                ItemExtraSpecialsAddByType(hull, FindBonusByNameInCfg('EvoArmada_bonHull'), tint);",
              "",
              "                ShipSpecialBonuses(ship, bonAttacks, 2);",
              "                //Вешаем инфошку для пересчёта числа доп. залпов при стрельбе крупных кораблей по более мелким судам",
              "                ShipAddCustomShipInfo(ship, 'EvoArmada_CapitalShipInfos', 'NoShow', 2);",
              "            }",
              "",
              "            //Также повышаем всем станциям количество HP",
              "            ItemSize(hull, round(ItemSize(hull) * (1.0 + (1.0 * GeneralDiffLevel))));",
              "            //И значительно снижаем получаемый от астероидов урон",
              "            ShipSpecialBonuses(ship, bonResistAsteroid, 75);",
              "",
              "            //Вешаем блядоинфошку на каждую станцию с дополнительными залпами, просто чтобы эти залпы в слотах подсвечивать (иначе никак)",
              "            ShipAddCustomShipInfo(ship, 'GunBatteryLabelsSwitcherForRuinsBlyat');",
              "        }",
              "        //Перебор всех пиратских \"новорождённых\" судов",
              "        else",
              "        {",
              "            mark = 0;",
              "            while(1)",
              "            {",
              "                cur_planet = GetShipPlanet(ship);",
              "                //if(!cur_planet) cur_planet = GetShipRuins(ship);",
              "",
              "                if(cur_planet)",
              "                {",
              "                    tint = PirateType(ship);",
              "                    //Пропускаем странствующих пиратов",
              "                    if(tint)",
              "                    {",
              "                        //Проверка на спавн фрегатов и галеонов",
              "                        if(!ShipInScript(ship, 0))",
              "                        {",
              "                            //Если пришло время спавнить новый фрегат (до 16-ти на Галактику)",
              "                            if(GroupCount(PirateFrigate) < 16)",
              "                            {",
              "                                if(FrigateSpawnCount <= CurTurn())",
              "                                {",
              "                                    //Проверяем тип появившегося пирата",
              "                                    if(tint == 3)",
              "                                    {",
              "                                        //Если на этого пирата ещё не повесили антидоминаторские программы",
              "                                        if(ShipFindCustomShipInfoByType(ship, 'ShipWithProgramsInfo') == -1)",
              "                                        {",
              "                                            //Кидаем проверку на шанс",
              "                                            if(Rnd(1, 100) <= 60)",
              "                                            {",
              "                                                //Не больше двух фрегатов на одну систему",
              "                                                if(CountIn(PirateFrigate, ShipStar(ship)) < 2)",
              "                                                {",
              "                                                    //Превращаем пирата в новый фрегат",
              "                                                    SpawnFrigate(ship, cur_planet, 600 - GalaxyDiffLevels());",
              "                                                    ShipJoin(PirateFrigate, ship, '', 0, 0, 0, GalaxyTechLevel());",
              "                                                    SetData(CurTurn() + Rnd(10, 20), 0, ship);",
              "                                                    OrderLock(ship, 1);",
              "",
              "                                                    //Обновляем таймер до следующего шанса на спавн фрегата",
              "                                                    FrigateSpawnCount = CurTurn() + Rnd(136, 165);",
              "",
              "                                                    mark = 1;",
              "                                                    break;",
              "                                                }",
              "                                            }",
              "                                        }",
              "                                    }",
              "                                }",
              "                            }",
              "",
              "                            //Если пришло время спавнить новый галеон (до 4-х на Галактику)",
              "                            if(GGalleonArray[0] < 4)",
              "                            {",
              "                                if(GalleonSpawnCount <= CurTurn())",
              "                                {",
              "                                    //Проверяем тип появившегося пирата",
              "                                    if(tint == 1)",
              "                                    {",
              "                                        //Если на этого пирата ещё не повесили антидоминаторские программы",
              "                                        if(ShipFindCustomShipInfoByType(ship, 'ShipWithProgramsInfo') == -1)",
              "                                        {",
              "                                            //Кидаем проверку на шанс",
              "                                            if(Rnd(1, 100) <= 50)",
              "                                            {",
              "                                                //Проверяем, что в данном секторе ещё нет галеона",
              "                                                tint2 = Id(StarToCon(ShipStar(cur_ship)));",
              "                                                tint3 = 0;",
              "",
              "                                                for(j = 1; j <= GGalleonArray[0]; j = j + 1)",
              "                                                {",
              "                                                    if(tint2 == GGalleonArray[j])",
              "                                                    {",
              "                                                        tint3 = 1;",
              "                                                        break;",
              "                                                    }",
              "                                                }",
              "",
              "                                                //Только после всех этих проверок превращаем пирата в новый галеон",
              "                                                if(!tint3)",
              "                                                {",
              "                                                    SpawnGalleon(ship, cur_planet, 800 - GalaxyDiffLevels());",
              "                                                    ShipJoin(PirateGalleon, ship, '', 0, 0, 0, GalaxyTechLevel());",
              "                                                    SetData(CurTurn() + Rnd(15, 30), 0, ship);",
              "                                                    OrderLock(ship, 1);",
              "",
              "                                                    //Запоминаем сектор, в котором появился галеон",
              "                                                    GGalleonArray[GGalleonArray[0] + 1] = tint2;",
              "                                                    //Обновляем таймер до следующего шанса на спавн галеона",
              "                                                    GalleonSpawnCount = CurTurn() + Rnd(261, 303);",
              "",
              "                                                    mark = 1;",
              "                                                    break;",
              "                                                }",
              "                                            }",
              "                                        }",
              "                                    }",
              "                                }",
              "                            }",
              "                        }",
              "",
              "                        //Проверка на спавн корвета",
              "                        //Проверяем тип появившегося пирата",
              "                        if(tint == 2)",
              "                        {",
              "                            //Кидаем проверку на шанс",
              "                            if(Rnd(1, 100) <= 17)",
              "                            {",
              "                                //Не больше четырёх корветов на одну систему (корветы не в скрипте, так что не посчитать)",
              "                                //if(CountIn(PirateCorvette, ShipStar(ship)) < 4)",
              "                                //{",
              "                                    //Превращаем пирата в новый корвет",
              "                                    SpawnCorvette(ship, cur_planet, 600 - GalaxyDiffLevels());",
              "",
              "                                    mark = 1;",
              "                                    break;",
              "                                //}",
              "                            }",
              "                        }",
              "                    }",
              "                }",
              "",
              "                break;",
              "            }",
              "",
              "            //Бафаем обычных клановых пиратов, повышаем им навык манёвренности до значения не ниже двух",
              "            if(!mark)",
              "            {",
              "                if(ShipSkill(ship, 'MobilityCur') < 2) ShipSkill(ship, 'Mobility', Rnd(2, 3));",
              "            }",
              "        }",
              "    }",
              "",
              "    //Исправляем перевес корабля, если он есть",
              "    HullHP(hull, ItemSize(hull));",
              "    FixOverweight(ship);",
              "}",
              "",
              "//Функция для исправления перевеса корабля (если он есть): расширяет вместимость корпуса, повышает HP до максимума",
              "function FixOverweight(ship)",
              "{",
              "    ShipCalcParam(ship);",
              "    int space = ShipFreeSpace(ship);",
              "    if(space < 0)",
              "    {",
              "        dword hull = ShipItems(ship, 0);",
              "        ItemSize(hull, ItemSize(hull) + abs(space) + Rnd(1, 3));",
              "        HullHP(hull, ItemSize(hull));",
              "        ShipCalcParam(ship);",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  640,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  10,
          "Total.Lines":  144,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Запоминаем текущий ГТУ, который часто используется в различных функциях",
              "GTL = GalaxyTechLevel();",
              "",
              "//Выставляем маркер о том, что был подключён мод ShuDomiks (может быть подключён уже в процессе игры)",
              "if(!ShuDomiksInit)",
              "{",
              "    if(BlockExist('Script.Mod_ShuDomiks')) ShuDomiksInit = 1;",
              "}",
              "",
              "//Заносим в скриптовую группу дредноуты, которые были созданы в ините (потому что сразу никак)",
              "if(ArrayDim(fucking_crutch) > 1)",
              "{",
              "    while(ArrayDim(fucking_crutch) > 1)",
              "    {",
              "        dwd0 = IdToShip(fucking_crutch[1]);",
              "        if(dwd0) ShipJoin(Dreadnought, dwd0);",
              "        ArrayDelete(fucking_crutch, 1);",
              "    }",
              "}",
              "//Если пришло время создания нового дредноута",
              "if(DreadnoughtSpawnCount <= CurTurn())",
              "{",
              "    //Если число дредноутов в Галактике ещё не максимально",
              "    if(GDreadnoughtArray[0] < 6)",
              "    {",
              "        ArrayClear(temp_array);",
              "        //Делаем перебор секторов для возможного размещения дредноута (максимум 6 дредноутов на Галактику)",
              "        mark = 0;",
              "        for(i = 0; i < GalaxySectors(); i = i + 1)",
              "        {",
              "            s = GalaxySectors(i);",
              "            //Пропускаем скрытый пиратский сектор",
              "            if(s == StarToCon(PlanetToStar(PlanetPirateClan()))) continue;",
              "            for(j = 0; j < ConStars(s); j = j + 1)",
              "            {",
              "                cur_star = ConStar(s, j);",
              "                //Пропускаем не коалиционные системы",
              "                if(StarOwner(cur_star) != 0) continue;",
              "                if(StarCustomFaction(cur_star) != '') continue;",
              "                mark2 = 1;",
              "                //Проверяем, не действует ли в данном секторе какой-то другой дредноут",
              "                for(tint2 = 1; tint2 < ArrayDim(GDreadnoughtArray); tint2 = tint2 + 1)",
              "                {",
              "                    if(Id(s) == GDreadnoughtArray[tint2])",
              "                    {",
              "                        mark2 = 0;",
              "                        break;",
              "                    }",
              "                }",
              "                if(!mark2) continue;",
              "                //Заносим все подходящие сектора (сектора со свободными системами и без дредноута) во временный массив",
              "                ArrayAdd(temp_array, s);",
              "                mark = 1;",
              "            }",
              "        }",
              "        //После того как все подходящие сектора определены, выбираем из них случайный",
              "        if(mark)",
              "        {",
              "            //После чего подбираем случайную систему из этого сектора",
              "            s = temp_array[Rnd(1, ArrayDim(temp_array) - 1)];",
              "            ArrayClear(temp_array);",
              "            for(j = 0; j < ConStars(s); j = j + 1)",
              "            {",
              "                cur_star = ConStar(s, j);",
              "                //Пропускаем не коалиционные системы",
              "                if(StarOwner(cur_star) != 0) continue;",
              "                if(StarCustomFaction(cur_star) != '') continue;",
              "",
              "                //Заносим все подходящие во временный массив",
              "                ArrayAdd(temp_array, cur_star);",
              "            }",
              "",
              "            cur_star = temp_array[Rnd(1, ArrayDim(temp_array) - 1)];",
              "            //И приступаем к выбору самой развитой (по её общему ТУ) планеты в этой системе",
              "            mark = 0;",
              "            for(j = 0; j < StarPlanets(cur_star); j = j + 1)",
              "            {",
              "                k = StarPlanets(cur_star, j);",
              "                if(PlanetOwner(k) == 6) continue;",
              "                mark2 = PlanetInventionLevel(k, 7);",
              "                if(mark2 > mark)",
              "                {",
              "                    mark = mark2;",
              "                    cur_planet = k;",
              "                }",
              "                //Добавляем небольшую рандомизацию планеты в случае, если ТУ подходящих планет совпадают",
              "                else if(mark2 == mark)",
              "                {",
              "                    if(Rnd(1, 100) <= 50) cur_planet = k;",
              "                }",
              "            }",
              "",
              "            //Спавним дредноут на выбранной планете",
              "            dwd0 = SpawnDreadnought(cur_planet, 800 - GalaxyDiffLevels());",
              "            AddPlanetNews(Format(CT('Script.Mod_EvoArmada.DreadnoughtWasLaunched' + PlanetOwner(cur_planet)),",
              "                                                                                    '<Planet'+'>', Name(cur_planet),",
              "                                                                                    '<Star'+'>', Name(cur_star),",
              "                                                                                    '<Dreadnought'+'>', ShipName(dwd0),",
              "                                                                                    '<Sector'+'>', Name(StarToCon(cur_star))));",
              "            ShipJoin(Dreadnought, dwd0);",
              "            //Прокручиваем общий счётчик дредноутов в Галактике",
              "            GDreadnoughtArray[0] = 0 + GDreadnoughtArray[0] + 1;",
              "            //И заносим Id текущего сектора в список секторов с дредноутом",
              "            GDreadnoughtArray[GDreadnoughtArray[0]] = Id(s);",
              "",
              "            //Обновляем таймер до следующей проверки на спавн дредноута",
              "            DreadnoughtSpawnCount = CurTurn() + Rnd(328, 453);",
              "        }",
              "        //Если не нашли подходящих секторов для спавна дредноута",
              "        else",
              "        {",
              "            //Обновляем таймер до следующей проверки на спавн дредноута",
              "            DreadnoughtSpawnCount = CurTurn() + Rnd(133, 165);",
              "        }",
              "    }",
              "}",
              "",
              "//Цикл, раздающий различным кораблям дополнительные залпы и бонусы",
              "if(GalaxyShipId() > lastShipId)",
              "{",
              "    if(!ShuDomiksInit) tint = BuildListOfNewShips(temp_array, lastShipId, 1+8+16+64+128+256+512+1024+2048+4096+8192, 1+2+4+8+16+32+128, 1, ',SubFactionPlayerMercsFixedStanding', ',TC,SSB,BM,MB,Manaan');",
              "    else tint = BuildListOfNewShips(temp_array, lastShipId, 8+16+64+128+256+512+1024+2048+4096+8192, 1+2+4+8+16+128, 1, ',SubFactionPlayerMercsFixedStanding', ',TC,SSB,BM,MB,Manaan,PlayerMB,PlayerMB_licensed');",
              "",
              "    //Если нашли хоть один новый корабль",
              "    if(tint)",
              "    {",
              "        for(i = 0; i < ArrayDim(temp_array); i = i + 1)",
              "        {",
              "            cur_ship = temp_array[i];",
              "",
              "            //Сразу исключаем все скриптовые корабли (нет, потому что большинство ванильных станций находится в скриптах)",
              "            //if(ShipInScript(cur_ship, 0)) continue;",
              "",
              "            AddExtraAttacksToShip(cur_ship, ShipOwner(cur_ship), ShipTypeN(cur_ship), ShipType(cur_ship), ShipSubType(cur_ship));",
              "        }",
              "",
              "        //Незначительно увеличиваем таймеры спавна фрегатов и галеонов, если в текущем проходе цикла ни один пират ими так и не стал",
              "        //(необходимо в целях оптимизации)",
              "        if(FrigateSpawnCount <= CurTurn()) FrigateSpawnCount = CurTurn() + Rnd(20, 40);",
              "        if(GalleonSpawnCount <= CurTurn()) GalleonSpawnCount = CurTurn() + Rnd(30, 60);",
              "    }",
              "",
              "    lastShipId = GalaxyShipId();",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  -30,
          "Parent":  13,
          "#":  21,
          "Total.Lines":  148,
          "Code.Type":  "Turn",
          "Code":          
          [
              "OrderLock(CurShip, 1);",
              "//Текущая система",
              "s = ShipStar(CurShip);",
              "//Текущий сектор",
              "cur_con = StarToCon(s);",
              "//Домашняя система",
              "k = GalaxyStar(ShipCustomShipInfoTextData(CurShip, 'Dreadnought_Infos', 2));",
              "tstr = ShipCustomShipInfoTextData(CurShip, 'Dreadnought_Infos', 3);",
              "//Выставляем маркер о том, что дредноут прибыл в новую систему и должен совершить её облёт",
              "mark = 0;",
              "if(Id(s) != ShipCustomShipInfoData(CurShip,'Dreadnought_Infos', 2))",
              "{",
              "    //Не считая домашней системы",
              "    if(s != k) mark = 1;",
              "    ShipCustomShipInfoData(CurShip, 'Dreadnought_Infos', 2, Id(s));",
              "}",
              "//Отправляем дредноут на облёт системы при обнаружении у него соответствующего маркера",
              "if(mark)",
              "{",
              "    mark = 0;",
              "    OrderLock(CurShip, 0);",
              "    ChangeState('DreadnoughtOnRoute');",
              "    exit;",
              "}",
              "//Если патруль ещё не начался, то начинаем его",
              "if(tstr == 'AtHome')",
              "{",
              "    i = 0;",
              "    cur_star = s;",
              "    next_star = 0;",
              "    mark = 0;",
              "    while(1)",
              "    {",
              "        if(ConStar(cur_con, i) == cur_star)",
              "        {",
              "            //Если впереди ещё есть система, выбирается она",
              "            if(i + 1 < ConStars(cur_con)) next_star = ConStar(cur_con, i + 1);",
              "            //Если нет, то выбирается нулевая",
              "            else",
              "            {",
              "                next_star = ConStar(cur_con, 0);",
              "                i = -1;",
              "            }",
              "            //Если дошли до текущей системы, в которой находится дредноут",
              "            if(next_star == s)",
              "            {",
              "                //Если не нашли систем, пригодных для проведения патруля (цикл вернулся к изначальной)",
              "                if(mark)",
              "                {",
              "                    next_star = 0;",
              "                    break;",
              "                }",
              "                //Иначе ставим маркер о первом \"посещении\" циклом изначальной системы",
              "                mark = 1;",
              "            }",
              "            //Если следующая в списке система Коалиционная, то останавливаем цикл",
              "            else if(StarOwner(next_star) == 0) break;",
              "            //Иначе переносим счётчик на следующую систему",
              "            cur_star = next_star;",
              "        }",
              "",
              "        i = i + 1;",
              "    }",
              "    if(!next_star)",
              "    {",
              "        OrderLock(CurShip, 0);",
              "        //Выставляем таймер до проведения следующей проверки на выход в патруль и маркер о нахождении дредноута в домашней системе",
              "        ShipCustomShipInfoData(CurShip, 'Dreadnought_Infos', 1, CurTurn() + Rnd(15, 30));",
              "        ChangeState('DreadnoughtAtHome');",
              "        exit;",
              "    }",
              "    else",
              "    {",
              "        OrderJump(CurShip, next_star);",
              "        ShipCustomShipInfoTextData(CurShip, 'Dreadnought_Infos', 3, 'OnPatrol');",
              "    }",
              "}",
              "//Иначе продолжаем расчёт маршрута",
              "else",
              "{",
              "    //Если дредноут провёл патруль и вернулся в домашнюю систему",
              "    if(s == k)",
              "    {",
              "        if(tstr == 'OnPatrol')",
              "        {",
              "            //Выставляем таймер до проведения следующего патруля и маркер о нахождении дредноута в домашней системе",
              "            OrderLock(CurShip, 0);",
              "            ShipCustomShipInfoData(CurShip, 'Dreadnought_Infos', 1, CurTurn() + Rnd(60, 80));",
              "            ShipCustomShipInfoTextData(CurShip, 'Dreadnought_Infos', 3, 'AtHome');",
              "            ChangeState('DreadnoughtAtHome');",
              "            exit;",
              "        }",
              "    }",
              "    //Если корабль ещё не получил приказ на прыжок в следующую маршрутную систему",
              "    if(ShipOrder(CurShip) != 3)",
              "    {",
              "        i = 0;",
              "        cur_star = s;",
              "        next_star = 0;",
              "        mark = 0;",
              "        while(1)",
              "        {",
              "            if(ConStar(cur_con, i) == cur_star)",
              "            {",
              "                //Если впереди ещё есть система, выбирается она",
              "                if(i + 1 < ConStars(cur_con)) next_star = ConStar(cur_con, i + 1);",
              "                //Если нет, то выбирается нулевая",
              "                else",
              "                {",
              "                    next_star = ConStar(cur_con, 0);",
              "                    i = -1;",
              "                }",
              "                //Если дошли до текущей системы, в которой находится дредноут",
              "                if(next_star == s)",
              "                {",
              "                    //Если не нашли систем, пригодных для проведения патруля (цикл вернулся к изначальной)",
              "                    if(mark)",
              "                    {",
              "                        next_star = 0;",
              "                        break;",
              "                    }",
              "                    //Иначе ставим маркер о первом \"посещении\" циклом изначальной системы",
              "                    mark = 1;",
              "                }",
              "                //Если следующая в списке система Коалиционная, то останавливаем цикл",
              "                else if(StarOwner(next_star) == 0) break;",
              "                //Иначе переносим счётчик на следующую систему",
              "                cur_star = next_star;",
              "            }",
              "",
              "            i = i + 1;",
              "        }",
              "        //Если следующей маршрутной точки не обнаружено (все системы захвачены)",
              "        if(!next_star)",
              "        {",
              "            //Если текущая система свободна от захватчиков, то возвращаем дредноут на отвоевание домашней системы",
              "            if(!StarBattle(s)) OrderJump(CurShip, k);",
              "            //Иначе заставляем его сперва принять бой",
              "            else",
              "            {",
              "                OrderLock(CurShip, 0);",
              "                ChangeState('DreadnoughtInBattle');",
              "                exit;",
              "            }",
              "        }",
              "        else OrderJump(CurShip, next_star);",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  70,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  39,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "OrderLock(CurShip, 0);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  400,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  60,
          "Total.Lines":  36,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//GetData(0) - таймер до начала следующего патруля",
              "//GetData(3) - ГТУ, на котором данный корабль последний раз обновлял размер корпуса",
              "",
              "if(ShipInHyperSpace(CurShip)) exit;",
              "",
              "//Обновляем размер корпуса галеона при повышении ГТУ",
              "if(GetData(3) < GalaxyTechLevel())",
              "{",
              "    if(GetShipPlanet(CurShip))",
              "    {",
              "        dword hull = ShipItems(CurShip, 0);",
              "        ItemLevel(hull, GalaxyTechLevel());",
              "        //Задаём размер корпуса галеона в зависимости от сложности пиратов и текущего ТУ",
              "        ItemSize(hull, round((0.00085 * GalaxyDiffLevels(0) + 1) * GalaxyTechLevel() * 1050) + RndObject(-75, 125, CurShip));",
              "        //На всякий случай, устанавливаем минимальный размер корпуса в 3000",
              "        if(ItemSize(hull) < 3000) ItemSize(hull, 3000);",
              "        HullHP(hull, ItemSize(hull));",
              "",
              "        SetData(GalaxyTechLevel(), 3);",
              "    }",
              "}",
              "",
              "//Если время \"отдыха\" подошло к концу, отправляем галеон в патруль",
              "if(GetData(0) <= CurTurn())",
              "{",
              "    SetData(CurTurn() + RndObject(10, 20, CurShip), 0);",
              "    OrderLock(CurShip, 0);",
              "    ChangeState('GalleonOnPatrol');",
              "}",
              "//Если в текущей системе начался бой, переводим галеон в боевой (свободный) стейт",
              "else if(StarBattle(ShipStar(CurShip)))",
              "{",
              "    OrderTakeOff(CurShip);",
              "    OrderLock(CurShip, 0);",
              "    ChangeState('GalleonInBattle');",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  400,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  61,
          "Total.Lines":  19,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(ShipInHyperSpace(CurShip)) exit;",
              "",
              "//Если в патрулируемой системе начался бой, переводим галеон в боевой (свободный) стейт",
              "if(StarBattle(ShipStar(CurShip)) || ShipOrder(CurShip) == 6)",
              "{",
              "    OrderLock(CurShip, 0);",
              "    ChangeState('GalleonInBattle');",
              "}",
              "//Если время патруля подошло к концу, отправляем галеон на ближайшую заселённую планету",
              "else if(GetData(0) <= CurTurn())",
              "{",
              "    OrderLock(CurShip, 1); //Блокируем общий приказ патрулирования, выдаваемый текущим стейтом",
              "    OrderLanding(CurShip, NearCivilPlanet(CurShip));",
              "    if(GetShipPlanet(CurShip))",
              "    {",
              "        SetData(CurTurn() + RndObject(15, 30, CurShip), 0);",
              "        ChangeState('GalleonAtHome');",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  400,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  62,
          "Total.Lines":  9,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(ShipInHyperSpace(CurShip)) exit;",
              "",
              "OrderLock(CurShip, 0);",
              "//Если бой в текущей системе завершился, переводим галеон в патрульный стейт и выставляем маркер о необходимости вернуться на планету",
              "if(!StarBattle(ShipStar(CurShip)) && ShipOrder(CurShip) != 6)",
              "{",
              "    SetData(0, 0);",
              "    ChangeState('GalleonOnPatrol');",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  400,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  70,
          "Total.Lines":  35,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//GetData(0) - таймер до начала следующего патруля",
              "//GetData(3) - ГТУ, на котором данный корабль последний раз обновлял размер корпуса",
              "",
              "if(ShipInHyperSpace(CurShip)) exit;",
              "",
              "//Обновляем размер корпуса фрегата при повышении ГТУ",
              "if(GetData(3) < GalaxyTechLevel())",
              "{",
              "    if(GetShipPlanet(CurShip))",
              "    {",
              "        dword hull = ShipItems(CurShip, 0);",
              "        ItemLevel(hull, GalaxyTechLevel());",
              "        ItemSize(hull, round((0.00085 * GalaxyDiffLevels(0) + 1) * GalaxyTechLevel() * 625) + RndObject(-60, 100, CurShip));",
              "        //На всякий случай, устанавливаем минимальный размер корпуса в 1750",
              "        if(ItemSize(hull) < 1750) ItemSize(hull, 1750);",
              "        HullHP(hull, ItemSize(hull));",
              "",
              "        SetData(GalaxyTechLevel(), 3);",
              "    }",
              "}",
              "",
              "//Если время \"отдыха\" подошло к концу, отправляем фрегат в патруль",
              "if(GetData(0) <= CurTurn())",
              "{",
              "    SetData(CurTurn() + RndObject(8, 16, CurShip), 0);",
              "    OrderLock(CurShip, 0);",
              "    ChangeState('FrigateOnPatrol');",
              "}",
              "//Если в текущей системе начался бой, переводим фрегат в боевой (свободный) стейт",
              "else if(StarBattle(ShipStar(CurShip)))",
              "{",
              "    OrderTakeOff(CurShip);",
              "    OrderLock(CurShip, 0);",
              "    ChangeState('FrigateInBattle');",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  400,
          "Pos.y":  440,
          "Parent":  -1,
          "#":  71,
          "Total.Lines":  19,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(ShipInHyperSpace(CurShip)) exit;",
              "",
              "//Если в патрулируемой системе начался бой, переводим фрегат в боевой (свободный) стейт",
              "if(StarBattle(ShipStar(CurShip)) || ShipOrder(CurShip) == 6)",
              "{",
              "    OrderLock(CurShip, 0);",
              "    ChangeState('FrigateInBattle');",
              "}",
              "//Если время патруля подошло к концу, отправляем фрегат на ближайшую заселённую планету",
              "else if(GetData(0) <= CurTurn())",
              "{",
              "    OrderLock(CurShip, 1); //Блокируем общий приказ патрулирования, выдаваемый текущим стейтом",
              "    OrderLanding(CurShip, NearCivilPlanet(CurShip));",
              "    if(GetShipPlanet(CurShip))",
              "    {",
              "        SetData(CurTurn() + RndObject(10, 20, CurShip), 0);",
              "        ChangeState('FrigateAtHome');",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  400,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  72,
          "Total.Lines":  9,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(ShipInHyperSpace(CurShip)) exit;",
              "",
              "OrderLock(CurShip, 0);",
              "//Если бой в текущей системе завершился, переводим фрегат в патрульный стейт и выставляем маркер о необходимости вернуться на планету",
              "if(!StarBattle(ShipStar(CurShip)) && ShipOrder(CurShip) != 6)",
              "{",
              "    SetData(0, 0);",
              "    ChangeState('FrigateOnPatrol');",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  620,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  74,
          "Total.Lines":  20,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "cur_ship = GetTalkShip();",
              "if(cur_ship)",
              "{",
              "    if(!TalkByAI())",
              "    {",
              "        if(ShipTypeN(cur_ship) == t_Pirate)",
              "        {",
              "            tstr = ShipType(cur_ship);",
              "            if(tstr == 'PirateCorvette' || tstr == 'PirateFrigate' || tstr == 'PirateGalleon')",
              "            {",
              "                //Блокируем вывод ответов о предложении партнёрства пиратским крупным судам",
              "                for(i = 0; i <= 3; i = i + 1)",
              "                {",
              "                    if(!i) AddDialogBlock(CT('Talk.Pirate.PlayerSend'), 2);",
              "                    else AddDialogBlock(CT('Talk.Pirate.PlayerSend' + i), 2);",
              "                }",
              "            }",
              "        }",
              "    }",
              "}"          
          ]        
        }      
      ],
      "Places":      
      [
        {
          "Type":  "TPlace",
          "Name":  "DreadnoughtRoute",
          "Pos.x":  160,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  41,
          "Place.Type":  0,
          "Angle":  "0",
          "Dist":  "0,5",
          "Radius":  720,
          "Obj1":  -1,
          "Obj2":  -1        
        },
        {
          "Type":  "TPlace",
          "Name":  "GalleonPatrol",
          "Pos.x":  290,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  56,
          "Place.Type":  0,
          "Angle":  "0",
          "Dist":  "0,5",
          "Radius":  1200,
          "Obj1":  -1,
          "Obj2":  -1        
        },
        {
          "Type":  "TPlace",
          "Name":  "FrigatePatrol",
          "Pos.x":  290,
          "Pos.y":  440,
          "Parent":  -1,
          "#":  73,
          "Place.Type":  0,
          "Angle":  "0",
          "Dist":  "0,5",
          "Radius":  1800,
          "Obj1":  -1,
          "Obj2":  -1        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "SpawnPlanet",
          "Pos.x":  420,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  1,
          "Race":  62,
          "Owner":  256,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  390,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  2,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "SpawnStar",
          "Pos.x":  290,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  0,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "Statements":      
      [
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  120,
          "Pos.y":  610,
          "Parent":  -1,
          "#":  16,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "Rnd(1, 100) <= 15"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  120,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  17,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipInNormalSpace(CurShip)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  120,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  18,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!StarBattle(ShipStar(CurShip))"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  -20,
          "Parent":  21,
          "#":  19,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "StarBattle(s)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  70,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  20,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!StarBattle(ShipStar(CurShip))"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -30,
          "Pos.y":  0,
          "Parent":  13,
          "#":  22,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  640,
          "Pos.y":  320,
          "Parent":  -1,
          "#":  30,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!ShipIsTakeoff(Player())"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -30,
          "Pos.y":  0,
          "Parent":  20,
          "#":  36,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  120,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  38,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipCustomShipInfoData(CurShip, 'Dreadnought_Infos', 1) <= CurTurn()"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  10,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  42,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "StarBattle(ShipStar(CurShip))"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  70,
          "Pos.y":  710,
          "Parent":  -1,
          "#":  43,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "EndState"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  10,
          "Pos.y":  710,
          "Parent":  -1,
          "#":  44,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "DreadnoughtOnPatrol",
          "Pos.x":  -50,
          "Pos.y":  50,
          "Parent":  16,
          "#":  13,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "DreadnoughtInBattle",
          "Pos.x":  70,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  14,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "DreadnoughtAtHome",
          "Pos.x":  160,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  15,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "DreadnoughtOnRoute",
          "Pos.x":  10,
          "Pos.y":  680,
          "Parent":  -1,
          "#":  40,
          "Move":  1,
          "MoveObj":  41,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "PlayerState",
          "Pos.x":  420,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  45,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "GalleonAtHome",
          "Pos.x":  420,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  57,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "GalleonInBattle",
          "Pos.x":  420,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  58,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "GalleonOnPatrol",
          "Pos.x":  420,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  59,
          "Move":  1,
          "MoveObj":  56,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "FrigateAtHome",
          "Pos.x":  420,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  67,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "FrigateOnPatrol",
          "Pos.x":  420,
          "Pos.y":  440,
          "Parent":  -1,
          "#":  68,
          "Move":  1,
          "MoveObj":  73,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "FrigateInBattle",
          "Pos.x":  420,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  69,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "i",
          "Pos.x":  580,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  5,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_star",
          "Pos.x":  700,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  6,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_planet",
          "Pos.x":  700,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  7,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_item",
          "Pos.x":  700,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  8,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "s",
          "Pos.x":  640,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  9,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "k",
          "Pos.x":  640,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  11,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "j",
          "Pos.x":  580,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  23,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_array",
          "Pos.x":  700,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  24,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint",
          "Pos.x":  580,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  25,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GDreadnoughtArray",
          "Pos.x":  660,
          "Pos.y":  320,
          "Parent":  -1,
          "#":  26,
          "Var.Type":  "Array",
          "Init":  "7",
          "Global":  true        
        },
        {
          "Type":  "TVar",
          "Name":  "tint2",
          "Pos.x":  580,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  27,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "mark",
          "Pos.x":  580,
          "Pos.y":  490,
          "Parent":  -1,
          "#":  28,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DreadnoughtSpawnCount",
          "Pos.x":  580,
          "Pos.y":  530,
          "Parent":  -1,
          "#":  29,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_array2",
          "Pos.x":  700,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  31,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "mark2",
          "Pos.x":  640,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  32,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_con",
          "Pos.x":  790,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  33,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "next_star",
          "Pos.x":  790,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  34,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr",
          "Pos.x":  880,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  35,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "fucking_crutch",
          "Pos.x":  580,
          "Pos.y":  590,
          "Parent":  -1,
          "#":  37,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_count",
          "Pos.x":  580,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  47,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "dwd0",
          "Pos.x":  640,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  48,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GTL",
          "Pos.x":  580,
          "Pos.y":  620,
          "Parent":  -1,
          "#":  49,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GeneralDiffLevel",
          "Pos.x":  580,
          "Pos.y":  640,
          "Parent":  -1,
          "#":  50,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ship",
          "Pos.x":  700,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  51,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ShuDomiksInit",
          "Pos.x":  580,
          "Pos.y":  670,
          "Parent":  -1,
          "#":  52,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "lastShipId",
          "Pos.x":  580,
          "Pos.y":  690,
          "Parent":  -1,
          "#":  53,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint3",
          "Pos.x":  580,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  54,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GalleonSpawnCount",
          "Pos.x":  580,
          "Pos.y":  550,
          "Parent":  -1,
          "#":  63,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GGalleonArray",
          "Pos.x":  660,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  64,
          "Var.Type":  "Array",
          "Init":  "5",
          "Global":  true        
        },
        {
          "Type":  "TVar",
          "Name":  "FrigateSpawnCount",
          "Pos.x":  580,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  65,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  2,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  1,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  12,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  12,
      "End":  15,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  17,
      "End":  18,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  13,
      "End":  21,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  21,
      "End":  19,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  22,
      "End":  13,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  30,
      "End":  10,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  15,
      "End":  17,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  16,
      "End":  13,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  14,
      "End":  20,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  20,
      "End":  36,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  36,
      "End":  22,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  38,
      "End":  16,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  19,
      "End":  39,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  39,
      "End":  14,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  42,
      "End":  14,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  43,
      "End":  13,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  41,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  18,
      "End":  38,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  44,
      "End":  43,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  46,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  46,
      "End":  45,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  40,
      "End":  44,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  55,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  56,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  55,
      "End":  57,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  57,
      "End":  60,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  59,
      "End":  61,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  58,
      "End":  62,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  66,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  66,
      "End":  67,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  73,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  67,
      "End":  70,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  68,
      "End":  71,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  69,
      "End":  72,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  40,
      "End":  42,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "BlockPar.EC.Total.Strings":  0,
  "BlockPar.EC":  
  [
  
  ]
}