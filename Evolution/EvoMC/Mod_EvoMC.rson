{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -741,
  "ViewPos.y":  -9,
  "ScriptName":  "Mod_EvoMC",
  "ScriptFileOut":  "H:\\Mod_EvoMC.scr",
  "ScriptTextOut":  "H:\\Mod_EvoMC.txt",
  "GraphPoint.Count":  151,
  "GraphLink.Count":  120,
  "GraphRectText.Count":  5,
  "Variables.Count":  33,
  "Stars.Count":  1,
  "Planets.Count":  1,
  "Ships.Count":  1,
  "States.Count":  1,
  "Groups.Count":  1,
  "Places.Count":  0,
  "Items.Count":  0,
  "Ethers.Count":  0,
  "Dialogs.Count":  11,
  "DialogMessages.Count":  20,
  "DialogAnswers.Count":  18,
  "Operations.Count":  27,
  "Statements.Count":  37,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "DialogAnswers":      
      [
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  400,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  9,
          "Msg":  "<input>",
          "AMsg.Num":  "0"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  400,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  10,
          "Msg":  "<input>",
          "AMsg.Num":  "1"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  400,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  11,
          "Msg":  "<input>",
          "AMsg.Num":  "2"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  400,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  12,
          "Msg":  "<input>",
          "AMsg.Num":  "3"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  400,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  16,
          "Msg":  "Ну хоть пробничек дайте! Что... не положено... Ну тогда пока",
          "AMsg.Num":  "4"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  170,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  27,
          "Msg":  "Уйти из магазина медикаментов",
          "AMsg.Num":  "5"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  490,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  47,
          "Msg":  "",
          "AMsg.Num":  "6"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  400,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  65,
          "Msg":  "<input>",
          "AMsg.Num":  "7"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  400,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  68,
          "Msg":  "",
          "AMsg.Num":  "8"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "fastexit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  78,
          "#":  79,
          "Msg":  "",
          "AMsg.Num":  "9"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  87,
          "#":  90,
          "Msg":  "<tstr1>",
          "AMsg.Num":  "10"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  91,
          "#":  92,
          "Msg":  "",
          "AMsg.Num":  "11"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  108,
          "#":  104,
          "Msg":  "",
          "AMsg.Num":  "12"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  105,
          "#":  107,
          "Msg":  "<tstr1>",
          "AMsg.Num":  "13"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  126,
          "#":  127,
          "Msg":  "",
          "AMsg.Num":  "14"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  132,
          "#":  133,
          "Msg":  "",
          "AMsg.Num":  "15"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  142,
          "#":  143,
          "Msg":  "",
          "AMsg.Num":  "16"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  147,
          "#":  148,
          "Msg":  "",
          "AMsg.Num":  "17"        
        }      
      ],
      "DialogMessages":      
      [
        {
          "Type":  "TDialogMsg",
          "Name":  "no_mo",
          "Pos.x":  200,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  15,
          "Msg":  "Рейнджер, у вас нет денег для покупки наших медикаментов.",
          "DMsg.Num":  "0"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "mag",
          "Pos.x":  150,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  26,
          "Msg":  "Медикаменты, согласно пункту <clr>18/2<clrEnd> параграфа <clr>744<clrEnd> медицинского кодекса, предписаны исключительно для использования в чрезвычайных ситуаций, когда оказать врачебную помощь медикам в космосе невозможно.\r\nРассматривая данную ситуацию как патологически опасную для наших народов, мы можем допустить продажу <MaxMed> различных медикаментов в год.\r\nПо нашим данным в этом году вы приобрели <CurMed> ед. медикаментов. Итого вы можете купить <TotalMed> ед. любого препарата.\r\nВот что у нас есть на данный момент: <input>",
          "DMsg.Num":  "1"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "stop",
          "Pos.x":  310,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  37,
          "Msg":  "По нашим данным в этом году вы приобрели <MaxMed> ед. медикаментов. До конца года вы не можете приобрести медикаменты, поскольку исчерпали ваш лимит (<CurMed> ед.).\r\nЖдём вас в следующем году.",
          "DMsg.Num":  "2"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  450,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  46,
          "Msg":  "Отличный выбор.\r\nПомните, что медикаменты опасны для здоровья. Они вызывают привыкание, можно и наркоманом стать, да и летальные исходы не редкость.\r\nНо еще лучше вести здоровый образ жизни, поддерживать свое тело в хорошей физической форме. Для души читайте устав рейнджеров и занимайтесь медитацией!",
          "DMsg.Num":  "3"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "no_policy",
          "Pos.x":  310,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  67,
          "Msg":  "Согласно пункту <clr>1/2<clrEnd> параграфа <clr>10<clrEnd> медицинского кодекса, медикаменты отпускаются только при наличии действующего медицинского полиса.",
          "DMsg.Num":  "4"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  170,
          "Pos.y":  420,
          "Parent":  -1,
          "#":  73,
          "Msg":  "На данный момент у нас закончились медикаменты, которые мы можем вам продать. Дождитесь следующей партии или зайдите в мед. пункт на прием стимулятора.",
          "DMsg.Num":  "5"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  77,
          "#":  78,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "6"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  84,
          "#":  85,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "7"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  90,
          "#":  91,
          "Msg":  "<tstr2>",
          "DMsg.Num":  "8"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  94,
          "#":  95,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "9"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  100,
          "#":  101,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "10"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  107,
          "#":  108,
          "Msg":  "<tstr2>",
          "DMsg.Num":  "11"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  111,
          "#":  112,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "12"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  117,
          "#":  118,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "13"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  124,
          "#":  126,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "14"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  125,
          "#":  128,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "15"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  131,
          "#":  132,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "16"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  140,
          "#":  141,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "17"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  139,
          "#":  142,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "18"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  149,
          "#":  147,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "19"        
        }      
      ],
      "Dialogs":      
      [
        {
          "Type":  "TDialog",
          "Name":  "DialogMC",
          "Pos.x":  150,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  7        
        },
        {
          "Type":  "TDialog",
          "Name":  "YellowShroudDialog",
          "Pos.x":  0,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  76        
        },
        {
          "Type":  "TDialog",
          "Name":  "VaccinationsDialog",
          "Pos.x":  -280,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  82        
        },
        {
          "Type":  "TDialog",
          "Name":  "VaccinationMadeDialog",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  87,
          "#":  93        
        },
        {
          "Type":  "TDialog",
          "Name":  "StimulantsRemovalDialog",
          "Pos.x":  -280,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  99        
        },
        {
          "Type":  "TDialog",
          "Name":  "StimulantWasRemovedDialog",
          "Pos.x":  20,
          "Pos.y":  40,
          "Parent":  99,
          "#":  110        
        },
        {
          "Type":  "TDialog",
          "Name":  "AllStimulantsWasRemovedDialog",
          "Pos.x":  60,
          "Pos.y":  60,
          "Parent":  99,
          "#":  116        
        },
        {
          "Type":  "TDialog",
          "Name":  "StimulantsTakingDialog",
          "Pos.x":  -450,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  121        
        },
        {
          "Type":  "TDialog",
          "Name":  "IllnessesRemovalDialog",
          "Pos.x":  -450,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  122        
        },
        {
          "Type":  "TDialog",
          "Name":  "StimulantTakeDialog",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  121,
          "#":  130        
        },
        {
          "Type":  "TDialog",
          "Name":  "IllnessRemoveDialog",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  122,
          "#":  145        
        }      
      ],
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "PlayerGroup",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  1,
          "#":  4,
          "Owner":  62,
          "Group.Type":  0,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -150,
          "Pos.y":  520,
          "Parent":  -1,
          "#":  5,
          "Total.Lines":  1,
          "Code.Type":  "Global",
          "Code":          
          [
              "GRun();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  21,
          "#":  6,
          "Total.Lines":  37,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "cur_ruin = GetShipRuins(Player());",
              "if(cur_ruin)",
              "{",
              "    if(ShipType(cur_ruin) == 'MC')",
              "    {",
              "        AddDialogBlock('HideThisAnswer', 2);",
              "        pirateMC = StarOwner(ShipStar(cur_ruin));",
              "",
              "        tstr1 = CT('FormRuins.MC.Illnes.PlayerAskMedExam');",
              "        AddDialogInject('IllnessesRemovalDialog', '', tstr1, 30);",
              "        tstr1 = CT('Script.Mod_EvoMC.VaccinationDialog.PlayerAskVaccination');",
              "        AddDialogInject('VaccinationsDialog', '', tstr1, 25);",
              "        tstr1 = CT('FormRuins.MC.Stimulants.PlayerAskStim');",
              "        AddDialogInject('StimulantsTakingDialog', '', tstr1, 20);",
              "        tstr1 = CT('Script.Mod_EvoMC.StimulantsRemovalDialog.PlayerAskStimulantsRemoval');",
              "        AddDialogInject('StimulantsRemovalDialog', '', tstr1, 15);",
              "",
              "        MaxMed = 1 + ShipRank(Player()) / 2;",
              "        TotalMed = MaxMed - CurMed;",
              "        AddDialogInject('DialogMC', '', \"Закупиться медикаментами\", 10);",
              "    }",
              "}",
              "else",
              "{",
              "    cur_ship = GetTalkShip();",
              "    if(cur_ship)",
              "    {",
              "        if(TalkByAI())",
              "        {",
              "            //Если игрока вызывает корабль, облитый уриной (ожидаемо, обливал сам игрок), подменяем реплику",
              "            if(~ShipFindCustomShipInfoByType(cur_ship, 'EvoMC_YellowShroud'))",
              "            {",
              "                AddDialogOverride('YellowShroudDialog', 2552160);",
              "            }",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  520,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  17,
          "Total.Lines":  10,
          "Code.Type":  "Turn",
          "Code":          
          [
              "urine = urine + 1;",
              "CurMed = CurMed + 1;",
              "cost = 0.8 * GalaxyMoney(2, ShipOwner(GetShipRuins(Player())));",
              "//item = CreateQuestItem('Usl_Urine');",
              "//ItemCost(item, 1);",
              "//ItemSize(item, 1);",
              "item = CreateCustomArt('UrineTincture', 1, 1, RndObject(Maloc, Gaal, GetShipRuins(Player())));",
              "AddItemToShip(Player(), item);",
              "ShipMoney(Player(), ShipMoney(Player()) - cost);",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  520,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  18,
          "Total.Lines":  11,
          "Code.Type":  "Turn",
          "Code":          
          [
              "usl=5+variable2;",
              "unknown2=variable2;",
              "variable2=-1;",
              "CurMed=CurMed+1;",
              "cost=0.815*GalaxyMoney(2,ShipOwner(GetShipRuins(Player())));",
              "item=CreateQuestItem(drugs[usl]);",
              "ItemCost(item,cost);",
              "ItemSize(item,1);",
              "AddItemToShip(Player(),item);",
              "ShipMoney(Player(),ShipMoney(Player())-cost);",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  520,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  20,
          "Total.Lines":  11,
          "Code.Type":  "Turn",
          "Code":          
          [
              "usl=11+variable3;",
              "unknown3=variable3;",
              "variable3=-1;",
              "CurMed=CurMed+1;",
              "cost=0.813*GalaxyMoney(2,ShipOwner(GetShipRuins(Player())));",
              "item=CreateQuestItem(drugs[usl]);",
              "ItemCost(item,cost);",
              "ItemSize(item,1);",
              "AddItemToShip(Player(),item);",
              "ShipMoney(Player(),ShipMoney(Player())-cost);",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  5,
          "#":  21,
          "Total.Lines":  46,
          "Code.Type":  "Init",
          "Code":          
          [
              "drugs = newarray(18);",
              "drugs[0] = 'Usl_Urine';",
              "drugs[1] = 'Usl_Drug01';",
              "drugs[2] = 'Usl_Drug02';",
              "drugs[3] = 'Usl_Drug03';",
              "drugs[4] = 'Usl_Drug04';",
              "drugs[5] = 'Usl_Drug05';",
              "drugs[6] = 'Usl_Drug06';",
              "drugs[7] = 'Usl_Drug07';",
              "drugs[8] = 'Usl_Drug08';",
              "drugs[9] = 'Usl_Drug09';",
              "drugs[10] = 'Usl_Drug10';",
              "drugs[11] = 'Usl_Drug11';",
              "drugs[12] = 'Usl_Drug12';",
              "drugs[13] = 'Usl_Drug13';",
              "drugs[14] = 'Usl_Drug14';",
              "drugs[15] = 'Usl_Drug15';",
              "drugs[16] = 'Usl_Drug16';",
              "drugs[17] = 'Usl_Drug17';",
              "",
              "//Расчёт выполнен немного ебануто, но в оригинале он ещё и написан коряво",
              "function CalcTreatmentCost(int constant, int min_cost, int max_cost, float coef_percent, int seed)",
              "{",
              "    int cur_cost1 = 0;",
              "    if(!constant) cur_cost1 = min_cost;",
              "    else if(constant == 1) cur_cost1 = (min_cost + (min_cost + max_cost) / 2) / 2;",
              "    else if(constant == 2) cur_cost1 = (min_cost + max_cost) / 2;",
              "    else if(constant == 3) cur_cost1 = (((min_cost + max_cost) / 2) + max_cost) / 2;",
              "    else if(constant == 4) cur_cost1 = max_cost;",
              "    else",
              "    {",
              "        result = -1;",
              "        exit;",
              "    }",
              "",
              "    if(Rnd(0, 1, seed + cur_cost1))",
              "    {",
              "        int cur_cost2 = min(max_cost, cur_cost1 + round(coef_percent * cur_cost1));",
              "        result = Rnd(cur_cost1, cur_cost2, seed);",
              "    }",
              "    else",
              "    {",
              "        cur_cost2 = max(min_cost, cur_cost1 - round(coef_percent * cur_cost1));",
              "        result = Rnd(cur_cost2, cur_cost1, seed);",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  520,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  22,
          "Total.Lines":  11,
          "Code.Type":  "Turn",
          "Code":          
          [
              "usl=variable1;",
              "unknown1=variable1;",
              "variable1=-1;",
              "CurMed=CurMed+1;",
              "cost=0.81*GalaxyMoney(2,ShipOwner(GetShipRuins(Player())));",
              "item=CreateQuestItem(drugs[usl]);",
              "ItemCost(item,cost);",
              "ItemSize(item,1);",
              "AddItemToShip(Player(),item);",
              "ShipMoney(Player(),ShipMoney(Player())-cost);",
              "Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  150,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  34,
          "Total.Lines":  29,
          "Code.Type":  "Turn",
          "Code":          
          [
              "kov=substr(CT('UselessItems.Usl_Urine.Name'),18,1);",
              "input='';//Очищаем строковую переменную",
              "if(urine==0)input=input+\"<br>\"+'<clrEnd>---'+\"<br>\"+Format(CT('UselessItems.Usl_Urine.Name'),kov,'<clr>')+'<clrEnd><clrEnd>'+\"<br>\"+CT('UselessItems.Usl_Urine.Text');//Настойка урины",
              "if(variable1>0)input=input+\"<br>\"+'<clrEnd>---'+\"<br>\";//Разделитель перед списком болезней",
              "if(variable1==1)input=input+Format(CT('UselessItems.Usl_Drug01.Name'),kov,'<clr>')+'<clrEnd><clrEnd>'+\"<br>\"+CT('UselessItems.Usl_Drug01.Text');//Чекумаш",
              "if(variable1==2)input=input+Format(CT('UselessItems.Usl_Drug02.Name'),kov,'<clr>')+'<clrEnd><clrEnd>'+\"<br>\"+CT('UselessItems.Usl_Drug02.Text');//Святой фанатизм",
              "if(variable1==3)input=input+Format(CT('UselessItems.Usl_Drug03.Name'),kov,'<clr>')+'<clrEnd><clrEnd>'+\"<br>\"+CT('UselessItems.Usl_Drug03.Text');//Загадочая луатанация",
              "if(variable1==4)input=input+Format(CT('UselessItems.Usl_Drug04.Name'),kov,'<clr>')+'<clrEnd><clrEnd>'+\"<br>\"+CT('UselessItems.Usl_Drug04.Text');//Великий малосус",
              "if(variable1==5)input=input+Format(CT('UselessItems.Usl_Drug05.Name'),kov,'<clr>')+'<clrEnd><clrEnd>'+\"<br>\"+CT('UselessItems.Usl_Drug05.Text');//Новый молизон",
              "if(variable2>0)input=input+\"<br>\"+'<clrEnd>---'+\"<br>\";//Разделитель перед списком стимуляторов №1",
              "if(variable2==1)input=input+Format(CT('UselessItems.Usl_Drug06.Name'),kov,'<clr>')+'<clrEnd><clrEnd>'+\"<br>\"+CT('UselessItems.Usl_Drug06.Text');//Малокская сижа",
              "if(variable2==2)input=input+Format(CT('UselessItems.Usl_Drug07.Name'),kov,'<clr>')+'<clrEnd><clrEnd>'+\"<br>\"+CT('UselessItems.Usl_Drug07.Text');//Одноглазый Хамас",
              "if(variable2==3)input=input+Format(CT('UselessItems.Usl_Drug08.Name'),kov,'<clr>')+'<clrEnd><clrEnd>'+\"<br>\"+CT('UselessItems.Usl_Drug08.Text');//Звездная пыль",
              "if(variable2==4)input=input+Format(CT('UselessItems.Usl_Drug09.Name'),kov,'<clr>')+'<clrEnd><clrEnd>'+\"<br>\"+CT('UselessItems.Usl_Drug09.Text');//Супер техник",
              "if(variable2==5)input=input+Format(CT('UselessItems.Usl_Drug10.Name'),kov,'<clr>')+'<clrEnd><clrEnd>'+\"<br>\"+CT('UselessItems.Usl_Drug10.Text');//Гаалистра времени",
              "if(variable2==6)input=input+Format(CT('UselessItems.Usl_Drug11.Name'),kov,'<clr>')+'<clrEnd><clrEnd>'+\"<br>\"+CT('UselessItems.Usl_Drug11.Text');//Кровяной джогар",
              "if(variable3>0)input=input+\"<br>\"+'<clrEnd>---'+\"<br>\";//Разделитель перед списком стимуляторов №2",
              "if(variable3==1)input=input+Format(CT('UselessItems.Usl_Drug12.Name'),kov,'<clr>')+'<clrEnd><clrEnd>'+\"<br>\"+CT('UselessItems.Usl_Drug12.Text');//Рагобамский шепот",
              "if(variable3==2)input=input+Format(CT('UselessItems.Usl_Drug13.Name'),kov,'<clr>')+'<clrEnd><clrEnd>'+\"<br>\"+CT('UselessItems.Usl_Drug13.Text');//Ведущий Шахманду",
              "if(variable3==3)input=input+Format(CT('UselessItems.Usl_Drug14.Name'),kov,'<clr>')+'<clrEnd><clrEnd>'+\"<br>\"+CT('UselessItems.Usl_Drug14.Text');//Психотропный кэш",
              "if(variable3==4)input=input+Format(CT('UselessItems.Usl_Drug15.Name'),kov,'<clr>')+'<clrEnd><clrEnd>'+\"<br>\"+CT('UselessItems.Usl_Drug15.Text');//Торговая маркировка",
              "if(variable3==5)input=input+Format(CT('UselessItems.Usl_Drug16.Name'),kov,'<clr>')+'<clrEnd><clrEnd>'+\"<br>\"+CT('UselessItems.Usl_Drug16.Text');//Дубльплекс",
              "if(variable3==6)input=input+Format(CT('UselessItems.Usl_Drug17.Name'),kov,'<clr>')+'<clrEnd><clrEnd>'+\"<br>\"+CT('UselessItems.Usl_Drug17.Text');//Абсолютный статус",
              "if(urine==0 && variable1>0 && variable2>0 && variable3>0)",
              "{",
              "    unknown1=0;",
              "    unknown2=0;",
              "    unknown3=0;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  6,
          "#":  45,
          "Total.Lines":  13,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Через каждые 30 ходов доступные для покупки медикаменты меняются на случайные",
              "vDays = vDays + 1;",
              "if(vDays > 30)",
              "{",
              "    variable1 = Rnd(1, 5);",
              "    variable2 = Rnd(1, 6);",
              "    variable3 = Rnd(1, 6);",
              "    urine = 0;",
              "    vDays = 0;",
              "}",
              "",
              "//Обнуляем счётчик купленных медикаментов",
              "if(!findsubstr(GameDateTxtByTurn(CurTurn()), CT('CalendarDateTexts.January1'))) CurMed = 0;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  270,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  48,
          "Total.Lines":  3,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cost = 0.8 * GalaxyMoney(2, ShipOwner(GetShipRuins(Player())));",
              "//input = '</color>' + Format(CT('UselessItems.Usl_Urine.Name'), kov, '<color=0,50,200>') + '</color> (<cost> cr.)';",
              "input = '</color>' + CT('Artefacts.CustomArtefacts.UrineTincture.NameDialog') + ' (<cost> cr.)';"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  270,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  49,
          "Total.Lines":  6,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cost=0.81*GalaxyMoney(2,ShipOwner(GetShipRuins(Player())));",
              "if(variable1==1 || unknown1==1)input='</color>'+Format(CT('UselessItems.Usl_Drug01.Name'),kov,'<color=0,50,200>')+'</color></color> (<cost> </color> cr.)';//Чекумаш",
              "if(variable1==2 || unknown1==2)input='</color>'+Format(CT('UselessItems.Usl_Drug02.Name'),kov,'<color=0,50,200>')+'</color></color> (<cost> </color> cr.)';//Святой фанатизм",
              "if(variable1==3 || unknown1==3)input='</color>'+Format(CT('UselessItems.Usl_Drug03.Name'),kov,'<color=0,50,200>')+'</color></color> (<cost> </color> cr.)';//Загадочая луатанация",
              "if(variable1==4 || unknown1==4)input='</color>'+Format(CT('UselessItems.Usl_Drug04.Name'),kov,'<color=0,50,200>')+'</color></color> (<cost> </color> cr.)';//Великий малосус",
              "if(variable1==5 || unknown1==5)input='</color>'+Format(CT('UselessItems.Usl_Drug05.Name'),kov,'<color=0,50,200>')+'</color></color> (<cost> </color> cr.)';//Новый молизон"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  270,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  50,
          "Total.Lines":  7,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cost=0.815*GalaxyMoney(2,ShipOwner(GetShipRuins(Player())));",
              "if(variable2==1 || unknown2==1)input='</color>'+Format(CT('UselessItems.Usl_Drug06.Name'),kov,'<color=0,50,200>')+'</color></color> (<cost> </color> cr.)';//Малокская сижа",
              "if(variable2==2 || unknown2==2)input='</color>'+Format(CT('UselessItems.Usl_Drug07.Name'),kov,'<color=0,50,200>')+'</color></color> (<cost> </color> cr.)';//Одноглазый Хамас",
              "if(variable2==3 || unknown2==3)input='</color>'+Format(CT('UselessItems.Usl_Drug08.Name'),kov,'<color=0,50,200>')+'</color></color> (<cost> </color> cr.)';//Звездная пыль",
              "if(variable2==4 || unknown2==4)input='</color>'+Format(CT('UselessItems.Usl_Drug09.Name'),kov,'<color=0,50,200>')+'</color></color> (<cost> </color> cr.)';//Супер техник",
              "if(variable2==5 || unknown2==5)input='</color>'+Format(CT('UselessItems.Usl_Drug10.Name'),kov,'<color=0,50,200>')+'</color></color> (<cost> </color> cr.)';//Гаалистра времени",
              "if(variable2==6 || unknown2==6)input='</color>'+Format(CT('UselessItems.Usl_Drug11.Name'),kov,'<color=0,50,200>')+'</color></color> (<cost> </color> cr.)';//Кровяной джогар"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  270,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  51,
          "Total.Lines":  7,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cost=0.813*GalaxyMoney(2,ShipOwner(GetShipRuins(Player())));",
              "if(variable3==1 || unknown3==1)input='</color>'+Format(CT('UselessItems.Usl_Drug12.Name'),kov,'<color=0,50,200>')+'</color></color> (<cost> </color> cr.)';//Рагобамский шепот",
              "if(variable3==2 || unknown3==2)input='</color>'+Format(CT('UselessItems.Usl_Drug13.Name'),kov,'<color=0,50,200>')+'</color></color> (<cost> </color> cr.)';//Ведущий Шахманду",
              "if(variable3==3 || unknown3==3)input='</color>'+Format(CT('UselessItems.Usl_Drug14.Name'),kov,'<color=0,50,200>')+'</color></color> (<cost> </color> cr.)';//Психотропный кэш",
              "if(variable3==4 || unknown3==4)input='</color>'+Format(CT('UselessItems.Usl_Drug15.Name'),kov,'<color=0,50,200>')+'</color></color> (<cost> </color> cr.)';//Торговая маркировка",
              "if(variable3==5 || unknown3==5)input='</color>'+Format(CT('UselessItems.Usl_Drug16.Name'),kov,'<color=0,50,200>')+'</color></color> (<cost> </color> cr.)';//Дубльплекс",
              "if(variable3==6 || unknown3==6)input='</color>'+Format(CT('UselessItems.Usl_Drug17.Name'),kov,'<color=0,50,200>')+'</color></color> (<cost> </color> cr.)';//Абсолютный статус"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  76,
          "#":  77,
          "Total.Lines":  7,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1 = '</color>';",
              "tint1 = ShipPilotRace(cur_ship);",
              "if(tint1 == Maloc) tstr1 = tstr1 + CT('Script.Mod_EvoMC.YellowShroudDialog.AngryMalocThreat' + RndObject(1, 1, cur_ship));",
              "else if(tint1 == Peleng) tstr1 = tstr1 + CT('Script.Mod_EvoMC.YellowShroudDialog.AngryPelengThreat' + RndObject(1, 1, cur_ship));",
              "else if(tint1 == People) tstr1 = tstr1 + CT('Script.Mod_EvoMC.YellowShroudDialog.AngryPeopleThreat' + RndObject(1, 1, cur_ship));",
              "else if(tint1 == Fei) tstr1 = tstr1 + CT('Script.Mod_EvoMC.YellowShroudDialog.AngryFeiThreat' + RndObject(1, 1, cur_ship));",
              "else if(tint1 == Gaal) tstr1 = tstr1 + CT('Script.Mod_EvoMC.YellowShroudDialog.AngryGaalThreat' + RndObject(1, 1, cur_ship));"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  82,
          "#":  84,
          "Total.Lines":  62,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cur_ruin = GetShipRuins(Player());",
              "",
              "vaccinations_available = 3;",
              "if(~ShipFindCustomShipInfoByType(Player(), 'EvoMC_Vaccination'))",
              "{",
              "    for(i = 1; i <= 3; i = i + 1)",
              "    {",
              "        if(ShipCustomShipInfoData(Player(), 'EvoMC_Vaccination', i)) vaccinations_available = vaccinations_available - 1;",
              "    }",
              "}",
              "",
              "if(vaccinations_available)",
              "{",
              "    str illness1 = ShipCustomShipInfoTextData(Player(), 'EvoMC_Vaccination', 1);",
              "    str illness2 = ShipCustomShipInfoTextData(Player(), 'EvoMC_Vaccination', 2);",
              "    str illness3 = ShipCustomShipInfoTextData(Player(), 'EvoMC_Vaccination', 3);",
              "",
              "    tstr1 = '';",
              "    ArrayClear(tarr1);",
              "    int num_count = 0;",
              "    for(i = 1; i <= 11; i = i + 1) //Разделы болезней в Lang идут с дебильным смещением в -1 относительно их номеров в коде, поэтому приходится его постоянно учитывать",
              "    {",
              "        if(i >= 5 && i <= 7) continue; //Нельзя привиться от лучевой болезни, ослепления, наркозависимости, вихревой контузии и мышечного растяжения",
              "        if(i == illness1 || i == illness2 || i == illness3) continue; //Пропускаем болезни, от которых игрок уже сделал прививки",
              "",
              "        cost = GalaxyMoney(4);",
              "        cost = cost + (cost * i * 3) / 100;",
              "        if(PlayerMedPolicy()) cost = cost / 2;",
              "        ArrayAdd(tarr1, cost, '' + i);",
              "",
              "        num_count = num_count + 1;",
              "        tstr1 = tstr1 + '<clrEnd>' + num_count + '. <clr>' + CT('Illness.Illness.' + i + '.Name') + '<clrEnd>' + \"<br>\";",
              "    }",
              "",
              "    check = 0;",
              "    if(CurrentMods('ShusRangers\\ShuKlissan'))",
              "    {",
              "        if(KlissanInvasion['DaysPassedAfterStart'] > 365) //С начала вторжения клисан прошло не менее года",
              "        {",
              "            if(illness1 != 'KlissanLeprosy' && illness2 != 'KlissanLeprosy' && illness3 != 'KlissanLeprosy')",
              "            {",
              "                cost = GalaxyMoney(4);",
              "                cost = cost + (cost * 16 * 3) / 100;",
              "                if(PlayerMedPolicy()) cost = cost / 2;",
              "                ArrayAdd(tarr1, cost, 'KlissanLeprosy');",
              "",
              "                tstr1 = tstr1 + '<clrEnd>' + num_count + '. <clr>' + CT('Illness.Illness.KlissanLeprosy.Name') + '<clrEnd>' + \"<br>\";",
              "                check = 1;",
              "            }",
              "        }",
              "    }",
              "",
              "    tstr1 = '</color>' + Format(CT('Script.Mod_EvoMC.VaccinationDialog.VaccinationsAvailable'),",
              "                                   '<VaccinationsCount'+'>', 3 - vaccinations_available,",
              "                                   '<VaccinationsLeft'+'>', vaccinations_available,",
              "                                   '<NewVaccinationsList'+'>', tstr1);",
              "    tstr2 = '</color>' + CT('Script.Mod_EvoMC.VaccinationDialog.PlayerRefuseOfVaccination');",
              "}",
              "else",
              "{",
              "    tstr1 = '</color>' + CT('Script.Mod_EvoMC.VaccinationDialog.VaccinationsLimitReached');",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  86,
          "#":  87,
          "Total.Lines":  38,
          "Code.Type":  "Turn",
          "Code":          
          [
              "str illness1 = ShipCustomShipInfoTextData(Player(), 'EvoMC_Vaccination', 1);",
              "str illness2 = ShipCustomShipInfoTextData(Player(), 'EvoMC_Vaccination', 2);",
              "str illness3 = ShipCustomShipInfoTextData(Player(), 'EvoMC_Vaccination', 3);",
              "",
              "for(i = 1; i <= 11; i = i + 1) //Разделы болезней в Lang идут с дебильным смещением в -1 относительно их номеров в коде, поэтому приходится его постоянно учитывать",
              "{",
              "    if(i >= 5 && i <= 7) continue; //Нельзя привиться от лучевой болезни, ослепления, наркозависимости, вихревой контузии и мышечного растяжения",
              "    if(i == illness1 || i == illness2 || i == illness3) continue; //Пропускаем болезни, от которых игрок уже сделал прививки",
              "",
              "    cost = tarr1['' + i];",
              "    tstr1 = CT('Illness.Illness.' + i + '.Name');",
              "    tstr1 = Format(CT('Script.Mod_EvoMC.VaccinationDialog.VaccineOf'), '<Illness'+'>', tstr1, '<Cost'+'>', cost);",
              "",
              "    if(ShipMoney(Player()) < cost)",
              "    {",
              "        tstr1 = DeleteTags(tstr1);",
              "        AddDialogBlock(tstr1, 1);",
              "    }",
              "    InjectAnswer('VaccinationMadeDialog', tstr1, i);",
              "}",
              "",
              "//Если также доступна прививка от \"Клисанской проказы\"",
              "if(check)",
              "{",
              "    cost = tarr1['KlissanLeprosy'];",
              "    tstr1 = CT('Illness.Illness.KlissanLeprosy.Name');",
              "    tstr1 = Format(CT('Script.Mod_EvoMC.VaccinationDialog.VaccineOf'), '<Illness'+'>', tstr1, '<Cost'+'>', cost);",
              "",
              "    if(ShipMoney(Player()) < cost)",
              "    {",
              "        tstr1 = DeleteTags(tstr1);",
              "        AddDialogBlock(tstr1, 1);",
              "    }",
              "    InjectAnswer('VaccinationMadeDialog', tstr1, 12);",
              "}",
              "",
              "tstr1 = '</color>' + CT('Script.Mod_EvoMC.VaccinationDialog.PlayerRefuseOfVaccination');",
              "tstr2 = '</color>' + CT('Script.Mod_EvoMC.VaccinationDialog.RefuseOfVaccination');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  93,
          "#":  94,
          "Total.Lines":  29,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(GAnswerData < 12) str ill_num = GAnswerData;",
              "else ill_num = 'KlissanLeprosy';",
              "",
              "tstr1 = '<color=255,240,100>' + CT('FormInfo.br') + CT('Illness.Illness.' + ill_num + '.Name') + '</color>';",
              "PlayerImmunity(PlayerImmunity() - (PlayerImmunity() * RndObject(15, 25, cur_ruin)) / 100);",
              "",
              "if(~ShipFindCustomShipInfoByType(Player(), 'EvoMC_Vaccination'))",
              "{",
              "    for(i = 2; i <= 3; i = i + 1)",
              "    {",
              "        if(!ShipCustomShipInfoData(Player(), 'EvoMC_Vaccination', i))",
              "        {",
              "            ShipCustomShipInfoTextData(Player(), 'EvoMC_Vaccination', i, ill_num);",
              "            ShipCustomShipInfoData(Player(), 'EvoMC_Vaccination', i, RndObject(350, 370, cur_ruin));",
              "            break;",
              "        }",
              "    }",
              "}",
              "else ShipAddCustomShipInfo(Player(), 'EvoMC_Vaccination', '', RndObject(350, 370, cur_ruin), 0, 0, ill_num, 0, 0);",
              "ShipCustomShipInfoDescription(Player(), 'EvoMC_Vaccination', CT('ShipInfo.AddInfo.CustomInfos.EvoMC_Vaccination.Description') + tstr1);",
              "",
              "cost = tarr1[ill_num];",
              "ArrayDelete(tarr1, ill_num);",
              "ShipMoney(Player(), ShipMoney(Player()) - cost);",
              "Sound('Sound.Sell');",
              "",
              "tstr1 = CT('Illness.Illness.' + ill_num + '.Name');",
              "tstr1 = '</color>' + Format(CT('Script.Mod_EvoMC.VaccinationDialog.PlayerWasVaccinated'),",
              "                               '<Illness'+'>', tstr1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  99,
          "#":  100,
          "Total.Lines":  44,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(GetGameOptions('FontDialog') == '0') dividing_line = '</color>-------------------------------------------------------------';",
              "else if(GetGameOptions('FontDialog') == '1') dividing_line = '</color>------------------------------------------';",
              "else if(GetGameOptions('FontDialog') == '2') dividing_line = '</color>-----------------------------------------';",
              "else dividing_line = '</color>-------------------------------------';",
              "",
              "ArrayClear(tarr1);",
              "tstr1 = '';",
              "check = 0;",
              "//Составляем список стимуляторов для вывода в диалоговое окно (эти переборы кучу раз дублируются здесь, что крайне тупо)",
              "for(i = 13; i <= 24; i = i + 1)",
              "{",
              "    if(ShipHealthFactor(Player(), i))",
              "    {",
              "        cost = GalaxyMoney(2);",
              "        cost = cost + (cost * i * 2) / 100;",
              "        if(PlayerMedPolicy()) cost = cost / 2;",
              "        ArrayAdd(tarr1, cost, '' + i);",
              "",
              "        if(check) tstr1 = tstr1 + CT('FormInfo.br');",
              "        check = check + 1;",
              "        tstr1 = tstr1 + '</color>' + check + '. <clr>' + CT('Illness.Stimulant.' + (i - 13) + '.Name') + '<clrEnd>';",
              "    }",
              "}",
              "",
              "//Также добавляем в список кастомный стимулятор \"Экспирин\" из мода ShuMercsHQ",
              "if(~ShipFindCustomShipInfoByType(Player(), 'ShuMercsHQ_ExpirinStimulant'))",
              "{",
              "    cost = GalaxyMoney(2);",
              "    cost = cost + (cost * 25 * 2) / 100;",
              "    if(PlayerMedPolicy()) cost = cost / 2;",
              "    ArrayAdd(tarr1, cost, 'ExpirinStimulant');",
              "",
              "    if(check) tstr1 = tstr1 + CT('FormInfo.br');",
              "    check = check + 1;",
              "    tstr1 = tstr1 + '</color>' + check + '. <clr>' + CT('ShipInfo.AddInfo.CustomInfos.ShuMercsHQ_ExpirinStimulant.Name') + '<clrEnd>';",
              "}",
              "",
              "if(check)",
              "{",
              "    tstr1 = '</color>' + Format(CT('Script.Mod_EvoMC.StimulantsRemovalDialog.StimulantsToRemove')",
              "                                   '<DividingLine'+'>', dividing_line,",
              "                                   '<StimulantsList'+'>', tstr1);",
              "}",
              "else tstr1 = '</color>' + CT('Script.Mod_EvoMC.StimulantsRemovalDialog.NoStimulantsWasFound');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  103,
          "#":  105,
          "Total.Lines":  56,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check = 0;",
              "//Ищем всё имеющиеся у игрока стимуляторы",
              "for(i = 13; i <= 24; i = i + 1)",
              "{",
              "    if(ShipHealthFactor(Player(), i) > 0)",
              "    {",
              "        check = check + 1;",
              "",
              "        cost = tarr1['' + i];",
              "        tstr1 = Format(CT('Script.Mod_EvoMC.StimulantsRemovalDialog.PlayerRemoveStimulant'),",
              "                          '<Stimulant'+'>', CT('Illness.Stimulant.' + (i - 13) + '.Name'),",
              "                          '<Cost'+'>', cost);",
              "        if(ShipMoney(Player()) < cost)",
              "        {",
              "            tstr1 = DeleteTags(tstr1);",
              "            AddDialogBlock(tstr1, 1);",
              "        }",
              "        InjectAnswer('StimulantWasRemovedDialog', tstr1, i);",
              "    }",
              "}",
              "",
              "//Также добавляем в список на удаление кастомный стимулятор \"Экспирин\" из мода ShuMercsHQ",
              "if(~ShipFindCustomShipInfoByType(Player(), 'ShuMercsHQ_ExpirinStimulant'))",
              "{",
              "    check = check + 1;",
              "",
              "    cost = tarr1['ExpirinStimulant'];",
              "    tstr1 = Format(CT('Script.Mod_EvoMC.StimulantsRemovalDialog.PlayerRemoveStimulant'),",
              "                      '<Stimulant'+'>', CT('ShipInfo.AddInfo.CustomInfos.ShuMercsHQ_ExpirinStimulant.Name'),",
              "                      '<Cost'+'>', cost);",
              "    if(ShipMoney(Player()) < cost)",
              "    {",
              "        tstr1 = DeleteTags(tstr1);",
              "        AddDialogBlock(tstr1, 1);",
              "    }",
              "    InjectAnswer('StimulantWasRemovedDialog', tstr1, 25);",
              "}",
              "",
              "//Стоимость \"полной очистки организма\"",
              "int remove_all_cost = 0;",
              "for(i = 1; i < ArrayDim(tarr1); i = i + 1) remove_all_cost = remove_all_cost + tarr1[i];",
              "remove_all_cost = round(1.30 * remove_all_cost);",
              "if(check)",
              "{",
              "    tstr1 = Format(CT('Script.Mod_EvoMC.StimulantsRemovalDialog.PlayerRemoveAllStimulants'),",
              "                      '<Cost'+'>', remove_all_cost);",
              "    if(ShipMoney(Player()) < remove_all_cost)",
              "    {",
              "        tstr1 = DeleteTags(tstr1);",
              "        AddDialogBlock(tstr1, 1);",
              "    }",
              "    else InjectAnswer('AllStimulantsWasRemovedDialog', tstr1, remove_all_cost);",
              "}",
              "",
              "tstr1 = '</color>' + CT('Script.Mod_EvoMC.StimulantsRemovalDialog.PlayerRefuseOfRemoval');",
              "tstr2 = '</color>' + CT('Script.Mod_EvoMC.StimulantsRemovalDialog.RefuseOfRemoval');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  60,
          "Parent":  110,
          "#":  111,
          "Total.Lines":  51,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Удаляем кастомный стимулятор \"Экспир\" из мода ShuMercsHQ",
              "if(GAnswerData == 25)",
              "{",
              "    //Откатываем штраф к bonStimCapacity для игрока",
              "    ShipSpecialBonuses(Player(), bonStimCapacity, ShipSpecialBonuses(Player(), bonStimCapacity) + ShipCustomShipInfoTextData(Player(), 'ShuMercsHQ_ExpirinStimulant', 2));",
              "    ShipDeleteCustomShipInfo(Player(), 'ShuMercsHQ_ExpirinStimulant');",
              "    //Запоминаем название удалённого стимулятора для дальнейшей подстановки в диалог",
              "    str stimulant_name = CT('ShipInfo.AddInfo.CustomInfos.ShuMercsHQ_ExpirinStimulant.Name');",
              "    cost = tarr1['ExpirinStimulant'];",
              "    ArrayDelete(tarr1, 'ExpirinStimulant');",
              "}",
              "//Либо же любой из стандартных стимуляторов",
              "else",
              "{",
              "    ShipHealthFactor(Player(), GAnswerData, 0);",
              "    //Запоминаем название удалённого стимулятора для дальнейшей подстановки в диалог",
              "    stimulant_name = CT('Illness.Stimulant.' + (GAnswerData - 13) + '.Name');",
              "    cost = tarr1['' + GAnswerData];",
              "    ArrayDelete(tarr1, '' + GAnswerData);",
              "}",
              "",
              "ShipMoney(Player(), ShipMoney(Player()) - cost);",
              "Sound('Sound.Sell');",
              "",
              "tstr1 = '';",
              "check = 0;",
              "//Составляем список оставшихся в организме стимуляторов",
              "for(i = 13; i <= 24; i = i + 1)",
              "{",
              "    if(ShipHealthFactor(Player(), i))",
              "    {",
              "        if(check) tstr1 = tstr1 + CT('FormInfo.br');",
              "        check = check + 1;",
              "        tstr1 = tstr1 + '</color>' + check + '. <color=0,50,200>' + CT('Illness.Stimulant.' + (i - 13) + '.Name') + '</color>';",
              "    }",
              "}",
              "//Также добавляем в список кастомный стимулятор \"Экспирин\" из мода ShuMercsHQ",
              "if(~ShipFindCustomShipInfoByType(Player(), 'ShuMercsHQ_ExpirinStimulant'))",
              "{",
              "    if(check) tstr1 = tstr1 + CT('FormInfo.br');",
              "    check = check + 1;",
              "    tstr1 = tstr1 + '</color>' + check + '. <color=0,50,200>' + CT('ShipInfo.AddInfo.CustomInfos.ShuMercsHQ_ExpirinStimulant.Name') + '</color>';",
              "}",
              "",
              "if(check) tstr1 = '</color>' +  Format(CT('Script.Mod_EvoMC.StimulantsRemovalDialog.StimulantsLeft'),",
              "                               '<DividingLine'+'>', dividing_line,",
              "                               '<StimulantsLeftList'+'>', tstr1);",
              "else tstr1 = '';",
              "tstr1 = '</color>' + Format(CT('Script.Mod_EvoMC.StimulantsRemovalDialog.StimulantWasRemoved'),",
              "                               '<Stimulant'+'>', stimulant_name,",
              "                               '<StimulantsLeft'+'>', tstr1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  116,
          "#":  117,
          "Total.Lines":  19,
          "Code.Type":  "Turn",
          "Code":          
          [
              "for(i = 13; i < 24; i = i + 1)",
              "{",
              "    if(ShipHealthFactor(Player(), i)) ShipHealthFactor(Player(), i, 0);",
              "}",
              "",
              "//Также удаляем кастомный стимулятор \"Экспирин\" из мода ShuMercsHQ",
              "if(~ShipFindCustomShipInfoByType(Player(), 'ShuMercsHQ_ExpirinStimulant'))",
              "{",
              "    //Откатываем штраф к bonStimCapacity для игрока",
              "    ShipSpecialBonuses(Player(), bonStimCapacity, ShipSpecialBonuses(Player(), bonStimCapacity) + ShipCustomShipInfoTextData(Player(), 'ShuMercsHQ_ExpirinStimulant', 2));",
              "    ShipDeleteCustomShipInfo(Player(), 'ShuMercsHQ_ExpirinStimulant');",
              "}",
              "",
              "PlayerImmunity(100);",
              "",
              "ShipMoney(Player(), ShipMoney(Player()) - GAnswerData);",
              "Sound('Sound.Sell');",
              "",
              "tstr1 = '</color>' + CT('Script.Mod_EvoMC.StimulantsRemovalDialog.AllStimulantsWasRemoved');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  121,
          "#":  123,
          "Total.Lines":  267,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(GetGameOptions('FontDialog') == '0') dividing_line = '</color>-------------------------------------------------------------';",
              "else if(GetGameOptions('FontDialog') == '1') dividing_line = '</color>------------------------------------------';",
              "else if(GetGameOptions('FontDialog') == '2') dividing_line = '</color>-----------------------------------------';",
              "else /*if(GetGameOptions('FontDialog') == '3')*/ dividing_line = '</color>-------------------------------------';",
              "",
              "int stim_num = 0;",
              "int stims_top_limit = max(2, ShipRank(Player())); //В оригинале тут ShipRank(Player()) + 1",
              "j = ShipPilotRace(Player());",
              "if(j == Maloc)",
              "{",
              "    str player_str_race = 'Maloc';",
              "    stims_top_limit = max(2, stims_top_limit + 2);",
              "}",
              "else if(j == Peleng)",
              "{",
              "    player_str_race = 'Peleng';",
              "    //stims_top_limit = max(2, stims_top_limit + 0);",
              "}",
              "else if(j == People)",
              "{",
              "    player_str_race = 'People';",
              "    //stims_top_limit = max(2, stims_top_limit + 0);",
              "}",
              "else if(j == Fei)",
              "{",
              "    player_str_race = 'Fei';",
              "    stims_top_limit = max(2, stims_top_limit - 2);",
              "}",
              "else if(j == Gaal)",
              "{",
              "    player_str_race = 'Gaal';",
              "    stims_top_limit = max(2, stims_top_limit + 1);",
              "}",
              "",
              "int stims_immun_limit = PortionInDiapason(PlayerImmunity(), 10, 90, 2, stims_top_limit);",
              "int cur_stims = 0;",
              "int unused_stims_left = 0; //Для проверки на случай, если игрок зачитил себе сразу все или почти все стимуляторы в игре",
              "",
              "//В ваниле смена списка стимуляторов происходит каждые 13 дней, одновременно на всех МЦ (то есть везде их список одинаковый)",
              "//В моде же пусть меняются раз в 15 дней, либо при любой смене МЦ, на котором находится игрок (если на новом МЦ он запустит данный диалог, конечно)",
              "int seed = 2 + ((Power(CurTurn() / 15, 3) + GetObjectGenerationSeed(cur_ruin)) ^ GetObjectGenerationSeed(GalaxyPtr()));",
              "if(seed != stim_seed) //Обновление маркерного зерна и списка стимуляторов для покупки",
              "{",
              "    stim_seed = seed;",
              "",
              "    CT('Illness.Stimulant', stims_array);",
              "    for(i = ArrayDim(stims_array) - 1; i >= 0; i = i - 1)",
              "    {",
              "        //Удаляем из составленного массива все лишние элементы",
              "        if(GetVariableType(stims_array[i]) != 9)",
              "        {",
              "            ArrayDelete(stims_array, i);",
              "            continue;",
              "        }",
              "",
              "        for(j = ArrayDim(stims_array[i]) - 1; j >= 0; j = j - 1)",
              "        {",
              "            if(GetVariableName(stims_array[i, j]) == 'Designation')",
              "            {",
              "                tstr1 = stims_array[i, j];",
              "                break;",
              "            }",
              "",
              "            if(!j)",
              "            {",
              "                tstr1 = '';",
              "                ArrayDelete(stims_array, i);",
              "            }",
              "        }",
              "        if(tstr1 == '') continue;",
              "",
              "        if(tstr1 == 'Original')",
              "        {",
              "            stim_num = 13 + GetVariableName(stims_array[i]); //Сдвиг нумерации стимуляторов относительно болезней в общем списке",
              "",
              "            stims_array[i, 'Designation'] = stims_array[i, 'Designation'] + stim_num;",
              "            ArrayDelete(stims_array[i], 'End');",
              "",
              "            //Чтобы игроку повторно не выпадали те стимуляторы, которые у него уже и так есть",
              "            if(ShipHealthFactor(Player(), stim_num))",
              "            {",
              "                stims_array[i, 'RollChance'] = 0;",
              "                cur_stims = cur_stims + 1;",
              "            }",
              "            else unused_stims_left = unused_stims_left + 1;",
              "        }",
              "        //На будущее",
              "        //else",
              "        //{}",
              "    }",
              "",
              "    //SFT(stims_array); //Для отладки",
              "",
              "    //Составляем текущий список стимуляторов на продажу",
              "    tstr1 = '*';",
              "    j = 0;",
              "",
              "    //На время вставляем в рандомизатор своё фиксированное зерно (но только если не включёна ТН на полный рандом)",
              "    int full_rnd = AdvancedAdjustmentSet(20, -1);",
              "    if(!full_rnd)",
              "    {",
              "        AdvancedAdjustmentSet(20, 1);",
              "        int old_seed = randseed();",
              "        randseed(seed);",
              "    }",
              "",
              "    while(j < 3)",
              "    {",
              "        i = Rnd(0, ArrayDim(stims_array) - 1);",
              "        if(Rnd(1, 100) > stims_array[i, 'RollChance'] && unused_stims_left) continue;",
              "",
              "        if(!findsubstr(stims_array[i, 'Designation'], 'Original'))",
              "        {",
              "            if(~findsubstr(tstr1, '*' + stims_array[i, 'Designation'] + '*')) continue;",
              "",
              "            int standart_dur = RoundTo(ShipHealthFactor(0, 0 + stims_array[i, 'Designation']) / 30, 1, 0);",
              "            ArrayAdd(stims_array[i], max(2, standart_dur + Rnd(-3, 2)), 'Duration');",
              "",
              "            cost = Rnd(96, 104); //Для небольшой рандомизации",
              "            cost = round(0.01 * cost * stims_array[i, 'ValueConstant'] * GalaxyMoney(0, 0));",
              "            cost = round(PortionInDiapason(stims_array[i, 'RollChance'], 25, 75, 2.0, 0.5) * cost);",
              "            cost = round(PortionInDiapason(stims_array[i, 'Duration'], max(2, standart_dur - 3), standart_dur + 2, 0.5, 1.40) * cost);",
              "            if(!pirateMC && PlayerMedPolicy()) cost = cost / 2; //На пиратских МЦ страховка не работает",
              "            cost = round(cost, 10);",
              "            ArrayAdd(stims_array[i], cost, 'Cost');",
              "",
              "            tstr1 = tstr1 + stims_array[i, 'Designation'] + '*';",
              "",
              "            unused_stims_left = unused_stims_left - 1;",
              "            j = j + 1;",
              "        }",
              "        //На будущее",
              "        //else",
              "        //{",
              "        //    tstr1 = stims_array[i, 'Designation'];",
              "        //    unused_stims_left = unused_stims_left - 1;",
              "        //}",
              "    }",
              "",
              "    if(!full_rnd)",
              "    {",
              "        AdvancedAdjustmentSet(20, 0);",
              "        randseed(old_seed);",
              "    }",
              "",
              "    //Удаляем из массива все лишние стимуляторы",
              "    i = 0;",
              "    while(ArrayDim(stims_array) > 3)",
              "    {",
              "        if(findsubstr(tstr1, '*' + stims_array[i, 'Designation'] + '*') == -1) ArrayDelete(stims_array, i);",
              "        else i = i + 1;",
              "    }",
              "}",
              "else",
              "{",
              "    //Сколько стимуляторов в данный момент у игрока",
              "    for(i = 13; i <= 24; i = i + 1)",
              "    {",
              "        if(ShipHealthFactor(Player(), i)) cur_stims = cur_stims + 1;",
              "        else unused_stims_left = unused_stims_left + 1;",
              "    }",
              "}",
              "",
              "if(!pirateMC)",
              "{",
              "    j = ShipRank(Player());",
              "    if(j >= 7) str player_str_rank = CT('Rank.Admiral.Name');",
              "    else if(j == 6) player_str_rank = CT('Rank.Commander.Name');",
              "    else if(j == 5) player_str_rank = CT('Rank.Ace.Name');",
              "    else if(j == 4) player_str_rank = CT('Rank.Leader.Name');",
              "    else if(j == 3) player_str_rank = CT('Rank.Wingman.Name');",
              "    else if(j == 2) player_str_rank = CT('Rank.Pilot.Name');",
              "    else if(j == 1) player_str_rank = CT('Rank.Cadet.Name');",
              "    else player_str_rank = CT('Rank.Rookie.Name');",
              "}",
              "else",
              "{",
              "    j = GetShipPirateRank(Player());",
              "    if(j >= 7) player_str_rank = CT('Rank.Baron.Name');",
              "    else if(j == 6) player_str_rank = CT('Rank.Khan.Name');",
              "    else if(j == 5) player_str_rank = CT('Rank.Ataman.Name');",
              "    else if(j == 4) player_str_rank = CT('Rank.Rough.Name');",
              "    else if(j == 3) player_str_rank = CT('Rank.Skipper.Name');",
              "    else if(j == 2) player_str_rank = CT('Rank.Rader.Name');",
              "    else if(j == 1) player_str_rank = CT('Rank.Kid.Name');",
              "    else player_str_rank = CT('Rank.Noobie.Name');",
              "}",
              "",
              "if(cur_stims < stims_immun_limit)// || pirateMC)",
              "{",
              "    //Выводим информацию о доступных для установки стимуляторах",
              "    tstr1 = '</color>' + CT('FormRuins.MC.Stimulants.MCStims');",
              "    if(!pirateMC)",
              "    {",
              "        tstr1 = tstr1 + ' ' + CT('FormRuins.MC.Stimulants.MCStimsLimit');",
              "        tstr1 = Format(tstr1, '<MaxStim'+'>', stims_top_limit, '<Rank'+'>', player_str_rank);",
              "    }",
              "    else",
              "    {",
              "        if(!ShipOnSidePirateClan(Player())) tstr1 = tstr1 + ' ' + CT('FormRuins.MC.Stimulants.MCStimsLimitPirateNoRank');",
              "        else tstr1 = tstr1 + ' ' + CT('FormRuins.MC.Stimulants.MCStimsLimitPirate');",
              "        tstr1 = Format(tstr1, '<MaxStim'+'>', stims_top_limit, '<Rank'+'>', player_str_rank);",
              "    }",
              "",
              "    tstr2 = CT('FormRuins.MC.Stimulants.MCStimsLeft');",
              "    if(!cur_stims) tstr2 = Format(tstr2, '<CurStim'+'>', '<color=0,50,200>' + CT('FormRuins.MC.Stimulants.MCStimsLeftStimsNone') + '</color> ' + CT('FormRuins.MC.Stimulants.MCStimsLeftStimsMany'), '');",
              "    else if(cur_stims == 1) tstr2 = Format(tstr2, '<CurStim'+'>', '<color=0,50,200>' + cur_stims + '</color> ' + CT('FormRuins.MC.Stimulants.MCStimsLeftStimsOne'), '');",
              "    else if(cur_stims <= 4) tstr2 = Format(tstr2, '<CurStim'+'>', '<color=0,50,200>' + cur_stims + '</color> ' + CT('FormRuins.MC.Stimulants.MCStimsLeftStimsSome'), '');",
              "    else tstr2 = Format(tstr2, '<CurStim'+'>', '<color=0,50,200>' + cur_stims + '</color> ' + CT('FormRuins.MC.Stimulants.MCStimsLeftStimsMany'), '');",
              "",
              "    j = stims_immun_limit - cur_stims;",
              "    if(j == 1) tstr2 = Format(tstr2, '<AddStim'+'>', '<color=0,50,200>' + j + '</color> ' + CT('FormRuins.MC.Stimulants.MCStimsLeftInjsOne'), '');",
              "    else if(j <= 4) tstr2 = Format(tstr2, '<AddStim'+'>', '<color=0,50,200>' + j + '</color> ' + CT('FormRuins.MC.Stimulants.MCStimsLeftInjsSome'), '');",
              "    else tstr2 = Format(tstr2, '<AddStim'+'>', '<color=0,50,200>' + j + '</color> ' + CT('FormRuins.MC.Stimulants.MCStimsLeftInjsMany'), '');",
              "",
              "    //На пиратских МЦ страховка не работает",
              "    if(!pirateMC) tstr1 = tstr1 + Format('<br>') + tstr2 + Format('<br>') + CT('FormRuins.MC.Stimulants.MCStimsInsurance');",
              "",
              "    for(i = 0; i < ArrayDim(stims_array); i = i + 1)",
              "    {",
              "        if(!i) tstr2 = dividing_line;",
              "        tstr2 = tstr2 + Format('<br>') + Format(CT('FormRuins.MC.Stimulants.MCStimInfo'),",
              "                                                   '<Name'+'>', '<color=0,50,200>' + stims_array[i, 'Name'] + '</color>',",
              "                                                   '<Text'+'>', stims_array[i, 'Text'],",
              "                                                   '<Duration'+'>', '<color=0,50,200>' + stims_array[i, 'Duration'] + '</color>',",
              "                                                   '<Cost'+'>', '<color=0,50,200>' + stims_array[i, 'Cost'] + '</color>',",
              "                                                   '');",
              "        tstr2 = tstr2 + Format('<br>') + dividing_line;",
              "    }",
              "",
              "    tstr2 = Format(CT('FormRuins.MC.Stimulants.MCStimsList'), '<MCStimInfo'+'>', tstr2, '');",
              "    tstr1 = tstr1 + Format('<br>') + tstr2;",
              "",
              "    check = 1;",
              "}",
              "//Игрок достиг предела своего текущего иммунитета или закона",
              "else",
              "{",
              "    if(stims_immun_limit < stims_top_limit)",
              "    {",
              "        if(!pirateMC) tstr1 = '</color>' + Format(CT('FormRuins.MC.Stimulants.MCStimsImmunityLimit'),",
              "                                                     '<Rank'+'>', '<color=0,50,200>' + player_str_rank + '</color>',",
              "                                                     '<Race'+'>', lowercase(CT('FormGameSet2.Common.' + player_str_race)),",
              "                                                     '<LawStim'+'>', '<color=0,50,200>' + stims_top_limit + '</color>',",
              "                                                     '');",
              "        else tstr1 = '</color>' + Format(CT('FormRuins.MC.Stimulants.MCStimsImmunityLimitPirate'),",
              "                                                     '<Rank'+'>', '<color=0,50,200>' + player_str_rank + '</color>',",
              "                                                     '<Race'+'>', lowercase(CT('FormGameSet2.Common.RaceDative.' + player_str_race)),",
              "                                                     '<LawStim'+'>', '<color=0,50,200>' + stims_top_limit + '</color>',",
              "                                                     '');",
              "    }",
              "    else",
              "    {",
              "        if(!pirateMC) tstr1 = '</color>' + Format(CT('FormRuins.MC.Stimulants.MCStimsLawLimit'),",
              "                                                     '<Rank'+'>', '<color=0,50,200>' + player_str_rank + '</color>',",
              "                                                     '<Race'+'>', lowercase(CT('FormGameSet2.Common.RaceAccusative.' + player_str_race)),",
              "                                                     '<LawStim'+'>', '<color=0,50,200>' + stims_top_limit + '</color>',",
              "                                                     '');",
              "        else tstr1 = '</color>' + Format(CT('FormRuins.MC.Stimulants.MCStimsLawLimitPirate'),",
              "                                                     '<Rank'+'>', '<color=0,50,200>' + player_str_rank + '</color>',",
              "                                                     '<Race'+'>', lowercase(CT('FormGameSet2.Common.' + player_str_race)),",
              "                                                     '<LawStim'+'>', '<color=0,50,200>' + stims_top_limit + '</color>',",
              "                                                     '');",
              "    }",
              "",
              "    check = 0;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  128,
          "#":  129,
          "Total.Lines":  26,
          "Code.Type":  "Turn",
          "Code":          
          [
              "for(i = 0; i < ArrayDim(stims_array); i = i + 1)",
              "{",
              "    tstr1 = Format(CT('FormRuins.MC.Stimulants.PlayerStim'), '<Name'+'>', stims_array[i, 'Name'], '<Cost'+'>', stims_array[i, 'Cost']);",
              "",
              "    check = 0;",
              "    if(ShipMoney(Player()) < stims_array[i, 'Cost']) check = 1;",
              "    else",
              "    {",
              "        if(!findsubstr(stims_array[i, 'Designation'], 'Original'))",
              "        {",
              "            if(ShipHealthFactor(Player(), 0 + stims_array[i, 'Designation'])) check = 1;",
              "        }",
              "        //На будущее",
              "        //else",
              "        //{}",
              "    }",
              "",
              "    if(check)",
              "    {",
              "        tstr1 = DeleteTags(tstr1);",
              "        AddDialogBlock(tstr1, 1);",
              "    }",
              "",
              "    InjectAnswer('StimulantTakeDialog', tstr1, i);",
              "}",
              "InjectAnswer('StimulantTakeDialog', CT('FormRuins.MC.Stimulants.PlayerNo'), -1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  130,
          "#":  131,
          "Total.Lines":  22,
          "Code.Type":  "Turn",
          "Code":          
          [
              "i = GAnswerData;",
              "if(~i)",
              "{",
              "    j = stims_array[i, 'Duration'] * 30;",
              "    if(!findsubstr(stims_array[i, 'Designation'], 'Original')) ShipHealthFactor(Player(), 0 + stims_array[i, 'Designation'], j);",
              "    //На будущее",
              "    //else",
              "    //{}",
              "",
              "    ShipMoney(Player(), ShipMoney(Player()) - stims_array[i, 'Cost']);",
              "    Sound('Sound.Buy');",
              "",
              "    //if(!pirateMC)",
              "    tstr1 = '</color>' + Format(CT('FormRuins.MC.Stimulants.MCAfterPlayerStim'), '<Name'+'>', stims_array[i, 'Name'], '<Date'+'>', GameDateTxtByTurn(CurTurn() + j + 1));",
              "    //else tstr1 = '</color>' + Format(CT('FormRuins.MC.Stimulants.MCAfterPlayerStim'), '<Name'+'>', stims_array[i, 'Name'], '<Date'+'>', GameDateTxtByTurn(CurTurn() + j - 1));",
              "}",
              "//Игрок отказался от предложенных стимуляторов",
              "else",
              "{",
              "    if(!pirateMC) tstr1 = '</color>' + CT('FormRuins.MC.Stimulants.MCAfterPlayerNo');",
              "    else tstr1 = '</color>' + CT('FormRuins.MC.Stimulants.MCAfterPlayerNoPirate');",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  122,
          "#":  138,
          "Total.Lines":  140,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(GetGameOptions('FontDialog') == '0') dividing_line = '</color>-------------------------------------------------------------';",
              "else if(GetGameOptions('FontDialog') == '1') dividing_line = '</color>------------------------------------------';",
              "else if(GetGameOptions('FontDialog') == '2') dividing_line = '</color>-----------------------------------------';",
              "else /*if(GetGameOptions('FontDialog') == '3')*/ dividing_line = '</color>-------------------------------------';",
              "",
              "int ill_num = 0;",
              "CT('Illness.Illness', tarr1);",
              "for(i = ArrayDim(tarr1) - 1; i >= 0; i = i - 1)",
              "{",
              "    //Удаляем из составленного массива все лишние элементы",
              "    if(GetVariableType(tarr1[i]) != 9)",
              "    {",
              "        ArrayDelete(tarr1, i);",
              "        continue;",
              "    }",
              "",
              "    for(j = ArrayDim(tarr1[i]) - 1; j >= 0; j = j - 1)",
              "    {",
              "        if(GetVariableName(tarr1[i, j]) == 'Designation')",
              "        {",
              "            tstr1 = tarr1[i, j];",
              "            break;",
              "        }",
              "",
              "        if(!j)",
              "        {",
              "            tstr1 = '';",
              "            ArrayDelete(tarr1, i);",
              "        }",
              "    }",
              "    if(tstr1 == '') continue;",
              "",
              "    if(tstr1 == 'Original')",
              "    {",
              "        ill_num = 1 + GetVariableName(tarr1[i]); //Сдвиг нумерации болезней в ёба-списке в Lang",
              "        if(!ShipHealthFactor(Player(), ill_num))",
              "        {",
              "            if(!ShipHealthFactorStatus(Player(), ill_num)) ArrayDelete(tarr1, i); //Удаляем из массива те болезни, которых у игрока нет",
              "            else ArrayAdd(tarr1[i], ill_num, 'OriginalNum');",
              "        }",
              "        else ArrayAdd(tarr1[i], ill_num, 'OriginalNum');",
              "    }",
              "    //Болезни из модов",
              "    else",
              "    {",
              "        if(ShipFindCustomShipInfoByType(Player(), tarr1[i, 'Designation']) == -1) ArrayDelete(tarr1, i);",
              "    }",
              "}",
              "",
              "//SFT(tarr1); //Для отладки",
              "",
              "//Игрок болен (в том числе неизлечимыми болезнями) или заражён вирусом",
              "if(ArrayDim(tarr1))",
              "{",
              "    check = -1;",
              "",
              "    //Формируем реплику, а также считаем стоимость лечения каждой болезни и общую стоимость уринотерапии",
              "    j = ShipPilotRace(Player());",
              "    cost = 0;",
              "    tstr2 = dividing_line;",
              "    for(int i = 0; i < ArrayDim(tarr1); i = i + 1)",
              "    {",
              "        if(tarr1[i, 'Designation'] == 'Original')",
              "        {",
              "            if(!ShipHealthFactor(Player(), tarr1[i, 'OriginalNum'])) tstr1 = CT('FormRuins.MC.Illnes.MCSeeIllType2');",
              "            else tstr1 = CT('FormRuins.MC.Illnes.MCSeeIllType1');",
              "        }",
              "        else tstr1 = CT('FormRuins.MC.Illnes.MCSeeIllType1');",
              "",
              "        if(tarr1[i, 'TreatmentCost'] != '-1')",
              "        {",
              "            check = 1;",
              "            tarr1[i, 'TreatmentCost'] = CalcTreatmentCost(tarr1[i, 'TreatmentCost'], GalaxyMoney(0, j), GalaxyMoney(2, j), 0.5, GetObjectGenerationSeed(GalaxyPtr()) * (CurTurn() / 10) * i);",
              "            if(!pirateMC && PlayerMedPolicy()) tarr1[i, 'TreatmentCost'] = int(tarr1[i, 'TreatmentCost']) / 2; //На пиратских МЦ страховка не работает",
              "            cost = cost + tarr1[i, 'TreatmentCost'];",
              "            //tarr1[i, 'TreatmentCost'] = round(int(tarr1[i, 'TreatmentCost']), 10);",
              "            tstr3 = '<color=0,50,200>' + tarr1[i, 'TreatmentCost'] + '</color> cr.';",
              "        }",
              "        else tstr3 = '<color=255,0,0>' + CT('FormRuins.MC.Illnes.MCSeeIllIncurable') + '</color>'; //Если болезнь неизлечима",
              "",
              "        tstr2 = tstr2 + Format('<br>') + Format(CT('FormRuins.MC.Illnes.MCSeeIll'),",
              "                                           '<IllName'+'>', '<color=0,50,200>' + tarr1[i, 'Name'] + '</color>',",
              "                                           '<MCSeeIllType'+'>', tstr1,",
              "                                           '<Cost'+'>', tstr3,",
              "                                           '');",
              "        if(i == ArrayDim(tarr1) - 1) tstr2 = tstr2 + Format('<br>') + dividing_line;",
              "        else tstr2 = tstr2 + Format('<br>') + '---';",
              "    }",
              "",
              "    cost = GalaxyMoney(1, j) + cost / 3; //Стоимость уринотерапии",
              "    if(!pirateMC && PlayerMedPolicy()) cost = cost / 2; //На пиратских МЦ страховка не работает",
              "    //cost = round(cost, 10);",
              "",
              "    if(~check)",
              "    {",
              "        if(!pirateMC)",
              "        {",
              "            tstr1 = '</color>' + CT('FormRuins.MC.Illnes.MCSee') + ' ';",
              "            tstr1 = tstr1 + Format(CT('FormRuins.MC.Illnes.MCSeeIllness'), '<MCSeeIll'+'>', tstr2, '');",
              "        }",
              "        else",
              "        {",
              "            tstr1 = '</color>' + CT('FormRuins.MC.Illnes.MCSeePirate') + ' ';",
              "            tstr1 = tstr1 + Format(CT('FormRuins.MC.Illnes.MCSeeIllnessPirate'), '<MCSeeIll'+'>', tstr2, '');",
              "        }",
              "    }",
              "    else //Игрок болен только неизлечимыми болезнями",
              "    {",
              "        if(!pirateMC)",
              "        {",
              "            tstr1 = '</color>' + CT('FormRuins.MC.Illnes.MCSee') + ' ';",
              "            tstr1 = tstr1 + Format(CT('FormRuins.MC.Illnes.MCSeeCureless'), '<MCSeeIll'+'>', tstr2, '');",
              "        }",
              "        else",
              "        {",
              "            tstr1 = '</color>' + CT('FormRuins.MC.Illnes.MCSeePirate') + ' ';",
              "            tstr1 = tstr1 + Format(CT('FormRuins.MC.Illnes.MCSeeCurelessPirate'), '<MCSeeIll'+'>', tstr2, '');",
              "        }",
              "    }",
              "}",
              "//Игрок полностью здоров",
              "else",
              "{",
              "    if(!pirateMC)",
              "    {",
              "        tstr1 = '</color>' + CT('FormRuins.MC.Illnes.MCSee') + Format('<br>');",
              "        if(!ShipOnSidePirateClan(Player())) tstr1 = tstr1 + CT('FormRuins.MC.Illnes.MCSeeGoodNormalToNormal');",
              "        else tstr1 = tstr1 + CT('FormRuins.MC.Illnes.MCSeeGoodNormalToPirate');",
              "    }",
              "    else",
              "    {",
              "        tstr1 = '</color>' + CT('FormRuins.MC.Illnes.MCSeePirate') + Format('<br>');",
              "        if(!ShipOnSidePirateClan(Player())) tstr1 = tstr1 + CT('FormRuins.MC.Illnes.MCSeeGoodPirateToNormal');",
              "        else tstr1 = tstr1 + CT('FormRuins.MC.Illnes.MCSeeGoodPirateToPirate');",
              "    }",
              "",
              "    ArrayAdd(tarr1, 'Просто идите нахуй, дабомассивы!', 'GovnoEbanoe');",
              "",
              "    check = 0;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  141,
          "#":  144,
          "Total.Lines":  23,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(~check)",
              "{",
              "    for(i = 0; i < ArrayDim(tarr1); i = i + 1)",
              "    {",
              "        if(tarr1[i, 'TreatmentCost'] == -1) continue;",
              "",
              "        tstr1 = Format(CT('FormRuins.MC.Illnes.PlayerIll'), '<IllName'+'>', tarr1[i, 'Name'], '<Cost'+'>', tarr1[i, 'TreatmentCost']);",
              "        InjectAnswer('IllnessRemoveDialog', 'snap~' + tstr1, i);",
              "    }",
              "",
              "    //Не забываем также предложить игроку хлебнуть урины",
              "    tstr1 = Format(CT('FormRuins.MC.Illnes.PlayerIllAll'), '<Cost'+'>', cost);",
              "    InjectAnswer('IllnessRemoveDialog', tstr1, -1);",
              "    //Ну и отказаться от лечения он тоже может, разумеется",
              "    tstr1 = CT('FormRuins.MC.Illnes.PlayerNo');",
              "    InjectAnswer('IllnessRemoveDialog', tstr1, -2);",
              "}",
              "else //Игрок болен только неизлечимыми болезнями",
              "{",
              "    if(!pirateMC) tstr1 = CT('FormRuins.MC.Illnes.PlayerExit');",
              "    else tstr1 = CT('FormRuins.MC.Illnes.PlayerExitPirate');",
              "    InjectAnswer('IllnessRemoveDialog', tstr1, -3);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  145,
          "#":  146,
          "Total.Lines":  103,
          "Code.Type":  "Turn",
          "Code":          
          [
              "i = GAnswerData;",
              "if(i > -1) //Игрок лечит конкретную болезнь из списка",
              "{",
              "    if(tarr1[i, 'Designation'] == 'Original')",
              "    {",
              "        ShipHealthFactor(Player(), tarr1[i, 'OriginalNum'], 0);",
              "        ShipHealthFactorStatus(Player(), tarr1[i, 'OriginalNum'], 0);",
              "    }",
              "    else",
              "    {",
              "        //Вызываем принудительное завершение кастомной болезни (поскольку неизвестно какие именно она наложила дебаффы)",
              "        ShipCustomShipInfoData(Player(), tarr1[i, 'Designation'], 1, 0);",
              "        CreateActCodeEvent(t_OnStep, tarr1[i, 'Designation'], Player(), 1, 0, 0);",
              "        //ShipDeleteCustomShipInfo(Player(), tarr1[i, 'Designation']);",
              "    }",
              "",
              "    if(!pirateMC) tstr1 = '</color>' + Format(CT('FormRuins.MC.Illnes.MCSeeAfterIll'), '<IllName'+'>', tarr1[i, 'Name']);",
              "    else tstr1 = '</color>' + Format(CT('FormRuins.MC.Illnes.MCSeeAfterIllPirate'), '<IllName'+'>', tarr1[i, 'Name']);",
              "",
              "    PlayerImmunity(PlayerImmunity() + 30); //В оригинале +40",
              "    ShipMoney(Player(), ShipMoney(Player()) - tarr1[i, 'TreatmentCost']);",
              "    Sound('Sound.Buy');",
              "",
              "    ArrayDelete(tarr1, i);",
              "    //Проверяем, остались ли ещё у игрока болезни, которые возможно вылечить",
              "    check = 0;",
              "    for(j = ArrayDim(tarr1) - 1; j >= 0; j = j - 1)",
              "    {",
              "        if(tarr1[j, 'TreatmentCost'] != -1)",
              "        {",
              "            check = 1;",
              "            break;",
              "        }",
              "    }",
              "}",
              "else if(i == -1) //Игрок решил хлебнуть урины",
              "{",
              "    for(j = ArrayDim(tarr1) - 1; j >= 0; j = j - 1)",
              "    {",
              "        if(tarr1[j, 'TreatmentCost'] == -1) continue;",
              "        if(tarr1[j, 'Designation'] == 'Original')",
              "        {",
              "            ShipHealthFactor(Player(), tarr1[j, 'OriginalNum'], 0);",
              "            ShipHealthFactorStatus(Player(), tarr1[j, 'OriginalNum'], 0);",
              "        }",
              "        else",
              "        {",
              "            ShipDeleteCustomShipInfo(Player(), tarr1[j, 'Designation']);",
              "        }",
              "",
              "        ArrayDelete(tarr1, j);",
              "    }",
              "",
              "    PlayerImmunity(PlayerImmunity() + 80); //В оригинале +80",
              "    ShipMoney(Player(), ShipMoney(Player()) - cost);",
              "    Sound('Sound.Buy');",
              "",
              "    //Игрок хлебнул урины",
              "    if(ShipFindCustomShipInfoByType(Player(), 'EvoMC_UrineCurse') == -1)",
              "    {",
              "        ShipSpecialBonuses(Player(), bonSkill5,ShipSpecialBonuses(Player(), bonSkill5) - 3);",
              "        ShipSpecialBonuses(Player(), bonSkill6,ShipSpecialBonuses(Player(), bonSkill6) - 3);",
              "        ShipAddCustomShipInfo(Player(), 'EvoMC_UrineCurse', '', CurTurn() + RndObject(93, 124, Player()), 3, 3);",
              "        //Вешаем штраф к выносливости имплантов",
              "        if(CurrentMods('Expansion\\ExpImplants')) GlobalImplantsEnduranceBonus = GlobalImplantsEnduranceBonus - 2;",
              "    }",
              "    //Игрок хлебнул урины, пока действовал предыдущий уриновый дебафф",
              "    else",
              "    {",
              "        ShipSpecialBonuses(Player(), bonSkill5, ShipSpecialBonuses(Player(), bonSkill5) - 1);",
              "        ShipSpecialBonuses(Player(), bonSkill6, ShipSpecialBonuses(Player(), bonSkill6) - 1);",
              "        ShipCustomShipInfoData(Player(), 'EvoMC_UrineCurse', 1, CurTurn() + RndObject(124, 186, Player()));",
              "        ShipCustomShipInfoData(Player(), 'EvoMC_UrineCurse', 2, ShipCustomShipInfoData(Player(), 'EvoMC_UrineCurse', 2) + 1);",
              "        ShipCustomShipInfoData(Player(), 'EvoMC_UrineCurse', 3, ShipCustomShipInfoData(Player(), 'EvoMC_UrineCurse', 3) + 1);",
              "    }",
              "",
              "    if(!pirateMC)",
              "    {",
              "        tstr1 = CT('FormRuins.MC.Illnes.MCSeeAfterIllAllUrineInsertion' + RndObject(1, 3, cur_ruin));",
              "        tstr1 = '</color>' + Format(CT('FormRuins.MC.Illnes.MCSeeAfterIllAll'), '<UrineInsertion'+'>', tstr1, '');",
              "    }",
              "    else",
              "    {",
              "        tstr1 = CT('FormRuins.MC.Illnes.MCSeeAfterIllAllPirateUrineInsertion' + RndObject(1, 3, cur_ruin));",
              "        tstr1 = '</color>' + Format(CT('FormRuins.MC.Illnes.MCSeeAfterIllAllPirate'), '<UrineInsertion'+'>', tstr1, '');",
              "    }",
              "",
              "    check = 0;",
              "}",
              "else if(i == -2) //Игрок болен, но лечиться отказался",
              "{",
              "    if(!pirateMC) tstr1 = '</color>' + CT('FormRuins.MC.Illnes.MCSeeAfterNo');",
              "    else tstr1 = '</color>' + CT('FormRuins.MC.Illnes.MCSeeAfterNoPirate');",
              "",
              "    check = 0;",
              "}",
              "else if(i == -3) //Игрок болен только неизлечимыми болезнями",
              "{",
              "    if(!pirateMC) tstr1 = '</color>' + CT('FormRuins.MC.Illnes.MCSeeAfterExit');",
              "    else tstr1 = '</color>' + CT('FormRuins.MC.Illnes.MCSeeAfterExitPirate');",
              "",
              "    check = 0;",
              "}"          
          ]        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "InitPlanet",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  0,
          "#":  1,
          "Race":  62,
          "Owner":  62,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  -180,
          "Pos.y":  520,
          "Parent":  -1,
          "#":  2,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "InitStar",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  2,
          "#":  0,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "Statements":      
      [
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  240,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  8,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!urine || urine == 1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  240,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  28,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "variable1>0 || unknown1>0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  240,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  29,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "variable2>0 || unknown2>0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  240,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  30,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "variable3 > 0 || unknown3 > 0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  270,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  38,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cost > ShipMoney(Player())"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  450,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  39,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) >= cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  450,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  40,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player())>=cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  450,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  41,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player())>=cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  450,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  42,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player())>=cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  230,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  43,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "PlayerMedPolicy() && MaxMed==CurMed"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  150,
          "Pos.y":  480,
          "Parent":  -1,
          "#":  44,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "PlayerMedPolicy()>0 && (MaxMed-CurMed)>0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  360,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  57,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!urine"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  360,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  58,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "urine == 1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  360,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  59,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "variable1>0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  360,
          "Pos.y":  260,
          "Parent":  -1,
          "#":  60,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "unknown1>0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  360,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  61,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "unknown2>0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  360,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  62,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "variable2>0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  360,
          "Pos.y":  360,
          "Parent":  -1,
          "#":  63,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "unknown3>0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  360,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  64,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "variable3>0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  230,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  66,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!PlayerMedPolicy()"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  170,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  71,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "urine==1 && variable1==-1 && variable2==-1 && variable3==-1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  150,
          "Pos.y":  420,
          "Parent":  -1,
          "#":  72,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!urine || variable1 > 0 || variable2 > 0 || variable3 > 0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  85,
          "#":  86,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "vaccinations_available"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  85,
          "#":  89,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!vaccinations_available"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  60,
          "Parent":  89,
          "#":  96,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  101,
          "#":  102,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!check"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  101,
          "#":  103,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  60,
          "Parent":  102,
          "#":  109,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  112,
          "#":  113,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!check"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  112,
          "#":  114,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  -40,
          "Parent":  114,
          "#":  115,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  40,
          "Parent":  118,
          "#":  119,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  123,
          "#":  124,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!check"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  123,
          "#":  125,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  138,
          "#":  139,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!check"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  138,
          "#":  140,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "check"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  146,
          "#":  149,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!check"          
          ]        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "PlayerState",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  4,
          "#":  3,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "cost",
          "Pos.x":  60,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  13,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "variable1",
          "Pos.x":  -10,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  14,
          "Var.Type":  "Int",
          "Init":  "1",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "urine",
          "Pos.x":  -10,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  19,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "variable2",
          "Pos.x":  -10,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  23,
          "Var.Type":  "Int",
          "Init":  "2",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "variable3",
          "Pos.x":  -10,
          "Pos.y":  260,
          "Parent":  -1,
          "#":  24,
          "Var.Type":  "Int",
          "Init":  "3",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "vDays",
          "Pos.x":  60,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  25,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "drugs",
          "Pos.x":  -10,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  31,
          "Var.Type":  "Unknown",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "input",
          "Pos.x":  -10,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  32,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "usl",
          "Pos.x":  -10,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  33,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "MaxMed",
          "Pos.x":  60,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  35,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "CurMed",
          "Pos.x":  60,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  36,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "item",
          "Pos.x":  -10,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  52,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "enter",
          "Pos.x":  60,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  53,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "unknown1",
          "Pos.x":  60,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  54,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "unknown2",
          "Pos.x":  60,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  55,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "unknown3",
          "Pos.x":  60,
          "Pos.y":  260,
          "Parent":  -1,
          "#":  56,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "TotalMed",
          "Pos.x":  60,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  69,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "kov",
          "Pos.x":  60,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  70,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ruin",
          "Pos.x":  -10,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  74,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ship",
          "Pos.x":  -10,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  75,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr1",
          "Pos.x":  -10,
          "Pos.y":  320,
          "Parent":  -1,
          "#":  80,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint1",
          "Pos.x":  60,
          "Pos.y":  320,
          "Parent":  -1,
          "#":  81,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr2",
          "Pos.x":  -10,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  83,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "vaccinations_available",
          "Pos.x":  0,
          "Pos.y":  -20,
          "Parent":  82,
          "#":  88,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "check",
          "Pos.x":  60,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  97,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tarr1",
          "Pos.x":  -90,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  98,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "dividing_line",
          "Pos.x":  190,
          "Pos.y":  180,
          "Parent":  99,
          "#":  106,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "i",
          "Pos.x":  -90,
          "Pos.y":  320,
          "Parent":  -1,
          "#":  120,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "pirateMC",
          "Pos.x":  -100,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  134,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "j",
          "Pos.x":  -60,
          "Pos.y":  320,
          "Parent":  -1,
          "#":  135,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "stim_seed",
          "Pos.x":  40,
          "Pos.y":  40,
          "Parent":  121,
          "#":  136,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "stims_array",
          "Pos.x":  -410,
          "Pos.y":  440,
          "Parent":  -1,
          "#":  137,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr3",
          "Pos.x":  -10,
          "Pos.y":  360,
          "Parent":  -1,
          "#":  150,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  2,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  1,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  4,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  4,
      "End":  3,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  26,
      "End":  8,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  26,
      "End":  28,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  26,
      "End":  29,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  26,
      "End":  30,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  9,
      "End":  39,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  39,
      "End":  17,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  10,
      "End":  40,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  11,
      "End":  41,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  40,
      "End":  22,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  41,
      "End":  18,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  12,
      "End":  42,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  42,
      "End":  20,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  9,
      "End":  38,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  10,
      "End":  38,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  11,
      "End":  38,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  12,
      "End":  38,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  44,
      "End":  34,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  7,
      "End":  43,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  7,
      "End":  44,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  17,
      "End":  46,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  22,
      "End":  46,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  18,
      "End":  46,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  20,
      "End":  46,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  46,
      "End":  47,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  8,
      "End":  48,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  28,
      "End":  49,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  29,
      "End":  50,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  30,
      "End":  51,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  48,
      "End":  57,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  57,
      "End":  9,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  48,
      "End":  58,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  58,
      "End":  65,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  59,
      "End":  10,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  49,
      "End":  59,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  49,
      "End":  60,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  60,
      "End":  65,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  61,
      "End":  65,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  62,
      "End":  11,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  50,
      "End":  61,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  50,
      "End":  62,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  51,
      "End":  63,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  51,
      "End":  64,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  64,
      "End":  12,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  63,
      "End":  65,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  7,
      "End":  66,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  67,
      "End":  68,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  43,
      "End":  37,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  66,
      "End":  67,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  37,
      "End":  16,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  34,
      "End":  72,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  72,
      "End":  26,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  34,
      "End":  71,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  71,
      "End":  73,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  73,
      "End":  27,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  15,
      "End":  27,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  26,
      "End":  27,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  38,
      "End":  15,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  76,
      "End":  77,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  77,
      "End":  78,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  78,
      "End":  79,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  82,
      "End":  84,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  84,
      "End":  85,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  85,
      "End":  86,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  86,
      "End":  87,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  85,
      "End":  89,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  87,
      "End":  90,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  90,
      "End":  91,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  91,
      "End":  92,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  93,
      "End":  94,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  94,
      "End":  95,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  95,
      "End":  92,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  89,
      "End":  96,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  96,
      "End":  92,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  99,
      "End":  100,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  100,
      "End":  101,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  101,
      "End":  103,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  101,
      "End":  102,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  103,
      "End":  105,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  105,
      "End":  107,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  107,
      "End":  108,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  108,
      "End":  104,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  102,
      "End":  109,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  109,
      "End":  104,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  110,
      "End":  111,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  111,
      "End":  112,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  112,
      "End":  113,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  113,
      "End":  104,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  112,
      "End":  114,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  114,
      "End":  115,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  115,
      "End":  105,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  116,
      "End":  117,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  117,
      "End":  118,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  118,
      "End":  119,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  119,
      "End":  104,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  130,
      "End":  131,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  131,
      "End":  132,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  132,
      "End":  133,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  121,
      "End":  123,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  123,
      "End":  125,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  125,
      "End":  128,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  128,
      "End":  129,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  123,
      "End":  124,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  124,
      "End":  126,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  126,
      "End":  127,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  122,
      "End":  138,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  138,
      "End":  140,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  138,
      "End":  139,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  145,
      "End":  146,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  140,
      "End":  141,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  141,
      "End":  144,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  139,
      "End":  142,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  142,
      "End":  143,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  147,
      "End":  148,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  146,
      "End":  149,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  149,
      "End":  147,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  146,
      "End":  140,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "Rect.Text":  
  [
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  133,
      "Rect.Top":  154,
      "Rect.Right":  547,
      "Rect.Bottom":  572,
      "FStyle":  1,
      "FColor":  10710818,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0.300000011920929",
      "AlignX":  -1,
      "AlignY":  1,
      "AlignRect":  false,
      "Text":  " Покупка медикаментов",
      "Color":  0,
      "Font":  "Arial",
      "FontSize":  10,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    },
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  225,
      "Rect.Top":  158,
      "Rect.Right":  535,
      "Rect.Bottom":  213,
      "FStyle":  1,
      "FColor":  0,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0.300000011920929",
      "AlignX":  -1,
      "AlignY":  1,
      "AlignRect":  false,
      "Text":  " Настойка урины",
      "Color":  33466,
      "Font":  "Arial",
      "FontSize":  8,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    },
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  225,
      "Rect.Top":  219,
      "Rect.Right":  534,
      "Rect.Bottom":  274,
      "FStyle":  1,
      "FColor":  10710818,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0.300000011920929",
      "AlignX":  -1,
      "AlignY":  1,
      "AlignRect":  false,
      "Text":  " Болезни",
      "Color":  2818255,
      "Font":  "Arial",
      "FontSize":  8,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    },
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  224,
      "Rect.Top":  289,
      "Rect.Right":  534,
      "Rect.Bottom":  343,
      "FStyle":  1,
      "FColor":  10710818,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0.300000011920929",
      "AlignX":  -1,
      "AlignY":  -1,
      "AlignRect":  false,
      "Text":  " Стимуляторы часть 1",
      "Color":  1469470,
      "Font":  "Arial",
      "FontSize":  8,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    },
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  223,
      "Rect.Top":  349,
      "Rect.Right":  534,
      "Rect.Bottom":  403,
      "FStyle":  1,
      "FColor":  2321568,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0.300000011920929",
      "AlignX":  -1,
      "AlignY":  -1,
      "AlignRect":  false,
      "Text":  " Стимуляторы часть 2",
      "Color":  2852434,
      "Font":  "Arial",
      "FontSize":  8,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    }  
  ],
  "BlockPar.EC.Total.Strings":  11,
  "BlockPar.EC":  
  [
    {
      "#":  "120",
      "String":  "<br>"    
    },
    {
      "#":  "125",
      "String":  "<0>"    
    },
    {
      "#":  "126",
      "String":  "Закупиться медикаментами"    
    },
    {
      "#":  "129",
      "String":  "Согласно пункту <clr>1/2<clrEnd> параграфа <clr>10<clrEnd> медицинского кодекса, медикаменты отпускаются только при наличии действующего медицинского полиса."    
    },
    {
      "#":  "132",
      "String":  "Уйти из магазина медикаментов"    
    },
    {
      "#":  "133",
      "String":  "Рейнджер, у вас нет денег для покупки наших медикаментов."    
    },
    {
      "#":  "136",
      "String":  "Отличный выбор.<br>Помните, что медикаменты опасны для здоровья. Они вызывают привыкание, можно и наркоманом стать, да и летальные исходы не редкость.<br>Но еще лучше вести здоровый образ жизни, поддерживать свое тело в хорошей физической форме. Для души читайте устав рейнджеров и занимайтесь медитацией!"    
    },
    {
      "#":  "137",
      "String":  "Медикаменты, согласно пункту <clr>18/2<clrEnd> параграфа <clr>744<clrEnd> медицинского кодекса, предписаны исключительно для использования в чрезвычайных ситуаций, когда оказать врачебную помощь медикам в космосе невозможно.<br>Рассматривая данную ситуацию как патологически опасную для наших народов, мы можем допустить продажу <0> различных медикаментов в год.<br>По нашим данным в этом году вы приобрели <1> ед. медикаментов. Итого вы можете купить <2> ед. любого препарата.<br>Вот что у нас есть на данный момент: <3>"    
    },
    {
      "#":  "138",
      "String":  "По нашим данным в этом году вы приобрели <0> ед. медикаментов. До конца года вы не можете приобрести медикаменты, поскольку исчерпали ваш лимит (<1> ед.).<br>Ждём вас в следующем году."    
    },
    {
      "#":  "139",
      "String":  "На данный момент у нас закончились медикаменты, которые мы можем вам продать. Дождитесь следующей партии или зайдите в мед. пункт на прием стимулятора."    
    },
    {
      "#":  "140",
      "String":  "Ну хоть пробничек дайте! Что... не положено... Ну тогда пока"    
    }  
  ]
}