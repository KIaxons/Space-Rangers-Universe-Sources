{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -508,
  "ViewPos.y":  -179,
  "ScriptName":"Mod_DevKit",
  "ScriptFileOut":"H:\\Mod_DevKit.scr",
  "ScriptTextOut":"H:\\Mod_DevKit.txt",
  "GraphPoint.Count":  241,
  "GraphLink.Count":  269,
  "GraphRectText.Count":  17,
  "Variables.Count":  28,
  "Stars.Count":  1,
  "Planets.Count":  1,
  "Ships.Count":  1,
  "States.Count":  1,
  "Groups.Count":  1,
  "Places.Count":  0,
  "Items.Count":  1,
  "Ethers.Count":  0,
  "Dialogs.Count":  4,
  "DialogMessages.Count":  14,
  "DialogAnswers.Count":  76,
  "Operations.Count":  90,
  "Statements.Count":  23,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "DialogAnswers":      
      [
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          310,
          "Pos.y":          120,
          "Parent":          -1,
          "#":          8,
          "Msg":"Получить бак",
          "AMsg.Num":"0"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          480,
          "Pos.y":          180,
          "Parent":          -1,
          "#":          13,
          "Msg":"Малоки",
          "AMsg.Num":"1"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          480,
          "Pos.y":          210,
          "Parent":          -1,
          "#":          14,
          "Msg":"Пеленги",
          "AMsg.Num":"2"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          480,
          "Pos.y":          240,
          "Parent":          -1,
          "#":          15,
          "Msg":"Люди",
          "AMsg.Num":"3"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          480,
          "Pos.y":          270,
          "Parent":          -1,
          "#":          16,
          "Msg":"Феяне",
          "AMsg.Num":"4"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          480,
          "Pos.y":          300,
          "Parent":          -1,
          "#":          17,
          "Msg":"Гаальцы",
          "AMsg.Num":"5"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          310,
          "Pos.y":          150,
          "Parent":          -1,
          "#":          23,
          "Msg":"Получить двигатель",
          "AMsg.Num":"6"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          310,
          "Pos.y":          180,
          "Parent":          -1,
          "#":          26,
          "Msg":"Получить сканер",
          "AMsg.Num":"7"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          310,
          "Pos.y":          210,
          "Parent":          -1,
          "#":          32,
          "Msg":"Получить радар",
          "AMsg.Num":"8"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          310,
          "Pos.y":          240,
          "Parent":          -1,
          "#":          33,
          "Msg":"Получить дроид",
          "AMsg.Num":"9"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          310,
          "Pos.y":          270,
          "Parent":          -1,
          "#":          34,
          "Msg":"Получить захват",
          "AMsg.Num":"10"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          310,
          "Pos.y":          100,
          "Parent":          -1,
          "#":          38,
          "Msg":"Получить корпус",
          "AMsg.Num":"11"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          310,
          "Pos.y":          300,
          "Parent":          -1,
          "#":          39,
          "Msg":"Получить ГЗП",
          "AMsg.Num":"12"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          240,
          "Pos.y":          180,
          "Parent":          -1,
          "#":          42,
          "Msg":"Получить оборудование",
          "AMsg.Num":"13"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          220,
          "Pos.y":          350,
          "Parent":          -1,
          "#":          44,
          "Msg":"Получить деньги",
          "AMsg.Num":"14"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          320,
          "Pos.y":          350,
          "Parent":          -1,
          "#":          48,
          "Msg":"Ввести нужную сумму",
          "AMsg.Num":"15"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          220,
          "Pos.y":          400,
          "Parent":          -1,
          "#":          49,
          "Msg":"Получить артефакты",
          "AMsg.Num":"16"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          320,
          "Pos.y":          420,
          "Parent":          -1,
          "#":          51,
          "Msg":"Только Транклюкатора",
          "AMsg.Num":"17"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          320,
          "Pos.y":          400,
          "Parent":          -1,
          "#":          53,
          "Msg":"Оригинальные",
          "AMsg.Num":"18"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          220,
          "Pos.y":          500,
          "Parent":          -1,
          "#":          55,
          "Msg":"Получить микромодули",
          "AMsg.Num":"19"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          220,
          "Pos.y":          520,
          "Parent":          -1,
          "#":          57,
          "Msg":"Заправить бак",
          "AMsg.Num":"20"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          320,
          "Pos.y":          20,
          "Parent":          -1,
          "#":          59,
          "Msg":"Получить всё сразу",
          "AMsg.Num":"21"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          280,
          "Pos.y":          -70,
          "Parent":          -1,
          "#":          62,
          "Msg":"Получить оружие",
          "AMsg.Num":"22"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          360,
          "Pos.y":          -70,
          "Parent":          -1,
          "#":          65,
          "Msg":"Мабокит (Evolution)",
          "AMsg.Num":"23"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          360,
          "Pos.y":          -130,
          "Parent":          -1,
          "#":          67,
          "Msg":"Оригинальное",
          "AMsg.Num":"24"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          220,
          "Pos.y":          570,
          "Parent":          -1,
          "#":          70,
          "Msg":"Повысить звание",
          "AMsg.Num":"25"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          320,
          "Pos.y":          550,
          "Parent":          -1,
          "#":          73,
          "Msg":"Повысить коалиционное",
          "AMsg.Num":"26"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          320,
          "Pos.y":          570,
          "Parent":          -1,
          "#":          74,
          "Msg":"Повысить пиратское",
          "AMsg.Num":"27"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          220,
          "Pos.y":          640,
          "Parent":          -1,
          "#":          76,
          "Msg":"Создать базы",
          "AMsg.Num":"28"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          220,
          "Pos.y":          680,
          "Parent":          -1,
          "#":          78,
          "Msg":"Создать ЧД",
          "AMsg.Num":"29"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          220,
          "Pos.y":          730,
          "Parent":          -1,
          "#":          80,
          "Msg":"Получить ноды",
          "AMsg.Num":"30"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          330,
          "Pos.y":          730,
          "Parent":          -1,
          "#":          82,
          "Msg":"Ввести нужное количество",
          "AMsg.Num":"31"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          220,
          "Pos.y":          780,
          "Parent":          -1,
          "#":          91,
          "Msg":"Создать планету",
          "AMsg.Num":"32"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          220,
          "Pos.y":          820,
          "Parent":          -1,
          "#":          93,
          "Msg":"Загрузить антидоминатор программы",
          "AMsg.Num":"33"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          220,
          "Pos.y":          860,
          "Parent":          -1,
          "#":          95,
          "Msg":"Увеличить размер корпуса",
          "AMsg.Num":"34"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          220,
          "Pos.y":          910,
          "Parent":          -1,
          "#":          97,
          "Msg":"Починить оборудование",
          "AMsg.Num":"35"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          320,
          "Pos.y":          0,
          "Parent":          -1,
          "#":          101,
          "Msg":"Корпус Клещ (Expansion)",
          "AMsg.Num":"36"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          360,
          "Pos.y":          -100,
          "Parent":          -1,
          "#":          104,
          "Msg":"ФизГан (Expansion)",
          "AMsg.Num":"37"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          220,
          "Pos.y":          940,
          "Parent":          -1,
          "#":          108,
          "Msg":"Консоль",
          "AMsg.Num":"38"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          300,
          "Pos.y":          -40,
          "Parent":          -1,
          "#":          110,
          "Msg":"Корпус Тень Империи",
          "AMsg.Num":"39"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          380,
          "Pos.y":          80,
          "Parent":          -1,
          "#":          114,
          "Msg":"Военный",
          "AMsg.Num":"40"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          380,
          "Pos.y":          100,
          "Parent":          -1,
          "#":          115,
          "Msg":"Пиратский",
          "AMsg.Num":"41"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          380,
          "Pos.y":          120,
          "Parent":          -1,
          "#":          116,
          "Msg":"Транспортный",
          "AMsg.Num":"42"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          380,
          "Pos.y":          140,
          "Parent":          -1,
          "#":          120,
          "Msg":"Рейнджер",
          "AMsg.Num":"43"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          320,
          "Pos.y":          380,
          "Parent":          -1,
          "#":          123,
          "Msg":"Голопроектор, Пульсар, Блинкер (модуль SubSpaceBase)",
          "AMsg.Num":"44"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          220,
          "Pos.y":          980,
          "Parent":          -1,
          "#":          126,
          "Msg":"Открыть всю карту",
          "AMsg.Num":"45"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          310,
          "Pos.y":          860,
          "Parent":          -1,
          "#":          129,
          "Msg":"Ввести нужный размер",
          "AMsg.Num":"46"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          320,
          "Pos.y":          590,
          "Parent":          -1,
          "#":          132,
          "Msg":"Стать Бароном",
          "AMsg.Num":"47"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          320,
          "Pos.y":          610,
          "Parent":          -1,
          "#":          133,
          "Msg":"Стать Адмиралом",
          "AMsg.Num":"48"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          440,
          "Pos.y":          0,
          "Parent":          -1,
          "#":          137,
          "Msg":"A",
          "AMsg.Num":"49"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          440,
          "Pos.y":          20,
          "Parent":          -1,
          "#":          138,
          "Msg":"B",
          "AMsg.Num":"50"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          440,
          "Pos.y":          40,
          "Parent":          -1,
          "#":          139,
          "Msg":"C",
          "AMsg.Num":"51"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          440,
          "Pos.y":          60,
          "Parent":          -1,
          "#":          140,
          "Msg":"D",
          "AMsg.Num":"52"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          440,
          "Pos.y":          80,
          "Parent":          -1,
          "#":          141,
          "Msg":"E",
          "AMsg.Num":"53"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          440,
          "Pos.y":          100,
          "Parent":          -1,
          "#":          142,
          "Msg":"F",
          "AMsg.Num":"54"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          440,
          "Pos.y":          120,
          "Parent":          -1,
          "#":          143,
          "Msg":"G",
          "AMsg.Num":"55"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          440,
          "Pos.y":          140,
          "Parent":          -1,
          "#":          144,
          "Msg":"H",
          "AMsg.Num":"56"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          330,
          "Pos.y":          50,
          "Parent":          -1,
          "#":          154,
          "Msg":"Читерный двигатель",
          "AMsg.Num":"57"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          510,
          "Pos.y":          0,
          "Parent":          -1,
          "#":          157,
          "Msg":"Малоки",
          "AMsg.Num":"58"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          510,
          "Pos.y":          20,
          "Parent":          -1,
          "#":          158,
          "Msg":"Пеленги",
          "AMsg.Num":"59"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          510,
          "Pos.y":          40,
          "Parent":          -1,
          "#":          159,
          "Msg":"Люди",
          "AMsg.Num":"60"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          510,
          "Pos.y":          60,
          "Parent":          -1,
          "#":          160,
          "Msg":"Феяне",
          "AMsg.Num":"61"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          510,
          "Pos.y":          80,
          "Parent":          -1,
          "#":          161,
          "Msg":"Гаальцы",
          "AMsg.Num":"62"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          510,
          "Pos.y":          100,
          "Parent":          -1,
          "#":          162,
          "Msg":"Доминаторы",
          "AMsg.Num":"63"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          510,
          "Pos.y":          120,
          "Parent":          -1,
          "#":          163,
          "Msg":"Неизвестные",
          "AMsg.Num":"64"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          510,
          "Pos.y":          140,
          "Parent":          -1,
          "#":          164,
          "Msg":"Пираты",
          "AMsg.Num":"65"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          330,
          "Pos.y":          80,
          "Parent":          -1,
          "#":          173,
          "Msg":"Читерный радар",
          "AMsg.Num":"66"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          220,
          "Pos.y":          320,
          "Parent":          -1,
          "#":          176,
          "Msg":"Быстрое оборудования для тестинга",
          "AMsg.Num":"67"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"fastexit",
          "Pos.x":          80,
          "Pos.y":          -380,
          "Parent":          -1,
          "#":          178,
          "Msg":"Выход",
          "AMsg.Num":"68"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          320,
          "Pos.y":          440,
          "Parent":          -1,
          "#":          184,
          "Msg":"Из модуля ExpArts",
          "AMsg.Num":"69"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          280,
          "Pos.y":          -170,
          "Parent":          -1,
          "#":          188,
          "Msg":"Телепортация в другую систему",
          "AMsg.Num":"70"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"exit",
          "Pos.x":          280,
          "Pos.y":          -230,
          "Parent":          -1,
          "#":          194,
          "Msg":"",
          "AMsg.Num":"71"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          270,
          "Pos.y":          -260,
          "Parent":          -1,
          "#":          196,
          "Msg":"Убить пиратский клан",
          "AMsg.Num":"72"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          280,
          "Pos.y":          310,
          "Parent":          -1,
          "#":          197,
          "Msg":"Из модуля ExpAcryn",
          "AMsg.Num":"73"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"restart",
          "Pos.x":          110,
          "Pos.y":          -360,
          "Parent":          -1,
          "#":          207,
          "Msg":"Выход",
          "AMsg.Num":"74"        
        },
        {
          "Type":"TDialogAnswer",
          "Name":"",
          "Pos.x":          310,
          "Pos.y":          -20,
          "Parent":          -1,
          "#":          236,
          "Msg":"<tstr1>",
          "AMsg.Num":"75"        
        }      
      ],
      "DialogMessages":      
      [
        {
          "Type":"TDialogMsg",
          "Name":"",
          "Pos.x":          80,
          "Pos.y":          370,
          "Parent":          -1,
          "#":          7,
          "Msg":"Функции для тестирования",
          "DMsg.Num":"0"        
        },
        {
          "Type":"TDialogMsg",
          "Name":"",
          "Pos.x":          400,
          "Pos.y":          240,
          "Parent":          -1,
          "#":          12,
          "Msg":"Раса",
          "DMsg.Num":"1"        
        },
        {
          "Type":"TDialogMsg",
          "Name":"",
          "Pos.x":          270,
          "Pos.y":          180,
          "Parent":          -1,
          "#":          43,
          "Msg":"Какое именно?",
          "DMsg.Num":"2"        
        },
        {
          "Type":"TDialogMsg",
          "Name":"",
          "Pos.x":          280,
          "Pos.y":          350,
          "Parent":          -1,
          "#":          45,
          "Msg":"Какое количество?",
          "DMsg.Num":"3"        
        },
        {
          "Type":"TDialogMsg",
          "Name":"",
          "Pos.x":          280,
          "Pos.y":          400,
          "Parent":          -1,
          "#":          52,
          "Msg":"Какие именно?",
          "DMsg.Num":"4"        
        },
        {
          "Type":"TDialogMsg",
          "Name":"",
          "Pos.x":          320,
          "Pos.y":          -70,
          "Parent":          -1,
          "#":          66,
          "Msg":"Какое именно?",
          "DMsg.Num":"5"        
        },
        {
          "Type":"TDialogMsg",
          "Name":"",
          "Pos.x":          270,
          "Pos.y":          570,
          "Parent":          -1,
          "#":          72,
          "Msg":"Какое именно?",
          "DMsg.Num":"6"        
        },
        {
          "Type":"TDialogMsg",
          "Name":"",
          "Pos.x":          280,
          "Pos.y":          730,
          "Parent":          -1,
          "#":          81,
          "Msg":"Какое количество нодов получить физически и на какое пополнить нод-счёт?",
          "DMsg.Num":"7"        
        },
        {
          "Type":"TDialogMsg",
          "Name":"",
          "Pos.x":          350,
          "Pos.y":          100,
          "Parent":          -1,
          "#":          112,
          "Msg":"Какого типа?",
          "DMsg.Num":"8"        
        },
        {
          "Type":"TDialogMsg",
          "Name":"",
          "Pos.x":          280,
          "Pos.y":          860,
          "Parent":          -1,
          "#":          128,
          "Msg":"На сколько?",
          "DMsg.Num":"9"        
        },
        {
          "Type":"TDialogMsg",
          "Name":"",
          "Pos.x":          400,
          "Pos.y":          20,
          "Parent":          -1,
          "#":          136,
          "Msg":"Какого тех.уровня?",
          "DMsg.Num":"10"        
        },
        {
          "Type":"TDialogMsg",
          "Name":"",
          "Pos.x":          490,
          "Pos.y":          70,
          "Parent":          -1,
          "#":          156,
          "Msg":"Какой расы?",
          "DMsg.Num":"11"        
        },
        {
          "Type":"TDialogMsg",
          "Name":"",
          "Pos.x":          360,
          "Pos.y":          -170,
          "Parent":          -1,
          "#":          189,
          "Msg":"Куда?",
          "DMsg.Num":"12"        
        },
        {
          "Type":"TDialogMsg",
          "Name":"",
          "Pos.x":          280,
          "Pos.y":          -200,
          "Parent":          -1,
          "#":          192,
          "Msg":"Готово.",
          "DMsg.Num":"13"        
        }      
      ],
      "Dialogs":      
      [
        {
          "Type":"TDialog",
          "Name":"DevKit",
          "Pos.x":          0,
          "Pos.y":          370,
          "Parent":          -1,
          "#":          6        
        },
        {
          "Type":"TDialog",
          "Name":"TP_star",
          "Pos.x":          410,
          "Pos.y":          -200,
          "Parent":          -1,
          "#":          191        
        },
        {
          "Type":"TDialog",
          "Name":"KillThisShit",
          "Pos.x":          -120,
          "Pos.y":          100,
          "Parent":          -1,
          "#":          214        
        },
        {
          "Type":"TDialog",
          "Name":"GTLChange",
          "Pos.x":          0,
          "Pos.y":          430,
          "Parent":          -1,
          "#":          233        
        }      
      ],
      "Groups":      
      [
        {
          "Type":"TGroup",
          "Name":"PlayerGroup",
          "Pos.x":          -30,
          "Pos.y":          220,
          "Parent":          -1,
          "#":          3,
          "Owner":          62,
          "Group.Type":          126,
          "CntShipMin":          1,
          "CntShipMax":          1,
          "SpeedMin":          100,
          "SpeedMax":          10000,
          "Weapon":          0,
          "CargoHook":          0,
          "EmptySpace":          0,
          "AddPlayer":true,
          "StatusTraderMin":          0,
          "StatusTraderMax":          100,
          "StatusWarriorMin":          0,
          "StatusWarriorMax":          100,
          "StatusPirateMin":          0,
          "StatusPirateMax":          100,
          "DistSearch":          10000,
          "Dialog":          -1,
          "StrengthMin":"0",
          "StrengthMax":"0",
          "Ruins":""        
        }      
      ],
      "Items":      
      [
        {
          "Type":"TItem",
          "Name":"PhysGun",
          "Pos.x":          70,
          "Pos.y":          100,
          "Parent":          -1,
          "#":          213,
          "Class":          5,
          "Item.Type":          0,
          "Size":          10,
          "Level":          1,
          "Radius":          150,
          "Owner":          6,
          "Useless":""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          0,
          "Pos.y":          100,
          "Parent":          -1,
          "#":          5,
          "Total.Lines":          1,
          "Code.Type":"Global",
          "Code":          
          [
"GRun();"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          400,
          "Pos.y":          180,
          "Parent":          -1,
          "#":          9,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_size=CountBox('Bm.Items.2FuelTanks14s','Размер',5,2000);"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          570,
          "Pos.y":          240,
          "Parent":          -1,
          "#":          11,
          "Total.Lines":          11,
          "Code.Type":"Turn",
          "Code":          
          [
"if (temp_int==1){",
"Sound('Sound.Buy');",
"temp_int=FindSeriesByName('Идеал');",
"temp_gift=CreateHull(hull_type,temp_size,8,temp_race,temp_int);",
"AddItemToStorage(GetShipRuins(Player())|GetShipPlanet(Player()),temp_gift);",
"}",
"else {",
"Sound('Sound.Buy');",
"temp_gift=CreateEquipment(type_equip_str,temp_size,8,temp_race);",
"AddItemToShip(Player(),temp_gift);",
"}"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          510,
          "Pos.y":          180,
          "Parent":          -1,
          "#":          18,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_race=0;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          510,
          "Pos.y":          210,
          "Parent":          -1,
          "#":          19,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_race=1;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          510,
          "Pos.y":          240,
          "Parent":          -1,
          "#":          20,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_race=2;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          510,
          "Pos.y":          270,
          "Parent":          -1,
          "#":          21,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_race=3;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          510,
          "Pos.y":          300,
          "Parent":          -1,
          "#":          22,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_race=4;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          350,
          "Pos.y":          120,
          "Parent":          -1,
          "#":          24,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"type_equip_str=t_FuelTanks;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          350,
          "Pos.y":          150,
          "Parent":          -1,
          "#":          25,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"type_equip_str=t_Engine;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          350,
          "Pos.y":          180,
          "Parent":          -1,
          "#":          27,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"type_equip_str=t_Scaner;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          350,
          "Pos.y":          210,
          "Parent":          -1,
          "#":          35,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"type_equip_str=t_Radar;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          350,
          "Pos.y":          240,
          "Parent":          -1,
          "#":          36,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"type_equip_str=t_RepairRobot;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          350,
          "Pos.y":          270,
          "Parent":          -1,
          "#":          37,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"type_equip_str=t_CargoHook;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          350,
          "Pos.y":          300,
          "Parent":          -1,
          "#":          40,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"type_equip_str=t_DefGenerator;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          400,
          "Pos.y":          80,
          "Parent":          -1,
          "#":          41,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"hull_type=1;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          380,
          "Pos.y":          350,
          "Parent":          -1,
          "#":          46,
          "Total.Lines":          2,
          "Code.Type":"Turn",
          "Code":          
          [
"tint2 = 100000000 - ShipMoney(Player());",
"tint = CountBox('Bm.Items.2FuelTanks14s', 'Количество', 1, tint2);"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          450,
          "Pos.y":          350,
          "Parent":          -1,
          "#":          47,
          "Total.Lines":          2,
          "Code.Type":"Turn",
          "Code":          
          [
"ShipMoney(Player(), ShipMoney(Player()) + tint);",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          470,
          "Pos.y":          400,
          "Parent":          -1,
          "#":          50,
          "Total.Lines":          4,
          "Code.Type":"Turn",
          "Code":          
          [
"for (temp_int=t_ArtefactHull;temp_int<=t_Hull;temp_int=temp_int+1) {",
"temp_gift=CreateArt(temp_int,0);",
"AddItemToShip(Player(),temp_gift);}",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          470,
          "Pos.y":          420,
          "Parent":          -1,
          "#":          54,
          "Total.Lines":          3,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_gift=CreateArt(t_ArtefactTranclucator,0);",
"AddItemToShip(Player(),temp_gift);",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          280,
          "Pos.y":          500,
          "Parent":          -1,
          "#":          56,
          "Total.Lines":          7,
          "Code.Type":"Turn",
          "Code":          
          [
"for(temp_int=0;temp_int<BonusCount();temp_int=temp_int+1)",
"{",
"    if(BonusIsSpecial(temp_int))continue;",
"    temp_gift=CreateMM(temp_int);",
"    AddItemToShip(Player(),temp_gift);",
"}",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          280,
          "Pos.y":          520,
          "Parent":          -1,
          "#":          58,
          "Total.Lines":          2,
          "Code.Type":"Turn",
          "Code":          
          [
"ShipFuel(Player(),5000);",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          560,
          "Pos.y":          70,
          "Parent":          -1,
          "#":          60,
          "Total.Lines":          6,
          "Code.Type":"Turn",
          "Code":          
          [
"Sound('Sound.Buy');",
"for (temp_int=t_FuelTanks;temp_int<=t_DefGenerator;temp_int=temp_int+1)",
"{",
"    temp_gift=CreateEquipment(temp_int,temp_size,tech_lvl,temp_race);",
"    AddItemToShip(Player(),temp_gift);",
"}"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          360,
          "Pos.y":          20,
          "Parent":          -1,
          "#":          61,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_size=CountBox('Bm.Items.2FuelTanks14s','Размер',5,2000);"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          400,
          "Pos.y":          -130,
          "Parent":          -1,
          "#":          63,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_size=CountBox('Bm.Items.2FuelTanks14s','Размер',5,2000);"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          640,
          "Pos.y":          -130,
          "Parent":          -1,
          "#":          64,
          "Total.Lines":          4,
          "Code.Type":"Turn",
          "Code":          
          [
"Sound('Sound.Buy');",
"for (temp_int=t_Weapon1;temp_int<=t_Weapon18;temp_int=temp_int+1) {",
"temp_gift=CreateEquipment(temp_int,temp_size,8,Gaal);",
"AddItemToShip(Player(),temp_gift);}"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          400,
          "Pos.y":          -70,
          "Parent":          -1,
          "#":          68,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_size = CountBox('Bm.Items.2FuelTanks14s', 'Размер', 5, 2000);"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          640,
          "Pos.y":          -70,
          "Parent":          -1,
          "#":          69,
          "Total.Lines":          3,
          "Code.Type":"Turn",
          "Code":          
          [
"Sound('Sound.Buy');",
"temp_gift=CreateCustomWeapon('Mabokit',temp_size,8,Gaal);",
"AddItemToShip(Player(),temp_gift);"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          390,
          "Pos.y":          550,
          "Parent":          -1,
          "#":          71,
          "Total.Lines":          3,
          "Code.Type":"Turn",
          "Code":          
          [
"ShipRankPoints(Player(),5000);",
"ShipRaiseRank(Player());",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          390,
          "Pos.y":          570,
          "Parent":          -1,
          "#":          75,
          "Total.Lines":          3,
          "Code.Type":"Turn",
          "Code":          
          [
"ShipJoinsClan(Player());",
"RaisePirateRank(Player());",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          280,
          "Pos.y":          640,
          "Parent":          -1,
          "#":          77,
          "Total.Lines":          8,
          "Code.Type":"Turn",
          "Code":          
          [
"BuildRuins(ShipStar(Player()), t_PB);",
"BuildRuins(ShipStar(Player()), t_WB);",
"BuildRuins(ShipStar(Player()), t_BK);",
"BuildRuins(ShipStar(Player()), t_CB);",
"BuildRuins(ShipStar(Player()), t_RC);",
"BuildRuins(ShipStar(Player()), t_SB);",
"BuildRuins(ShipStar(Player()), t_MC);",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          280,
          "Pos.y":          680,
          "Parent":          -1,
          "#":          79,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"HoleCreate2(ShipStar(Player()),ShipStar(Player()));"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          370,
          "Pos.y":          730,
          "Parent":          -1,
          "#":          83,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_int=CountBox('Bm.Items.2FuelTanks14s','Количество',1,5000);"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          430,
          "Pos.y":          730,
          "Parent":          -1,
          "#":          84,
          "Total.Lines":          4,
          "Code.Type":"Turn",
          "Code":          
          [
"RangerBaseNodes(Player(), temp_int);",
"temp_gift = CreateNodes(temp_int, 0);",
"AddItemToShip(Player(), temp_gift);",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          30,
          "Pos.y":          60,
          "Parent":          -1,
          "#":          87,
          "Total.Lines":          6,
          "Code.Type":"DialogBegin",
          "Code":          
          [
"if(GetTalkShip())",
"{",
"    if(ShipTypeN(GetTalkShip()) == t_Pirate && ShipOwner(GetTalkShip()) == PirateClan) AddDialogInject('KillThisShit', '', 'Сдохни, тупорылая сука!!!1', 50);",
"    else AddDialogInject('KillThisShit', '', 'Убейся.', 50);",
"}",
"AddDialogInject('DevKit', '', \"DevKit\", 1000);"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          0,
          "Pos.y":          60,
          "Parent":          -1,
          "#":          88,
          "Total.Lines":          2041,
          "Code.Type":"Init",
          "Code":          
          [
"//Если на корабле игрока нет мостика, добавляется мостик под номером 2 из Main в моде DevKit",
"CapitalShipStats(ShipItems(Player(), 0), 2);",
"",
"function RaceSetDefine(race_str, split_type)",
"{",
"    //Определяем сет рас",
"    int race_set = 0;",
"",
"    if(race_str == '' || race_str == 'Any')",
"    {",
"        if(split_type != 'Acryn') race_set = 1951; //По умолчанию все расы, кроме неизвестной (1 + 2 + 4 + 8 + 16 + 128 + 256 + 512 + 1024)",
"        else race_set = 159; //По умолчанию все расы, кроме неизвестной и доминаторов (1 + 2 + 4 + 8 + 16 + 128)",
"    }",
"    else",
"    {",
"        int dom_race_restrict = 0;",
"        //Для акринов по умолчанию не добавляем в сет доминаторские расы",
"        if(split_type == 'Acryn') dom_race_restrict = 1;",
"        int cycle_count = 0;",
"",
"        str par_str = 'begin';",
"        while(par_str != '')",
"        {",
"            par_str = GetParFromString(race_str, ',', cycle_count, 1);",
"",
"            if(par_str == 'Maloc')",
"            {",
"                if(!(race_set & 1)) race_set = race_set + 1;",
"            }",
"            else if(par_str == 'Peleng')",
"            {",
"                if(!(race_set & 2)) race_set = race_set + 2;",
"            }",
"            else if(par_str == 'People')",
"            {",
"                if(!(race_set & 4)) race_set = race_set + 4;",
"            }",
"            else if(par_str == 'Fei')",
"            {",
"                if(!(race_set & 8)) race_set = race_set + 8;",
"            }",
"            else if(par_str == 'Gaal')",
"            {",
"                if(!(race_set & 16)) race_set = race_set + 16;",
"            }",
"            else if(par_str == 'None')",
"            {",
"                if(!(race_set & 64)) race_set = race_set + 64;",
"            }",
"            else if(par_str == 'PirateClan')",
"            {",
"                if(!(race_set & 128)) race_set = race_set + 128;",
"            }",
"    // Не используется в оригинальной игре! /////////////",
"            else if(par_str == 'Kling')",
"            {",
"                if(!(race_set & 256)) race_set = race_set + 256;",
"                if(!(race_set & 512)) race_set = race_set + 512;",
"                if(!(race_set & 1024)) race_set = race_set + 1024;",
"                dom_race_restrict = 1;",
"            }",
"    ////////////////////////////////////////////////////",
"            else if(par_str == 'Blazer')",
"            {",
"                if(!(race_set & 256))race_set = race_set + 256;",
"                dom_race_restrict = 1;",
"            }",
"            else if(par_str == 'Keller')",
"            {",
"                if(!(race_set & 512))race_set = race_set + 512;",
"                dom_race_restrict = 1;",
"            }",
"            else if(par_str == 'Terron')",
"            {",
"                if(!(race_set & 1024))race_set = race_set + 1024;",
"                dom_race_restrict = 1;",
"            }",
"            else if(par_str == 'NonKling')",
"            {",
"                dom_race_restrict = 2;",
"            }",
"",
"            cycle_count = cycle_count + 1;",
"        }",
"",
"        if(!dom_race_restrict)race_set = race_set + 1792; //По умолчанию добавляем в сет все доминаторские серии",
"        //Удаляем все доминаторские серии, если был установлен параметр NonKling",
"        else if(dom_race_restrict == 2)",
"        {",
"            if((race_set & 256))race_set = race_set - 256;",
"            if((race_set & 512))race_set = race_set - 512;",
"            if((race_set & 1024))race_set = race_set - 1024;",
"        }",
"    }",
"",
"    result = race_set;",
"}",
"",
"//SetBaseType('' + t_Engine, '', 8, 1);",
"function SetBaseType(str type, str custom_type, GTL, param)",
"{",
"    str dam_type = 'NotWeapon';",
"    str param_type;",
"",
"    int shots_count = 0;",
"    int attacks_count = 0;",
"    int shot_type_check = 0;",
"",
"    if(type==t_Hull)",
"    {",
"        type='Hull';",
"",
"        //Броня",
"        if(param == 1)",
"        {",
"            tstr=CT('Items.Hull.mAlloy');",
"            param=4 + GetParFromString(tstr, ',', GTL-1, 1);",
"",
"            param_type = 'Hull armor';",
"        }",
"        else if(param == 2)",
"        {",
"            param=0;",
"            param_type = 'Hull mass';",
"        }",
"    }",
"    else if(type>=t_Weapon1 && type<=t_CustomWeapon)",
"    {",
"        if(type <= t_Weapon9)custom_type='W0'+(0+type-(t_Weapon1-1));",
"        else if(type != t_CustomWeapon)custom_type='W'+(0+type-(t_Weapon1-1));",
"",
"        if(type != t_CustomWeapon)tint = GetCustomWeaponData(0+type, 'DamageType');",
"        else tint = GetCustomWeaponData(custom_type, 'DamageType');",
"",
"        if((tint & 1))dam_type='WEnergy';",
"        else if((tint & 2))dam_type='WSplinter';",
"        else if((tint & 3))dam_type='WMissile';",
"",
"        //Максимальный урон (на минимальный бонусы не применяются)",
"        if(param == 1)",
"        {",
"            if(type != t_CustomWeapon)",
"            {",
"                tint = CT('Items.Weapon.Stats.'+(0+type-(t_Weapon1-1))+'.MaxDamage');",
"                param = round((0.0 + GetParFromString(CT('Items.Weapon.Stats.'+(0+type-(t_Weapon1-1))+'.mWeaponDamage'), ',', GTL-1, 1)) * tint);",
"            }",
"            else",
"            {",
"                tint = CT('Items.Weapon.Stats.'+custom_type+'.MaxDamage');",
"                param = round((0.0 + GetParFromString(CT('Items.Weapon.Stats.'+custom_type+'.mWeaponDamage'), ',', GTL-1, 1)) * tint);",
"            }",
"            param = round(0.12 * param + 0.40 * tint + 3 + param);",
"",
"            param_type = 'Max damage';",
"        }",
"        //Дальность",
"        else if(param == 2)",
"        {",
"            if(type != t_CustomWeapon)param = GetCustomWeaponData(0+type, 'AverageRadius');",
"            else param = GetCustomWeaponData(custom_type, 'AverageRadius');",
"            tint = param;",
"",
"            if(GTL == 1)param = round(0.90 * param);",
"            else if(GTL == 2)param = round(0.95 * param);",
"            else if(GTL == 3)param = round(0.95 * param);",
"            else if(GTL == 4)param = round(1.00 * param);",
"            else if(GTL == 5)param = round(1.00 * param);",
"            else if(GTL == 6)param = round(1.05 * param);",
"            else if(GTL == 7)param = round(1.05 * param);",
"            else if(GTL == 8)param = round(1.10 * param);",
"",
"            param = round(0.07 * param + 0.11 * tint + param);",
"",
"            param_type = 'Weapon range';",
"        }",
"        //Максимальный урон, наносимый за один ход или DPD",
"        else if(param == 3)",
"        {",
"            //Вычисляем максимальный урон",
"            if(type != t_CustomWeapon)",
"            {",
"                tint = CT('Items.Weapon.Stats.' + (0 + type - (t_Weapon1 - 1)) + '.MaxDamage');",
"                param = round((0.0 + GetParFromString(CT('Items.Weapon.Stats.' + (0 + type - (t_Weapon1 - 1)) + '.mWeaponDamage'), ',', GTL - 1, 1)) * tint);",
"            }",
"            else",
"            {",
"                tint = CT('Items.Weapon.Stats.' + custom_type + '.MaxDamage');",
"                param = round((0.0 + GetParFromString(CT('Items.Weapon.Stats.' + custom_type + '.mWeaponDamage'), ',', GTL - 1, 1)) * tint);",
"            }",
"            param = round(0.12 * param + 0.40 * tint + 3 + param);",
"",
"            //Учитываем число залпов в выстреле",
"            if(type != t_CustomWeapon)shots_count = GetCustomWeaponData(0 + type, 'ShotCount');",
"            else shots_count = GetCustomWeaponData(custom_type, 'ShotCount');",
"",
"            //Учитываем число выстрелов в ходу",
"            if(type != t_CustomWeapon)attacks_count = GetCustomWeaponData(0 + type, 'AttackCount');",
"            else attacks_count = GetCustomWeaponData(custom_type, 'AttackCount');",
"",
"            //Проверяем тип выстрела",
"            if(type != t_CustomWeapon)tstr = TrimNumbers(GetCustomWeaponData(0 + type, 'ShotType'));",
"            else tstr = TrimNumbers(GetCustomWeaponData(custom_type, 'ShotType'));",
"",
"            if(tstr == 'Rocket' || tstr == 'Missile')shot_type_check = 1;",
"",
"            param_type = 'Max damage per turn';",
"        }",
"",
"        type = custom_type;",
"    }",
"    else if(type == t_Engine)",
"    {",
"        type = 'Engine';",
"",
"        //Скорость",
"        if(param == 1)",
"        {",
"            tstr=CT('Items.Engine.mSpeed');",
"            param=round(0.07 * GetParFromString(tstr, ',', GTL-1, 1) + 80 + GetParFromString(tstr, ',', GTL-1, 1));",
"",
"            param_type = 'Engine speed';",
"        }",
"        //Прыжок",
"        else if(param == 2)",
"        {",
"            tstr=CT('Items.Engine.mJump');",
"            param=12 + GetParFromString(tstr, ',', GTL-1, 1);",
"",
"            param_type = 'Jump range';",
"        }",
"    }",
"    else if(type==t_FuelTanks)",
"    {",
"        type='FuelTank';",
"",
"        //Ёмкость",
"        if(param == 1)",
"        {",
"            tstr=CT('Items.FuelTanks.mCapacity');",
"            param=round(0.20 * GetParFromString(tstr, ',', GTL-1, 1) + 5 + GetParFromString(tstr, ',', GTL-1, 1));",
"",
"            param_type = 'Fuel capacity';",
"        }",
"    }",
"    else if(type==t_Radar)",
"    {",
"        type='Radar';",
"",
"        //Дальность",
"        if(param == 1)",
"        {",
"            tstr=CT('Items.Radar.mRadius');",
"            param=round(0.10 * GetParFromString(tstr, ',', GTL-1, 1) + 500 + GetParFromString(tstr, ',', GTL-1, 1));",
"",
"            param_type = 'Radar range';",
"        }",
"    }",
"    else if(type==t_Scaner)",
"    {",
"        type='Scaner';",
"",
"        //Дальность",
"        if(param == 1)",
"        {",
"            tstr=CT('Items.DefGenerator.mDef');",
"            param=round(0.10 * (1 + GetParFromString(tstr, ',', GTL-1, 1)) + 7 + (1 + GetParFromString(tstr, ',', GTL-1, 1)));",
"",
"            param_type = 'Scanner power';",
"        }",
"    }",
"    else if(type==t_RepairRobot)",
"    {",
"        type='Droid';",
"",
"        //Эффективность",
"        if(param == 1)",
"        {",
"            tstr=CT('Items.RepairRobot.mRepair');",
"            param=round(0.12 * GetParFromString(tstr, ',', GTL-1, 1) + 10 + GetParFromString(tstr, ',', GTL-1, 1));",
"",
"            param_type = 'Droid efficiency';",
"        }",
"    }",
"    else if(type==t_CargoHook)",
"    {",
"        type='Hook';",
"",
"        //Размер объектов",
"        if(param == 1)",
"        {",
"            tstr=CT('Items.CargoHook.mMass');",
"            param=round(0.12 * GetParFromString(tstr, ',', GTL-1, 1) + 20 + GetParFromString(tstr, ',', GTL-1, 1));",
"",
"            param_type = 'Hook max object size';",
"        }",
"        //Дальность",
"        else if(param == 2)",
"        {",
"            tstr=CT('Items.CargoHook.mRadius');",
"            param=25 + GetParFromString(tstr, ',', GTL-1, 1);",
"",
"            param_type = 'Hook range';",
"        }",
"        //Макс. скорость (вблизи)",
"        else if(param == 3)",
"        {",
"            param=CT('Items.CargoHook.mSpeedClose');",
"",
"            param_type = 'Hook close (max) speed';",
"        }",
"        //Мин. скорость (на удалении)",
"        else if(param == 4)",
"        {",
"            param=CT('Items.CargoHook.mSpeedFar');",
"",
"            param_type = 'Hook far (min) speed';",
"        }",
"    }",
"    else if(type==t_DefGenerator)",
"    {",
"        type='DefGenerator';",
"",
"        //Процент защиты",
"        if(param == 1)",
"        {",
"            tstr=CT('Items.DefGenerator.mDef');",
"            param=100.0 * GetParFromString(tstr, ',', GTL-1, 1) + 5;",
"",
"            param_type = 'Defence percent';",
"        }",
"    }",
"",
"    result='' + type + ',' + dam_type + ',' + param + ',' + param_type + ',' + shots_count + ',' + attacks_count + ',' + shot_type_check;",
"}",
"",
"//Функция для проверки максимального/минимального значения бонусов/штрафов (выводит собранную информацию в игровой лог)",
"//Для применения, вставьте в исполняемую строку следующую команду (переносы строк убирать не обязательно):",
"// str itemType = t_DefGenerator;",
"// str customWeaponType = '';",
"// int parameterType = 1;",
"// int parameterMaxValue = 50;",
"// int parameterMinValue = 0;",
"// int bonusType = bonDef;",
"// int galaxyTechLevel = 8;",
"// int isInstallMMs = 4;",
"// int isInstallUniqueMMs = 1;",
"// int isInstallAcrynator = 1;",
"// int isInstallArtefacts = 1;",
"// int isAppliedStimulantsAndDiseases = 1;",
"// str skipAcrynsList = '*ExpTC_Lifeboat*ExpAcryn_DomAcryn*';",
"// CheckParamRangeSingle(itemType, customWeaponType, galaxyTechLevel, parameterType, bonusType, parameterMaxValue, parameterMinValue, isInstallMMs, isInstallUniqueMMs, isInstallAcrynator, isInstallArtefacts, isAppliedStimulantsAndDiseases, skipAcrynsList);",
"function CheckParamRangeSingle(str type, str custom_type, GTL, param, bonus, param_max_value, param_min_value, InstallMM, InstallUniqueMM, InstallAcrynator, InstallArtefacts, InstallStimulants, skipAcrynsList)",
"{",
"    //Определяем базовый параметр оборудки с учётом максимального улучшения на НБ для указанного ГТУ",
"    type=SetBaseType(type, custom_type, GTL, param);",
"",
"    str dam_type = GetParFromString(type, ',', 1, 1);",
"    param = GetParFromString(type, ',', 2, 1);",
"    str param_type = GetParFromString(type, ',', 3, 0);",
"    int shots_count = GetParFromString(type, ',', 4, 0);",
"    int attacks_count = GetParFromString(type, ',', 5, 0);",
"    int shot_type_check = GetParFromString(type, ',', 6, 0);",
"    type = GetParFromString(type, ',', 0, 1);",
"",
"    SFT('###########################');",
"    SFT('###########################');",
"    SFT('###########################');",
"    SFT(' ');",
"",
"    int excess_count=0;",
"    int highest_value=0;",
"    if(!param_max_value) highest_value=1000000000;",
"    str highest_value_name='None';",
"    str numInCfg;",
"    str numInCfgMM;",
"    int acrynat_value = 0;",
"    int max_MM_value = 0;",
"    int end_value = 0;",
"    int check = 0;",
"    int acryn_race_set = 0;",
"    int MM_race_set = 0;",
"",
"    str checkedMM = '*';",
"",
"    for(i = 0; i < BonusCount(); i = i + 1)",
"    {",
"        end_value = 0;",
"        acrynat_value = 0;",
"",
"        numInCfg=BonusNumInCfg(i);",
"        //Пропускаем Акринатор",
"        if(numInCfg == '498')continue;",
"        //Исключаем не акрины",
"        if(!BonusIsSpecial(i))continue;",
"        //Исключаем уникальные микромодули",
"        if(CT('MicroModuls.'+numInCfg+'.UniqueMM'))continue;",
"",
"        str equipOn=CT('MicroModuls.'+numInCfg+'.Equipments');",
"",
"        //Исключаем бонусы, неподходящие для указанного ГТУ",
"        if(GTL < 8.0 * (0.01 * CT('MicroModuls.'+numInCfg+'.Priority')))continue;",
"",
"        //Пропускаем скипнутые акрины",
"        if(findsubstr(skipAcrynsList, '*' + numInCfg + '*') > -1)continue;",
"",
"        int uniqueMM_check = 0;",
"",
"        //Переходим к проверке значения указанного параметра бонуса",
"        //Если для проверки выбрано максимальное значение параметра",
"        if(param_max_value)",
"        {",
"            //Исключаем акрины, значение искомого бонуса в которых не положительно",
"            if(param_type != 'Max damage per turn')",
"            {",
"                if(BonusValue(i, bonus) <= 0)continue;",
"            }",
"            else",
"            {",
"                if(BonusValue(i, bonus) <= 0 && ((BonusValue(i, bonShots) <= 0 && shot_type_check) || !shot_type_check) && BonusValue(i, bonAttacks) <= 0)continue;",
"            }",
"",
"            if(CT('MicroModuls.'+numInCfg+'.BlockMM') != 1)",
"            {",
"                //Чистое значение данного акрина, без доп. бонусов",
"                check = 0;",
"                if(dam_type == 'NotWeapon')check = 1;",
"                else",
"                {",
"                    tstr = CT('MicroModuls.'+numInCfg+'.Equipments');",
"                    if(tstr == '')check = 1;",
"                    else if(findsubstr(tstr, type) > -1 || findsubstr(tstr, dam_type) > -1 || tstr == 'Any')check = 1;",
"                }",
"                if(check)",
"                {",
"                    if(param_type != 'Max damage per turn')",
"                    {",
"                        end_value = param + BonusValue(i, bonus);",
"",
"                        if(end_value > param_max_value)",
"                        {",
"                            SFT(numInCfg);",
"                            SFT('Higher on: ' + (end_value - param_max_value));",
"                            SFT('---------------------');",
"",
"                            if(end_value > highest_value)",
"                            {",
"                                highest_value=end_value;",
"                                highest_value_name=numInCfg;",
"                            }",
"",
"                            excess_count=excess_count+1;",
"                        }",
"                    }",
"                    else",
"                    {",
"                        end_value = param + BonusValue(i, bonus);",
"                        if(shot_type_check) end_value = end_value * (shots_count + BonusValue(i, bonShots));",
"                        end_value = end_value * (attacks_count + BonusValue(i, bonAttacks));",
"",
"                        if(end_value > param_max_value)",
"                        {",
"                            SFT(numInCfg);",
"                            SFT('Higher on: ' + (end_value - param_max_value));",
"                            SFT('---------------------');",
"",
"                            if(end_value > highest_value)",
"                            {",
"                                highest_value=end_value;",
"                                highest_value_name=numInCfg;",
"                            }",
"",
"                            excess_count=excess_count+1;",
"                        }",
"                    }",
"                }",
"",
"                //\"Вставляем\" Акринатор",
"                if(InstallAcrynator && CT('MicroModuls.'+numInCfg+'.BlockMM') != 1)",
"                {",
"                    //Если проверка не была запущена для корпуса или оружия",
"                    if(type != 'Hull' && dam_type == 'NotWeapon')",
"                    {",
"                        if(findsubstr(equipOn, 'WEnergy') > -1)check = 1;",
"                        else if(findsubstr(equipOn, 'WSplinter') > -1)check = 1;",
"                        else if(findsubstr(equipOn, 'WMissile') > -1)check = 1;",
"",
"                        if(!check)",
"                        {",
"                            for(k=1; k<=18; k=k+1)",
"                            {",
"                                if(k <= 9)tstr='W0'+k;",
"                                else tstr='W'+k;",
"",
"                                if(findsubstr(equipOn, tstr) > -1)",
"                                {",
"                                    check=1;",
"                                    break;",
"                                }",
"                            }",
"                            if(!check)",
"                            {",
"                                for(k=0; k<CustomWeaponTypes(); k=k+1)",
"                                {",
"                                    tstr=CustomWeaponTypes(k);",
"",
"                                    if(findsubstr(equipOn, tstr) > -1)",
"                                    {",
"                                        check=1;",
"                                        break;",
"                                    }",
"                                }",
"                            }",
"                        }",
"                        if(findsubstr(equipOn, 'Hull') == -1 && !check)",
"                        {",
"                            acrynat_value = param + (3 * BonusValue(i, bonus));",
"                        }",
"",
"                        //Проверяем, не превышает ли бонус акрина лимитное значение с установленным Акринатором",
"                        if(acrynat_value > param_max_value && (3 * BonusValue(i, bonus)))",
"                        {",
"                            SFT(numInCfg + ' + Acrynator');",
"                            SFT('Higher on: ' + (acrynat_value - param_max_value));",
"                            SFT('---------------------');",
"",
"                            if(acrynat_value > highest_value)",
"                            {",
"                                highest_value = acrynat_value;",
"                                highest_value_name = numInCfg + ' + Acrynator';",
"                            }",
"",
"                            excess_count=excess_count+1;",
"                        }",
"                    }",
"                }",
"",
"                //Перебор ММ",
"                if(InstallMM && CT('MicroModuls.'+numInCfg+'.BlockMM') != 1)",
"                {",
"                    for(k=0; k<BonusCount(); k=k+1)",
"                    {",
"                        max_MM_value = 0;",
"                        numInCfgMM=BonusNumInCfg(k);",
"",
"                        //Исключаем ММ, значение искомого бонуса в которых не положительно",
"                        if(param_type != 'Max damage per turn')",
"                        {",
"                            if(BonusValue(k, bonus) <= 0)continue;",
"                        }",
"                        else",
"                        {",
"                            if(BonusValue(k, bonus) <= 0 && ((BonusValue(k, bonShots) <= 0 && shot_type_check) || !shot_type_check) && BonusValue(k, bonAttacks) <= 0)continue;",
"                        }",
"",
"                        //Исключаем акрины",
"                        uniqueMM_check = CT('MicroModuls.'+numInCfgMM+'.UniqueMM');",
"                        if(BonusIsSpecial(k))",
"                        {",
"                            if(uniqueMM_check)",
"                            {",
"                                if(!InstallUniqueMM)continue;",
"                            }",
"                            else continue;",
"                        }",
"",
"                        //Пропускаем уровни ММ, которые были отсечены фильтром",
"                        if(!uniqueMM_check)",
"                        {",
"                            //Оставляем только ММ первого уровня",
"                            if(InstallMM == 1)",
"                            {",
"                                if(BonusPriority(k) > 30)continue;",
"                            }",
"                            //Оставляем только ММ второго уровня",
"                            else if(InstallMM == 2)",
"                            {",
"                                if(BonusPriority(k) < 31 || BonusPriority(k) > 69)continue;",
"                            }",
"                            //Оставляем только ММ третьего уровня",
"                            else if(InstallMM == 3)",
"                            {",
"                                if(BonusPriority(k) < 70)continue;",
"                            }",
"                        }",
"",
"                        //Проверяем на предмет совместимости с объектом поиска (оборудкой, имеющей подходящие параметры) сперва сам ММ",
"                        tstr = CT('MicroModuls.'+numInCfgMM+'.Equipments');",
"                        if(findsubstr(tstr, type) == -1 && findsubstr(tstr, dam_type) == -1 && tstr != 'Any' && tstr != '')continue;",
"",
"                        //После чего проверяем, не превышает ли собственный бонус данного ММ лимитное значение даже без учёта акрина",
"                        if(findsubstr(checkedMM, '*' + numInCfgMM + '*') == -1)",
"                        {",
"                            if(param_type != 'Max damage per turn')",
"                            {",
"                                max_MM_value = param + BonusValue(k, bonus);",
"                            }",
"                            else",
"                            {",
"                                max_MM_value = param + BonusValue(k, bonus);",
"                                if(shot_type_check) max_MM_value = max_MM_value * (shots_count + BonusValue(k, bonShots));",
"                                max_MM_value = max_MM_value * (attacks_count + BonusValue(k, bonAttacks));",
"                            }",
"",
"                            if(max_MM_value > param_max_value)",
"                            {",
"                                SFT('None + ' + numInCfgMM);",
"                                SFT('Higher on: ' + (max_MM_value - param_max_value));",
"                                SFT('---------------------');",
"",
"                                if(max_MM_value > highest_value)",
"                                {",
"                                    highest_value = max_MM_value;",
"                                    highest_value_name = 'None + ' + numInCfgMM;",
"                                }",
"",
"                                checkedMM = checkedMM + numInCfgMM + '*';",
"                                excess_count=excess_count+1;",
"                            }",
"                        }",
"",
"                        //А затем и акрин",
"                        tstr = CT('MicroModuls.'+numInCfg+'.Equipments');",
"                        if(findsubstr(tstr, type) == -1 && findsubstr(tstr, dam_type) == -1 && tstr != 'Any' && tstr != '')continue;",
"",
"                        //Затем делаем общую проверку на соответствие типа акрина типу ММ",
"                        tstr = CT('MicroModuls.'+numInCfgMM+'.Equipments');",
"                        if(findsubstr(tstr, type) == -1 && findsubstr(tstr, dam_type) == -1 && tstr != 'Any' && tstr != '')continue;",
"",
"                        //Далее переходим к проверке соответствия конкретных рас бонусов",
"                        //Определяем сет рас для акрина",
"                        acryn_race_set = RaceSetDefine(CT('MicroModuls.'+numInCfg+'.Owner'), 'Acryn');",
"",
"                        //Определяем сет рас для ММ",
"                        MM_race_set = RaceSetDefine(CT('MicroModuls.'+numInCfgMM+'.Owner'), 'MM');",
"",
"                        //Сравниваем полученные сеты",
"                        if(!(acryn_race_set & MM_race_set))continue;",
"",
"                        if(param_type != 'Max damage per turn')",
"                        {",
"                            max_MM_value = param + BonusValue(i, bonus) + BonusValue(k, bonus);",
"                        }",
"                        else",
"                        {",
"                            max_MM_value = param + BonusValue(i, bonus) + BonusValue(k, bonus);",
"                            if(shot_type_check) max_MM_value = max_MM_value * (shots_count + BonusValue(i, bonShots) + BonusValue(k, bonShots));",
"                            max_MM_value = max_MM_value * (attacks_count + BonusValue(i, bonAttacks) + BonusValue(k, bonAttacks));",
"                        }",
"",
"                        if(max_MM_value > param_max_value)",
"                        {",
"                            SFT(numInCfg + ' + ' + numInCfgMM);",
"                            SFT('Higher on: ' + (max_MM_value - param_max_value));",
"                            SFT('---------------------');",
"",
"                            if(max_MM_value > highest_value)",
"                            {",
"                                highest_value = max_MM_value;",
"                                highest_value_name = numInCfg + ' + ' + numInCfgMM;",
"                            }",
"",
"                            excess_count = excess_count + 1;",
"                        }",
"                    }",
"                }",
"            }",
"        }",
"        //Если для проверки выбрано минимальное значение параметра",
"        else",
"        {",
"            //Исключаем акрины, значение искомого бонуса в которых не отрицательно",
"            if(param_type != 'Max damage per turn')",
"            {",
"                if(BonusValue(i, bonus) >= 0)continue;",
"            }",
"            else",
"            {",
"                if(BonusValue(i, bonus) >= 0 && ((BonusValue(i, bonShots) >= 0 && shot_type_check) || !shot_type_check) && BonusValue(i, bonAttacks) >= 0)continue;",
"            }",
"",
"            if(CT('MicroModuls.' + numInCfg + '.BlockMM') != 1)",
"            {",
"                //Чистое значение данного акрина, без доп. бонусов",
"                check = 0;",
"                if(dam_type == 'NotWeapon') check = 1;",
"                else",
"                {",
"                    tstr = CT('MicroModuls.' + numInCfg + '.Equipments');",
"                    if(tstr == '') check = 1;",
"                    else if(findsubstr(tstr, type) > -1 || findsubstr(tstr, dam_type) > -1 || tstr == 'Any')check = 1;",
"                }",
"                if(check)",
"                {",
"                    if(param_type != 'Max damage per turn')",
"                    {",
"                        end_value = param + BonusValue(i, bonus);",
"                    }",
"                    else",
"                    {",
"                        end_value = param + BonusValue(i, bonus);",
"                        if(shot_type_check)",
"                        {",
"                            tint = shots_count + BonusValue(i, bonShots);",
"                            if(tint < 1) tint = 1;",
"                            end_value = end_value * tint;",
"                        }",
"                        tint = shots_count + BonusValue(i, bonAttacks);",
"                        if(tint < 1) tint = 1;",
"                        end_value = end_value * tint;",
"                    }",
"",
"                    if(end_value < param_min_value)",
"                    {",
"                        SFT(numInCfg);",
"                        SFT('Lower on: ' + abs(abs(param_min_value) - abs(end_value)));",
"                        SFT('---------------------');",
"",
"                        if(end_value < highest_value)",
"                        {",
"                            highest_value=end_value;",
"                            highest_value_name=numInCfg;",
"                        }",
"",
"                        excess_count = excess_count + 1;",
"                    }",
"                }",
"",
"                //Перебор ММ",
"                if(InstallMM && CT('MicroModuls.' + numInCfg + '.BlockMM') != 1)",
"                {",
"                    for(k = 0; k < BonusCount(); k = k + 1)",
"                    {",
"                        max_MM_value = 0;",
"                        numInCfgMM = BonusNumInCfg(k);",
"",
"                        //Исключаем ММ, значение искомого бонуса которых не отрицательно",
"                        if(param_type != 'Max damage per turn')",
"                        {",
"                            if(BonusValue(k, bonus) >= 0)continue;",
"                        }",
"                        else",
"                        {",
"                            if(BonusValue(k, bonus) >= 0 && ((BonusValue(k, bonShots) >= 0 && shot_type_check) || !shot_type_check) && BonusValue(k, bonAttacks) >= 0)continue;",
"                        }",
"",
"                        //Исключаем акрины",
"                        uniqueMM_check = CT('MicroModuls.'+numInCfgMM+'.UniqueMM');",
"                        if(BonusIsSpecial(k))",
"                        {",
"                            if(uniqueMM_check)",
"                            {",
"                                if(!InstallUniqueMM)continue;",
"                            }",
"                            else continue;",
"                        }",
"",
"                        //Пропускаем уровни ММ, которые были отсечены фильтром",
"                        if(!uniqueMM_check)",
"                        {",
"                            //Оставляем только ММ первого уровня",
"                            if(InstallMM == 1)",
"                            {",
"                                if(BonusPriority(k) > 30)continue;",
"                            }",
"                            //Оставляем только ММ второго уровня",
"                            else if(InstallMM == 2)",
"                            {",
"                                if(BonusPriority(k) < 31 || BonusPriority(k) > 69)continue;",
"                            }",
"                            //Оставляем только ММ третьего уровня",
"                            else if(InstallMM == 3)",
"                            {",
"                                if(BonusPriority(k) < 70)continue;",
"                            }",
"                        }",
"",
"                        //Проверяем на предмет совместимости с объектом поиска (оборудкой, имеющей подходящие параметры) сперва сам ММ",
"                        tstr = CT('MicroModuls.' + numInCfgMM + '.Equipments');",
"                        if(findsubstr(tstr, type) == -1 && findsubstr(tstr, dam_type) == -1 && tstr != 'Any' && tstr != '')continue;",
"",
"                        //После чего проверяем, не превышает ли собственный бонус данного ММ лимитное значение даже без учёта акрина",
"                        if(findsubstr(checkedMM, '*' + numInCfgMM + '*') == -1)",
"                        {",
"                            if(param_type != 'Max damage per turn')",
"                            {",
"                                max_MM_value = param + BonusValue(k, bonus);",
"                            }",
"                            else",
"                            {",
"                                max_MM_value = param + BonusValue(k, bonus);",
"                                if(shot_type_check)",
"                                {",
"                                    tint = shots_count + BonusValue(k, bonShots);",
"                                    if(tint < 1) tint = 1;",
"                                    max_MM_value = max_MM_value * tint;",
"                                }",
"                                tint = shots_count + BonusValue(k, bonAttacks);",
"                                if(tint < 1) tint = 1;",
"                                max_MM_value = max_MM_value * tint;",
"                            }",
"",
"                            if(max_MM_value < param_min_value)",
"                            {",
"                                SFT('None + ' + numInCfgMM);",
"                                SFT('Lower on: ' + abs(abs(param_min_value) - abs(max_MM_value)));",
"                                SFT('---------------------');",
"",
"                                if(max_MM_value < highest_value)",
"                                {",
"                                    highest_value = max_MM_value;",
"                                    highest_value_name = 'None + ' + numInCfgMM;",
"                                }",
"",
"                                checkedMM = checkedMM + numInCfgMM + '*';",
"                                excess_count=excess_count+1;",
"                            }",
"                        }",
"",
"                        //А затем и акрин",
"                        tstr = CT('MicroModuls.'+numInCfg+'.Equipments');",
"                        if(findsubstr(tstr, type) == -1 && findsubstr(tstr, dam_type) == -1 && tstr != 'Any' && tstr != '')continue;",
"",
"                        //Затем делаем общую проверку на соответствие типа акрина типу ММ",
"                        tstr = CT('MicroModuls.'+numInCfgMM+'.Equipments');",
"                        if(findsubstr(tstr, type) == -1 && findsubstr(tstr, dam_type) == -1 && tstr != 'Any' && tstr != '')continue;",
"",
"                        //Далее переходим к проверке соответствия конкретных рас бонусов",
"                        //Определяем сет рас для акрина",
"                        acryn_race_set = RaceSetDefine(CT('MicroModuls.'+numInCfg+'.Owner'), 'Acryn');",
"",
"                        //Определяем сет рас для ММ",
"                        MM_race_set = RaceSetDefine(CT('MicroModuls.'+numInCfgMM+'.Owner'), 'MM');",
"",
"                        //Сравниваем полученные сеты",
"                        if(!(acryn_race_set & MM_race_set))continue;",
"",
"",
"                        if(param_type != 'Max damage per turn')",
"                        {",
"                            max_MM_value = param + BonusValue(i, bonus) + BonusValue(k, bonus);",
"                        }",
"                        else",
"                        {",
"                            max_MM_value = param + BonusValue(i, bonus) + BonusValue(k, bonus);",
"                            if(shot_type_check)",
"                            {",
"                                tint = shots_count + BonusValue(i, bonShots) + BonusValue(k, bonShots);",
"                                if(tint < 1) tint = 1;",
"                                max_MM_value = max_MM_value * tint;",
"                            }",
"                            tint = shots_count + BonusValue(i, bonAttacks) + BonusValue(k, bonAttacks);",
"                            if(tint < 1) tint = 1;",
"                            max_MM_value = max_MM_value * tint;",
"                        }",
"",
"                        if(max_MM_value < param_min_value)",
"                        {",
"                            SFT(numInCfg + ' + ' + numInCfgMM);",
"                            SFT('Lower on: ' + abs(abs(param_min_value) - abs(max_MM_value)));",
"                            SFT('---------------------');",
"",
"                            if(max_MM_value < highest_value)",
"                            {",
"                                highest_value = max_MM_value;",
"                                highest_value_name = numInCfg + ' + ' + numInCfgMM;",
"                            }",
"",
"                            excess_count=excess_count+1;",
"                        }",
"                    }",
"                }",
"            }",
"        }",
"    }",
"",
"    SFT(' ');",
"    SFT('Galaxy tech level: ' + GTL);",
"    SFT('Param type: ' + param_type);",
"    SFT('Base value: ' + param);",
"    if(param_max_value) SFT('The highest value: ' + highest_value_name + ' (' + highest_value + ')');",
"    else SFT('The lowest value: ' + highest_value_name + ' (' + highest_value + ')');",
"    SFT('Total excesses: ' + excess_count);",
"",
"    SFT(' ');",
"    SFT('###########################');",
"    SFT('###########################');",
"    SFT('###########################');",
"}",
"",
"//Функция для проверки максимального/минимального значения бонусов/штрафов в составе всех возможных наборов оборудки (выводит собранную информацию в игровой лог)",
"//Для применения, вставьте в исполняемую строку следующую команду (переносы строк убирать не обязательно):",
"// str itemType = t_DefGenerator;",
"// str customWeaponType = '';",
"// int parameterType = 1;",
"// int bonusType = bonDef;",
"// int galaxyTechLevel = 8;",
"// int isInstallMMs = 2;",
"// int isInstallUniqueMMs = 1;",
"// int isInstallAcrynator = 1;",
"// int isInstallArtefacts = 1;",
"// int isAppliedStimulantsAndDiseases = 1;",
"// str skipAcrynsList = '*ExpTC_Lifeboat*ExpAcryn_DomAcryn*ShuMiniBoss_DreadnoughtMaloc*ShuMiniBoss_DreadnoughtPeleng*ShuMiniBoss_DreadnoughtPeople*ShuMiniBoss_DreadnoughtFei*ShuMiniBoss_DreadnoughtGaal*ShuKlissan_Potentia*ShuKlissan_Bubble*ShuKlissan_Chasia*ShuKlissan_Velhmust*ShuKlissan_Nivelia*ShuKlissan_Askia*ShuKlissan_Fungusia*ShuKlissan_Plasmalemma*ShuKlissan_Regenerative*ShuKlissan_Combishell*ShuKlissan_Recapacit*';",
"// CheckParamRangeInSet(itemType, customWeaponType, galaxyTechLevel, parameterType, bonusType, isInstallMMs, isInstallUniqueMMs, isInstallAcrynator, isInstallArtefacts, isAppliedStimulantsAndDiseases, skipAcrynsList);",
"function CheckParamRangeInSet(str type, str custom_type, GTL, param, bonus, InstallMM, InstallUniqueMM, InstallAcrynator, InstallArtefacts, InstallStimulants, skipAcrynsList)",
"{",
"    //Определяем базовый параметр оборудки с учётом максимального улучшения на НБ для указанного ГТУ",
"    type=SetBaseType(type, custom_type, GTL, param);",
"",
"    str dam_type = GetParFromString(type, ',', 1, 1);",
"    param = GetParFromString(type, ',', 2, 1);",
"    str param_type = GetParFromString(type, ',', 3, 0);",
"    int shots_count = GetParFromString(type, ',', 4, 0);",
"    int attacks_count = GetParFromString(type, ',', 5, 0);",
"    int shot_type_check = GetParFromString(type, ',', 6, 0);",
"    type = GetParFromString(type, ',', 0, 1);",
"",
"    str cur_search_type = type;",
"",
"    str w_type;",
"    //Проверяем, ищем ли мы информацию по оружию",
"    if(type=='Hull')w_type = 'None';",
"    else if(type=='Engine')w_type = 'None';",
"    else if(type=='FuelTank')w_type = 'None';",
"    else if(type=='Radar')w_type = 'None';",
"    else if(type=='Scaner')w_type = 'None';",
"    else if(type=='Droid')w_type = 'None';",
"    else if(type=='Hook')w_type = 'None';",
"    else if(type=='DefGenerator')w_type = 'None';",
"    else w_type = type;",
"",
"    SFT('###########################');",
"    SFT('###########################');",
"    SFT('###########################');",
"    SFT(' ');",
"",
"    int highest_hull = 0;",
"    str highest_hull_name = 'None';",
"    int hull_best_MM = -1;",
"",
"    int highest_gun1 = 0;",
"    str highest_gun1_name = 'None';",
"    int gun1_best_MM = -1;",
"",
"    int highest_gun2 = 0;",
"    str highest_gun2_name = 'None';",
"    int gun2_best_MM = -1;",
"",
"    int highest_gun3 = 0;",
"    str highest_gun3_name = 'None';",
"    int gun3_best_MM = -1;",
"",
"    int highest_gun4 = 0;",
"    str highest_gun4_name = 'None';",
"    int gun4_best_MM = -1;",
"",
"    int highest_gun5 = 0;",
"    str highest_gun5_name = 'None';",
"    int gun5_best_MM = -1;",
"",
"    int highest_engine = 0;",
"    str highest_engine_name = 'None';",
"    int engine_best_MM = -1;",
"",
"    int highest_fuel = 0;",
"    str highest_fuel_name = 'None';",
"    int fuel_best_MM = -1;",
"",
"    int highest_radar = 0;",
"    str highest_radar_name = 'None';",
"    int radar_best_MM = -1;",
"",
"    int highest_scanner = 0;",
"    str highest_scanner_name = 'None';",
"    int scanner_best_MM = -1;",
"",
"    int highest_droid = 0;",
"    str highest_droid_name = 'None';",
"    int droid_best_MM = -1;",
"",
"    int highest_hook = 0;",
"    str highest_hook_name = 'None';",
"    int hook_best_MM = -1;",
"",
"    int highest_def = 0;",
"    str highest_def_name = 'None';",
"    int def_best_MM = -1;",
"",
"    int check;",
"    int excess_count=0;",
"    int highest_value;",
"    str highest_value_name;",
"    str temp_w_type = 'None';",
"    str end_w_type = 'None';",
"    int acryn_param = 0;",
"    int best_MM = -1;",
"    int best_MM_end = -1;",
"    int best_MM_value;",
"    str numInCfgMM;",
"    str uniqueMM_list = '*';",
"    int acryn_race_set = 0;",
"    int MM_race_set = 0;",
"    int trion_count = 0;",
"    str numInCfg;",
"    int roll_counts;",
"",
"    for(j=1; j<=9; j=j+1)",
"    {",
"        roll_counts = 1;",
"",
"        if(j == 1)type='Hull';",
"        else if(j == 2)",
"        {",
"            type='Weapon';",
"            if(w_type == 'None')roll_counts = 5;",
"        }",
"        else if(j == 3) type='Engine';",
"        else if(j == 4) type='FuelTank';",
"        else if(j == 5) type='Radar';",
"        else if(j == 6) type='Scaner';",
"        else if(j == 7) type='Droid';",
"        else if(j == 8) type='Hook';",
"        else if(j == 9) type='DefGenerator';",
"",
"        while(roll_counts)",
"        {",
"            highest_value = 0;",
"            highest_value_name = 'None';",
"            best_MM = -1;",
"            best_MM_end = -1;",
"            best_MM_value = 0;",
"",
"            for(i = 0; i < BonusCount(); i = i + 1)",
"            {",
"                numInCfg = BonusNumInCfg(i);",
"                //Пропускаем Акринатор",
"                if(numInCfg == '498')continue;",
"                //Пропускаем ММ",
"                if(!BonusIsSpecial(i))continue;",
"                //Исключаем уникальные микромодули",
"                if(CT('MicroModuls.'+numInCfg+'.UniqueMM'))continue;",
"",
"                //Пропускаем скипнутые акрины",
"                if(findsubstr(skipAcrynsList, '*' + numInCfg + '*') > -1)continue;",
"",
"                //Исключаем бонусы, неподходящие для указанного ГТУ",
"                if(GTL < 8.0*(0.01*CT('MicroModuls.'+numInCfg+'.Priority')))continue;",
"",
"                //Исключаем бонусы, неподходящие для текущего оборудования/оружия",
"                str equipOn=CT('MicroModuls.'+numInCfg+'.Equipments');",
"                if(equipOn != 'Any' && equipOn != '')",
"                {",
"                    if(type != 'Weapon')",
"                    {",
"                        if(findsubstr(equipOn, type) == -1)continue;",
"                    }",
"                    //Перебираем все возможные типы орудий",
"                    else",
"                    {",
"                        check=0;",
"",
"                        //Если проверяем случайный оружейный акрин в поисках бонуса для оборудки",
"                        if(w_type == 'None')",
"                        {",
"                            temp_w_type = 'None';",
"",
"                            if(findsubstr(equipOn, 'WEnergy') > -1)",
"                            {",
"                                dam_type = 'WEnergy';",
"                                check = 1;",
"                            }",
"                            else if(findsubstr(equipOn, 'WSplinter') > -1)",
"                            {",
"                                dam_type = 'WSplinter';",
"                                check = 1;",
"                            }",
"                            else if(findsubstr(equipOn, 'WMissile') > -1)",
"                            {",
"                                dam_type = 'WMissile';",
"                                check = 1;",
"                            }",
"",
"                            if(!check)",
"                            {",
"                                for(k=1; k<=18; k=k+1)",
"                                {",
"                                    if(k <= 9)temp_w_type='W0'+k;",
"                                    else temp_w_type='W'+k;",
"",
"                                    if(findsubstr(equipOn, temp_w_type) > -1)",
"                                    {",
"                                        check=1;",
"                                        break;",
"                                    }",
"                                }",
"                                if(!check)",
"                                {",
"                                    for(k=0; k<CustomWeaponTypes(); k=k+1)",
"                                    {",
"                                        temp_w_type=CustomWeaponTypes(k);",
"",
"                                        if(findsubstr(equipOn, temp_w_type) > -1)",
"                                        {",
"                                            check=1;",
"                                            break;",
"                                        }",
"                                    }",
"                                }",
"                            }",
"                        }",
"                        //Если проверяем акрин конкретного оружия в поисках бонуса для оружия",
"                        else",
"                        {",
"                            if(findsubstr(equipOn, w_type) > -1)check=1;",
"                            else if(findsubstr(equipOn, dam_type) > -1)check=1;",
"                        }",
"",
"                        if(!check)continue;",
"                    }",
"                }",
"",
"                //Если в сете применено уже как минимум три трионки, пропускаем все остальные",
"                if(trion_count >= 3)",
"                {",
"                    if(!findsubstr(numInCfg, 'ExpAcryn_'))continue;",
"                }",
"",
"                //Перебор ММ",
"                if(InstallMM && CT('MicroModuls.'+numInCfg+'.BlockMM') != 1)",
"                {",
"                    int uniqueMM_check = 0;",
"                    int uniqueMM_end_check = 0;",
"                    for(k=0; k<BonusCount(); k=k+1)",
"                    {",
"                        numInCfgMM = BonusNumInCfg(k);",
"",
"                        //Исключаем акрины и уникальные ММ (если стоит маркер)",
"                        uniqueMM_check = 0;",
"                        uniqueMM_check = CT('MicroModuls.'+numInCfgMM+'.UniqueMM');",
"                        //А если маркер на исключение уникальных ММ не стоит, то запоминаем, является ли данный ММ уникальным",
"                        if(InstallUniqueMM)",
"                        {",
"                            if(BonusIsSpecial(k))continue;",
"                            //Пропускаем уникальные ММ, которые уже были использованы в данном сете",
"                            else if(uniqueMM_check == 1)",
"                            {",
"                                if(findsubstr(uniqueMM_list, '*' + numInCfgMM + '*') > -1)continue;",
"                            }",
"                        }",
"                        else",
"                        {",
"                            if(BonusIsSpecial(k))",
"                            {",
"                                if(uniqueMM_check)continue;",
"                            }",
"                        }",
"",
"                        //Пропускаем уровни ММ, которые были отсечены фильтром",
"                        if(!uniqueMM_check)",
"                        {",
"                            //Оставляем только ММ первого уровня",
"                            if(InstallMM == 1)",
"                            {",
"                                if(BonusPriority(k) > 30)continue;",
"                            }",
"                            //Оставляем только ММ второго уровня",
"                            else if(InstallMM == 2)",
"                            {",
"                                if(BonusPriority(k) < 31 || BonusPriority(k) > 69)continue;",
"                            }",
"                            //Оставляем только ММ третьего уровня",
"                            else if(InstallMM == 3)",
"                            {",
"                                if(BonusPriority(k) < 70)continue;",
"                            }",
"                        }",
"",
"                        //Проверяем возможность установки ММ на данный акрин оборудки",
"                        if(type != 'Weapon')",
"                        {",
"                            tstr = CT('MicroModuls.'+numInCfgMM+'.Equipments');",
"",
"                            //Сперва делаем общую проверку на соответствие типа акрина типу ММ",
"                            if(findsubstr(tstr, type) == -1 && tstr != 'Any' && tstr != '')continue;",
"                            //Далее переходим к проверке соответствия конкретных рас бонусов",
"                            else",
"                            {",
"                                //Определяем сет рас для акрина",
"                                acryn_race_set = RaceSetDefine(CT('MicroModuls.'+numInCfg+'.Owner'), 'Acryn');",
"",
"                                //Определяем сет рас для ММ",
"                                MM_race_set = RaceSetDefine(CT('MicroModuls.'+numInCfgMM+'.Owner'), 'MM');",
"",
"                                //Сравниваем полученные сеты",
"                                if(!(acryn_race_set & MM_race_set))continue;",
"                            }",
"                        }",
"                        //Проверяем возможность установки ММ на данный акрин оружия",
"                        else",
"                        {",
"                            tstr = CT('MicroModuls.'+numInCfgMM+'.Equipments');",
"                            //Сперва делаем общую проверку на соответствие типа акрина типу ММ",
"                            check = 0;",
"                            if(findsubstr(tstr, temp_w_type) == -1 && findsubstr(tstr, 'dam_type') == -1 && tstr != 'Any' && tstr != '')",
"                            {",
"                                //Если конкретное оружие мы не ищем, то подойдёт ММ на любую пушку",
"                                if(temp_w_type != 'None')continue;",
"                                else if(findsubstr(tstr, 'WEnergy') == -1 && findsubstr(tstr, 'WSplinter') == -1 && findsubstr(tstr, 'WMissile') == -1)continue;",
"                                else check = 1;",
"                            }",
"                            //Далее переходим к проверке соответствия конкретных рас бонусов",
"                            if(check)",
"                            {",
"                                //Определяем сет рас для акрина",
"                                acryn_race_set = RaceSetDefine(CT('MicroModuls.'+numInCfg+'.Owner'), 'Acryn');",
"",
"                                //Определяем сет рас для ММ",
"                                MM_race_set = RaceSetDefine(CT('MicroModuls.'+numInCfgMM+'.Owner'), 'MM');",
"",
"                                //Сравниваем полученные сеты",
"                                if(!(acryn_race_set & MM_race_set))continue;",
"                            }",
"                        }",
"",
"                        tint = BonusValue(k, bonus);",
"                        if(tint > best_MM_value)",
"                        {",
"                            best_MM_value = tint;",
"                            best_MM = k;",
"",
"                            if(uniqueMM_check == 1)uniqueMM_end_check = 1;",
"                            else uniqueMM_end_check = 0;",
"                        }",
"                    }",
"",
"                    //Делаем пометку, что уникальный микромодуль уже был применён в данном сете оборудки",
"                    if(uniqueMM_end_check)uniqueMM_list = uniqueMM_list + numInCfgMM + '*';",
"                }",
"",
"                tint = BonusValue(i, bonus);",
"                if(!InstallAcrynator || type == 'Hull' || type == 'Weapon' || CT('MicroModuls.'+numInCfg+'.BlockMM') == 1)",
"                {",
"                    if((tint + best_MM_value) > highest_value)",
"                    {",
"                        if(tint > 0)",
"                        {",
"                            highest_value = tint;",
"                            highest_value_name = numInCfg;",
"                            if(type == 'Weapon')",
"                            {",
"                                if(temp_w_type != 'None')end_w_type = temp_w_type;",
"                                else end_w_type = w_type;",
"                            }",
"                        }",
"                        best_MM_end = best_MM;",
"                    }",
"                }",
"                //Вставляем Акринатор, если был выставлен соответствующий маркер",
"                else",
"                {",
"                    if((3 * tint) > highest_value)",
"                    {",
"                        //Даже если акрин с ММ окажется лучше акрина с акринатором, запоминаем значение бонуса с акринатором на случай подстановки акринатора в другой акрин",
"                        if((3 * tint) > (tint + best_MM_value) || type != cur_search_type)",
"                        {",
"                            if(tint)",
"                            {",
"                                highest_value = (3 * tint);",
"                                highest_value_name = numInCfg + ' + Acrynator';",
"                            }",
"                            best_MM_end = best_MM;",
"                        }",
"                        else",
"                        {",
"                            if(tint)",
"                            {",
"                                highest_value = tint;",
"                                highest_value_name = numInCfg;",
"                            }",
"                            best_MM_end = best_MM;",
"                        }",
"                    }",
"                }",
"",
"                best_MM_value = 0;",
"            }",
"",
"            //Считаем трионку, попавшую в сет",
"            if(!findsubstr(highest_value_name, 'ExpAcryn_'))",
"            {",
"                trion_count = trion_count + 1;",
"            }",
"",
"            if(j == 1)",
"            {",
"                highest_hull=highest_value;",
"                highest_hull_name=highest_value_name;",
"                hull_best_MM = best_MM_end;",
"            }",
"            else if(j == 2)",
"            {",
"                if(roll_counts == 5)",
"                {",
"                    highest_gun5=highest_value;",
"                    highest_gun5_name=highest_value_name;",
"                    gun5_best_MM = best_MM_end;",
"                }",
"                else if(roll_counts == 4)",
"                {",
"                    highest_gun4=highest_value;",
"                    highest_gun4_name=highest_value_name;",
"                    gun4_best_MM = best_MM_end;",
"                }",
"                else if(roll_counts == 3)",
"                {",
"                    highest_gun3=highest_value;",
"                    highest_gun3_name=highest_value_name;",
"                    gun3_best_MM = best_MM_end;",
"                }",
"                else if(roll_counts == 2)",
"                {",
"                    highest_gun2=highest_value;",
"                    highest_gun2_name=highest_value_name;",
"                    gun2_best_MM = best_MM_end;",
"                }",
"                else if(roll_counts == 1)",
"                {",
"                    highest_gun1=highest_value;",
"                    highest_gun1_name=highest_value_name;",
"                    gun1_best_MM = best_MM_end;",
"                }",
"            }",
"            else if(j == 3)",
"            {",
"                highest_engine=highest_value;",
"                highest_engine_name=highest_value_name;",
"                engine_best_MM = best_MM_end;",
"            }",
"            else if(j == 4)",
"            {",
"                highest_fuel=highest_value;",
"                highest_fuel_name=highest_value_name;",
"                fuel_best_MM = best_MM_end;",
"            }",
"            else if(j == 5)",
"            {",
"                highest_radar=highest_value;",
"                highest_radar_name=highest_value_name;",
"                radar_best_MM = best_MM_end;",
"            }",
"            else if(j == 6)",
"            {",
"                highest_scanner=highest_value;",
"                highest_scanner_name=highest_value_name;",
"                scanner_best_MM = best_MM_end;",
"            }",
"            else if(j == 7)",
"            {",
"                highest_droid=highest_value;",
"                highest_droid_name=highest_value_name;",
"                droid_best_MM = best_MM_end;",
"            }",
"            else if(j == 8)",
"            {",
"                highest_hook=highest_value;",
"                highest_hook_name=highest_value_name;",
"                hook_best_MM = best_MM_end;",
"            }",
"            else if(j == 9)",
"            {",
"                highest_def=highest_value;",
"                highest_def_name=highest_value_name;",
"                def_best_MM = best_MM_end;",
"            }",
"",
"            roll_counts = roll_counts - 1;",
"        }",
"    }",
"",
"    //Определяем, какой акрин получает наибольший плюс от установки Акринатора",
"    int acr_check = 0;",
"",
"    int t_highest_engine = 0;",
"    int t_highest_fuel = 0;",
"    int t_highest_radar = 0;",
"    int t_highest_scanner = 0;",
"    int t_highest_droid = 0;",
"    int t_highest_hook = 0;",
"    int t_highest_def = 0;",
"",
"    if(findsubstr(highest_engine_name, ' + Acrynator') > -1)t_highest_engine = highest_engine;",
"    if(findsubstr(highest_fuel_name, ' + Acrynator') > -1)t_highest_fuel = highest_fuel;",
"    if(findsubstr(highest_radar_name, ' + Acrynator') > -1)t_highest_radar = highest_radar;",
"    if(findsubstr(highest_scanner_name, ' + Acrynator') > -1)t_highest_scanner = highest_scanner;",
"    if(findsubstr(highest_droid_name, ' + Acrynator') > -1)t_highest_droid = highest_droid;",
"    if(findsubstr(highest_hook_name, ' + Acrynator') > -1)t_highest_hook = highest_hook;",
"    if(findsubstr(highest_def_name, ' + Acrynator') > -1)t_highest_def = highest_def;",
"",
"    highest_value = max(t_highest_engine, t_highest_fuel, t_highest_radar, t_highest_scanner, t_highest_droid, t_highest_hook, t_highest_def);",
"    if(!highest_value)highest_value = -1;",
"",
"    SFT('Galaxy tech level: ' + GTL);",
"    SFT('Parameter type: ' + param_type);",
"    SFT('Base parameter value: ' + param);",
"    SFT(' ');",
"",
"    //Корпус",
"    if(hull_best_MM > -1 && cur_search_type == 'Hull')",
"    {",
"        SFT('Hull: '+highest_hull_name+' + '+BonusNumInCfg(hull_best_MM)+' ('+(highest_hull + BonusValue(hull_best_MM, bonus))+')');",
"        param = param + BonusValue(hull_best_MM, bonus);",
"    }",
"    else SFT('Hull: '+highest_hull_name+' ('+highest_hull+')');",
"    param = param + highest_hull;",
"    //Пушки",
"    if(w_type == 'None')",
"    {",
"        // if(gun1_best_MM > -1)",
"        // {",
"            // SFT('Weapon 1: '+highest_gun1_name+' + '+BonusNumInCfg(gun1_best_MM)+' ('+(highest_gun1 + BonusValue(gun1_best_MM, bonus))+')');",
"            // param = param + BonusValue(gun1_best_MM, bonus);",
"        // }",
"        // else",
"        SFT('Weapon 1: '+highest_gun1_name+' ('+highest_gun1+')');",
"        param = param + highest_gun1;",
"",
"        // if(gun2_best_MM > -1)",
"        // {",
"            // SFT('Weapon 2: '+highest_gun2_name+' + '+BonusNumInCfg(gun2_best_MM)+' ('+(highest_gun2 + BonusValue(gun2_best_MM, bonus))+')');",
"            // param = param + BonusValue(gun2_best_MM, bonus);",
"        // }",
"        // else",
"        SFT('Weapon 2: '+highest_gun2_name+' ('+highest_gun2+')');",
"        param = param + highest_gun2;",
"",
"        // if(gun3_best_MM > -1)",
"        // {",
"            // SFT('Weapon 3: '+highest_gun3_name+' + '+BonusNumInCfg(gun3_best_MM)+' ('+(highest_gun3 + BonusValue(gun3_best_MM, bonus))+')');",
"            // param = param + BonusValue(gun3_best_MM, bonus);",
"        // }",
"        // else",
"        SFT('Weapon 3: '+highest_gun3_name+' ('+highest_gun3+')');",
"        param = param + highest_gun3;",
"",
"        // if(gun4_best_MM > -1)",
"        // {",
"            // SFT('Weapon 4: '+highest_gun4_name+' + '+BonusNumInCfg(gun4_best_MM)+' ('+(highest_gun4 + BonusValue(gun4_best_MM, bonus))+')');",
"            // param = param + BonusValue(gun4_best_MM, bonus);",
"        // }",
"        // else",
"        SFT('Weapon 4: '+highest_gun4_name+' ('+highest_gun4+')');",
"        param = param + highest_gun4;",
"",
"        // if(gun5_best_MM > -1)",
"        // {",
"            // SFT('Weapon 5: '+highest_gun5_name+' + '+BonusNumInCfg(gun5_best_MM)+' ('+(highest_gun5 + BonusValue(gun5_best_MM, bonus))+')');",
"            // param = param + BonusValue(gun5_best_MM, bonus);",
"        // }",
"        // else",
"        SFT('Weapon 5: '+highest_gun5_name+' ('+highest_gun5+')');",
"        param = param + highest_gun5;",
"    }",
"    else",
"    {",
"        if(gun1_best_MM > -1)",
"        {",
"            SFT('Weapon '+end_w_type+': '+highest_gun1_name+' + '+BonusNumInCfg(gun1_best_MM)+' ('+(highest_gun1 + BonusValue(gun1_best_MM, bonus))+')');",
"            param = param + BonusValue(gun1_best_MM, bonus);",
"        }",
"        else SFT('Weapon '+end_w_type+': '+highest_gun1_name+' ('+highest_gun1+')');",
"        param = param + highest_gun1;",
"    }",
"    //Двигатель",
"    if(!acr_check && highest_engine == highest_value)",
"    {",
"        tint = 0;",
"        if(engine_best_MM > -1)tint = BonusValue(engine_best_MM, bonus);",
"",
"        if(findsubstr(highest_engine_name, ' + Acrynator') > -1)",
"        {",
"            if(highest_engine > (highest_engine / 3 + tint))",
"            {",
"                SFT('Engine: '+highest_engine_name+' ('+highest_engine+')');",
"                acr_check = 1;",
"            }",
"            //Если значение акрина с ММ выше, чем значение акрина с Акринатором",
"            else",
"            {",
"                highest_engine_name = substr(highest_engine_name, 0, findsubstr(highest_engine_name, ' + Acrynator'));",
"                highest_engine = highest_engine / 3;",
"",
"                if(engine_best_MM > -1 && cur_search_type == 'Engine')",
"                {",
"                    SFT('Engine: '+highest_engine_name+' + '+BonusNumInCfg(engine_best_MM)+' ('+(highest_engine + tint)+')');",
"                    param = param + tint;",
"                }",
"                else SFT('Engine: '+highest_engine_name+' ('+highest_engine+')');",
"            }",
"        }",
"        else",
"        {",
"            if(engine_best_MM > -1 && cur_search_type == 'Engine')",
"            {",
"                SFT('Engine: '+highest_engine_name+' + '+BonusNumInCfg(engine_best_MM)+' ('+(highest_engine + tint)+')');",
"                param = param + tint;",
"            }",
"            else SFT('Engine: '+highest_engine_name+' ('+highest_engine+')');",
"        }",
"    }",
"    else",
"    {",
"        if(findsubstr(highest_engine_name, ' + Acrynator') > -1)",
"        {",
"            highest_engine_name = substr(highest_engine_name, 0, findsubstr(highest_engine_name, ' + Acrynator'));",
"            highest_engine = highest_engine / 3;",
"",
"            if(engine_best_MM > -1 && cur_search_type == 'Engine')",
"            {",
"                SFT('Engine: '+highest_engine_name+' + '+BonusNumInCfg(engine_best_MM)+' ('+(highest_engine + BonusValue(engine_best_MM, bonus))+')');",
"                param = param + BonusValue(engine_best_MM, bonus);",
"            }",
"            else SFT('Engine: '+highest_engine_name+' ('+highest_engine+')');",
"        }",
"        else",
"        {",
"            if(engine_best_MM > -1 && cur_search_type == 'Engine')",
"            {",
"                SFT('Engine: '+highest_engine_name+' + '+BonusNumInCfg(engine_best_MM)+' ('+(highest_engine + BonusValue(engine_best_MM, bonus))+')');",
"                param = param + BonusValue(engine_best_MM, bonus);",
"            }",
"            else SFT('Engine: '+highest_engine_name+' ('+highest_engine+')');",
"        }",
"    }",
"    param = param + highest_engine;",
"    //Топливный бак",
"    if(!acr_check && highest_fuel == highest_value)",
"    {",
"        tint = 0;",
"        if(fuel_best_MM > -1)tint = BonusValue(fuel_best_MM, bonus);",
"",
"        if(findsubstr(highest_fuel_name, ' + Acrynator') > -1)",
"        {",
"            if(highest_fuel > (highest_fuel / 3 + tint))",
"            {",
"                SFT('FuelTank: '+highest_fuel_name+' ('+highest_fuel+')');",
"                acr_check = 1;",
"            }",
"            //Если значение акрина с ММ выше, чем значение акрина с Акринатором",
"            else",
"            {",
"                highest_fuel_name = substr(highest_fuel_name, 0, findsubstr(highest_fuel_name, ' + Acrynator'));",
"                highest_fuel = highest_fuel / 3;",
"",
"                if(fuel_best_MM > -1 && cur_search_type == 'FuelTank')",
"                {",
"                    SFT('FuelTank: '+highest_fuel_name+' + '+BonusNumInCfg(fuel_best_MM)+' ('+(highest_fuel + tint)+')');",
"                    param = param + tint;",
"                }",
"                else SFT('FuelTank: '+highest_fuel_name+' ('+highest_fuel+')');",
"            }",
"        }",
"        else",
"        {",
"            if(fuel_best_MM > -1 && cur_search_type == 'FuelTank')",
"            {",
"                SFT('FuelTank: '+highest_fuel_name+' + '+BonusNumInCfg(fuel_best_MM)+' ('+(highest_fuel + tint)+')');",
"                param = param + tint;",
"            }",
"            else SFT('FuelTank: '+highest_fuel_name+' ('+highest_fuel+')');",
"        }",
"    }",
"    else",
"    {",
"        if(findsubstr(highest_fuel_name, ' + Acrynator') > -1)",
"        {",
"            highest_fuel_name = substr(highest_fuel_name, 0, findsubstr(highest_fuel_name, ' + Acrynator'));",
"            highest_fuel = highest_fuel / 3;",
"",
"            if(fuel_best_MM > -1 && cur_search_type == 'FuelTank')",
"            {",
"                SFT('FuelTank: '+highest_fuel_name+' + '+BonusNumInCfg(fuel_best_MM)+' ('+(highest_fuel + BonusValue(fuel_best_MM, bonus))+')');",
"                param = param + BonusValue(fuel_best_MM, bonus);",
"            }",
"            else SFT('FuelTank: '+highest_fuel_name+' ('+highest_fuel+')');",
"        }",
"        else",
"        {",
"            if(fuel_best_MM > -1 && cur_search_type == 'FuelTank')",
"            {",
"                SFT('FuelTank: '+highest_fuel_name+' + '+BonusNumInCfg(fuel_best_MM)+' ('+(highest_fuel + BonusValue(fuel_best_MM, bonus))+')');",
"                param = param + BonusValue(fuel_best_MM, bonus);",
"            }",
"            else SFT('FuelTank: '+highest_fuel_name+' ('+highest_fuel+')');",
"        }",
"    }",
"    param = param + highest_fuel;",
"    //Радар",
"    if(!acr_check && highest_radar == highest_value)",
"    {",
"        tint = 0;",
"        if(radar_best_MM > -1)tint = BonusValue(radar_best_MM, bonus);",
"",
"        if(findsubstr(highest_radar_name, ' + Acrynator') > -1)",
"        {",
"            if(highest_radar > (highest_radar / 3 + tint))",
"            {",
"                SFT('Radar: '+highest_radar_name+' ('+highest_radar+')');",
"                acr_check = 1;",
"            }",
"            //Если значение акрина с ММ выше, чем значение акрина с Акринатором",
"            else",
"            {",
"                highest_radar_name = substr(highest_radar_name, 0, findsubstr(highest_radar_name, ' + Acrynator'));",
"                highest_radar = highest_radar / 3;",
"",
"                if(radar_best_MM > -1 && cur_search_type == 'Radar')",
"                {",
"                    SFT('Radar: '+highest_radar_name+' + '+BonusNumInCfg(radar_best_MM)+' ('+(highest_radar + tint)+')');",
"                    param = param + tint;",
"                }",
"                else SFT('Radar: '+highest_radar_name+' ('+highest_radar+')');",
"            }",
"        }",
"        else",
"        {",
"            if(radar_best_MM > -1 && cur_search_type == 'Radar')",
"            {",
"                SFT('Radar: '+highest_radar_name+' + '+BonusNumInCfg(radar_best_MM)+' ('+(highest_radar + tint)+')');",
"                param = param + tint;",
"            }",
"            else SFT('Radar: '+highest_radar_name+' ('+highest_radar+')');",
"        }",
"    }",
"    else",
"    {",
"        if(findsubstr(highest_radar_name, ' + Acrynator') > -1)",
"        {",
"            highest_radar_name = substr(highest_radar_name, 0, findsubstr(highest_radar_name, ' + Acrynator'));",
"            highest_radar = highest_radar / 3;",
"",
"            if(radar_best_MM > -1 && cur_search_type == 'Radar')",
"            {",
"                SFT('Radar: '+highest_radar_name+' + '+BonusNumInCfg(radar_best_MM)+' ('+(highest_radar + BonusValue(radar_best_MM, bonus))+')');",
"                param = param + BonusValue(radar_best_MM, bonus);",
"            }",
"            else SFT('Radar: '+highest_radar_name+' ('+highest_radar+')');",
"        }",
"        else",
"        {",
"            if(radar_best_MM > -1 && cur_search_type == 'Radar')",
"            {",
"                SFT('Radar: '+highest_radar_name+' + '+BonusNumInCfg(radar_best_MM)+' ('+(highest_radar + BonusValue(radar_best_MM, bonus))+')');",
"                param = param + BonusValue(radar_best_MM, bonus);",
"            }",
"            else SFT('Radar: '+highest_radar_name+' ('+highest_radar+')');",
"        }",
"    }",
"    param = param + highest_radar;",
"    //Сканер",
"    if(!acr_check && highest_scanner == highest_value)",
"    {",
"        tint = 0;",
"        if(scanner_best_MM > -1)tint = BonusValue(scanner_best_MM, bonus);",
"",
"        if(findsubstr(highest_scanner_name, ' + Acrynator') > -1)",
"        {",
"            if(highest_scanner > (highest_scanner / 3 + tint))",
"            {",
"                SFT('Scanner: '+highest_scanner_name+' ('+highest_scanner+')');",
"                acr_check = 1;",
"            }",
"            //Если значение акрина с ММ выше, чем значение акрина с Акринатором",
"            else",
"            {",
"                highest_scanner_name = substr(highest_scanner_name, 0, findsubstr(highest_scanner_name, ' + Acrynator'));",
"                highest_scanner = highest_scanner / 3;",
"",
"                if(scanner_best_MM > -1 && cur_search_type == 'Scaner')",
"                {",
"                    SFT('Scanner: '+highest_scanner_name+' + '+BonusNumInCfg(scanner_best_MM)+' ('+(highest_scanner + tint)+')');",
"                    param = param + tint;",
"                }",
"                else SFT('Scanner: '+highest_scanner_name+' ('+highest_scanner+')');",
"            }",
"        }",
"        else",
"        {",
"            if(scanner_best_MM > -1 && cur_search_type == 'Scaner')",
"            {",
"                SFT('Scanner: '+highest_scanner_name+' + '+BonusNumInCfg(scanner_best_MM)+' ('+(highest_scanner + tint)+')');",
"                param = param + tint;",
"            }",
"            else SFT('Scanner: '+highest_scanner_name+' ('+highest_scanner+')');",
"        }",
"    }",
"    else",
"    {",
"        if(findsubstr(highest_scanner_name, ' + Acrynator') > -1)",
"        {",
"            highest_scanner_name = substr(highest_scanner_name, 0, findsubstr(highest_scanner_name, ' + Acrynator'));",
"            highest_scanner = highest_scanner / 3;",
"",
"            if(scanner_best_MM > -1 && cur_search_type == 'Scaner')",
"            {",
"                SFT('Scanner: '+highest_scanner_name+' + '+BonusNumInCfg(scanner_best_MM)+' ('+(highest_scanner + BonusValue(scanner_best_MM, bonus))+')');",
"                param = param + BonusValue(scanner_best_MM, bonus);",
"            }",
"            else SFT('Scanner: '+highest_scanner_name+' ('+highest_scanner+')');",
"        }",
"        else",
"        {",
"            if(scanner_best_MM > -1 && cur_search_type == 'Scaner')",
"            {",
"                SFT('Scanner: '+highest_scanner_name+' + '+BonusNumInCfg(scanner_best_MM)+' ('+(highest_scanner + BonusValue(scanner_best_MM, bonus))+')');",
"                param = param + BonusValue(scanner_best_MM, bonus);",
"            }",
"            else SFT('Scanner: '+highest_scanner_name+' ('+highest_scanner+')');",
"        }",
"    }",
"    param = param + highest_scanner;",
"    //Дроид",
"    if(!acr_check && highest_droid == highest_value)",
"    {",
"        tint = 0;",
"        if(droid_best_MM > -1)tint = BonusValue(droid_best_MM, bonus);",
"",
"        if(findsubstr(highest_droid_name, ' + Acrynator') > -1)",
"        {",
"            if(highest_droid > (highest_droid / 3 + tint))",
"            {",
"                SFT('Droid: '+highest_droid_name+' ('+highest_droid+')');",
"                acr_check = 1;",
"            }",
"            //Если значение акрина с ММ выше, чем значение акрина с Акринатором",
"            else",
"            {",
"                highest_droid_name = substr(highest_droid_name, 0, findsubstr(highest_droid_name, ' + Acrynator'));",
"                highest_droid = highest_droid / 3;",
"",
"                if(droid_best_MM > -1 && cur_search_type == 'Droid')",
"                {",
"                    SFT('Droid: '+highest_droid_name+' + '+BonusNumInCfg(droid_best_MM)+' ('+(highest_droid + tint)+')');",
"                    param = param + tint;",
"                }",
"                else SFT('Droid: '+highest_droid_name+' ('+highest_droid+')');",
"            }",
"        }",
"        else",
"        {",
"            if(droid_best_MM > -1 && cur_search_type == 'Droid')",
"            {",
"                SFT('Droid: '+highest_droid_name+' + '+BonusNumInCfg(droid_best_MM)+' ('+(highest_droid + tint)+')');",
"                param = param + tint;",
"            }",
"            else SFT('Droid: '+highest_droid_name+' ('+highest_droid+')');",
"        }",
"    }",
"    else",
"    {",
"        if(findsubstr(highest_droid_name, ' + Acrynator') > -1)",
"        {",
"            highest_droid_name = substr(highest_droid_name, 0, findsubstr(highest_droid_name, ' + Acrynator'));",
"            highest_droid = highest_droid / 3;",
"",
"            if(droid_best_MM > -1 && cur_search_type == 'Droid')",
"            {",
"                SFT('Droid: '+highest_droid_name+' + '+BonusNumInCfg(droid_best_MM)+' ('+(highest_droid + BonusValue(droid_best_MM, bonus))+')');",
"                param = param + BonusValue(droid_best_MM, bonus);",
"            }",
"            else SFT('Droid: '+highest_droid_name+' ('+highest_droid+')');",
"        }",
"        else",
"        {",
"            if(droid_best_MM > -1 && cur_search_type == 'Droid')",
"            {",
"                SFT('Droid: '+highest_droid_name+' + '+BonusNumInCfg(droid_best_MM)+' ('+(highest_droid + BonusValue(droid_best_MM, bonus))+')');",
"                param = param + BonusValue(droid_best_MM, bonus);",
"            }",
"            else SFT('Droid: '+highest_droid_name+' ('+highest_droid+')');",
"        }",
"    }",
"    param = param + highest_droid;",
"    //Захват",
"    if(!acr_check && highest_hook == highest_value)",
"    {",
"        tint = 0;",
"        if(def_best_MM > -1)tint = BonusValue(def_best_MM, bonus);",
"",
"        if(findsubstr(highest_hook_name, ' + Acrynator') > -1)",
"        {",
"            if(highest_hook > (highest_hook / 3 + tint))",
"            {",
"                SFT('Hook: '+highest_hook_name+' ('+highest_hook+')');",
"                acr_check = 1;",
"            }",
"            //Если значение акрина с ММ выше, чем значение акрина с Акринатором",
"            else",
"            {",
"                highest_hook_name = substr(highest_hook_name, 0, findsubstr(highest_hook_name, ' + Acrynator'));",
"                highest_hook = highest_hook / 3;",
"",
"                if(hook_best_MM > -1 && cur_search_type == 'Hook')",
"                {",
"                    SFT('Hook: '+highest_hook_name+' + '+BonusNumInCfg(hook_best_MM)+' ('+(highest_hook + tint)+')');",
"                    param = param + tint;",
"                }",
"                else SFT('Hook: '+highest_hook_name+' ('+highest_hook+')');",
"            }",
"        }",
"        else",
"        {",
"            if(hook_best_MM > -1 && cur_search_type == 'Hook')",
"            {",
"                SFT('Hook: '+highest_hook_name+' + '+BonusNumInCfg(hook_best_MM)+' ('+(highest_hook + tint)+')');",
"                param = param + tint;",
"            }",
"            else SFT('Hook: '+highest_hook_name+' ('+highest_hook+')');",
"        }",
"    }",
"    else",
"    {",
"        if(findsubstr(highest_hook_name, ' + Acrynator') > -1)",
"        {",
"            highest_hook_name = substr(highest_hook_name, 0, findsubstr(highest_hook_name, ' + Acrynator'));",
"            highest_hook = highest_hook / 3;",
"",
"            if(hook_best_MM > -1 && cur_search_type == 'Hook')",
"            {",
"                SFT('Hook: '+highest_hook_name+' + '+BonusNumInCfg(hook_best_MM)+' ('+(highest_hook + BonusValue(hook_best_MM, bonus))+')');",
"                param = param + BonusValue(hook_best_MM, bonus);",
"            }",
"            else SFT('Hook: '+highest_hook_name+' ('+highest_hook+')');",
"        }",
"        else",
"        {",
"            if(hook_best_MM > -1 && cur_search_type == 'Hook')",
"            {",
"                SFT('Hook: '+highest_hook_name+' + '+BonusNumInCfg(hook_best_MM)+' ('+(highest_hook + BonusValue(hook_best_MM, bonus))+')');",
"                param = param + BonusValue(hook_best_MM, bonus);",
"            }",
"            else SFT('Hook: '+highest_hook_name+' ('+highest_hook+')');",
"        }",
"    }",
"    param = param + highest_hook;",
"    //ГЗП",
"    if(!acr_check && highest_def == highest_value)",
"    {",
"        tint = 0;",
"        if(def_best_MM > -1)tint = BonusValue(def_best_MM, bonus);",
"",
"        if(findsubstr(highest_def_name, ' + Acrynator') > -1)",
"        {",
"            if(highest_def > (highest_def / 3 + tint))",
"            {",
"                SFT('DefGenerator: '+highest_def_name+' ('+highest_def+')');",
"                acr_check = 1;",
"            }",
"            //Если значение акрина с ММ выше, чем значение акрина с Акринатором",
"            else",
"            {",
"                highest_def_name = substr(highest_def_name, 0, findsubstr(highest_def_name, ' + Acrynator'));",
"                highest_def = highest_def / 3;",
"",
"                if(def_best_MM > -1 && cur_search_type == 'DefGenerator')",
"                {",
"                    SFT('DefGenerator: '+highest_def_name+' + '+BonusNumInCfg(def_best_MM)+' ('+(highest_def + tint)+')');",
"                    param = param + tint;",
"                }",
"                else SFT('DefGenerator: '+highest_def_name+' ('+highest_def+')');",
"            }",
"        }",
"        else",
"        {",
"            if(def_best_MM > -1 && cur_search_type == 'DefGenerator')",
"            {",
"                SFT('DefGenerator: '+highest_def_name+' + '+BonusNumInCfg(def_best_MM)+' ('+(highest_def + tint)+')');",
"                param = param + tint;",
"            }",
"            else SFT('DefGenerator: '+highest_def_name+' ('+highest_def+')');",
"        }",
"    }",
"    else",
"    {",
"        if(findsubstr(highest_def_name, ' + Acrynator') > -1)",
"        {",
"            highest_def_name = substr(highest_def_name, 0, findsubstr(highest_def_name, ' + Acrynator'));",
"            highest_def = highest_def / 3;",
"",
"            if(def_best_MM > -1 && cur_search_type == 'DefGenerator')",
"            {",
"                SFT('DefGenerator: '+highest_def_name+' + '+BonusNumInCfg(def_best_MM)+' ('+(highest_def + BonusValue(def_best_MM, bonus))+')');",
"                param = param + BonusValue(def_best_MM, bonus);",
"            }",
"            else SFT('DefGenerator: '+highest_def_name+' ('+highest_def+')');",
"        }",
"        else",
"        {",
"            if(def_best_MM > -1 && cur_search_type == 'DefGenerator')",
"            {",
"                SFT('DefGenerator: '+highest_def_name+' + '+BonusNumInCfg(def_best_MM)+' ('+(highest_def + BonusValue(def_best_MM, bonus))+')');",
"                param = param + BonusValue(def_best_MM, bonus);",
"            }",
"            else SFT('DefGenerator: '+highest_def_name+' ('+highest_def+')');",
"        }",
"    }",
"    param = param + highest_def;",
"",
"    SFT(' ');",
"",
"    //Применяем бонусы от артефактов",
"    int art_dam_bon = 0;",
"    if(InstallArtefacts)",
"    {",
"        if(param_type == 'Hull armor')",
"        {",
"            tint = 0 + CT('Artefacts.NumericValues.kArtefactHull') + CT('Artefacts.NumericValues.kArtefactHullEx');",
"            SFT('Iron Zoopie max bonus: ' + tint);",
"            param = param + tint;",
"        }",
"        else if(param_type == 'Hull mass')",
"        {",
"            tint = 0 + CT('Artefacts.NumericValues.kArtefactAntigrav') + CT('Artefacts.NumericValues.kArtefactAntigravEx');",
"            SFT('Antigravitazer max bonus: -' + tint + '%');",
"            param = param + tint;",
"        }",
"        else if(param_type == 'Max damage')",
"        {",
"            if(dam_type == 'WEnergy')",
"            {",
"                tint = round(100.0 * CT('Artefacts.NumericValues.kArtDefToEnergyUp') + CT('Artefacts.NumericValues.kArtDefToEnergyUpEx'));",
"                SFT('Proportionar max bonus: ' + (tint - 100) + '% (applied AFTER passing through a target\\\\\\'s shield)');",
"                art_dam_bon = tint - 100;",
"            }",
"            else if(dam_type == 'WSplinter')",
"            {",
"                tint = round(100.0 * CT('Artefacts.NumericValues.kArtefactSpeed') + CT('Artefacts.NumericValues.kArtefactSpeedEx'));",
"                SFT('Screw-on max bonus: ' + (tint - 100) + '% (applied AFTER passing through a target\\\\\\'s shield)');",
"                art_dam_bon = tint - 100;",
"            }",
"        }",
"        else if(param_type == 'Max damage per turn')",
"        {",
"            if(dam_type == 'WMissile')",
"            {",
"                SFT('Rals max bonus: ~30% (in total)');",
"                param = (param * 30)/100;",
"            }",
"        }",
"        else if(param_type == 'Engine speed')",
"        {",
"            //Сопланатор (применяет свой бонус до пси-ускорителя)",
"            tint = 0 + CT('Artefacts.NumericValues.kArtWeaponToSpeed') + CT('Artefacts.NumericValues.kArtWeaponToSpeedEx');",
"            SFT('Nozzlenator max bonus: ' + tint);",
"            param = param + tint;",
"",
"            //Пси-ускоритель",
"            tint = round(100.0 * CT('Artefacts.NumericValues.kArtefactSpeed') + CT('Artefacts.NumericValues.kArtefactSpeedEx'));",
"            SFT('Matter Psi-Accelerator max bonus: ' + (tint - 100) + '%');",
"            param = (param * tint)/100;",
"        }",
"        else if(param_type == 'Radar range')",
"        {",
"            tint = 0 + CT('Artefacts.NumericValues.kArtefactRadar') + CT('Artefacts.NumericValues.kArtefactRadarEx');",
"            SFT('Prolonger max bonus: ' + tint);",
"            param = param + tint;",
"        }",
"        else if(param_type == 'Scanner power')",
"        {",
"            tint = 0 + CT('Artefacts.NumericValues.kArtefactScaner') + CT('Artefacts.NumericValues.kArtefactScanerEx');",
"            SFT('Scanner Cache max bonus: ' + tint);",
"            param = param + tint;",
"        }",
"        else if(param_type == 'Droid efficiency')",
"        {",
"            tint = 0 + CT('Artefacts.NumericValues.kArtefactDroid') + CT('Artefacts.NumericValues.kArtefactDroidEx');",
"            SFT('Junior Droid max bonus: ' + tint);",
"            param = param + tint;",
"        }",
"        else if(param_type == 'Hook max object size')",
"        {",
"            tint = 0 + CT('Artefacts.NumericValues.kArtefactHook') + CT('Artefacts.NumericValues.kArtefactHookEx');",
"            SFT('Erimeter max bonus: ' + tint);",
"            param = param + tint;",
"        }",
"        else if(param_type == 'Hook range')",
"        {",
"            tint = 0 + CT('Artefacts.NumericValues.kArtefactHookRaduis') + CT('Artefacts.NumericValues.kArtefactHookRaduisEx');",
"            SFT('Erimeter max bonus: ' + tint);",
"            param = param + tint;",
"        }",
"        else if(param_type == 'Hook close (max) speed' || param_type == 'Hook far (min) speed')",
"        {",
"            tint = 0 + CT('Artefacts.NumericValues.kArtefactHookSpeed') + CT('Artefacts.NumericValues.kArtefactHookSpeedEx');",
"            SFT('Erimeter max bonus: ' + tint);",
"            param = param + tint;",
"        }",
"    }",
"",
"    //Применяем бонусы от стимуляторов и болезней",
"    if(InstallStimulants)",
"    {",
"        // if(param_type == 'Hull mass')",
"        // {",
"            // SFT('Grand Malosausus debuff: +20%');",
"            // param = param + 20;",
"        // }",
"        if(param_type == 'Engine speed')",
"        {",
"            //Гаалистра времени",
"            SFT('Gaalian Alacrity bonus: +30%');",
"            param = round(1.3 * param);",
"        }",
"        else if(param_type == 'Radar range')",
"        {",
"            //Психотропный кэш",
"            SFT('Psychotropic Cache bonus: +100%');",
"            param = param * 2;",
"        }",
"        else if(param_type == 'Scanner power')",
"        {",
"            //Психотропный кэш",
"            SFT('Psychotropic Cache bonus: +12');",
"            param = param + 12;",
"        }",
"    }",
"",
"    if(!art_dam_bon)SFT('Total parameter value: ' + param);",
"    else SFT('Total parameter value: ' + param + ' ' + art_dam_bon + '% (after passing through a target\\\\\\'s shield)');",
"",
"    SFT(' ');",
"    SFT('###########################');",
"    SFT('###########################');",
"    SFT('###########################');",
"}",
"",
"// function CheckHullSuspectibility(int sus_type, type_type)",
"// {",
"    // if(sus_type == 1)",
"    // {",
"",
"    // }",
"// }"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          210,
          "Pos.y":          150,
          "Parent":          -1,
          "#":          89,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"//"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          240,
          "Pos.y":          300,
          "Parent":          -1,
          "#":          90,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"//"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          280,
          "Pos.y":          780,
          "Parent":          -1,
          "#":          92,
          "Total.Lines":          2,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_int=ShipStar(Player());",
"CreatePlanet(temp_int);"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          280,
          "Pos.y":          820,
          "Parent":          -1,
          "#":          94,
          "Total.Lines":          4,
          "Code.Type":"Turn",
          "Code":          
          [
"for (temp_int=0;temp_int<=11;temp_int=temp_int+1) {",
"SetProgramm(temp_int,100);",
"}",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          380,
          "Pos.y":          860,
          "Parent":          -1,
          "#":          96,
          "Total.Lines":          2,
          "Code.Type":"Turn",
          "Code":          
          [
"ItemSize(ShipItems(Player(),0),temp_int);",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          280,
          "Pos.y":          910,
          "Parent":          -1,
          "#":          98,
          "Total.Lines":          2,
          "Code.Type":"Turn",
          "Code":          
          [
"ShipRepairEq(Player());",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          80,
          "Pos.y":          820,
          "Parent":          -1,
          "#":          99,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"//"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          80,
          "Pos.y":          570,
          "Parent":          -1,
          "#":          100,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"InjectAnswer('GTLChange', 'Изменить ГТУ', 0);"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          640,
          "Pos.y":          0,
          "Parent":          -1,
          "#":          102,
          "Total.Lines":          11,
          "Code.Type":"Turn",
          "Code":          
          [
"hull_name=FindBonusByCustomTag('ExpScienceRanks_TickSpeedMode');",
"temp_gift=CreateHull(30,100+150*GalaxyTechLevel(),GalaxyTechLevel(),6);",
"SpecialToEquipment(hull_name,temp_gift);",
"if(GetShipPlanet(Player()))AddItemToStorage(GetShipPlanet(Player()),temp_gift);",
"if(GetShipRuins(Player()))",
"{",
"    if(PlayerBridge()==0)AddItemToStorage(GetShipRuins(Player()),temp_gift);",
"    else AddItemToStorage(NearCivilPlanet(Player()),temp_gift);",
"}",
"",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          640,
          "Pos.y":          -100,
          "Parent":          -1,
          "#":          105,
          "Total.Lines":          33,
          "Code.Type":"Turn",
          "Code":          
          [
"//Добавляем в игру новое кастомное ракетное оружие - физган (если ещё не было добавлено)",
"tstr1 = 'PhysGun';",
"tstr2 = 'Items.Weapon.CustomWeapon.';",
"//Прописываем пушку/сбрасываем уже прописанную пушку до уровня базовой из оригинальной игры",
"weapon = InventNewCustomWeapon(tstr1, t_Weapon1 - 1 + CT('Items.Weapon.OriginalWeaponType.' + CT(tstr2 + tstr1 + '.BaseGun')));",
"//Задаём характеристики оружия",
"SetCustomWeaponShotData(weapon, CT(tstr2 + tstr1 + '.ShotType'), CT(tstr2 + tstr1 + '.Speed'), CT(tstr2 + tstr1 + '.AverageRadius'), CT(tstr2 + tstr1 + '.SecondaryDamageRadius'), CT(tstr2 + tstr1 + '.MiningFactor'), CT(tstr2 + tstr1 + '.ShotsPerTurn'));",
"SetCustomWeaponDamageData(weapon, CT(tstr2 + tstr1 + '.MinDamage'), CT(tstr2 + tstr1 + '.MaxDamage'), CT(tstr2 + tstr1 + '.DamageSet'), CT(tstr2 + tstr1 + '.mWeaponDamage'));",
"SetCustomMissileWeaponStats(weapon, CT(tstr2 + tstr1 + '.MissileRadius'), CT(tstr2 + tstr1 + '.MissileMaxSpeed'), CT(tstr2 + tstr1 + '.MissileMinSpeed'), CT(tstr2 + tstr1 + '.MissileChanceToBeHit'));",
"SetCustomWeaponPrimaryData(weapon, CT(tstr2 + tstr1 + '.TechLevel'), t_Weapon1 - 1 + CT('Items.Weapon.OriginalWeaponType.' + CT(tstr2 + tstr1 + '.InventTechLevel')), t_Weapon1 - 1 + CT('Items.Weapon.OriginalWeaponType.' + CT(tstr2 + tstr1 + '.ArcadeType')));",
"SetCustomWeaponSizeAndCost(weapon, CT(tstr2 + tstr1 + '.kCost'), CT(tstr2 + tstr1 + '.AverageSize'));",
"SetCustomWeaponAvailability(weapon, CT(tstr2 + tstr1 + '.StoreAvailability'));",
"SetCustomWeaponSE(weapon, CT(tstr2 + tstr1 + '.ShotEffectPath'), CT(tstr2 + tstr1 + '.SplashEffectPath'), CT(tstr2 + tstr1 + '.MissileExplosionEffectPath'), CT(tstr2 + tstr1 + '.ShotEffectPalette'));",
"",
"//Создаём и настраиваем физган как предмет",
"weapon = CreateCustomWeapon('PhysGun', 1, 1, 0);",
"ItemOwner(weapon, 0);",
"ItemSize(weapon, 84 - Rnd(5, 8) * GalaxyTechLevel());",
"ItemLevel(weapon, GalaxyTechLevel());",
"ItemCost(weapon, Rnd(5000, 8000) * GalaxyTechLevel());",
"SpecialToEquipment(FindBonusByNameInCfg('ExpPhysGun_PhysGunEmpty'), weapon);",
"SetName(weapon, CT('Script.Mod_ExpPhysGun.PhysGunName'));",
"WeaponMaxAmmunition(weapon, 0);",
"WeaponAmmunition(weapon, 0);",
"SetEquipmentStats(weapon, 0, 0);",
"SetEquipmentStats(weapon, 0, 1);",
"LinkItemToScript(weapon, PhysGun);",
"ItemOnActCode(weapon, GenerateCodeStringFromBlock('ActCodeBlocksList.PhysGunActCode'));",
"ItemOnUseCode(weapon, GenerateCodeStringFromBlock('UseCodeBlocksList.PhysGunUseCodeEmpty'));",
"//Улучшение точности физгана (для физгана из девкита подключаем сразу)",
"ScriptItemData(weapon, 3, 1);",
"AddItemToShip(Player(), weapon);",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          280,
          "Pos.y":          940,
          "Parent":          -1,
          "#":          109,
          "Total.Lines":          6,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_str = '1';",
"while(temp_str)",
"{",
"    temp_str = TextBox('Консоль', '', 100000000);",
"    ExecuteCodeFromString(temp_str);",
"}"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          640,
          "Pos.y":          -40,
          "Parent":          -1,
          "#":          111,
          "Total.Lines":          11,
          "Code.Type":"Turn",
          "Code":          
          [
"hull_name=FindBonusByName(CT('MicroModuls.490.Name'));",
"Sound('Sound.Buy');",
"temp_gift=CreateHull(30,100+150*GalaxyTechLevel(),GalaxyTechLevel(),6);",
"SpecialToEquipment(hull_name,temp_gift);",
"if(GetShipPlanet(Player()))AddItemToStorage(GetShipPlanet(Player()),temp_gift);",
"if(GetShipRuins(Player()))",
"{",
"    if(PlayerBridge()==0)AddItemToStorage(GetShipRuins(Player()),temp_gift);",
"    else AddItemToStorage(NearCivilPlanet(Player()),temp_gift);",
"}",
"CapitalShipStats(temp_gift,1,1000);"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          400,
          "Pos.y":          100,
          "Parent":          -1,
          "#":          117,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"hull_type=2;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          400,
          "Pos.y":          120,
          "Parent":          -1,
          "#":          118,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"hull_type=3;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          330,
          "Pos.y":          100,
          "Parent":          -1,
          "#":          119,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_int=1;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          400,
          "Pos.y":          140,
          "Parent":          -1,
          "#":          121,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"hull_type=0;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          470,
          "Pos.y":          380,
          "Parent":          -1,
          "#":          124,
          "Total.Lines":          3,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_dword=CreateCustomArt('galo',Rnd(5,10),Rnd(2000,8000)*GalaxyTechLevel(),4);",
"CustomArtData(temp_dword,1,Rnd(20,90));",
"AddItemToShip(Player(),temp_dword);"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          490,
          "Pos.y":          380,
          "Parent":          -1,
          "#":          125,
          "Total.Lines":          3,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_dword=CreateCustomArt('blinker',Rnd(5,10),Rnd(2000,8000)*GalaxyTechLevel(),4);",
"CustomArtData(temp_dword,1,Rnd(20,90));",
"AddItemToShip(Player(),temp_dword);"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          280,
          "Pos.y":          980,
          "Parent":          -1,
          "#":          127,
          "Total.Lines":          4,
          "Code.Type":"Turn",
          "Code":          
          [
"for (temp_int=0; temp_int<GalaxySectors(); temp_int=temp_int+1){",
"if (!SectorVisible(GalaxySectors(temp_int))) SectorVisible(GalaxySectors(temp_int),1);",
"}",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          350,
          "Pos.y":          860,
          "Parent":          -1,
          "#":          130,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_int=CountBox('Bm.Items.2FuelTanks14s','Размер',1,12000);"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          390,
          "Pos.y":          590,
          "Parent":          -1,
          "#":          134,
          "Total.Lines":          4,
          "Code.Type":"Turn",
          "Code":          
          [
"ShipJoinsClan(Player());",
"for (temp_int=0;temp_int<10;temp_int=temp_int+1) {",
"RaisePirateRank(Player());}",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          390,
          "Pos.y":          610,
          "Parent":          -1,
          "#":          135,
          "Total.Lines":          4,
          "Code.Type":"Turn",
          "Code":          
          [
"for (temp_int=0;temp_int<10;temp_int=temp_int+1) {",
"ShipRankPoints(Player(),5000);",
"ShipRaiseRank(Player());}",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          470,
          "Pos.y":          0,
          "Parent":          -1,
          "#":          145,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"tech_lvl=1;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          470,
          "Pos.y":          20,
          "Parent":          -1,
          "#":          146,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"tech_lvl=2;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          470,
          "Pos.y":          40,
          "Parent":          -1,
          "#":          147,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"tech_lvl=3;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          470,
          "Pos.y":          60,
          "Parent":          -1,
          "#":          148,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"tech_lvl=4;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          470,
          "Pos.y":          80,
          "Parent":          -1,
          "#":          149,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"tech_lvl=5;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          470,
          "Pos.y":          100,
          "Parent":          -1,
          "#":          150,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"tech_lvl=6;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          470,
          "Pos.y":          120,
          "Parent":          -1,
          "#":          151,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"tech_lvl=7;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          470,
          "Pos.y":          140,
          "Parent":          -1,
          "#":          152,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"tech_lvl=8;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          640,
          "Pos.y":          50,
          "Parent":          -1,
          "#":          155,
          "Total.Lines":          7,
          "Code.Type":"Turn",
          "Code":          
          [
"Sound('Sound.Buy');",
"temp_gift=CreateEquipment(t_Engine,0,8,Gaal);",
"ItemCost(temp_gift,(ItemCost(temp_gift)/2));",
"temp_int=GetEquipmentStats(temp_gift,0)*20;",
"SetEquipmentStats(temp_gift,temp_int,0);",
"SetEquipmentStats(temp_gift,125,1);",
"AddItemToShip(Player(),temp_gift);"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          530,
          "Pos.y":          0,
          "Parent":          -1,
          "#":          165,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_race=0;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          530,
          "Pos.y":          20,
          "Parent":          -1,
          "#":          166,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_race=1;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          530,
          "Pos.y":          40,
          "Parent":          -1,
          "#":          167,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_race=2;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          530,
          "Pos.y":          60,
          "Parent":          -1,
          "#":          168,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_race=3;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          530,
          "Pos.y":          80,
          "Parent":          -1,
          "#":          169,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_race=4;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          530,
          "Pos.y":          100,
          "Parent":          -1,
          "#":          170,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_race=5;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          530,
          "Pos.y":          120,
          "Parent":          -1,
          "#":          171,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_race=6;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          530,
          "Pos.y":          140,
          "Parent":          -1,
          "#":          172,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_race=7;"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          640,
          "Pos.y":          80,
          "Parent":          -1,
          "#":          174,
          "Total.Lines":          5,
          "Code.Type":"Turn",
          "Code":          
          [
"Sound('Sound.Buy');",
"temp_gift=CreateEquipment(t_Radar,0,8,Gaal);",
"ItemCost(temp_gift,(ItemCost(temp_gift)/2));",
"SetEquipmentStats(temp_gift,32000,0);",
"AddItemToShip(Player(),temp_gift);"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          510,
          "Pos.y":          380,
          "Parent":          -1,
          "#":          175,
          "Total.Lines":          4,
          "Code.Type":"Turn",
          "Code":          
          [
"temp_dword=CreateCustomArt('pulsar',Rnd(15,35),Rnd(2000,8000)*GalaxyTechLevel(),4);",
"CustomArtData(temp_dword,1,1000);",
"AddItemToShip(Player(),temp_dword);",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          350,
          "Pos.y":          320,
          "Parent":          -1,
          "#":          177,
          "Total.Lines":          67,
          "Code.Type":"Turn",
          "Code":          
          [
"//Накладываем на корпус серию \"Идеал\"",
"HullSeries(ShipItems(Player(),0),FindSeriesByName(CT('HullType.99.Name')));",
"//Выдаём чит-двигатель",
"temp_gift=CreateEquipment(t_Engine,0,8,Gaal);",
"ShipSpecialBonuses(Player(),bonJump,ShipSpecialBonuses(Player(),bonJump)+1000);",
"ItemCost(temp_gift,(ItemCost(temp_gift)/2));",
"temp_int=GetEquipmentStats(temp_gift,0)*20;",
"SetEquipmentStats(temp_gift,temp_int,0);",
"SetEquipmentStats(temp_gift,125,1);",
"AddItemToShip(Player(),temp_gift);",
"ItemIsInUse(temp_gift,Player(),1);",
"//Выдаём чит-радар",
"temp_gift=CreateEquipment(t_Radar,0,8,Gaal);",
"ItemCost(temp_gift,(ItemCost(temp_gift)/2));",
"SetEquipmentStats(temp_gift,32000,0);",
"AddItemToShip(Player(),temp_gift);",
"ItemIsInUse(temp_gift,Player(),1);",
"ShipFuel(Player(),50000);",
"for(temp_int=0; temp_int<GalaxySectors();temp_int=temp_int+1)",
"{",
"    if(!SectorVisible(GalaxySectors(temp_int)))SectorVisible(GalaxySectors(temp_int),1);",
"}",
"ItemSize(ShipItems(Player(),0),1200);",
"ShipRepairEq(Player());",
"ShipMoney(Player(),ShipMoney(Player())+3000000);",
"//Выдаём чит-сканер",
"temp_gift=CreateEquipment(t_Scaner,1,8,Gaal);",
"SetEquipmentStats(temp_gift,125,0);",
"AddItemToShip(Player(),temp_gift);",
"ItemIsInUse(temp_gift,Player(),1);",
"//Выдаём прочую крутую оборудку",
"if(ShipWeapon(Player(),1))FreeItem(GetItemFromShip(Player(),FindItemInShip(Player(),ShipWeapon(Player(),1))));",
"temp_gift=CreateEquipment(t_Weapon14,1,8,Gaal);",
"AddItemToShip(Player(),temp_gift);",
"ItemIsInUse(temp_gift,Player(),1,1);",
"if(ShipWeapon(Player(),2))FreeItem(GetItemFromShip(Player(),FindItemInShip(Player(),ShipWeapon(Player(),2))));",
"temp_gift=CreateEquipment(t_Weapon14,1,8,Gaal);",
"AddItemToShip(Player(),temp_gift);",
"ItemIsInUse(temp_gift,Player(),1,2);",
"if(ShipWeapon(Player(),3))FreeItem(GetItemFromShip(Player(),FindItemInShip(Player(),ShipWeapon(Player(),3))));",
"temp_gift=CreateEquipment(t_Weapon14,1,8,Gaal);",
"AddItemToShip(Player(),temp_gift);",
"ItemIsInUse(temp_gift,Player(),1,3);",
"if(ShipWeapon(Player(),4))FreeItem(GetItemFromShip(Player(),FindItemInShip(Player(),ShipWeapon(Player(),4))));",
"temp_gift=CreateEquipment(t_Weapon14,1,8,Gaal);",
"AddItemToShip(Player(),temp_gift);",
"ItemIsInUse(temp_gift,Player(),1,4);",
"if(ShipWeapon(Player(),5))FreeItem(GetItemFromShip(Player(),FindItemInShip(Player(),ShipWeapon(Player(),5))));",
"temp_gift=CreateEquipment(t_Weapon14,1,8,Gaal);",
"AddItemToShip(Player(),temp_gift);",
"ItemIsInUse(temp_gift,Player(),1,5);",
"temp_gift=CreateEquipment(t_RepairRobot,1,8,Gaal);",
"AddItemToShip(Player(),temp_gift);",
"ItemIsInUse(temp_gift,Player(),1);",
"temp_gift=CreateEquipment(t_DefGenerator,1,8,Gaal);",
"AddItemToShip(Player(),temp_gift);",
"ItemIsInUse(temp_gift,Player(),1);",
"temp_gift=CreateEquipment(t_CargoHook,1,8,Gaal);",
"AddItemToShip(Player(),temp_gift);",
"ItemIsInUse(temp_gift,Player(),1);",
"//Добавляем в трюм читерный исследовательский зонд",
"temp_gift = CreateZond(5, 6, 255, 255, 255);",
"ItemSize(temp_gift, 1);",
"SetName(temp_gift, 'Overseer');",
"AddItemToShip(Player(), temp_gift);",
"",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          350,
          "Pos.y":          440,
          "Parent":          -1,
          "#":          185,
          "Total.Lines":          8,
          "Code.Type":"Turn",
          "Code":          
          [
"for(i=1;i<5;i=i+1)",
"{",
"    tstr=CT('Artefacts.CustomArtefacts.RNDart_0'+i+'.Size');",
"    tint=tstr;",
"    tint=tint+Rnd(-4,4);",
"    tdwd=CreateCustomArt('RNDart_0'+i,tint,1000,Rnd(0,4));",
"    AddItemToShip(Player(),tdwd);",
"}"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          380,
          "Pos.y":          440,
          "Parent":          -1,
          "#":          186,
          "Total.Lines":          15,
          "Code.Type":"Turn",
          "Code":          
          [
"for(j=0;j<3;j=j+1)",
"    {",
"AddItemToShip(Player(),CreateMM(FindBonusByCustomTag('dt_Shock')));",
"for(i=1;i<4;i=i+1)",
"    {",
"if(i==2)continue;",
"    tstr=CT('UselessItems.RNDmoditem_'+i+'.Size');",
"    tint=tstr;",
"    tint=tint+Rnd(-4,4);",
"    tdwd=CreateQuestItem('RNDmoditem_'+i,Rnd(0,4));",
"    ItemSize(tdwd,tint);",
"    ItemCost(tdwd,ItemCost(tdwd)+(ItemCost(tdwd)*Rnd(10,20))/100);",
"    AddItemToShip(Player(),tdwd);",
"    }",
"}"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          470,
          "Pos.y":          440,
          "Parent":          -1,
          "#":          187,
          "Total.Lines":          15,
          "Code.Type":"Turn",
          "Code":          
          [
"tdwd=CreateQuestItem('RNDbombbox');",
"AddItemToShip(Player(),tdwd);",
"for(i=1;i<4;i=i+1)",
"    {",
"    tdwd=CreateQuestItem('RNDtimer',7);",
"    AddItemToShip(Player(),tdwd);",
"    tstr=CT('UselessItems.RNDbomb_'+i+'.Size');",
"    tint=tstr;",
"    tint=tint+Rnd(-4,4);",
"    tdwd=CreateQuestItem('RNDbomb_'+i);",
"    ItemSize(tdwd,tint);",
"    ItemCost(tdwd,ItemCost(tdwd)+(ItemCost(tdwd)*Rnd(10,20))/100);",
"    AddItemToShip(Player(),tdwd);",
"    }",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          410,
          "Pos.y":          -170,
          "Parent":          -1,
          "#":          190,
          "Total.Lines":          6,
          "Code.Type":"Turn",
          "Code":          
          [
"InjectAnswer('DevKit', \"Никуда я телепортироваться не хочу\", 0);",
"for(i = 1; i < GalaxyStars(); i = i + 1)",
"{",
"    tdwd = StarNearbyStars(ShipStar(Player()), i);",
"    InjectAnswer('TP_star', Name(tdwd), tdwd);",
"}"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          360,
          "Pos.y":          -200,
          "Parent":          -1,
          "#":          193,
          "Total.Lines":          22,
          "Code.Type":"Turn",
          "Code":          
          [
"//Старый вариант",
"//if(PlayerBridge()) PlayerBridge(0);",
"//TransferShip(Player(), GAnswerData);",
"//PlayerBridge(2);",
"//PlayerBridge(0);",
"//ShipChangeStar(Player(), GAnswerData);",
"",
"for(temp_int = 0; temp_int < GalaxySectors(); temp_int = temp_int + 1)",
"{",
"    if(!SectorVisible(GalaxySectors(temp_int))) SectorVisible(GalaxySectors(temp_int), 1);",
"}",
"RunChildForm('Galaxy');",
"if(ShipOrder(Player()) == 7)",
"{",
"    tdwd = ShipOrderObj(Player());",
"    OrderNone(Player());",
"    if(PlayerBridge()) PlayerBridge(0);",
"    TransferShip(Player(), tdwd);",
"    PlayerBridge(2);",
"    PlayerBridge(0);",
"    ShipChangeStar(Player(), tdwd);",
"}"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          620,
          "Pos.y":          -260,
          "Parent":          -1,
          "#":          195,
          "Total.Lines":          26,
          "Code.Type":"Turn",
          "Code":          
          [
"for(i=0;i<GalaxyStars();i=i+1)",
"    {",
"    temp_dword=GalaxyStar(i);",
"    if(StarOwner(temp_dword)!=2)continue;",
"    if(StarRuins(temp_dword,'CB')>0)",
"        {",
"        temp_dword2=StarRuins(temp_dword,'CB');",
"        ShipDestroy(temp_dword2,1);",
"        }",
"    for(j=0;j<StarPlanets(temp_dword);j=j+1)",
"        {",
"        temp_dword2=StarPlanets(temp_dword,j);",
"        if(PlanetOwner(temp_dword2)==6)continue;",
"        PlanetOwner(temp_dword2,PlanetRace(temp_dword2));",
"        BuyWarrior(temp_dword2);",
"        }",
"    for(j=0;j<StarShips(temp_dword);j=j+1)",
"        {",
"        temp_dword2=StarShips(temp_dword,j);",
"        if(ShipTypeN(temp_dword2)!=t_Pirate)continue;",
"        OrderNone(temp_dword2);",
"        OrderLock(temp_dword2,1);",
"        ShipDestroy(temp_dword2,1);",
"        }",
"    }",
"PirateWin(3);"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          570,
          "Pos.y":          310,
          "Parent":          -1,
          "#":          198,
          "Total.Lines":          9,
          "Code.Type":"Turn",
          "Code":          
          [
"for(i=0;i<7;i=i+1){",
"AddItemToShip(Player(),CreateEquipmentWithSpecial(FindBonusByCustomTag('Fakrin_'+0+'_'+i)));",
"AddItemToShip(Player(),CreateEquipmentWithSpecial(FindBonusByCustomTag('Fakrin_'+1+'_'+i)));",
"AddItemToShip(Player(),CreateEquipmentWithSpecial(FindBonusByCustomTag('Fakrin_'+2+'_'+i)));",
"AddItemToShip(Player(),CreateEquipmentWithSpecial(FindBonusByCustomTag('Fakrin_'+3+'_'+i)));",
"AddItemToShip(Player(),CreateEquipmentWithSpecial(FindBonusByCustomTag('Fakrin_'+4+'_'+i)));",
"AddItemToShip(Player(),CreateEquipmentWithSpecial(FindBonusByCustomTag('Fakrin_'+5+'_'+i)));",
"}",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          -120,
          "Pos.y":          130,
          "Parent":          -1,
          "#":          215,
          "Total.Lines":          2,
          "Code.Type":"Turn",
          "Code":          
          [
"ShipDestroy(GetTalkShip(), 1);",
"FormChange('StarMap');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          170,
          "Pos.y":          370,
          "Parent":          -1,
          "#":          232,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"//"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          0,
          "Pos.y":          450,
          "Parent":          -1,
          "#":          234,
          "Total.Lines":          24,
          "Code.Type":"Turn",
          "Code":          
          [
"tint = NumberBox('Bm.ItemsUseless.2Usl_Elus_s', 'Укажите желаемый ГТУ:', 1, 8, 8, '', GalaxyTechLevel());",
"",
"if(tint != GalaxyTechLevel())",
"{",
"    for(i = 0; i < GalaxyStars(); i = i + 1)",
"    {",
"        temp_dword = GalaxyStar(i);",
"        if(StarOwner(temp_dword) == 1) continue;",
"        tstr = StarCustomFaction(temp_dword);",
"        if(tstr != '')",
"        {",
"            if(findsubstr(tstr, 'SubFaction')) continue;",
"        }",
"",
"        for(j = 0; j < StarPlanets(temp_dword); j = j + 1)",
"        {",
"            tdwd = StarPlanets(temp_dword, j);",
"            if(PlanetOwner(tdwd) == None) continue;",
"            PlanetInventionLevel(tdwd, 7, tint);",
"        }",
"    }",
"",
"    MessageBox('Для применения изменений пропустите ход.');",
"}"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          640,
          "Pos.y":          -20,
          "Parent":          -1,
          "#":          237,
          "Total.Lines":          10,
          "Code.Type":"Turn",
          "Code":          
          [
"cur_item = CreateEquipment(t_RepairRobot, 20, 8, 2);",
"LinkItemToScript(cur_item);",
"ItemOnActCode(cur_item, GenerateCodeStringFromBlock('ActCodeBlocksList.HybridDroidActCode'));",
"ScriptItemData(cur_item, 1, 300);",
"ScriptItemData(cur_item, 2, 300);",
"ScriptItemData(cur_item, 3, 300);",
"SpecialToEquipment(FindBonusByNameInCfg('491'), cur_item);",
"AddItemToShip(Player(), cur_item);",
"",
"Sound('Sound.Buy');"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          300,
          "Pos.y":          30,
          "Parent":          -1,
          "#":          238,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"tstr1 = '</color>' + CT('MicroModuls.491.Name');"          
          ]        
        }      
      ],
      "Planets":      
      [
        {
          "Type":"TPlanet",
          "Name":"PlanetNew",
          "Pos.x":          -30,
          "Pos.y":          180,
          "Parent":          -1,
          "#":          2,
          "Race":          62,
          "Owner":          62,
          "Economy":          14,
          "Goverment":          62,
          "RangeMin":          0,
          "RangeMax":          100,
          "Dialog":          -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":"TStarShip",
          "Name":"",
          "Pos.x":          -30,
          "Pos.y":          100,
          "Parent":          -1,
          "#":          0,
          "Count":          1,
          "Owner":          62,
          "Ship.Type":          126,
          "Player":true,
          "SpeedMin":          0,
          "SpeedMax":          10000,
          "Weapon":          0,
          "CargoHook":          0,
          "EmptySpace":          0,
          "StatusTraderMin":          0,
          "StatusTraderMax":          100,
          "StatusWarriorMin":          0,
          "StatusWarriorMax":          100,
          "StatusPirateMin":          0,
          "StatusPirateMax":          100,
          "StrengthMin":"0",
          "StrengthMax":"0",
          "Ruins":""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":"TStar",
          "Name":"StarNew",
          "Pos.x":          -30,
          "Pos.y":          140,
          "Parent":          -1,
          "#":          1,
          "Constellation":          0,
          "Priority":          0,
          "NoKling":false,
          "NoComeKling":false        
        }      
      ],
      "Statements":      
      [
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          0,
          "Pos.y":          40,
          "Parent":          -1,
          "#":          85,
          "Total.Lines":          1,
          "Code.Type":"Init",
          "Code":          
          [
"CapitalShipStats(ShipItems(Player(), 0)) < 1"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          30,
          "Pos.y":          40,
          "Parent":          -1,
          "#":          86,
          "Total.Lines":          5,
          "Code.Type":"DialogBegin",
          "Code":          
          [
"(PlayerBridge() ||",
"GetShipRuins(Player()) ||",
"GetShipPlanet(Player()) ||",
"GetTalkShip()) &&",
"DevKitVisibility"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          610,
          "Pos.y":          320,
          "Parent":          -1,
          "#":          200,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"1"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          80,
          "Pos.y":          -330,
          "Parent":          -1,
          "#":          205,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"GetTalkShip()"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          110,
          "Pos.y":          -330,
          "Parent":          -1,
          "#":          206,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"!GetTalkShip()"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          320,
          "Pos.y":          -100,
          "Parent":          -1,
          "#":          211,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"GetMainData('Data.Script.Mod_ExpPhysGun')"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          320,
          "Pos.y":          -170,
          "Parent":          -1,
          "#":          216,
          "Total.Lines":          2,
          "Code.Type":"Turn",
          "Code":          
          [
"//Старый вариант",
"0"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          640,
          "Pos.y":          350,
          "Parent":          -1,
          "#":          217,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"1"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          640,
          "Pos.y":          1020,
          "Parent":          -1,
          "#":          218,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"1"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          80,
          "Pos.y":          1020,
          "Parent":          -1,
          "#":          219,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"1"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          510,
          "Pos.y":          420,
          "Parent":          -1,
          "#":          220,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"1"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          540,
          "Pos.y":          500,
          "Parent":          -1,
          "#":          221,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"1"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          540,
          "Pos.y":          610,
          "Parent":          -1,
          "#":          222,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"1"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          430,
          "Pos.y":          680,
          "Parent":          -1,
          "#":          223,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"1"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          440,
          "Pos.y":          980,
          "Parent":          -1,
          "#":          224,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"1"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          440,
          "Pos.y":          780,
          "Parent":          -1,
          "#":          225,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"1"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          640,
          "Pos.y":          170,
          "Parent":          -1,
          "#":          226,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"1"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          430,
          "Pos.y":          640,
          "Parent":          -1,
          "#":          227,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"1"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          440,
          "Pos.y":          820,
          "Parent":          -1,
          "#":          228,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"1"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          440,
          "Pos.y":          860,
          "Parent":          -1,
          "#":          229,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"1"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          440,
          "Pos.y":          910,
          "Parent":          -1,
          "#":          230,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"1"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          440,
          "Pos.y":          940,
          "Parent":          -1,
          "#":          231,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"1"          
          ]        
        },
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          80,
          "Pos.y":          450,
          "Parent":          -1,
          "#":          235,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"1"          
          ]        
        }      
      ],
      "States":      
      [
        {
          "Type":"TState",
          "Name":"PlayerState",
          "Pos.x":          -30,
          "Pos.y":          260,
          "Parent":          -1,
          "#":          4,
          "Move":          0,
          "MoveObj":          -1,
          "Attack.Count":          0,
          "TakeItem":          -1,
          "TakeAllItem":false,
          "OnTalk":"",
          "OnActCode":"",
          "EType":          1,
          "EUnique":"",
          "EMsg":""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":"TVar",
          "Name":"temp_size",
          "Pos.x":          -230,
          "Pos.y":          370,
          "Parent":          -1,
          "#":          10,
          "Var.Type":"Int",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"temp_gift",
          "Pos.x":          -230,
          "Pos.y":          410,
          "Parent":          -1,
          "#":          28,
          "Var.Type":"Int",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"temp_race",
          "Pos.x":          -230,
          "Pos.y":          390,
          "Parent":          -1,
          "#":          29,
          "Var.Type":"Int",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"type_equip_str",
          "Pos.x":          -120,
          "Pos.y":          370,
          "Parent":          -1,
          "#":          30,
          "Var.Type":"Str",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"temp_int",
          "Pos.x":          -230,
          "Pos.y":          350,
          "Parent":          -1,
          "#":          31,
          "Var.Type":"Int",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"hull_name",
          "Pos.x":          -120,
          "Pos.y":          390,
          "Parent":          -1,
          "#":          103,
          "Var.Type":"Str",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"temp_dword",
          "Pos.x":          -340,
          "Pos.y":          310,
          "Parent":          -1,
          "#":          106,
          "Var.Type":"Dword",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"weapon",
          "Pos.x":          -340,
          "Pos.y":          350,
          "Parent":          -1,
          "#":          107,
          "Var.Type":"Dword",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"hull_type",
          "Pos.x":          -230,
          "Pos.y":          450,
          "Parent":          -1,
          "#":          113,
          "Var.Type":"Int",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"temp_str",
          "Pos.x":          -120,
          "Pos.y":          350,
          "Parent":          -1,
          "#":          122,
          "Var.Type":"Str",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"type_equip",
          "Pos.x":          -230,
          "Pos.y":          470,
          "Parent":          -1,
          "#":          131,
          "Var.Type":"Int",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"tech_lvl",
          "Pos.x":          -230,
          "Pos.y":          430,
          "Parent":          -1,
          "#":          153,
          "Var.Type":"Int",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"tdwd",
          "Pos.x":          -340,
          "Pos.y":          290,
          "Parent":          -1,
          "#":          179,
          "Var.Type":"Dword",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"tint",
          "Pos.x":          -230,
          "Pos.y":          310,
          "Parent":          -1,
          "#":          180,
          "Var.Type":"Int",
          "Init":"0",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"tstr",
          "Pos.x":          -120,
          "Pos.y":          290,
          "Parent":          -1,
          "#":          181,
          "Var.Type":"Str",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"i",
          "Pos.x":          -230,
          "Pos.y":          290,
          "Parent":          -1,
          "#":          182,
          "Var.Type":"Int",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"j",
          "Pos.x":          -200,
          "Pos.y":          290,
          "Parent":          -1,
          "#":          183,
          "Var.Type":"Int",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"temp_dword2",
          "Pos.x":          -340,
          "Pos.y":          330,
          "Parent":          -1,
          "#":          199,
          "Var.Type":"Dword",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"g_param",
          "Pos.x":          -230,
          "Pos.y":          490,
          "Parent":          -1,
          "#":          201,
          "Var.Type":"Int",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"k",
          "Pos.x":          -170,
          "Pos.y":          290,
          "Parent":          -1,
          "#":          202,
          "Var.Type":"Int",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"tstr2",
          "Pos.x":          -120,
          "Pos.y":          330,
          "Parent":          -1,
          "#":          203,
          "Var.Type":"Str",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"tint2",
          "Pos.x":          -230,
          "Pos.y":          330,
          "Parent":          -1,
          "#":          204,
          "Var.Type":"Int",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"tempActCodeData",
          "Pos.x":          70,
          "Pos.y":          120,
          "Parent":          -1,
          "#":          208,
          "Var.Type":"Int",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"tempActCodeData2",
          "Pos.x":          70,
          "Pos.y":          140,
          "Parent":          -1,
          "#":          209,
          "Var.Type":"Int",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"tempActCodeData3",
          "Pos.x":          70,
          "Pos.y":          160,
          "Parent":          -1,
          "#":          210,
          "Var.Type":"Int",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"tstr1",
          "Pos.x":          -120,
          "Pos.y":          310,
          "Parent":          -1,
          "#":          212,
          "Var.Type":"Str",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"cur_item",
          "Pos.x":          -340,
          "Pos.y":          270,
          "Parent":          -1,
          "#":          239,
          "Var.Type":"Dword",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"DevKitVisibility",
          "Pos.x":          30,
          "Pos.y":          20,
          "Parent":          -1,
          "#":          240,
          "Var.Type":"Int",
          "Init":"1",
          "Global":true        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":"TGraphLink",
      "Begin":      3,
      "End":      4,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      3,
      "End":      2,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      2,
      "End":      1,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      0,
      "End":      1,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      6,
      "End":      7,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      9,
      "End":      12,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      12,
      "End":      13,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      12,
      "End":      14,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      12,
      "End":      15,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      12,
      "End":      16,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      12,
      "End":      17,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      13,
      "End":      18,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      14,
      "End":      19,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      15,
      "End":      20,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      16,
      "End":      21,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      17,
      "End":      22,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      8,
      "End":      24,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      23,
      "End":      25,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      25,
      "End":      9,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      24,
      "End":      9,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      26,
      "End":      27,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      27,
      "End":      9,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      32,
      "End":      35,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      33,
      "End":      36,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      34,
      "End":      37,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      35,
      "End":      9,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      36,
      "End":      9,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      37,
      "End":      9,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      39,
      "End":      40,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      40,
      "End":      9,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      18,
      "End":      11,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      19,
      "End":      11,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      20,
      "End":      11,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      21,
      "End":      11,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      22,
      "End":      11,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      42,
      "End":      43,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      43,
      "End":      38,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      43,
      "End":      8,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      43,
      "End":      23,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      43,
      "End":      26,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      43,
      "End":      32,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      43,
      "End":      33,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      43,
      "End":      34,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      43,
      "End":      39,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      44,
      "End":      45,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      46,
      "End":      47,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      45,
      "End":      48,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      48,
      "End":      46,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      49,
      "End":      52,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      52,
      "End":      53,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      52,
      "End":      51,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      53,
      "End":      50,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      51,
      "End":      54,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      57,
      "End":      58,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      43,
      "End":      59,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      59,
      "End":      61,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      63,
      "End":      64,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      62,
      "End":      66,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      66,
      "End":      67,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      67,
      "End":      63,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      66,
      "End":      65,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      65,
      "End":      68,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      68,
      "End":      69,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      70,
      "End":      72,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      72,
      "End":      73,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      73,
      "End":      71,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      72,
      "End":      74,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      74,
      "End":      75,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      76,
      "End":      77,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      78,
      "End":      79,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      80,
      "End":      81,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      81,
      "End":      82,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      82,
      "End":      83,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      83,
      "End":      84,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      86,
      "End":      87,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      85,
      "End":      88,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      7,
      "End":      89,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      89,
      "End":      62,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      7,
      "End":      90,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      90,
      "End":      42,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      91,
      "End":      92,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      93,
      "End":      94,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      97,
      "End":      98,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      7,
      "End":      100,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      100,
      "End":      55,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      100,
      "End":      57,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      100,
      "End":      70,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      100,
      "End":      76,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      100,
      "End":      99,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      99,
      "End":      78,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      99,
      "End":      80,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      99,
      "End":      91,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      99,
      "End":      93,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      99,
      "End":      95,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      99,
      "End":      97,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      101,
      "End":      102,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      43,
      "End":      101,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      104,
      "End":      105,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      108,
      "End":      109,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      99,
      "End":      108,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      43,
      "End":      110,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      110,
      "End":      111,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      112,
      "End":      114,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      112,
      "End":      115,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      112,
      "End":      116,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      114,
      "End":      41,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      115,
      "End":      117,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      116,
      "End":      118,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      118,
      "End":      9,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      117,
      "End":      9,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      41,
      "End":      9,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      38,
      "End":      119,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      119,
      "End":      112,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      112,
      "End":      120,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      120,
      "End":      121,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      121,
      "End":      9,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      52,
      "End":      123,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      123,
      "End":      124,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      126,
      "End":      127,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      99,
      "End":      126,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      95,
      "End":      128,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      128,
      "End":      129,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      129,
      "End":      130,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      130,
      "End":      96,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      72,
      "End":      132,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      72,
      "End":      133,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      132,
      "End":      134,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      133,
      "End":      135,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      61,
      "End":      136,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      136,
      "End":      137,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      136,
      "End":      138,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      136,
      "End":      139,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      136,
      "End":      140,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      136,
      "End":      141,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      136,
      "End":      142,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      136,
      "End":      143,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      136,
      "End":      144,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      43,
      "End":      154,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      154,
      "End":      155,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      137,
      "End":      145,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      138,
      "End":      146,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      139,
      "End":      147,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      140,
      "End":      148,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      141,
      "End":      149,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      142,
      "End":      150,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      143,
      "End":      151,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      144,
      "End":      152,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      145,
      "End":      156,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      146,
      "End":      156,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      147,
      "End":      156,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      148,
      "End":      156,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      149,
      "End":      156,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      150,
      "End":      156,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      151,
      "End":      156,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      152,
      "End":      156,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      156,
      "End":      157,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      156,
      "End":      158,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      156,
      "End":      159,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      156,
      "End":      160,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      156,
      "End":      161,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      156,
      "End":      162,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      156,
      "End":      163,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      156,
      "End":      164,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      157,
      "End":      165,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      158,
      "End":      166,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      159,
      "End":      167,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      160,
      "End":      168,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      161,
      "End":      169,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      162,
      "End":      170,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      163,
      "End":      171,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      164,
      "End":      172,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      165,
      "End":      60,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      166,
      "End":      60,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      167,
      "End":      60,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      168,
      "End":      60,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      169,
      "End":      60,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      170,
      "End":      60,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      171,
      "End":      60,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      172,
      "End":      60,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      43,
      "End":      173,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      173,
      "End":      174,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      176,
      "End":      177,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      124,
      "End":      125,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      125,
      "End":      175,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      52,
      "End":      184,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      184,
      "End":      185,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      185,
      "End":      186,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      186,
      "End":      187,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      89,
      "End":      188,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      189,
      "End":      190,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      191,
      "End":      193,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      193,
      "End":      192,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      192,
      "End":      194,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      89,
      "End":      196,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      196,
      "End":      195,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      195,
      "End":      192,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      43,
      "End":      197,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      197,
      "End":      198,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      55,
      "End":      56,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      177,
      "End":      200,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      7,
      "End":      205,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      205,
      "End":      178,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      7,
      "End":      206,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      206,
      "End":      207,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      66,
      "End":      211,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      211,
      "End":      104,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      214,
      "End":      215,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      188,
      "End":      193,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      188,
      "End":      216,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      216,
      "End":      189,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      47,
      "End":      217,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      217,
      "End":      218,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      218,
      "End":      219,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      219,
      "End":      7,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      175,
      "End":      220,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      125,
      "End":      220,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      124,
      "End":      220,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      50,
      "End":      220,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      54,
      "End":      220,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      187,
      "End":      220,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      220,
      "End":      217,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      56,
      "End":      221,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      58,
      "End":      221,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      221,
      "End":      217,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      222,
      "End":      221,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      71,
      "End":      222,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      75,
      "End":      222,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      134,
      "End":      222,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      135,
      "End":      222,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      79,
      "End":      223,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      84,
      "End":      223,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      223,
      "End":      222,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      92,
      "End":      225,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      225,
      "End":      224,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      224,
      "End":      218,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      127,
      "End":      224,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      11,
      "End":      226,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      198,
      "End":      226,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      200,
      "End":      217,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      60,
      "End":      226,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      174,
      "End":      226,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      155,
      "End":      226,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      102,
      "End":      226,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      111,
      "End":      226,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      69,
      "End":      226,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      105,
      "End":      226,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      64,
      "End":      226,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      226,
      "End":      217,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      96,
      "End":      229,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      229,
      "End":      224,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      228,
      "End":      224,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      94,
      "End":      228,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      77,
      "End":      227,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      227,
      "End":      222,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      98,
      "End":      230,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      109,
      "End":      231,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      231,
      "End":      224,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      230,
      "End":      224,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      232,
      "End":      176,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      232,
      "End":      44,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      232,
      "End":      49,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      7,
      "End":      232,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      233,
      "End":      234,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      234,
      "End":      235,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      235,
      "End":      7,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      237,
      "End":      226,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      236,
      "End":      237,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      43,
      "End":      238,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      238,
      "End":      236,
      "Nom":      0,
      "Arrow":true    
    }  
  ],
  "Rect.Text":  
  [
    {
      "Type":"TGraphRectText",
      "Rect.Left":      254,
      "Rect.Top":      -48,
      "Rect.Right":      716,
      "Rect.Bottom":      334,
      "FStyle":      1,
      "FColor":      10710818,
      "BStyle":      0,
      "BColor":      14474460,
      "BSize":      1,
      "BCoef":"0,300000011920929",
      "AlignX":      0,
      "AlignY":      -1,
      "AlignRect":false,
      "Text":"Оборудование",
      "Color":      0,
      "Font":"Arial",
      "FontSize":      8,
      "fsBold":false,
      "fsItalic":false,
      "fsUnderline":false    
    },
    {
      "Type":"TGraphRectText",
      "Rect.Left":      254,
      "Rect.Top":      334,
      "Rect.Right":      574,
      "Rect.Bottom":      366,
      "FStyle":      1,
      "FColor":      10710818,
      "BStyle":      0,
      "BColor":      14474460,
      "BSize":      1,
      "BCoef":"0,300000011920929",
      "AlignX":      0,
      "AlignY":      -1,
      "AlignRect":false,
      "Text":"Деньги",
      "Color":      0,
      "Font":"Arial",
      "FontSize":      8,
      "fsBold":false,
      "fsItalic":false,
      "fsUnderline":false    
    },
    {
      "Type":"TGraphRectText",
      "Rect.Left":      254,
      "Rect.Top":      365,
      "Rect.Right":      574,
      "Rect.Bottom":      471,
      "FStyle":      1,
      "FColor":      10710818,
      "BStyle":      0,
      "BColor":      14474460,
      "BSize":      1,
      "BCoef":"0,300000011920929",
      "AlignX":      0,
      "AlignY":      -1,
      "AlignRect":false,
      "Text":"Артефакты",
      "Color":      0,
      "Font":"Arial",
      "FontSize":      8,
      "fsBold":false,
      "fsItalic":false,
      "fsUnderline":false    
    },
    {
      "Type":"TGraphRectText",
      "Rect.Left":      254,
      "Rect.Top":      470,
      "Rect.Right":      572,
      "Rect.Bottom":      535,
      "FStyle":      1,
      "FColor":      10710818,
      "BStyle":      0,
      "BColor":      14474460,
      "BSize":      1,
      "BCoef":"0,300000011920929",
      "AlignX":      1,
      "AlignY":      -1,
      "AlignRect":false,
      "Text":"Микромодули и заправка бака  ",
      "Color":      0,
      "Font":"Arial",
      "FontSize":      8,
      "fsBold":false,
      "fsItalic":false,
      "fsUnderline":false    
    },
    {
      "Type":"TGraphRectText",
      "Rect.Left":      253,
      "Rect.Top":      -145,
      "Rect.Right":      716,
      "Rect.Bottom":      -50,
      "FStyle":      1,
      "FColor":      10710818,
      "BStyle":      0,
      "BColor":      14474460,
      "BSize":      1,
      "BCoef":"0,300000011920929",
      "AlignX":      0,
      "AlignY":      -1,
      "AlignRect":false,
      "Text":"Оружие",
      "Color":      0,
      "Font":"Arial",
      "FontSize":      8,
      "fsBold":false,
      "fsItalic":false,
      "fsUnderline":false    
    },
    {
      "Type":"TGraphRectText",
      "Rect.Left":      254,
      "Rect.Top":      535,
      "Rect.Right":      574,
      "Rect.Bottom":      627,
      "FStyle":      1,
      "FColor":      10710818,
      "BStyle":      0,
      "BColor":      14474460,
      "BSize":      1,
      "BCoef":"0,300000011920929",
      "AlignX":      1,
      "AlignY":      -1,
      "AlignRect":false,
      "Text":"Повышение звания  ",
      "Color":      0,
      "Font":"Arial",
      "FontSize":      8,
      "fsBold":false,
      "fsItalic":false,
      "fsUnderline":false    
    },
    {
      "Type":"TGraphRectText",
      "Rect.Left":      252,
      "Rect.Top":      627,
      "Rect.Right":      460,
      "Rect.Bottom":      657,
      "FStyle":      1,
      "FColor":      10710818,
      "BStyle":      0,
      "BColor":      14474460,
      "BSize":      1,
      "BCoef":"0,300000011920929",
      "AlignX":      0,
      "AlignY":      -1,
      "AlignRect":false,
      "Text":"Создание баз",
      "Color":      0,
      "Font":"Arial",
      "FontSize":      8,
      "fsBold":false,
      "fsItalic":false,
      "fsUnderline":false    
    },
    {
      "Type":"TGraphRectText",
      "Rect.Left":      252,
      "Rect.Top":      658,
      "Rect.Right":      460,
      "Rect.Bottom":      701,
      "FStyle":      1,
      "FColor":      10710818,
      "BStyle":      0,
      "BColor":      14474460,
      "BSize":      1,
      "BCoef":"0,300000011920929",
      "AlignX":      0,
      "AlignY":      -1,
      "AlignRect":false,
      "Text":"Создание ЧД",
      "Color":      0,
      "Font":"Arial",
      "FontSize":      8,
      "fsBold":false,
      "fsItalic":false,
      "fsUnderline":false    
    },
    {
      "Type":"TGraphRectText",
      "Rect.Left":      253,
      "Rect.Top":      702,
      "Rect.Right":      460,
      "Rect.Bottom":      746,
      "FStyle":      1,
      "FColor":      10710818,
      "BStyle":      0,
      "BColor":      14474460,
      "BSize":      1,
      "BCoef":"0,300000011920929",
      "AlignX":      0,
      "AlignY":      -1,
      "AlignRect":false,
      "Text":"Ноды",
      "Color":      0,
      "Font":"Arial",
      "FontSize":      8,
      "fsBold":false,
      "fsItalic":false,
      "fsUnderline":false    
    },
    {
      "Type":"TGraphRectText",
      "Rect.Left":      253,
      "Rect.Top":      751,
      "Rect.Right":      459,
      "Rect.Bottom":      795,
      "FStyle":      1,
      "FColor":      10710818,
      "BStyle":      0,
      "BColor":      14474460,
      "BSize":      1,
      "BCoef":"0,300000011920929",
      "AlignX":      0,
      "AlignY":      -1,
      "AlignRect":false,
      "Text":"Создание планеты",
      "Color":      0,
      "Font":"Arial",
      "FontSize":      8,
      "fsBold":false,
      "fsItalic":false,
      "fsUnderline":false    
    },
    {
      "Type":"TGraphRectText",
      "Rect.Left":      254,
      "Rect.Top":      800,
      "Rect.Right":      458,
      "Rect.Bottom":      835,
      "FStyle":      1,
      "FColor":      10710818,
      "BStyle":      0,
      "BColor":      14474460,
      "BSize":      1,
      "BCoef":"0,300000011920929",
      "AlignX":      0,
      "AlignY":      -1,
      "AlignRect":false,
      "Text":"Антидоминатор программы",
      "Color":      0,
      "Font":"Arial",
      "FontSize":      8,
      "fsBold":false,
      "fsItalic":false,
      "fsUnderline":false    
    },
    {
      "Type":"TGraphRectText",
      "Rect.Left":      254,
      "Rect.Top":      837,
      "Rect.Right":      460,
      "Rect.Bottom":      881,
      "FStyle":      1,
      "FColor":      10710818,
      "BStyle":      0,
      "BColor":      14474460,
      "BSize":      1,
      "BCoef":"0,300000011920929",
      "AlignX":      0,
      "AlignY":      -1,
      "AlignRect":false,
      "Text":"Расширение корпуса",
      "Color":      0,
      "Font":"Arial",
      "FontSize":      8,
      "fsBold":false,
      "fsItalic":false,
      "fsUnderline":false    
    },
    {
      "Type":"TGraphRectText",
      "Rect.Left":      254,
      "Rect.Top":      883,
      "Rect.Right":      458,
      "Rect.Bottom":      927,
      "FStyle":      1,
      "FColor":      10710818,
      "BStyle":      0,
      "BColor":      14474460,
      "BSize":      1,
      "BCoef":"0,300000011920929",
      "AlignX":      0,
      "AlignY":      -1,
      "AlignRect":false,
      "Text":"Починка всего оборудования",
      "Color":      0,
      "Font":"Arial",
      "FontSize":      8,
      "fsBold":false,
      "fsItalic":false,
      "fsUnderline":false    
    },
    {
      "Type":"TGraphRectText",
      "Rect.Left":      255,
      "Rect.Top":      929,
      "Rect.Right":      455,
      "Rect.Bottom":      958,
      "FStyle":      1,
      "FColor":      10710818,
      "BStyle":      0,
      "BColor":      14474460,
      "BSize":      1,
      "BCoef":"0,300000011920929",
      "AlignX":      0,
      "AlignY":      -1,
      "AlignRect":false,
      "Text":"Консоль",
      "Color":      0,
      "Font":"Arial",
      "FontSize":      8,
      "fsBold":false,
      "fsItalic":false,
      "fsUnderline":false    
    },
    {
      "Type":"TGraphRectText",
      "Rect.Left":      256,
      "Rect.Top":      961,
      "Rect.Right":      455,
      "Rect.Bottom":      997,
      "FStyle":      1,
      "FColor":      10710818,
      "BStyle":      0,
      "BColor":      14474460,
      "BSize":      1,
      "BCoef":"0,300000011920929",
      "AlignX":      0,
      "AlignY":      -1,
      "AlignRect":false,
      "Text":"Открыть всю карту",
      "Color":      0,
      "Font":"Arial",
      "FontSize":      8,
      "fsBold":false,
      "fsItalic":false,
      "fsUnderline":false    
    },
    {
      "Type":"TGraphRectText",
      "Rect.Left":      251,
      "Rect.Top":      -239,
      "Rect.Right":      713,
      "Rect.Bottom":      -148,
      "FStyle":      1,
      "FColor":      10710818,
      "BStyle":      0,
      "BColor":      14474460,
      "BSize":      1,
      "BCoef":"0,300000011920929",
      "AlignX":      0,
      "AlignY":      -1,
      "AlignRect":false,
      "Text":"Телепортация",
      "Color":      0,
      "Font":"Arial",
      "FontSize":      8,
      "fsBold":false,
      "fsItalic":false,
      "fsUnderline":false    
    },
    {
      "Type":"TGraphRectText",
      "Rect.Left":      251,
      "Rect.Top":      -290,
      "Rect.Right":      712,
      "Rect.Bottom":      -240,
      "FStyle":      1,
      "FColor":      10710818,
      "BStyle":      0,
      "BColor":      14474460,
      "BSize":      1,
      "BCoef":"0,300000011920929",
      "AlignX":      0,
      "AlignY":      -1,
      "AlignRect":false,
      "Text":"Убить пиратский клан",
      "Color":      0,
      "Font":"Arial",
      "FontSize":      8,
      "fsBold":false,
      "fsItalic":false,
      "fsUnderline":false    
    }  
  ],
  "BlockPar.EC.Total.Strings":  83,
  "BlockPar.EC":  
  [
    {
      "#":"100",
      "String":"Военный"    
    },
    {
      "#":"101",
      "String":"Пиратский"    
    },
    {
      "#":"102",
      "String":"Рейнджер"    
    },
    {
      "#":"103",
      "String":"Транспортный"    
    },
    {
      "#":"105",
      "String":"Консоль"    
    },
    {
      "#":"107",
      "String":"На сколько?"    
    },
    {
      "#":"110",
      "String":"Открыть всю карту"    
    },
    {
      "#":"111",
      "String":"Ввести нужный размер"    
    },
    {
      "#":"112",
      "String":"Повысить коалиционное"    
    },
    {
      "#":"113",
      "String":"Повысить пиратское"    
    },
    {
      "#":"114",
      "String":"Стать Бароном"    
    },
    {
      "#":"115",
      "String":"Стать Адмиралом"    
    },
    {
      "#":"116",
      "String":"Какого тех.уровня?"    
    },
    {
      "#":"117",
      "String":"A"    
    },
    {
      "#":"118",
      "String":"B"    
    },
    {
      "#":"119",
      "String":"C"    
    },
    {
      "#":"12",
      "String":"Раса"    
    },
    {
      "#":"120",
      "String":"D"    
    },
    {
      "#":"121",
      "String":"E"    
    },
    {
      "#":"122",
      "String":"F"    
    },
    {
      "#":"123",
      "String":"G"    
    },
    {
      "#":"124",
      "String":"H"    
    },
    {
      "#":"127",
      "String":"Ввести нужное количество"    
    },
    {
      "#":"128",
      "String":"Читерный двигатель"    
    },
    {
      "#":"129",
      "String":"Какой расы?"    
    },
    {
      "#":"13",
      "String":"Малоки"    
    },
    {
      "#":"130",
      "String":"Люди"    
    },
    {
      "#":"132",
      "String":"Пираты"    
    },
    {
      "#":"133",
      "String":"Доминаторы"    
    },
    {
      "#":"134",
      "String":"Неизвестные"    
    },
    {
      "#":"135",
      "String":"Читерный радар"    
    },
    {
      "#":"137",
      "String":"Какое количество?"    
    },
    {
      "#":"138",
      "String":"Какое количество нодов получить физически и на какое пополнить нод-счёт?"    
    },
    {
      "#":"14",
      "String":"Пеленги"    
    },
    {
      "#":"141",
      "String":"Быстрое оборудования для тестинга"    
    },
    {
      "#":"144",
      "String":"Телепортация в другую систему"    
    },
    {
      "#":"146",
      "String":"Куда?"    
    },
    {
      "#":"147",
      "String":"Готово."    
    },
    {
      "#":"148",
      "String":"Никуда я телепортироваться не хочу"    
    },
    {
      "#":"149",
      "String":"Голопроектор, Пульсар, Блинкер (модуль SubSpaceBase)"    
    },
    {
      "#":"150",
      "String":"Убить пиратский клан"    
    },
    {
      "#":"152",
      "String":"Из модуля ExpArts"    
    },
    {
      "#":"153",
      "String":"Из модуля ExpAcryn"    
    },
    {
      "#":"154",
      "String":"<0>"    
    },
    {
      "#":"16",
      "String":"Феяне"    
    },
    {
      "#":"17",
      "String":"Гаальцы"    
    },
    {
      "#":"19",
      "String":"Получить двигатель"    
    },
    {
      "#":"21",
      "String":"Получить сканер"    
    },
    {
      "#":"22",
      "String":"Получить радар"    
    },
    {
      "#":"23",
      "String":"Получить дроид"    
    },
    {
      "#":"24",
      "String":"Получить захват"    
    },
    {
      "#":"27",
      "String":"Какое именно?"    
    },
    {
      "#":"28",
      "String":"Получить оборудование"    
    },
    {
      "#":"29",
      "String":"Получить корпус"    
    },
    {
      "#":"3",
      "String":"DevKit"    
    },
    {
      "#":"30",
      "String":"Получить ГЗП"    
    },
    {
      "#":"33",
      "String":"Получить деньги"    
    },
    {
      "#":"34",
      "String":"Ввести нужную сумму"    
    },
    {
      "#":"37",
      "String":"Получить артефакты"    
    },
    {
      "#":"38",
      "String":"Только Транклюкатора"    
    },
    {
      "#":"4",
      "String":"Функции для тестирования"    
    },
    {
      "#":"43",
      "String":"Заправить бак"    
    },
    {
      "#":"44",
      "String":"Выход"    
    },
    {
      "#":"45",
      "String":"Получить всё сразу"    
    },
    {
      "#":"46",
      "String":"Получить микромодули"    
    },
    {
      "#":"47",
      "String":"Получить оружие"    
    },
    {
      "#":"49",
      "String":"Оригинальное"    
    },
    {
      "#":"54",
      "String":"Повысить звание"    
    },
    {
      "#":"57",
      "String":"Какие именно?"    
    },
    {
      "#":"58",
      "String":"Оригинальные"    
    },
    {
      "#":"61",
      "String":"Создать базы"    
    },
    {
      "#":"63",
      "String":"Создать ЧД"    
    },
    {
      "#":"65",
      "String":"Получить ноды"    
    },
    {
      "#":"74",
      "String":"Создать планету"    
    },
    {
      "#":"75",
      "String":"Загрузить антидоминатор программы"    
    },
    {
      "#":"80",
      "String":"Увеличить размер корпуса"    
    },
    {
      "#":"82",
      "String":"Починить оборудование"    
    },
    {
      "#":"9",
      "String":"Получить бак"    
    },
    {
      "#":"94",
      "String":"Мабокит (Evolution)"    
    },
    {
      "#":"95",
      "String":"Корпус Клещ (Expansion)"    
    },
    {
      "#":"96",
      "String":"ФизГан (Expansion)"    
    },
    {
      "#":"98",
      "String":"Какого типа?"    
    },
    {
      "#":"99",
      "String":"Корпус Тень Империи"    
    }  
  ]
}