{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -484,
  "ViewPos.y":  -206,
  "ScriptName":  "Mod_SR2Reboot",
  "ScriptFileOut":  "H:\\Mod_SR2Reboot.scr",
  "ScriptTextOut":  "H:\\Mod_SR2Reboot.txt",
  "GraphPoint.Count":  55,
  "GraphLink.Count":  32,
  "GraphRectText.Count":  0,
  "Variables.Count":  19,
  "Stars.Count":  1,
  "Planets.Count":  1,
  "Ships.Count":  1,
  "States.Count":  1,
  "Groups.Count":  1,
  "Places.Count":  0,
  "Items.Count":  0,
  "Ethers.Count":  0,
  "Dialogs.Count":  1,
  "DialogMessages.Count":  3,
  "DialogAnswers.Count":  9,
  "Operations.Count":  10,
  "Statements.Count":  8,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "DialogAnswers":      
      [
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  21,
          "#":  28,
          "Msg":  "<tstr4>",
          "AMsg.Num":  "0"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  29,
          "#":  31,
          "Msg":  "",
          "AMsg.Num":  "1"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  27,
          "#":  32,
          "Msg":  "<tstr1>",
          "AMsg.Num":  "2"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  26,
          "#":  33,
          "Msg":  "<tstr1>",
          "AMsg.Num":  "3"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  25,
          "#":  34,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "4"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  24,
          "#":  35,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "5"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  23,
          "#":  36,
          "Msg":  "<tstr3>",
          "AMsg.Num":  "6"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  22,
          "#":  37,
          "Msg":  "<tstr3>",
          "AMsg.Num":  "7"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  48,
          "#":  49,
          "Msg":  "",
          "AMsg.Num":  "8"        
        }      
      ],
      "DialogMessages":      
      [
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  19,
          "#":  20,
          "Msg":  "<tstr0>",
          "DMsg.Num":  "0"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  30,
          "#":  29,
          "Msg":  "<tstr0>",
          "DMsg.Num":  "1"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  43,
          "#":  48,
          "Msg":  "<tstr0>",
          "DMsg.Num":  "2"        
        }      
      ],
      "Dialogs":      
      [
        {
          "Type":  "TDialog",
          "Name":  "BuyNewMM",
          "Pos.x":  420,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  18        
        }      
      ],
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "PlayerGroup",
          "Pos.x":  60,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  3,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  140,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  5,
          "Total.Lines":  1,
          "Code.Type":  "Global",
          "Code":          
          [
              "GRun();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  160,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  6,
          "Total.Lines":  241,
          "Code.Type":  "Init",
          "Code":          
          [
              "//Включаем ТН",
              "AdvancedAdjustmentSet(0, 1);",
              "//И выставляем стандартные для \"Перезагрузки\" значения",
              "//Эти настройки не записываются в конфиг, только в сейв текущей партии",
              "//Настройки сложности доминаторов будут в любом случае выставлены из BlockPirates",
              "AdvancedAdjustmentSet(5, 100); //Активность Коалиции",
              "//AdvancedAdjustmentSet(6, 100); //Число астероидов здесь выставлять уже бесполезно",
              "AdvancedAdjustmentSet(7, 100);",
              "AdvancedAdjustmentSet(8, 0);",
              "AdvancedAdjustmentSet(9, 30);",
              "AdvancedAdjustmentSet(10, 100);",
              "AdvancedAdjustmentSet(11, 100);",
              "AdvancedAdjustmentSet(12, 100);",
              "//Соотношения типов развития планет",
              "AdvancedAdjustmentSet(13, 5);",
              "AdvancedAdjustmentSet(14, 5);",
              "AdvancedAdjustmentSet(15, 5);",
              "//",
              "AdvancedAdjustmentSet(16, 0);",
              "AdvancedAdjustmentSet(17, 100);",
              "AdvancedAdjustmentSet(18, 100);",
              "AdvancedAdjustmentSet(19, 7);",
              "AdvancedAdjustmentSet(20, 0);",
              "AdvancedAdjustmentSet(21, 1); //Можно использовать и чинить оборудование доминаторов на любом ГТУ",
              "AdvancedAdjustmentSet(22, 0);",
              "AdvancedAdjustmentSet(23, 0);",
              "AdvancedAdjustmentSet(24, 1); //Получение Скалы, Болида, Убийцы",
              "AdvancedAdjustmentSet(25, 0);",
              "AdvancedAdjustmentSet(26, 0);",
              "AdvancedAdjustmentSet(27, 0);",
              "AdvancedAdjustmentSet(28, 0);",
              "AdvancedAdjustmentSet(29, 0);",
              "AdvancedAdjustmentSet(30, 0);",
              "AdvancedAdjustmentSet(31, 0);",
              "AdvancedAdjustmentSet(32, 0);",
              "AdvancedAdjustmentSet(33, 0);",
              "AdvancedAdjustmentSet(34, 0);",
              "AdvancedAdjustmentSet(35, 0);",
              "AdvancedAdjustmentSet(36, 1);",
              "AdvancedAdjustmentSet(37, 1);",
              "AdvancedAdjustmentSet(38, 1);",
              "",
              "//Перебираем все незаселёнки со старта и подменяем закопанные на них аЭгисы и Ралсы",
              "for(i = 0; i < GalaxyStars(); i = i + 1)",
              "{",
              "    cur_star = GalaxyStar(i);",
              "    for(j = 0; j < StarPlanets(cur_star); j = j + 1)",
              "    {",
              "        cur_planet = StarPlanets(cur_star, j);",
              "        if(PlanetOwner(cur_planet) != None) continue;",
              "        for(tint1 = PlanetItems(cur_planet) - 1; tint1 >= 0; tint1 = tint1 - 1)",
              "        {",
              "            cur_item = PlanetItems(cur_planet, tint1);",
              "",
              "            if(ItemType(cur_item) == t_ArtPDTurret)",
              "            {",
              "                tdwd1 = CreateArt(RndObject(t_ArtDefToEnergy, t_ArtBlackHole, cur_planet), ItemOwner(cur_item));",
              "                FreeItem(GetItemFromPlanet(cur_planet, tint1));",
              "                AddItemToPlanet(cur_planet, tdwd1);",
              "            }",
              "            else if(ItemType(cur_item) == t_ArtFastRacks)",
              "            {",
              "                tdwd1 = CreateArt(RndObject(t_ArtefactSpeed, t_ArtefactBomb, cur_planet), ItemOwner(cur_item));",
              "                FreeItem(GetItemFromPlanet(cur_planet, tint1));",
              "                AddItemToPlanet(cur_planet, tdwd1);",
              "            }",
              "        }",
              "    }",
              "}",
              "",
              "//Уничтожаем всех флагманов и рейнджеров с корпусом \"Таухито\"",
              "GetRidOfAnachronisms();",
              "function GetRidOfAnachronisms(int types)",
              "{",
              "    i = BuildListOfNewShips(tarr1, lastShipId, types, 1+2+4+8+16, 1, '', '');",
              "    if(i)",
              "    {",
              "        for(i = 0; i < ArrayDim(tarr1); i = i + 1)",
              "        {",
              "            cur_ship = tarr1[i];",
              "            int type = ShipTypeN(cur_ship);",
              "            if(type == t_Kling)",
              "            {",
              "                //Уничтожаем всех берторов и клигов",
              "                int sub_type = ShipSubType(cur_ship);",
              "                if(sub_type > 5)",
              "                {",
              "                    TransferShip(cur_ship, StarPlanets(GalaxyStar(People), 0)); //На Меркурий",
              "                    ShipDestroy(cur_ship, 1);",
              "                    if(sub_type == 6) BuyDomikExtremal(GetShipHomePlanet(cur_ship), 1);",
              "                    continue;",
              "                }",
              "",
              "                //В оригинале КР2 доминаторов сканировать нельзя в принципе",
              "                NoScanToShip(cur_ship, 1);",
              "                ShipAddCustomShipInfo(cur_ship, 'SR2Reboot_DomiksDropLock');",
              "                continue;",
              "            }",
              "            else if(type == t_Warrior)",
              "            {",
              "                if(!ShipSubType(cur_ship)) continue;",
              "                TransferShip(cur_ship, StarPlanets(GalaxyStar(People), 0)); //На Меркурий",
              "                ShipDestroy(cur_ship, 1);",
              "                cur_ship = BuyWarrior(GetShipHomePlanet(cur_ship));",
              "                ShipRefit(cur_ship);",
              "                continue;",
              "            }",
              "            else if(type == t_Ranger)",
              "            {",
              "                if((Id(cur_ship) % 6)) continue;",
              "                if(ShipStatistic(cur_ship, 11) >= 666) continue;",
              "                if(ShipPilotRace(cur_ship) != People) continue;",
              "                TransferShip(cur_ship, StarPlanets(GalaxyStar(People), 0)); //На Меркурий",
              "                ShipDestroy(cur_ship, 1);",
              "            }",
              "        }",
              "    }",
              "    lastShipId = GalaxyShipId();",
              "}",
              "",
              "//Запускается из стейта",
              "function PlayerActCode()",
              "{",
              "    if(ScriptItemActionType(t_OnStep))",
              "    {",
              "        //if(ScriptItemActParam() == 11)",
              "        //{",
              "        if(ShipInNormalSpace(Player()))",
              "        {",
              "            if(ShipOrder(Player()) == 3) //Приказ на прыжок",
              "            {",
              "                if(ItemIsBroken(ShipEqInSlot(Player(), t_Engine)))",
              "                {",
              "                    //Это говно нужно, чтобы сломать сраную ежеходную проверку на валидность дальности прыжка двигателя",
              "                    //Пока игрок летит к точке прыжка это говно каждый ход чекает валидность прыжка и если прыгнуть игрок не может,",
              "                    //подменяет приказ прыжка на приказ движения в точку прыжка",
              "                    ShipSpecialBonuses(Player(), bonJump, ShipSpecialBonuses(Player(), bonJump) + 100500);",
              "                    SetData(1, 2, Player()); //Не должно быть пересечений с маркерами захода на формы из кода ниже",
              "                }",
              "            }",
              "        }",
              "        //}",
              "    }",
              "    else if(ScriptItemActionType(t_OnEnteringForm))",
              "    {",
              "        //Таким нехитрым способом снимаем штраф к дальности прыжка за полом двигателя",
              "        if(CurrentForm() == 'Galaxy')",
              "        {",
              "            dword engine = ShipEqInSlot(Player(), t_Engine);",
              "            if(ItemIsBroken(engine))",
              "            {",
              "                ItemDurability(engine, 1);",
              "                SetData(1, 3, Player());",
              "            }",
              "        }",
              "        else if(CurrentForm() != 'Ship')",
              "        {",
              "            if(ShipInNormalSpace(Player()))",
              "            {",
              "                if(GetData(3, Player()))",
              "                {",
              "                    ItemDurability(ShipEqInSlot(Player(), t_Engine), 0);",
              "                    SetData(0, 3, Player());",
              "                }",
              "            }",
              "        }",
              "    }",
              "    else if(ScriptItemActionType(t_OnLeavingForm))",
              "    {",
              "        if(CurrentForm() == 'Ship')",
              "        {",
              "            if(ShipInNormalSpace(Player()))",
              "            {",
              "                engine = ShipEqInSlot(Player(), t_Engine);",
              "                if(ItemIsBroken(engine))",
              "                {",
              "                    ItemDurability(engine, 1);",
              "                    SetData(1, 3, Player());",
              "                }",
              "            }",
              "        }",
              "    }",
              "    else if(ScriptItemActionType(t_OnGovItemReward))",
              "    {",
              "        dword reward = ScriptItemActObject1();",
              "        if(ItemType(reward) == t_ArtPDTurret)",
              "        {",
              "            GetItemFromShip(Player(), reward);",
              "            dword delete_star = StarNearbyStars(ShipStar(Player()), 1);",
              "            DropItemInSystem(delete_star, reward, 50000, 50000, 50000, 50000);",
              "            StopMovingItem(delete_star, reward);",
              "            ItemDestroy(reward, 1);",
              "",
              "            //Запоминаем свойственные Ракетангу стоимость и размер",
              "            dword temp_art = CreateArt(t_ArtMissileDef, ItemOwner(reward));",
              "            ItemSize(reward, ItemSize(temp_art));",
              "            ItemCost(reward, ItemCost(temp_art));",
              "            FreeItem(temp_art);",
              "",
              "            reward = CreateCustomArt('ArtMissileDef_Custom', ItemSize(reward), ItemCost(reward), ItemOwner(reward));",
              "            AddItemToShip(Player(), reward);",
              "        }",
              "        else if(ItemType(reward) == t_ArtFastRacks)",
              "        {",
              "            GetItemFromShip(Player(), reward);",
              "            delete_star = StarNearbyStars(ShipStar(Player()), 1);",
              "            DropItemInSystem(delete_star, reward, 50000, 50000, 50000, 50000);",
              "            StopMovingItem(delete_star, reward);",
              "            ItemDestroy(reward, 1);",
              "",
              "            //Запоминаем свойственные Навинту стоимость и размер",
              "            temp_art = CreateArt(t_ArtSplinter, ItemOwner(reward));",
              "            ItemSize(reward, ItemSize(temp_art));",
              "            ItemCost(reward, ItemCost(temp_art));",
              "            FreeItem(temp_art);",
              "",
              "            reward = CreateCustomArt('ArtSplinter_Custom', ItemSize(reward), ItemCost(reward), ItemOwner(reward));",
              "            AddItemToShip(Player(), reward);",
              "        }",
              "    }",
              "    else //if(ScriptItemActionType(t_OnABItemDrop))",
              "    {",
              "        reward = ScriptItemActObject1();",
              "        if(ItemType(reward) == t_ArtPDTurret)",
              "        {",
              "            //Запоминаем свойственные Ракетангу стоимость и размер",
              "            temp_art = CreateArt(t_ArtMissileDef, ItemOwner(reward));",
              "            ItemSize(reward, ItemSize(temp_art));",
              "            ItemCost(reward, ItemCost(temp_art));",
              "            FreeItem(temp_art);",
              "        }",
              "        else if(ItemType(reward) == t_ArtFastRacks)",
              "        {",
              "            //Запоминаем свойственные Навинту стоимость и размер",
              "            temp_art = CreateArt(t_ArtSplinter, ItemOwner(reward));",
              "            ItemSize(reward, ItemSize(temp_art));",
              "            ItemCost(reward, ItemCost(temp_art));",
              "            FreeItem(temp_art);",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  10,
          "#":  9,
          "Total.Lines":  24,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Уничтожаем всех рейнджеров с корпусом \"Таухито\"",
              "if(CurTurn() < 666) GetRidOfAnachronisms(1+2+16);",
              "else GetRidOfAnachronisms(1+16);",
              "",
              "//Подменяем аЭгис и Ралс, полученные игроком в ЧД",
              "if(ShipInHole(Player()))",
              "{",
              "    for(i = ShipArts(Player()) - 1; i >= 0; i = i - 1)",
              "    {",
              "        cur_item = ShipArts(Player(), i);",
              "        if(ItemType(cur_item) == t_ArtPDTurret)",
              "        {",
              "            tdwd1 = CreateCustomArt('ArtMissileDef_Custom', ItemSize(cur_item), ItemCost(cur_item), ItemOwner(cur_item));",
              "            FreeItem(GetItemFromShip(Player(), cur_item));",
              "            AddItemToShip(Player(), tdwd1);",
              "        }",
              "        else if(ItemType(cur_item) == t_ArtFastRacks)",
              "        {",
              "            tdwd1 = CreateCustomArt('ArtSplinter_Custom', ItemSize(cur_item), ItemCost(cur_item), ItemOwner(cur_item));",
              "            FreeItem(GetItemFromShip(Player(), cur_item));",
              "            AddItemToShip(Player(), tdwd1);",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  18,
          "#":  19,
          "Total.Lines":  65,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(GetGameOptions('FontDialog') == '0') str DefSplt = '</color>-------------------------------------------------------------';",
              "else if(GetGameOptions('FontDialog') == '1') DefSplt = '</color>------------------------------------------';",
              "else if(GetGameOptions('FontDialog') == '2') DefSplt = '</color>-----------------------------------------';",
              "else DefSplt = '</color>-------------------------------------';",
              "",
              "//Записываем на ЦР инфошку с информацией о приобретённых на станции ММ",
              "if(ShipFindCustomShipInfoByType(cur_ruin, 'RCSoldMMChainInfos') == -1) ShipAddCustomShipInfo(cur_ruin, 'RCSoldMMChainInfos', 'NoShow', 0, 0, 0);",
              "",
              "//Делаем перебор цепочки ММ для всех трёх уровней",
              "//Формируем текст для подстановки в реплику собеседника, а также рассчитываем цены ММ",
              "//1 - ММ первого уровня",
              "//2 - ММ второго уровня",
              "//3 - ММ третьего уровня",
              "tstr0 = '';",
              "ArrayClear(tarr1);",
              "for(i = 1; i <= 3; i = i + 1)",
              "{",
              "    if(i == 1) tint0 = 2;",
              "    else if(i == 2) tint0 = 1;",
              "    else tint0 = 0;",
              "",
              "    //Если ещё не наступил день выдачи ММ из альтернативной цепочки",
              "    if(CurTurn() % 33) tint0 = RuinsMicromoduleChain(cur_ruin, tint0, ShipCustomShipInfoData(cur_ruin, 'RCSoldMMChainInfos', i));",
              "    //Если сегодня как раз такой день",
              "    else tint0 = RuinsMicromoduleChain(cur_ruin, tint0, ShipCustomShipInfoData(cur_ruin, 'RCSoldMMChainInfos', i), 1);",
              "",
              "    ArrayAdd(tarr1, tint0);",
              "",
              "    //Рассчитываем стоимость очередного ММ (по умолчанию как для первого уровня) в нодах (использованы оригинальные формулы)",
              "    j = round(PortionInDiapason(BonusPriority(tint0), 100, 0, 100, 2000));",
              "",
              "    j = Rnd(round(0.8 * j), round(1.2 * j), j + Id(cur_ruin));",
              "",
              "    //Выполняем необходимые округления",
              "    if(i < 3) j = RoundTo(1.0 * j / 1.5, 100, -1);",
              "    else j = RoundTo(1.0 * j / 1.5, 10, -1);",
              "",
              "    //Записываем все полученные стоимости в соответствующие переменные и определяем снижение цены для микромодулей предыдущих уровней",
              "    if(i == 1) tint1 = j;",
              "    //Стоимость ММ второго и третьего уровня не должна превышать половину стоимости ММ предыдущего уровня",
              "    else if(i == 2)",
              "    {",
              "        if(j > tint1 / 2) j = tint1 / 2;",
              "        tint2 = j;",
              "    }",
              "    else",
              "    {",
              "        if(j > tint2 / 2) j = tint2 / 2;",
              "        tint3 = j;",
              "    }",
              "",
              "    //Добавляем в текст название, описанием и стоимость в нодах очередного ММ",
              "    tstr0 = tstr0 + \"<br>\" + DefSplt;",
              "    tstr0 = tstr0 + \"<br>\" + i + Format(CT('FormRuins.RC.TakeNod.RCAnswerMM'), '<Name'+'>', BonusName(tint0)) + \"<br>\" + BonusText(tint0);",
              "    tstr0 = tstr0 + \"<br>\" + '<clr><clrEnd>' + \"<br>\" + Format(CT('FormRuins.RC.TakeNod.RCAnswerMMCost'), '<Count'+'>', j);",
              "",
              "    //Запоминаем текст ответов игрока для выбора приобретаемого ММ",
              "    if(i == 1) tstr1 = '</color>' + Format(CT('FormRuins.RC.TakeNod.PlayerOk'), '<Count'+'>', j, '<Name'+'>', BonusName(tint0));",
              "    else if(i == 2) tstr2 = '</color>' + Format(CT('FormRuins.RC.TakeNod.PlayerOk'), '<Count'+'>', j, '<Name'+'>', BonusName(tint0));",
              "    else tstr3 = '</color>' + Format(CT('FormRuins.RC.TakeNod.PlayerOk'), '<Count'+'>', j, '<Name'+'>', BonusName(tint0));",
              "}",
              "",
              "//Собираем строчки для подстановки",
              "tstr0 = '</color>' + Format(CT('FormRuins.RC.TakeNod.RCAnswerStart'), '<Text'+'>', tstr0, '') + \"<br>\" + DefSplt + \"<br>\" + Format(CT('FormRuins.RC.TakeNod.RCAnswerEnd'), '<BaseNod'+'>', RangerBaseNodes(Player()));",
              "tstr4 = '</color>' + CT('FormRuins.RC.TakeNod.PlayerNo');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  28,
          "#":  30,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr0 = '</color>' + CT('FormRuins.RC.TakeNod.RCAfterPlayerNo');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  32,
          "#":  42,
          "Total.Lines":  11,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Добавляем приобретённый ММ в трюм игрока",
              "AddItemToShip(Player(), CreateMM(tarr1[1]));",
              "//Запоминаем, какой номер ММ из цепочки был продан игроку",
              "tint0 = ShipCustomShipInfoData(cur_ruin, 'RCSoldMMChainInfos', 1) + 1;",
              "if(tint0 > 50) tint0 = 0;",
              "ShipCustomShipInfoData(cur_ruin, 'RCSoldMMChainInfos', 1, tint0);",
              "//Вычитаем ноды со счёта игрока и выводим сообщение об успешной покупке",
              "RangerBaseNodes(Player(), RangerBaseNodes(Player()) - tint1);",
              "Sound('Sound.Sell');",
              "",
              "tstr0 = '</color>' + Format(CT('FormRuins.RC.TakeNod.RCAfterPlayerOk'), '<NodCnt'+'>', tint1, '<Name'+'>', BonusName(tarr1[1]));"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  34,
          "#":  43,
          "Total.Lines":  11,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Добавляем приобретённый ММ в трюм игрока",
              "AddItemToShip(Player(), CreateMM(tarr1[2]));",
              "//Запоминаем, какой номер ММ из цепочки был продан игроку",
              "tint0 = ShipCustomShipInfoData(cur_ruin, 'RCSoldMMChainInfos', 2) + 1;",
              "if(tint0 > 50) tint0 = 0;",
              "ShipCustomShipInfoData(cur_ruin, 'RCSoldMMChainInfos', 2, tint0);",
              "//Вычитаем ноды со счёта игрока и выводим сообщение об успешной покупке",
              "RangerBaseNodes(Player(), RangerBaseNodes(Player()) - tint2);",
              "Sound('Sound.Sell');",
              "",
              "tstr0 = '</color>' + Format(CT('FormRuins.RC.TakeNod.RCAfterPlayerOk'), '<NodCnt'+'>', tint2, '<Name'+'>', BonusName(tarr1[2]));"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  36,
          "#":  44,
          "Total.Lines":  11,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Добавляем приобретённый ММ в трюм игрока",
              "AddItemToShip(Player(), CreateMM(tarr1[3]));",
              "//Запоминаем, какой номер ММ из цепочки был продан игроку",
              "tint0 = ShipCustomShipInfoData(cur_ruin, 'RCSoldMMChainInfos', 3) + 1;",
              "if(tint0 > 50) tint0 = 0;",
              "ShipCustomShipInfoData(cur_ruin, 'RCSoldMMChainInfos', 3, tint0);",
              "//Вычитаем ноды со счёта игрока и выводим сообщение об успешной покупке",
              "RangerBaseNodes(Player(), RangerBaseNodes(Player()) - tint3);",
              "Sound('Sound.Sell');",
              "",
              "tstr0 = '</color>' + Format(CT('FormRuins.RC.TakeNod.RCAfterPlayerOk'), '<NodCnt'+'>', tint3, '<Name'+'>', BonusName(tarr1[3]));"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  180,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  50,
          "Total.Lines":  10,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "cur_ruin = GetShipRuins(Player());",
              "if(cur_ruin)",
              "{",
              "    if(ShipType(cur_ruin) == 'RC')",
              "    {",
              "        //Добавляем подмену оригинального диалога для приобретения новых ММ",
              "        AddDialogBlock(CT('FormRuins.RC.TakeNod.PlayerSend'), 2);",
              "        AddDialogInject('BuyNewMM', '', CT('FormRuins.RC.TakeNod.PlayerSendMod'), 0);",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  60,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  52,
          "Total.Lines":  6,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Выставляется из прикреплённого к стейту акткода",
              "if(GetData(2))",
              "{",
              "    ShipSpecialBonuses(Player(), bonJump, ShipSpecialBonuses(Player(), bonJump) - 100500);",
              "    SetData(0, 2);",
              "}"          
          ]        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "InitPlanet",
          "Pos.x":  60,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  2,
          "Race":  62,
          "Owner":  62,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  60,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  0,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "InitStar",
          "Pos.x":  60,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  1,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "Statements":      
      [
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  200,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  10,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!ShipIsTakeoff(Player())"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -30,
          "Pos.y":  0,
          "Parent":  20,
          "#":  21,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -60,
          "Pos.y":  0,
          "Parent":  20,
          "#":  22,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "RangerBaseNodes(Player()) < tint3"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -80,
          "Pos.y":  0,
          "Parent":  20,
          "#":  23,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "RangerBaseNodes(Player()) >= tint3"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -110,
          "Pos.y":  0,
          "Parent":  20,
          "#":  24,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "RangerBaseNodes(Player()) < tint2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -130,
          "Pos.y":  0,
          "Parent":  20,
          "#":  25,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "RangerBaseNodes(Player()) >= tint2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -160,
          "Pos.y":  0,
          "Parent":  20,
          "#":  26,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "RangerBaseNodes(Player()) < tint1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -180,
          "Pos.y":  0,
          "Parent":  20,
          "#":  27,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "RangerBaseNodes(Player()) >= tint1"          
          ]        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "PlayerState",
          "Pos.x":  60,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  4,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "[t_OnEnteringForm,t_OnLeavingForm,t_OnGovItemReward,t_OnABItemDrop,t_OnStep|11]\r\nPlayerActCode();",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "i",
          "Pos.x":  160,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  7,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "j",
          "Pos.x":  190,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  8,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_star",
          "Pos.x":  230,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  11,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "lastShipId",
          "Pos.x":  230,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  12,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_planet",
          "Pos.x":  230,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  13,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint0",
          "Pos.x":  160,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  14,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ruin",
          "Pos.x":  230,
          "Pos.y":  260,
          "Parent":  -1,
          "#":  15,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ship",
          "Pos.x":  230,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  16,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tarr1",
          "Pos.x":  380,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  17,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr0",
          "Pos.x":  320,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  38,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr2",
          "Pos.x":  320,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  39,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr1",
          "Pos.x":  320,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  40,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr3",
          "Pos.x":  320,
          "Pos.y":  260,
          "Parent":  -1,
          "#":  41,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint1",
          "Pos.x":  160,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  45,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint2",
          "Pos.x":  160,
          "Pos.y":  260,
          "Parent":  -1,
          "#":  46,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint3",
          "Pos.x":  160,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  47,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr4",
          "Pos.x":  320,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  51,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_item",
          "Pos.x":  230,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  53,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tdwd1",
          "Pos.x":  230,
          "Pos.y":  320,
          "Parent":  -1,
          "#":  54,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  3,
      "End":  4,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  3,
      "End":  2,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  2,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  0,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  10,
      "End":  9,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  18,
      "End":  19,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  19,
      "End":  20,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  20,
      "End":  21,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  20,
      "End":  22,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  20,
      "End":  23,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  20,
      "End":  24,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  20,
      "End":  25,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  20,
      "End":  26,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  20,
      "End":  27,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  21,
      "End":  28,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  28,
      "End":  30,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  30,
      "End":  29,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  29,
      "End":  31,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  22,
      "End":  37,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  23,
      "End":  36,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  24,
      "End":  35,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  25,
      "End":  34,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  26,
      "End":  33,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  27,
      "End":  32,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  32,
      "End":  42,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  34,
      "End":  43,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  36,
      "End":  44,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  43,
      "End":  48,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  48,
      "End":  49,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  42,
      "End":  48,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  44,
      "End":  48,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  4,
      "End":  52,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "BlockPar.EC.Total.Strings":  2,
  "BlockPar.EC":  
  [
    {
      "#":  "0",
      "String":  "<br>"    
    },
    {
      "#":  "1",
      "String":  "<0>"    
    }  
  ]
}