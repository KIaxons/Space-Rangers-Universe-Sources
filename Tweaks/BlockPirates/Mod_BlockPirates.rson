{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -608,
  "ViewPos.y":  -162,
  "ScriptName":  "Mod_BlockPirates",
  "ScriptFileOut":  "H:\\Mod_BlockPirates.scr",
  "ScriptTextOut":  "H:\\Mod_BlockPirates.txt",
  "GraphPoint.Count":  7,
  "GraphLink.Count":  4,
  "GraphRectText.Count":  0,
  "Variables.Count":  0,
  "Stars.Count":  1,
  "Planets.Count":  1,
  "Ships.Count":  1,
  "States.Count":  1,
  "Groups.Count":  1,
  "Places.Count":  0,
  "Items.Count":  0,
  "Ethers.Count":  0,
  "Dialogs.Count":  0,
  "DialogMessages.Count":  0,
  "DialogAnswers.Count":  0,
  "Operations.Count":  2,
  "Statements.Count":  0,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "PlayerGroup",
          "Pos.x":  60,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  3,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  90,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  5,
          "Total.Lines":  111,
          "Code.Type":  "Init",
          "Code":          
          [
              "//Переносим выбранную сложность пиратов в сложность доминаторов",
              "int i = GalaxyDiffLevels(0);",
              "AdvancedAdjustmentSet(1, i);",
              "AdvancedAdjustmentSet(2, i);",
              "AdvancedAdjustmentSet(3, i);",
              "//Агрессивность пиратов будет зависеть от общей сложности, хотя при их отключении это не суть важно",
              "AdvancedAdjustmentSet(4, GalaxyDiffLevels());",
              "",
              "//Если ТН отключены и другие не активируют их принудительно",
              "if(!AdvancedAdjustmentSet(0, -1) && !CurrentMods('Tweaks\\SR2Reboot') && !CurrentMods('Tweaks\\SR2Dominators'))",
              "{",
              "    //Включаем ТН",
              "    AdvancedAdjustmentSet(0, 1);",
              "",
              "    //И выставляем стандартные значения, словно ТН не включён",
              "    //Эти настройки не записываются в конфиг, только в сейв текущей партии",
              "    AdvancedAdjustmentSet(5, 100);",
              "    //AdvancedAdjustmentSet(6, 100); //Число астероидов здесь выставлять уже бесполезно",
              "    AdvancedAdjustmentSet(7, 100);",
              "    AdvancedAdjustmentSet(8, 0);",
              "    AdvancedAdjustmentSet(9, 30);",
              "    AdvancedAdjustmentSet(10, 100);",
              "    AdvancedAdjustmentSet(11, 100);",
              "    AdvancedAdjustmentSet(12, 100);",
              "    //Соотношения типов развития планет",
              "    AdvancedAdjustmentSet(13, 5);",
              "    AdvancedAdjustmentSet(14, 5);",
              "    AdvancedAdjustmentSet(15, 5);",
              "    //",
              "    AdvancedAdjustmentSet(16, 0);",
              "    AdvancedAdjustmentSet(17, 100);",
              "    AdvancedAdjustmentSet(18, 100);",
              "    AdvancedAdjustmentSet(19, 7);",
              "    AdvancedAdjustmentSet(20, 0);",
              "    AdvancedAdjustmentSet(21, 0);",
              "    AdvancedAdjustmentSet(22, 0);",
              "    AdvancedAdjustmentSet(23, 0);",
              "    AdvancedAdjustmentSet(24, 0);",
              "    AdvancedAdjustmentSet(25, 0);",
              "    AdvancedAdjustmentSet(26, 0);",
              "    AdvancedAdjustmentSet(27, 0);",
              "    AdvancedAdjustmentSet(28, 0);",
              "    AdvancedAdjustmentSet(29, 0);",
              "    AdvancedAdjustmentSet(30, 0);",
              "    AdvancedAdjustmentSet(31, 0);",
              "    AdvancedAdjustmentSet(32, 0);",
              "    AdvancedAdjustmentSet(33, 0);",
              "    AdvancedAdjustmentSet(34, 0);",
              "    AdvancedAdjustmentSet(35, 0);",
              "    AdvancedAdjustmentSet(36, 0);",
              "    AdvancedAdjustmentSet(37, 0);",
              "    AdvancedAdjustmentSet(38, 0);",
              "}",
              "",
              "for(i = 0; i < GalaxyStars(); i = i + 1)",
              "{",
              "    dword cur_star = GalaxyStar(i);",
              "",
              "    if(StarOwner(cur_star) != 2) continue;",
              "",
              "    //Удаляем из системы все доминионы",
              "    while(StarRuins(cur_star, 'CB'))",
              "    {",
              "        dword cur_ruin = StarRuins(cur_star, 'CB');",
              "        ShipDestroy(cur_ruin, 1);",
              "    }",
              "",
              "    //Уничтожаем все пиратские корабли в пиратских системах",
              "    for(int j = 0; j < StarShips(cur_star); j = j + 1)",
              "    {",
              "        dword cur_ship = StarShips(cur_star, j);",
              "        if(ShipTypeN(cur_ship) != t_Pirate) continue;",
              "        OrderNone(cur_ship);",
              "        OrderLock(cur_ship, 1);",
              "        ShipDestroy(cur_ship, 1);",
              "    }",
              "",
              "    //Перебираем все пиратские планеты и возвращаем их на сторону Коалиции,",
              "    //а также докупаем на них военных, чтобы те обеспечили захват системы",
              "    for(j = 0; j < StarPlanets(cur_star); j = j + 1)",
              "    {",
              "        dword cur_planet = StarPlanets(cur_star, j);",
              "        if(PlanetOwner(cur_planet) == None) continue;",
              "        PlanetOwner(cur_planet, PlanetRace(cur_planet));",
              "        BuyWarrior(cur_planet);",
              "    }",
              "}",
              "",
              "//Как можем маскируем большой размер сектора со скрытым пиратским под его естественный размер",
              "dword pirate_star = PlanetToStar(PlanetPirateClan());",
              "dword cur_sector = GetSectorAdjacentToDicea();",
              "dword target_star;",
              "int min_dist = 1000000;",
              "for(i = 0; i < ConStars(cur_sector); i = i + 1)",
              "{",
              "    cur_star = ConStar(cur_sector, i);",
              "    j = Dist2Star(cur_star, pirate_star);",
              "    if(j >= min_dist) continue;",
              "",
              "    target_star = cur_star;",
              "    min_dist = j;",
              "}",
              "CoordX(target_star, CoordX(pirate_star));",
              "CoordY(target_star, CoordY(pirate_star));",
              "",
              "dword pirate_sector = StarToCon(PlanetToStar(PlanetPirateClan()));",
              "CoordX(ConStar(pirate_sector, 0), 500);",
              "CoordX(ConStar(pirate_sector, 1), 500);",
              "",
              "//Под конец выставляем сценарий пиратской концовки \"Коалиция спасена от пиратов\"",
              "PirateWin(3);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  110,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  6,
          "Total.Lines":  9,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "dword cur_ruin = GetShipRuins(Player());",
              "if(cur_ruin)",
              "{",
              "    if(ShipType(cur_ruin) == 'RC')",
              "    {",
              "        //Блочим вопрос игрока \"Как я могу помочь Коалиции в борьбе с пиратами?\"",
              "        AddDialogBlock(CT('FormRuins.RC.PirateClan.PlayerSend'), 2);",
              "    }",
              "}"          
          ]        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "InitPlanet",
          "Pos.x":  60,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  2,
          "Race":  62,
          "Owner":  62,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  60,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  0,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "InitStar",
          "Pos.x":  60,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  1,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "PlayerState",
          "Pos.x":  60,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  4,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  3,
      "End":  4,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  3,
      "End":  2,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  2,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  0,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "BlockPar.EC.Total.Strings":  0,
  "BlockPar.EC":  
  [
  
  ]
}