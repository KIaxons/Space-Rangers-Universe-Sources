{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -627,
  "ViewPos.y":  -186,
  "ScriptName":  "Mod_ExtraArtSlots",
  "ScriptFileOut":  "H:\\Mod_ExtraArtSlots.scr",
  "ScriptTextOut":  "H:\\Mod_ExtraArtSlots.txt",
  "GraphPoint.Count":  7,
  "GraphLink.Count":  4,
  "GraphRectText.Count":  0,
  "Variables.Count":  0,
  "Stars.Count":  1,
  "Planets.Count":  1,
  "Ships.Count":  1,
  "States.Count":  1,
  "Groups.Count":  1,
  "Places.Count":  0,
  "Items.Count":  0,
  "Ethers.Count":  0,
  "Dialogs.Count":  0,
  "DialogMessages.Count":  0,
  "DialogAnswers.Count":  0,
  "Operations.Count":  2,
  "Statements.Count":  0,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "PlayerGroup",
          "Pos.x":  60,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  3,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  90,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  5,
          "Total.Lines":  1,
          "Code.Type":  "Global",
          "Code":          
          [
              "GRun();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  110,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  6,
          "Total.Lines":  211,
          "Code.Type":  "Init",
          "Code":          
          [
              "//Иначе оверрайд не раздуплит, что там 1 по умолчанию",
              "InterfaceText('Ship', 'ArtSlotsChoosedSet', 1);",
              "InterfaceText('Ship', 'ArtSlotsChoosedPlayerSet', 1);",
              "InterfaceText('Scaner', 'ArtSlotsChoosedSet', 1);",
              "InterfaceText('Scaner', 'ArtSlotsChoosedPlayerSet', 1);",
              "",
              "function PlayerActCode() //t_OnEnteringForm, t_OnEnteringOtherShip, t_OnReEnteringForm, t_OnReEnteringOtherShip, t_OnScan, t_OnPlayerChangeHull",
              "{",
              "    if(ScriptItemActionType(t_OnReEnteringForm) || ScriptItemActionType(t_OnReEnteringOtherShip))",
              "    {",
              "        str form = CurrentForm();",
              "        dword ship = FormCurShip();",
              "        DisableAll(form);",
              "        int slots_total = ShipSlots(ship, 2);",
              "        int art_slot_sets = RoundTo(0.25 * slots_total, 1, 1);",
              "        int choosed_set = min(InterfaceText(form, 'ArtSlotsChoosedSet'), art_slot_sets);",
              "",
              "        if(art_slot_sets >= 4)",
              "        {",
              "            InterfaceState(form, 'ArtSlotsSet1_Image', 1);",
              "            InterfaceImage(form, 'ArtSlotsSet1_Image', 'Alpha,Bm.FormShip2.ArtSlotsSet1_Image' + CheckArtSetState(ship, 1, 4));",
              "            InterfaceState(form, 'ArtSlotsSet2_Image', 1);",
              "            InterfaceImage(form, 'ArtSlotsSet2_Image', 'Alpha,Bm.FormShip2.ArtSlotsSet2_Image' + CheckArtSetState(ship, 5, 8));",
              "            InterfaceState(form, 'ArtSlotsSet3_Image', 1);",
              "            InterfaceImage(form, 'ArtSlotsSet3_Image', 'Alpha,Bm.FormShip2.ArtSlotsSet3_Image' + CheckArtSetState(ship, 9, 12));",
              "            InterfaceState(form, 'ArtSlotsSet4_Image', 1);",
              "            InterfaceImage(form, 'ArtSlotsSet4_Image', 'Alpha,Bm.FormShip2.ArtSlotsSet4_Image' + CheckArtSetState(ship, 13, slots_total));",
              "",
              "            InterfaceState(form, 'ArtSlotsSet1_Button', 1);",
              "            InterfaceState(form, 'ArtSlotsSet2_Button', 1);",
              "            InterfaceState(form, 'ArtSlotsSet3_Button', 1);",
              "            InterfaceState(form, 'ArtSlotsSet4_Button', 1);",
              "",
              "            InterfaceState(form, 'ArtSlotsSet' + choosed_set, 1);",
              "            InterfacePos(form, 'ArtSlotsSet' + choosed_set, 0, 0, 1);",
              "            InterfaceState(form, 'ArtSlotsSet' + choosed_set + '_Button', 2); //При обновлении формы лок с кнопок автоматически сбрасывается",
              "        }",
              "        else if(art_slot_sets >= 3)",
              "        {",
              "            InterfaceState(form, 'ArtSlotsSet1_Image', 1);",
              "            InterfaceImage(form, 'ArtSlotsSet1_Image', 'Alpha,Bm.FormShip2.ArtSlotsSet1_Image' + CheckArtSetState(ship, 1, 4));",
              "            InterfaceState(form, 'ArtSlotsSet2_Image', 1);",
              "            InterfaceImage(form, 'ArtSlotsSet2_Image', 'Alpha,Bm.FormShip2.ArtSlotsSet2_Image' + CheckArtSetState(ship, 5, 8));",
              "            InterfaceState(form, 'ArtSlotsSet3_Image', 1);",
              "            InterfaceImage(form, 'ArtSlotsSet3_Image', 'Alpha,Bm.FormShip2.ArtSlotsSet3_Image' + CheckArtSetState(ship, 9, slots_total));",
              "",
              "            InterfaceState(form, 'ArtSlotsSet1_Button', 1);",
              "            InterfaceState(form, 'ArtSlotsSet2_Button', 1);",
              "            InterfaceState(form, 'ArtSlotsSet3_Button', 1);",
              "",
              "            InterfaceState(form, 'ArtSlotsSet' + choosed_set, 1);",
              "            InterfacePos(form, 'ArtSlotsSet' + choosed_set, 0, 0, 1);",
              "            InterfaceState(form, 'ArtSlotsSet' + choosed_set + '_Button', 2); //При обновлении формы лок с кнопок автоматически сбрасывается",
              "        }",
              "        else if(art_slot_sets >= 2)",
              "        {",
              "            InterfaceState(form, 'ArtSlotsSet1_Image', 1);",
              "            InterfaceImage(form, 'ArtSlotsSet1_Image', 'Alpha,Bm.FormShip2.ArtSlotsSet1_Image' + CheckArtSetState(ship, 1, 4));",
              "            InterfaceState(form, 'ArtSlotsSet2_Image', 1);",
              "            InterfaceImage(form, 'ArtSlotsSet2_Image', 'Alpha,Bm.FormShip2.ArtSlotsSet2_Image' + CheckArtSetState(ship, 5, slots_total));",
              "",
              "            InterfaceState(form, 'ArtSlotsSet1_Button', 1);",
              "            InterfaceState(form, 'ArtSlotsSet2_Button', 1);",
              "",
              "            InterfaceState(form, 'ArtSlotsSet' + choosed_set, 1);",
              "            InterfacePos(form, 'ArtSlotsSet' + choosed_set, 0, 0, 1);",
              "            InterfaceState(form, 'ArtSlotsSet' + choosed_set + '_Button', 2); //При обновлении формы лок с кнопок автоматически сбрасывается",
              "        }",
              "        else InterfaceState(form, 'ArtSlotsSet1', 1);",
              "    }",
              "    else if(ScriptItemActionType(t_OnPlayerChangeHull))",
              "    {",
              "        if(IsPlayer(FormCurShip()))",
              "        {",
              "            InterfaceText('Ship', 'ArtSlotsChoosedSet', 1);",
              "            InterfaceText('Ship', 'ArtSlotsChoosedPlayerSet', 1);",
              "        }",
              "    }",
              "    else //if(ScriptItemActionType(t_OnEnteringForm) || ScriptItemActionType(t_OnEnteringOtherShip) || ScriptItemActionType(t_OnScan))",
              "    {",
              "        form = CurrentForm();",
              "        if(form == 'Ship' || form == 'Scaner')",
              "        {",
              "            ship = FormCurShip();",
              "            DisableAll(form);",
              "            slots_total = ShipSlots(ship, 2);",
              "            art_slot_sets = RoundTo(0.25 * slots_total, 1, 1);",
              "",
              "            //По умолчанию для всех кораблей при открытии формы всегда будет выбран первый набор, но конкретно для игрока он запоминается",
              "            if(ship == Player())",
              "            {",
              "                choosed_set = min(InterfaceText(form, 'ArtSlotsChoosedPlayerSet'), art_slot_sets);",
              "                InterfaceText(form, 'ArtSlotsChoosedSet', choosed_set);",
              "                if(IsPlayer(ship)) InterfaceText(form, 'ArtSlotsChoosedPlayerSet', choosed_set); //Бывает полезно для сохранения сета на случай отката числа слотов",
              "            }",
              "            else",
              "            {",
              "                choosed_set = 1;",
              "                InterfaceText(form, 'ArtSlotsChoosedSet', 1);",
              "                if(IsPlayer(ship)) InterfaceText(form, 'ArtSlotsChoosedPlayerSet', 1); //Бывает полезно для сохранения сета на случай отката числа слотов",
              "            }",
              "",
              "            if(art_slot_sets >= 4)",
              "            {",
              "                InterfaceState(form, 'ArtSlotsSet1_Image', 1);",
              "                InterfaceImage(form, 'ArtSlotsSet1_Image', 'Alpha,Bm.FormShip2.ArtSlotsSet1_Image' + CheckArtSetState(ship, 1, 4));",
              "                InterfaceState(form, 'ArtSlotsSet2_Image', 1);",
              "                InterfaceImage(form, 'ArtSlotsSet2_Image', 'Alpha,Bm.FormShip2.ArtSlotsSet2_Image' + CheckArtSetState(ship, 5, 8));",
              "                InterfaceState(form, 'ArtSlotsSet3_Image', 1);",
              "                InterfaceImage(form, 'ArtSlotsSet3_Image', 'Alpha,Bm.FormShip2.ArtSlotsSet3_Image' + CheckArtSetState(ship, 9, 12));",
              "                InterfaceState(form, 'ArtSlotsSet4_Image', 1);",
              "                InterfaceImage(form, 'ArtSlotsSet4_Image', 'Alpha,Bm.FormShip2.ArtSlotsSet4_Image' + CheckArtSetState(ship, 13, slots_total));",
              "",
              "                InterfaceState(form, 'ArtSlotsSet1_Button', 1);",
              "                InterfaceState(form, 'ArtSlotsSet2_Button', 1);",
              "                InterfaceState(form, 'ArtSlotsSet3_Button', 1);",
              "                InterfaceState(form, 'ArtSlotsSet4_Button', 1);",
              "",
              "                InterfaceState(form, 'ArtSlotsSet' + choosed_set, 1);",
              "                InterfacePos(form, 'ArtSlotsSet' + choosed_set, 0, 0, 1);",
              "                InterfaceState(form, 'ArtSlotsSet' + choosed_set + '_Button', 2); //При обновлении формы лок с кнопок автоматически сбрасывается",
              "            }",
              "            else if(art_slot_sets >= 3)",
              "            {",
              "                InterfaceState(form, 'ArtSlotsSet1_Image', 1);",
              "                InterfaceImage(form, 'ArtSlotsSet1_Image', 'Alpha,Bm.FormShip2.ArtSlotsSet1_Image' + CheckArtSetState(ship, 1, 4));",
              "                InterfaceState(form, 'ArtSlotsSet2_Image', 1);",
              "                InterfaceImage(form, 'ArtSlotsSet2_Image', 'Alpha,Bm.FormShip2.ArtSlotsSet2_Image' + CheckArtSetState(ship, 5, 8));",
              "                InterfaceState(form, 'ArtSlotsSet3_Image', 1);",
              "                InterfaceImage(form, 'ArtSlotsSet3_Image', 'Alpha,Bm.FormShip2.ArtSlotsSet3_Image' + CheckArtSetState(ship, 9, slots_total));",
              "",
              "                InterfaceState(form, 'ArtSlotsSet1_Button', 1);",
              "                InterfaceState(form, 'ArtSlotsSet2_Button', 1);",
              "                InterfaceState(form, 'ArtSlotsSet3_Button', 1);",
              "",
              "                InterfaceState(form, 'ArtSlotsSet' + choosed_set, 1);",
              "                InterfacePos(form, 'ArtSlotsSet' + choosed_set, 0, 0, 1);",
              "                InterfaceState(form, 'ArtSlotsSet' + choosed_set + '_Button', 2); //При обновлении формы лок с кнопок автоматически сбрасывается",
              "            }",
              "            else if(art_slot_sets >= 2)",
              "            {",
              "                InterfaceState(form, 'ArtSlotsSet1_Image', 1);",
              "                InterfaceImage(form, 'ArtSlotsSet1_Image', 'Alpha,Bm.FormShip2.ArtSlotsSet1_Image' + CheckArtSetState(ship, 1, 4));",
              "                InterfaceState(form, 'ArtSlotsSet2_Image', 1);",
              "                InterfaceImage(form, 'ArtSlotsSet2_Image', 'Alpha,Bm.FormShip2.ArtSlotsSet2_Image' + CheckArtSetState(ship, 5, slots_total));",
              "",
              "                InterfaceState(form, 'ArtSlotsSet1_Button', 1);",
              "                InterfaceState(form, 'ArtSlotsSet2_Button', 1);",
              "",
              "                InterfaceState(form, 'ArtSlotsSet' + choosed_set, 1);",
              "                InterfacePos(form, 'ArtSlotsSet' + choosed_set, 0, 0, 1);",
              "                InterfaceState(form, 'ArtSlotsSet' + choosed_set + '_Button', 2); //При обновлении формы лок с кнопок автоматически сбрасывается",
              "            }",
              "            else InterfaceState(form, 'ArtSlotsSet1', 1);",
              "        }",
              "    }",
              "}",
              "",
              "function DisableAll(str form)",
              "{",
              "    InterfaceState(form, 'ArtSlotsSet1', 0);",
              "    InterfacePos(form, 'ArtSlotsSet1', 0, -4000, 1);",
              "    InterfaceState(form, 'ArtSlotsSet2', 0);",
              "    InterfacePos(form, 'ArtSlotsSet2', 0, -4000, 1);",
              "    InterfaceState(form, 'ArtSlotsSet3', 0);",
              "    InterfacePos(form, 'ArtSlotsSet3', 0, -4000, 1);",
              "    InterfaceState(form, 'ArtSlotsSet4', 0);",
              "    InterfacePos(form, 'ArtSlotsSet4', 0, -4000, 1);",
              "",
              "    InterfaceState(form, 'ArtSlotsSet1_Image', 0);",
              "    InterfaceState(form, 'ArtSlotsSet2_Image', 0);",
              "    InterfaceState(form, 'ArtSlotsSet3_Image', 0);",
              "    InterfaceState(form, 'ArtSlotsSet4_Image', 0);",
              "",
              "    InterfaceState(form, 'ArtSlotsSet1_Button', 3);",
              "    InterfaceState(form, 'ArtSlotsSet2_Button', 3);",
              "    InterfaceState(form, 'ArtSlotsSet3_Button', 3);",
              "    InterfaceState(form, 'ArtSlotsSet4_Button', 3);",
              "",
              "    InterfaceState(form, 'ArtSlotsSet1_Button', 0);",
              "    UICheckElement(form, 'ArtSlotsSet1_Button', 'IsDown', 0);",
              "    InterfaceState(form, 'ArtSlotsSet2_Button', 0);",
              "    UICheckElement(form, 'ArtSlotsSet2_Button', 'IsDown', 0);",
              "    InterfaceState(form, 'ArtSlotsSet3_Button', 0);",
              "    UICheckElement(form, 'ArtSlotsSet3_Button', 'IsDown', 0);",
              "    InterfaceState(form, 'ArtSlotsSet4_Button', 0);",
              "    UICheckElement(form, 'ArtSlotsSet4_Button', 'IsDown', 0);",
              "}",
              "",
              "function CheckArtSetState(dword ship, int from, int to)",
              "{",
              "    str set_state = 'Empty';",
              "    for(int i = from; i <= to; i = i + 1)",
              "    {",
              "        dword art = ShipEqInSlot(ship, t_Artefact, i);",
              "        if(!art) continue;",
              "        if(ItemIsBroken(art))",
              "        {",
              "            set_state = 'Broken';",
              "            break;",
              "        }",
              "        if(ArtefactTypeBoosted(ship, art))",
              "        {",
              "            set_state = 'Boosted';",
              "            continue;",
              "        }",
              "        if(set_state == 'Empty') set_state = 'Normal';",
              "    }",
              "",
              "    result = set_state;",
              "}"          
          ]        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "InitPlanet",
          "Pos.x":  60,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  2,
          "Race":  62,
          "Owner":  62,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  60,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  0,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "InitStar",
          "Pos.x":  60,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  1,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "PlayerState",
          "Pos.x":  60,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  4,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "[t_OnEnteringForm,t_OnEnteringOtherShip,t_OnReEnteringForm,t_OnReEnteringOtherShip,t_OnScan,t_OnPlayerChangeHull|]\r\nPlayerActCode();",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  3,
      "End":  4,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  3,
      "End":  2,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  2,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  0,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "BlockPar.EC.Total.Strings":  0,
  "BlockPar.EC":  
  [
  
  ]
}