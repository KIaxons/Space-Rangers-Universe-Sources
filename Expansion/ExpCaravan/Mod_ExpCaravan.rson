{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -721,
  "ViewPos.y":  -248,
  "ScriptName":  "Mod_ExpCaravan",
  "ScriptFileOut":  "H:\\Mod_ExpCaravan.scr",
  "ScriptTextOut":  "H:\\Mod_ExpCaravan.txt",
  "GraphPoint.Count":  144,
  "GraphLink.Count":  119,
  "GraphRectText.Count":  0,
  "Variables.Count":  28,
  "Stars.Count":  3,
  "Planets.Count":  3,
  "Ships.Count":  1,
  "States.Count":  24,
  "Groups.Count":  4,
  "Places.Count":  5,
  "Items.Count":  3,
  "Ethers.Count":  0,
  "Dialogs.Count":  2,
  "DialogMessages.Count":  1,
  "DialogAnswers.Count":  1,
  "Operations.Count":  23,
  "Statements.Count":  46,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "DialogAnswers":      
      [
        {
          "Type":  "TDialogAnswer",
          "Name":  "fastexit",
          "Pos.x":  90,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  90,
          "Msg":  "Конец связи",
          "AMsg.Num":  "0"        
        }      
      ],
      "DialogMessages":      
      [
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  90,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  95,
          "Msg":  "<tstr>",
          "DMsg.Num":  "0"        
        }      
      ],
      "Dialogs":      
      [
        {
          "Type":  "TDialog",
          "Name":  "Kor_d",
          "Pos.x":  160,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  89        
        },
        {
          "Type":  "TDialog",
          "Name":  "Prot_d",
          "Pos.x":  20,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  91        
        }      
      ],
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "PlayerGroup",
          "Pos.x":  60,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  2,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "Korovan",
          "Pos.x":  -50,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  7,
          "Owner":  62,
          "Group.Type":  16,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "Korovan_Prot",
          "Pos.x":  -220,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  8,
          "Owner":  62,
          "Group.Type":  4,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "Pirates",
          "Pos.x":  -50,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  66,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Items":      
      [
        {
          "Type":  "TItem",
          "Name":  "Cargo_1",
          "Pos.x":  180,
          "Pos.y":  70,
          "Parent":  -1,
          "#":  54,
          "Class":  5,
          "Item.Type":  0,
          "Size":  10,
          "Level":  1,
          "Radius":  150,
          "Owner":  6,
          "Useless":  ""        
        },
        {
          "Type":  "TItem",
          "Name":  "Cargo_2",
          "Pos.x":  180,
          "Pos.y":  90,
          "Parent":  -1,
          "#":  55,
          "Class":  5,
          "Item.Type":  0,
          "Size":  10,
          "Level":  1,
          "Radius":  150,
          "Owner":  6,
          "Useless":  ""        
        },
        {
          "Type":  "TItem",
          "Name":  "Cargo_3",
          "Pos.x":  180,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  56,
          "Class":  5,
          "Item.Type":  0,
          "Size":  10,
          "Level":  1,
          "Radius":  150,
          "Owner":  6,
          "Useless":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  160,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  4,
          "Total.Lines":  6,
          "Code.Type":  "Global",
          "Code":          
          [
              "//Первое событие случиться не раньше, чем через два с половиной года после старта",
              "if(CurTurn() > 1030)",
              "{",
              "    //Событие будет повторяться не чаще, чем раз в три года",
              "    if(CurTurn() - GLastTurnRun(GScriptName) > 912) GRun();",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  200,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  12,
          "Total.Lines":  715,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Значения переменной vScst:",
              "//vScst == -2 - временное значение, препятствующее запуску скрипта в ините",
              "//vScst == -1 - скрипт готов к спавну каравана",
              "//vScst ==  0 - спавнится караван",
              "//vScst ==  1 - караван готов и вылетел",
              "//vScst ==  2 - спавнятся нападающие на караван пираты",
              "",
              "//Скрипт уже проснулся, но караван пока не отправлен и не сформирован",
              "if(vScst == -1)",
              "{",
              "    //Если игрок покинул стартовую (для скрипта) систему, то переводим скрипт в состояние подготовки к запуску каравана",
              "    if(ShipStar(Player()) != PlayerStar) vScst = 0;",
              "}",
              "",
              "//Караван уже в пути (ежеходный обработчик)",
              "if(vScst > 0)",
              "{",
              "    if(GroupCount(Korovan) || GroupCount(Korovan_Prot))",
              "    {",
              "        caravan_was_started = 1;",
              "        //Очищаем массивы с кораблями каравана и атакующими его пиратами",
              "        ArrayClear(groups);",
              "        ArrayClear(attack);",
              "        //Обнуляем маркера атаки игроком кораблей каравана (PK - Player Kill, хотя фактически учитывается даже просто факт нападения)",
              "        PK = 0;",
              "        //И атаки игроком атакующих караван злоумышленников",
              "        PK_pirates = 0;",
              "        for(i = GalaxyEvents() - 1; i >= 0; i = i - 1)",
              "        {",
              "            //Перебираем все сегодняшние эвенты, в которых игрок, его транклюкатор или напарник, уничтожает или помогает в уничтожении корабля",
              "            if(GalaxyEventDate(i) < CurTurn()) break;",
              "            if(GalaxyEventType(i) == 'PlayerKillsShip' ||",
              "               GalaxyEventType(i) == 'PlayerAssistKillsShip' ||",
              "               GalaxyEventType(i) == 'PlayerTranclucatorKillsShip' ||",
              "               GalaxyEventType(i) == 'PlayerTranclucatorAssistKillsShip' ||",
              "               GalaxyEventType(i) == 'PlayerCompanionKillsShip' ||",
              "               GalaxyEventType(i) == 'PlayerCompanionAssistKillsShip')",
              "            {",
              "                //Проверяем, не были ли уничтожены по воле игрока все или некоторые корабли каравана",
              "                if(!PK)",
              "                {",
              "                    for(j = 1; j < ArrayDim(groups_ID); j = j + 1)",
              "                    {",
              "                        if(GalaxyEventData(i, 2) != groups_ID[j]) continue;",
              "                        //Если да, то отношения с текущим сектором (где находится игрок) резко портятся",
              "                        PK = 1;",
              "                        ConChangeRelationToRanger(StarToCon(ShipStar(Player())), Player(), -91);",
              "                        //Также меняем отношение станций, если подключён мод ExpTraitors",
              "                        if(IsScriptActive('Mod_ExpTraitors'))",
              "                        {",
              "                            ChangeRuinsRelationFunFiller['GlobalVariableRelation'] = 0;",
              "                            ChangeRuinsRelationFunFiller['GlobalRelationForAll'] = 0;",
              "                            ChangeRuinsRelationFunFiller['LocalVariableRelation'] = -60;",
              "                            ChangeRuinsRelationFunFiller['LocalRelationForAll'] = 0;",
              "                            ChangeRuinsRelationFunFiller['GlobalRelationForCoalition'] = 0;",
              "                            ChangeRuinsRelationFunFiller['GlobalRelationForPirateClan'] = 0;",
              "                            ChangeRuinsRelationFunFiller['CoalitionMinLimitRelation'] = 0;",
              "                            ChangeRuinsRelationFunFiller['CoalitionMaxLimitRelation'] = 100;",
              "                            ChangeRuinsRelationFunFiller['PirateClanMinLimitRelation'] = 0;",
              "                            ChangeRuinsRelationFunFiller['PirateClanMaxLimitRelation'] = 100;",
              "",
              "                            ChangeRuinsRelationFunFiller['ChangeRuinsRelationToPlayerCallMark'] = 1;",
              "                        }",
              "                        break;",
              "                    }",
              "                }",
              "                //Проверяем, не были ли уничтожены по воле игрока все или некоторые атакующие караван пираты",
              "                if(!PK_pirates && GroupCount(Pirates))",
              "                {",
              "                    for(j = 1; j < ArrayDim(pirates_ID); j = j + 1)",
              "                    {",
              "                        if(GalaxyEventData(i, 2) != pirates_ID[j]) continue;",
              "                        PK_pirates = 1;",
              "                        break;",
              "                    }",
              "                }",
              "            }",
              "        }",
              "        ",
              "        //Заполняем массив с кораблями каравана, если они уцелели",
              "        if(GroupCount(Korovan)) ArrayAdd(groups, GroupToShip(Korovan));",
              "        if(GroupCount(Korovan_Prot))",
              "        {",
              "            for(i = 0; i < GroupCount(Korovan_Prot); i = i + 1) ArrayAdd(groups, GroupShip(Korovan_Prot, i));",
              "        }",
              "        ",
              "        //Перебираем корабли в системе, где находится транспорт из каравана или (если транспорт погиб) его защитники",
              "        if(GroupCount(Korovan)) tdw = ShipStar(GroupToShip(Korovan));",
              "        else tdw = ShipStar(GroupToShip(Korovan_Prot));",
              "        ",
              "        for(i = 0; i < StarShips(tdw); i = i + 1)",
              "        {",
              "            tdw2 = StarShips(tdw, i);",
              "            if(tdw2 == Player()) continue;",
              "            if(ShipTypeN(tdw2) == t_Kling) continue;",
              "            if(ShipTypeN(tdw2) == t_Transport) continue;",
              "            if(ShipTypeN(tdw2) == t_Warrior) continue;",
              "",
              "            //Также исключаем корабли с кастомной фракцией",
              "            if(ShipCustomFaction(tdw2) != '') continue;",
              "",
              "            //Проверяем выбранную для атаки цель пиратских кораблей, рейнджеров или транклюкаторов",
              "            tdw3 = ShipGetBad(tdw2);",
              "            if(!tdw3) continue;",
              "            if(tdw3 == Player()) continue;",
              "",
              "            //Если цель - корабли каравана, то заносим атакующего в массив нападающих",
              "            if(ShipInCurScript(tdw3)) ArrayAdd(attack, tdw2);",
              "        }",
              "        ",
              "        //Если корабли каравана игроком (или его бандой) не уничтожались, то проверяем, не атаковались ли они игроком в принципе",
              "        if(!PK)",
              "        {",
              "            for(i = 1; i < ArrayDim(groups); i = i + 1)",
              "            {",
              "                if(!Hit(groups[i])) continue;",
              "                ",
              "                //И если даже просто атаковались, то отношение с сектором всё равно падает",
              "                PK = 1;",
              "                ConChangeRelationToRanger(StarToCon(ShipStar(Player())), Player(), -91);",
              "",
              "                //На всякий случай гарантированно портим отношение с планетой отправки, а то вдруг она находится в другом секторе",
              "                RelationToRanger(KorovanStart, Player(), 0);",
              "",
              "                //Также меняем отношение станций, если подключён мод ExpTraitors",
              "                if(IsScriptActive('Mod_ExpTraitors'))",
              "                {",
              "                    ChangeRuinsRelationFunFiller['GlobalVariableRelation'] = 0;",
              "                    ChangeRuinsRelationFunFiller['GlobalRelationForAll'] = 0;",
              "                    ChangeRuinsRelationFunFiller['LocalVariableRelation'] = -60;",
              "                    ChangeRuinsRelationFunFiller['LocalRelationForAll'] = 0;",
              "                    ChangeRuinsRelationFunFiller['GlobalRelationForCoalition'] = 0;",
              "                    ChangeRuinsRelationFunFiller['GlobalRelationForPirateClan'] = 0;",
              "                    ChangeRuinsRelationFunFiller['CoalitionMinLimitRelation'] = 0;",
              "                    ChangeRuinsRelationFunFiller['CoalitionMaxLimitRelation'] = 100;",
              "                    ChangeRuinsRelationFunFiller['PirateClanMinLimitRelation'] = 0;",
              "                    ChangeRuinsRelationFunFiller['PirateClanMaxLimitRelation'] = 100;",
              "",
              "                    ChangeRuinsRelationFunFiller['ChangeRuinsRelationToPlayerCallMark'] = 1;",
              "                }",
              "                break;",
              "            }",
              "        }",
              "        ",
              "        //Если игрок таки уничтожал/атаковал корабли каравана, то записываем его в число нападающих",
              "        if(PK)",
              "        {",
              "            ArrayAdd(attack, Player());",
              "            //И увеличиваем отношение с Роджерией, что ведёт к улучшению отношения со всеми пиратскими планетами",
              "            RelationToRanger(PlanetPirateClan(), Player(), RelationToRanger(PlanetPirateClan(), Player()) + 25);",
              "            if(RelationToRanger(PlanetPirateClan(), Player()) > 100) RelationToRanger(PlanetPirateClan(), Player(), 100);",
              "        }",
              "        ",
              "        //Если нападающие на караван игроком (или его бандой) не уничтожались, то проверяем, не атаковались ли они игроком в принципе",
              "        if(!PK_pirates && GroupCount(Pirates))",
              "        {",
              "            for(i = 0; i < GroupCount(Pirates); i = i + 1)",
              "            {",
              "                if(!Hit(GroupShip(Pirates, i))) continue;",
              "                PK_pirates = 1;",
              "                break;",
              "            }",
              "        }",
              "        ",
              "        //Если игрок уничтожал/атаковал корабли нападающих, то отношение нападающих пиратов к игроку становится враждебным",
              "        if(PK_pirates) SetRelationGroup(Pirates, PlayerGroup, 8);",
              "",
              "        //Если в списке нападающих имеется хоть один корабль",
              "        if(ArrayDim(attack) > 1)",
              "        {",
              "            //Определяем нападающего с минимальным количеством HP",
              "            enRad = 100000000;",
              "            for(i = 1; i < ArrayDim(attack); i = i + 1)",
              "            {",
              "                if(Hitpoints(attack[i]) > enRad) continue;",
              "                enRad = Hitpoints(attack[i]);",
              "                tdw = attack[i];",
              "            }",
              "            for(i = 1; i < ArrayDim(groups); i = i + 1)",
              "            {",
              "                //Он становится целью каждого корабля из состава каравана",
              "                ShipSetBad(groups[i], tdw);",
              "                //И сразу вручную переводим на него все их пушки, которые достают до него по радиусу",
              "                for(j = 1; j <= ShipCntWeapon(groups[i]); j = j + 1)",
              "                {",
              "                    tdw2 = ShipWeapon(groups[i], j);",
              "                    if(GetEquipmentStats(tdw2, 2) <= Dist(tdw, groups[i])) WeaponTarget(tdw2, tdw);",
              "                }",
              "            }",
              "        }",
              "        ",
              "        //Если игрок подобрал хоть один контейнер, пока транспорт или военные были ещё живы, то отношение с сектором портится",
              "        if(ItemIn(Cargo_1, Player()) || ItemIn(Cargo_2, Player()) || ItemIn(Cargo_3, Player()))",
              "        {",
              "            ConChangeRelationToRanger(StarToCon(ShipStar(Player())), Player(), -91);",
              "            //На всякий случай гарантированно портим отношение с планетой отправки, а то вдруг она находится в другом секторе",
              "            RelationToRanger(KorovanStart, Player(), 0);",
              "            //Также меняем отношение станций, если подключён мод ExpTraitors",
              "            if(IsScriptActive('Mod_ExpTraitors'))",
              "            {",
              "                ChangeRuinsRelationFunFiller['GlobalVariableRelation'] = 0;",
              "                ChangeRuinsRelationFunFiller['GlobalRelationForAll'] = 0;",
              "                ChangeRuinsRelationFunFiller['LocalVariableRelation'] = -60;",
              "                ChangeRuinsRelationFunFiller['LocalRelationForAll'] = 0;",
              "                ChangeRuinsRelationFunFiller['GlobalRelationForCoalition'] = 0;",
              "                ChangeRuinsRelationFunFiller['GlobalRelationForPirateClan'] = 0;",
              "                ChangeRuinsRelationFunFiller['CoalitionMinLimitRelation'] = 10;",
              "                ChangeRuinsRelationFunFiller['CoalitionMaxLimitRelation'] = 100;",
              "                ChangeRuinsRelationFunFiller['PirateClanMinLimitRelation'] = 10;",
              "                ChangeRuinsRelationFunFiller['PirateClanMaxLimitRelation'] = 100;",
              "",
              "                ChangeRuinsRelationFunFiller['ChangeRuinsRelationToPlayerCallMark'] = 1;",
              "            }",
              "        }",
              "    }",
              "    ",
              "    //Если транспорт или военные из состава каравана прибыли на нужную планету с грузом в трюме",
              "    if(cargoDelivered)",
              "    {",
              "        tdw = KorovanPlanetFinish;",
              "        Inventions_points = 120 * cargoDelivered;",
              "        //Чем более продвинута экономика планеты, на которую прибыл караван, тем меньше штраф к полученным ею очкам исследования",
              "        if(PlanetEco(tdw) == 0) tint = 33 * cargoDelivered;//Аграрная",
              "        else if(PlanetEco(tdw) == 1) tint = 22 * cargoDelivered;//Смешанная",
              "        else if(PlanetEco(tdw) == 2) tint = 11 * cargoDelivered;//Индустриальная",
              "        Inventions_points = Inventions_points - tint;",
              "        //Чем более развита раса планеты, на которую прибыл караван, тем меньше штраф к полученным ею очкам исследования",
              "        if(PlanetRace(tdw) == Maloc) tint = 33 * cargoDelivered;",
              "        else if(PlanetRace(tdw) == Peleng) tint = 26 * cargoDelivered;",
              "        else if(PlanetRace(tdw) == People) tint = 20 * cargoDelivered;",
              "        else if(PlanetRace(tdw) == Fei) tint = 12 * cargoDelivered;",
              "        else if(PlanetRace(tdw) == Gaal) tint = 6 * cargoDelivered;",
              "        Inventions_points = Inventions_points - tint;",
              "        //Также штраф к полученным очкам тем ниже, чем меньше размер данной планеты",
              "        Inventions_points = Inventions_points - round((0.33 * cargoDelivered) * PlanetSize(tdw));",
              "        //Минимальный порог буста составляет 30 очков при полной доставке всех трёх контейнеров",
              "        if(Inventions_points < 10 * cargoDelivered) Inventions_points = 10 * cargoDelivered;",
              "        PlanetBoostInventions(tdw, Inventions_points);",
              "        cargoDelivered = 0;",
              "    }",
              "    ",
              "    //Если никаких кораблей в группах данного скрипта не осталось, то выводим из него и игрока, чем завершаем текущее выполнение скрипта",
              "    if(!GroupCount(Korovan) && !GroupCount(Korovan_Prot) && !GroupCount(Pirates))",
              "    {",
              "        //Сами эти переменные не очистятся",
              "        ScriptItemData(Cargo_1, 1, 0);",
              "        ScriptItemData(Cargo_2, 1, 0);",
              "        ScriptItemData(Cargo_3, 1, 0);",
              "        if(ItemExist(Cargo_1)) ReleaseItemFromScript(Cargo_1);",
              "        if(ItemExist(Cargo_2)) ReleaseItemFromScript(Cargo_2);",
              "        if(ItemExist(Cargo_3)) ReleaseItemFromScript(Cargo_3);",
              "",
              "        caravan_was_started = 0;",
              "        first_assignment_done = 0;",
              "        cargoDelivered = 0;",
              "        cargoStolen = 0;",
              "",
              "        ShipOut(Player());",
              "    }",
              "    ",
              "    //Под конец хода обнуляем проверочную переменную, не дающую военным попытаться выстрелить по одному контейнеру всей толпой (иначе крашнет)",
              "    ShotAtCargo = 0;",
              "}",
              "",
              "//Караван формируется на своей стартовой планете",
              "if(vScst == 0)",
              "{",
              "    //Готовим транспорт",
              "    tdw = BuyTransport(KorovanStart, 0, 1000);",
              "    ArrayAdd(groups_ID, Id(tdw));",
              "    ",
              "    //Устанавливаем размер корпуса транспорта",
              "    ItemSize(ShipItems(tdw, 0), 260 * GalaxyTechLevel() + round(0.60 * GalaxyDiffLevels()) + Rnd(-27, 53));",
              "    HullHP(tdw, ItemSize(ShipItems(tdw, 0)));",
              "    Chameleon(tdw);",
              "    ",
              "    tint = GalaxyTechLevel() + 1;",
              "    //Сразу создаём и помещаем в транспорт груз",
              "    cargoSize1 = 27 * GalaxyTechLevel() + round(0.10 * GalaxyDiffLevels()) + Rnd(-7, 9);",
              "    tdw2 = CreateQuestItem('ExpCaravan_CargoBox', PlanetRace(KorovanStart));",
              "    ItemSize(tdw2, cargoSize1);",
              "    ItemCost(tdw2, ItemCost(tdw2) * 2 * (sqr(tint) * tint) / round(0.085 * GalaxyDiffLevels(7)));",
              "    LinkItemToScript(tdw2, Cargo_1);",
              "    CanSellItem(Cargo_1, 1);",
              "    AddItemToShip(tdw, tdw2);",
              "    cargoSize2 = 27 * GalaxyTechLevel() + round(0.10 * GalaxyDiffLevels()) + Rnd(-7, 9);",
              "    tdw2 = CreateQuestItem('ExpCaravan_CargoBox', PlanetRace(KorovanStart));",
              "    ItemSize(tdw2, cargoSize2);",
              "    ItemCost(tdw2, ItemCost(tdw2) * 2 * (sqr(tint) * tint) / round(0.085 * GalaxyDiffLevels(7)));",
              "    LinkItemToScript(tdw2, Cargo_2);",
              "    CanSellItem(Cargo_2, 1);",
              "    AddItemToShip(tdw, tdw2);",
              "    cargoSize3 = 27 * GalaxyTechLevel() + round(0.10 * GalaxyDiffLevels()) + Rnd(-7, 9);",
              "    tdw2 = CreateQuestItem('ExpCaravan_CargoBox', PlanetRace(KorovanStart));",
              "    ItemSize(tdw2, cargoSize3);",
              "    ItemCost(tdw2, ItemCost(tdw2) * 2 * (sqr(tint) * tint) / round(0.085 * GalaxyDiffLevels(7)));",
              "    LinkItemToScript(tdw2, Cargo_3);",
              "    CanSellItem(Cargo_3, 1);",
              "    AddItemToShip(tdw, tdw2);",
              "    ",
              "    //Экипируем транспорт",
              "    if(GetEquipmentStats(tdw2, 5) < 1) ShipSpecialBonuses(tdw, bonSlotDroid, 1);",
              "    if(GetEquipmentStats(tdw2, 7) < 1) ShipSpecialBonuses(tdw, bonSlotDef, 1);",
              "    ShipSpecialBonuses(tdw, bonSlotWeapon, 2);",
              "    ShipSpecialBonuses(tdw, bonSlotArt, 2);",
              "    ",
              "    //Определяем навыки манёвренности",
              "    tint = GalaxyTechLevel() - 1;",
              "    if(tint > 6) tint = 6;",
              "    if(!tint) tint = 1;",
              "    ShipSkill(tdw, 1, tint);",
              "    ",
              "    //И техники",
              "    ShipSkill(tdw, 2, tint - 1);",
              "    ",
              "    //Заставляем транспорт хорошенько закупиться",
              "    ShipRefit(tdw);",
              "    ShipRefit(tdw);",
              "    ShipRefit(tdw);",
              "    ShipRefit(tdw);",
              "    ",
              "    //Гарантированно обеспечиваем транспорт ГЗП и дроидом, если сам он их так и не купил",
              "    if(!ShipEqInSlot(tdw, t_DefGenerator))",
              "    {",
              "        if(ShipOwner(tdw) == 0) tint = Rnd(30, 50);",
              "        else if(ShipOwner(tdw) == 1) tint = Rnd(25, 40);",
              "        else if(ShipOwner(tdw) == 2) tint = Rnd(25, 35);",
              "        else if(ShipOwner(tdw) == 3) tint = Rnd(15, 25);",
              "        else if(ShipOwner(tdw) == 4) tint = Rnd(20, 30);",
              "        tdw2 = CreateEquipment(t_DefGenerator, tint, GalaxyTechLevel(), ShipOwner(tdw));",
              "        AddItemToShip(tdw, tdw2);",
              "        ItemIsInUse(tdw2, tdw, 1);",
              "    }",
              "    if(!ShipEqInSlot(tdw, t_RepairRobot))",
              "    {",
              "        if(ShipOwner(tdw) == 0) tint = Rnd(30, 50);",
              "        else if(ShipOwner(tdw) == 1) tint = Rnd(25, 40);",
              "        else if(ShipOwner(tdw) == 2) tint = Rnd(25, 35);",
              "        else if(ShipOwner(tdw) == 3) tint = Rnd(15, 25);",
              "        else if(ShipOwner(tdw) == 4) tint = Rnd(20, 30);",
              "        tdw2 = CreateEquipment(t_RepairRobot, tint, GalaxyTechLevel(), ShipOwner(tdw));",
              "        AddItemToShip(tdw, tdw2);",
              "        ItemIsInUse(tdw2, tdw, 1);",
              "    }",
              "    ",
              "    //Повышаем уровень отсосного оборудования транспорта до текущего ГТУ",
              "    for(j = ShipItems(tdw); j > 0; j = j - 1)",
              "    {",
              "        tdw2 = ShipItems(tdw, j);",
              "        if(!ItemIsInUse(tdw2)) continue;",
              "        if(ItemType(tdw2) < t_FuelTanks || ItemType(tdw2) > t_DefGenerator) continue;",
              "        if((GalaxyTechLevel() - ItemLevel(tdw2)) >= 2)",
              "        {",
              "            tdw3 = CreateEquipment(ItemType(tdw2), ItemSize(tdw2) + Rnd(10, 15), GalaxyTechLevel(), ItemOwner(tdw2));",
              "            if(~EqSpecial(tdw2)) SpecialToEquipment(EqSpecial(tdw2), tdw3);",
              "            if(~EqModule(tdw2)) ModuleToEquipment(EqModule(tdw2), tdw3);",
              "            ItemLevel(tdw2, GalaxyTechLevel());",
              "            ItemCost(tdw2, ItemCost(tdw3));",
              "            if(Rnd(1, 100) <= 85) NoDropItem(tdw2, 1);",
              "            FreeItem(tdw3);",
              "        }",
              "    }",
              "    ShipImproveItems(tdw, 9);",
              "    ShipRepairEq(tdw);",
              "    ",
              "    //Выдаём транспорту аЭгис",
              "    tdw2 = CreateArt(t_ArtPDTurret, ShipOwner(tdw));",
              "    if(Rnd(1, 100) <= 85) NoDropItem(tdw2, 1);",
              "    AddItemToShip(tdw, tdw2);",
              "    ItemIsInUse(tdw2, tdw, 1);",
              "    ",
              "    //С 60% шансом выдаём один дополнительный артефакт на выбор:",
              "    if(Rnd(1, 100) <= 60)",
              "    {",
              "        tint = Rnd(1, 4);",
              "        //Железные жупи",
              "        if(tint == 1)",
              "        {",
              "            tdw2 = CreateArt(t_ArtefactHull, ShipOwner(tdw));",
              "            if (Rnd(1, 100) <= 65) NoDropItem(tdw2, 1);",
              "            AddItemToShip(tdw, tdw2);",
              "            ItemIsInUse(tdw2, tdw, 1);",
              "        }",
              "        ",
              "        //Дроид младший",
              "        else if(tint == 2)",
              "        {",
              "            tdw2 = CreateArt(t_ArtefactDroid, ShipOwner(tdw));",
              "            if (Rnd(1, 100) <= 65) NoDropItem(tdw2, 1);",
              "            AddItemToShip(tdw, tdw2);",
              "            ItemIsInUse(tdw2, tdw, 1);",
              "        }",
              "        ",
              "        //Поляризатор",
              "        else if(tint == 3)",
              "        {",
              "            tdw2 = CreateArt(t_ArtefactDef, ShipOwner(tdw));",
              "            if(Rnd(1, 100) <= 65) NoDropItem(tdw2, 1);",
              "            AddItemToShip(tdw, tdw2);",
              "            ItemIsInUse(tdw2, tdw, 1);",
              "        }",
              "        ",
              "        //Или ракетанг",
              "        else if(tint == 4)",
              "        {",
              "            tdw2 = CreateArt(t_ArtMissileDef, ShipOwner(tdw));",
              "            if(Rnd(1, 100) <= 65) NoDropItem(tdw2, 1);",
              "            AddItemToShip(tdw, tdw2);",
              "            ItemIsInUse(tdw2, tdw, 1);",
              "        }",
              "    }",
              "    ",
              "    //Устраняем возможный перевес транспорта, накидывая ему недостающее место",
              "    ShipCalcParam(tdw);",
              "    if(ShipFreeSpace(tdw) < 0)",
              "    {",
              "        ItemSize(ShipItems(tdw, 0), ItemSize(ShipItems(tdw, 0)) + abs(ShipFreeSpace(tdw)) + Rnd(1, 5));",
              "        HullHP(tdw, ItemSize(ShipItems(tdw, 0)));",
              "    }",
              "    //Вешаем транспорту инфошку, которая запомнит для военных точное место его смерти (если таковая по дороге случиться)",
              "    ShipAddCustomShipInfo(tdw, 'ExpCaravan_TransportInfos');",
              "    ShipJoin(Korovan, tdw);",
              "",
              "    //Готовим военных (ровно 6 штук)",
              "    for(i = 0; i < 6; i = i + 1)",
              "    {",
              "        tdw = BuyWarrior(KorovanStart, 1000);",
              "        ArrayAdd(groups_ID, Id(tdw));",
              "        //Устанавливаем размер корпуса военного",
              "        ItemSize(ShipItems(tdw, 0), 105 * GalaxyTechLevel() + round(0.30 * GalaxyDiffLevels()) + Rnd(-39, 69));",
              "        if(ItemSize(ShipItems(tdw, 0)) < 220) ItemSize(ShipItems(tdw, 0), 220 + Rnd(-12, 23));",
              "        HullHP(tdw, ItemSize(ShipItems(tdw, 0)));",
              "        Chameleon(tdw);",
              "        tdw2 = ShipItems(tdw, 0);",
              "        if(GetEquipmentStats(tdw2, 1) < 5) ShipSpecialBonuses(tdw, bonSlotWeapon, 5);",
              "        if(GetEquipmentStats(tdw2, 5) < 1) ShipSpecialBonuses(tdw, bonSlotDroid, 1);",
              "        if(GetEquipmentStats(tdw2, 6) < 1) ShipSpecialBonuses(tdw, bonSlotHook, 1);",
              "        if(GetEquipmentStats(tdw2, 7) < 1) ShipSpecialBonuses(tdw, bonSlotDef, 1);",
              "        ShipSpecialBonuses(tdw, bonSlotArt, 2);",
              "        //Определяем навыки точности",
              "        tint = GalaxyTechLevel() - 1;",
              "        tint = tint + Rnd(0, 2);",
              "        if(tint > 6) tint = 6;",
              "        if(!tint) tint = 1;",
              "        ShipSkill(tdw, 0, tint);",
              "        //Манёвренности",
              "        tint = GalaxyTechLevel() - 1;",
              "        tint = tint + Rnd(0, 2);",
              "        if(tint > 6) tint = 6;",
              "        if(!tint) tint = 1;",
              "        ShipSkill(tdw, 1, tint);",
              "        //И техники",
              "        tint = tint - Rnd(1, 3);",
              "        if(tint <= 0) tint = 1;",
              "        ShipSkill(tdw, 2, tint);",
              "        //Заставляем военного хорошенько закупиться",
              "        ShipRefit(tdw);",
              "        ShipRefit(tdw);",
              "        ShipRefit(tdw);",
              "        ShipRefit(tdw);",
              "        //Гарантированно обеспечиваем военных ГЗП, дроидом и захватом, если они сами так и не купили (дебилоиды)",
              "        if (!ShipEqInSlot(tdw, t_DefGenerator))",
              "        {",
              "            if(ShipOwner(tdw) == Maloc) tint = Rnd(30, 50);",
              "            else if(ShipOwner(tdw) == Peleng) tint = Rnd(25, 40);",
              "            else if(ShipOwner(tdw) == People) tint = Rnd(25, 35);",
              "            else if(ShipOwner(tdw) == Fei) tint = Rnd(15, 25);",
              "            else if(ShipOwner(tdw) == Gaal) tint = Rnd(20, 30);",
              "            tdw2 = CreateEquipment(t_DefGenerator, tint, GalaxyTechLevel(), ShipOwner(tdw));",
              "            AddItemToShip(tdw, tdw2);",
              "            ItemIsInUse(tdw2, tdw, 1);",
              "        }",
              "        if (!ShipEqInSlot(tdw, t_RepairRobot))",
              "        {",
              "            if(ShipOwner(tdw) == Maloc) tint = Rnd(30, 50);",
              "            else if(ShipOwner(tdw) == Peleng) tint = Rnd(25, 40);",
              "            else if(ShipOwner(tdw) == People) tint = Rnd(25, 35);",
              "            else if(ShipOwner(tdw) == Fei) tint = Rnd(15, 25);",
              "            else if(ShipOwner(tdw) == Gaal) tint = Rnd(20, 30);",
              "            tdw2 = CreateEquipment(t_RepairRobot, tint, GalaxyTechLevel(), ShipOwner(tdw));",
              "            AddItemToShip(tdw, tdw2);",
              "            ItemIsInUse(tdw2, tdw, 1);",
              "        }",
              "        if (!ShipEqInSlot(tdw, t_CargoHook))",
              "        {",
              "            if(ShipOwner(tdw) == Maloc) tint = Rnd(30, 50);",
              "            else if(ShipOwner(tdw) == Peleng) tint = Rnd(25, 40);",
              "            else if(ShipOwner(tdw) == People) tint = Rnd(25, 35);",
              "            else if(ShipOwner(tdw) == Fei) tint = Rnd(15, 25);",
              "            else if(ShipOwner(tdw) == Gaal) tint = Rnd(20, 30);",
              "            tdw2 = CreateEquipment(t_CargoHook, tint, GalaxyTechLevel(), ShipOwner(tdw));",
              "            AddItemToShip(tdw, tdw2);",
              "            ItemIsInUse(tdw2, tdw, 1);",
              "        }",
              "        //Выдаём военному аЭгис",
              "        tdw2 = CreateArt(t_ArtPDTurret, ShipOwner(tdw));",
              "        if(Rnd(1, 100) <= 95) NoDropItem(tdw2, 1);",
              "        AddItemToShip(tdw, tdw2);",
              "        ItemIsInUse(tdw2, tdw, 1);",
              "        //С 40% шансом выдаём один дополнительный артефакт на выбор:",
              "        if(Rnd(1, 100) <= 40)",
              "        {",
              "            tint = Rnd(1, 4);",
              "            //Железные жупи",
              "            if(tint == 1)",
              "            {",
              "                tdw2 = CreateArt(t_ArtefactHull, ShipOwner(tdw));",
              "                if(Rnd(1, 100) <= 75) NoDropItem(tdw2, 1);",
              "                AddItemToShip(tdw, tdw2);",
              "                ItemIsInUse(tdw2, tdw, 1);",
              "            }",
              "            //Дроид младший",
              "            else if(tint == 2)",
              "            {",
              "                tdw2 = CreateArt(t_ArtefactDroid, ShipOwner(tdw));",
              "                if(Rnd(1, 100) <= 75) NoDropItem(tdw2, 1);",
              "                AddItemToShip(tdw, tdw2);",
              "                ItemIsInUse(tdw2, tdw, 1);",
              "            }",
              "            //Поляризатор",
              "            else if(tint == 3)",
              "            {",
              "                tdw2 = CreateArt(t_ArtefactDef, ShipOwner(tdw));",
              "                if(Rnd(1, 100) <= 75) NoDropItem(tdw2, 1);",
              "                AddItemToShip(tdw, tdw2);",
              "                ItemIsInUse(tdw2, tdw, 1);",
              "            }",
              "            //Или ракетанг",
              "            else if(tint == 4)",
              "            {",
              "                tdw2 = CreateArt(t_ArtMissileDef, ShipOwner(tdw));",
              "                if(Rnd(1, 100) <= 75) NoDropItem(tdw2, 1);",
              "                AddItemToShip(tdw, tdw2);",
              "                ItemIsInUse(tdw2, tdw, 1);",
              "            }",
              "        }",
              "        //Повышаем уровень отсосного оборудования военного до текущего ГТУ",
              "        for(j = ShipItems(tdw); j > 0; j = j - 1)",
              "        {",
              "            tdw2 = ShipItems(tdw, j);",
              "            if(!ItemIsInUse(tdw2)) continue;",
              "            if(ItemType(tdw2) < t_Engine || ItemType(tdw2) > t_DefGenerator) continue;",
              "            if((GalaxyTechLevel() - ItemLevel(tdw2)) >= 2)",
              "            {",
              "                tdw3 = CreateEquipment(ItemType(tdw2), ItemSize(tdw2) + Rnd(7, 12), GalaxyTechLevel(), ItemOwner(tdw2));",
              "                if(~EqSpecial(tdw2)) SpecialToEquipment(EqSpecial(tdw2), tdw3);",
              "                if(~EqModule(tdw2)) ModuleToEquipment(EqModule(tdw2), tdw3);",
              "                ItemLevel(tdw2, GalaxyTechLevel());",
              "                ItemCost(tdw2, ItemCost(tdw3));",
              "                if(Rnd(1, 100) <= 85) NoDropItem(tdw2, 1);",
              "                FreeItem(tdw3);",
              "            }",
              "        }",
              "        //Поднимаем ранг военного до уровня не ниже капитана",
              "        while(ShipRank(tdw) < 3)",
              "        {",
              "            ShipRankPoints(tdw, ShipNextRankPoints(tdw));",
              "            ShipRaiseRank(tdw);",
              "        }",
              "        //Производим улучшение оборудования военного в зависимости от его звания",
              "        if(ShipRank(tdw) == 3) tint = Rnd(9, 10);",
              "        else if(ShipRank(tdw) == 4) tint = Rnd(10, 12);",
              "        else tint = 14;",
              "        ShipImproveItems(tdw, tint);",
              "        ShipRepairEq(tdw);",
              "        //Устраняем возможный перевес военного, накидывая ему недостающее место",
              "        ShipCalcParam(tdw);",
              "        if(ShipFreeSpace(tdw) < 0)",
              "        {",
              "            ItemSize(ShipItems(tdw, 0), ItemSize(ShipItems(tdw, 0)) + abs(ShipFreeSpace(tdw)) + Rnd(1, 5));",
              "            HullHP(tdw, ItemSize(ShipItems(tdw, 0)));",
              "        }",
              "        //Накидываем военному дополнительные невидимые бонусы",
              "        ShipSpecialBonuses(tdw, bonHook, 500);",
              "        ShipSpecialBonuses(tdw, bonWEnergy, GalaxyTechLevel());",
              "        ShipSpecialBonuses(tdw, bonWSplinter, GalaxyTechLevel());",
              "        ShipSpecialBonuses(tdw, bonWMissile, GalaxyTechLevel());",
              "        //Добавляем военным инфошку для возможности делать выстрел по выпавшим из транспорта контейнерам",
              "        ShipAddCustomShipInfo(tdw, 'ExpCaravan_WarriorShotInfos', 'NoShow', 0);",
              "        ShipJoin(Korovan_Prot, tdw);",
              "    }",
              "    //На всякий случай запрещаем военным стрельбу по контейнерам",
              "    //Я рот ебал этого казино, но почему-то на первом ходу после спавна они думают, что контейнеры дропнуты в системе, хотя они в тот момент лежат в транспорте",
              "    ShotAtCargo = 7;",
              "    //Выставляем маркер о готовности каравана к отправке",
              "    vScst = 1;",
              "}",
              "",
              "//Если караван уже находится в пути, то появляются нападающие на него пираты (от 10 до 15)",
              "if(vScst == 1)",
              "{",
              "    if(GroupCount(Korovan))",
              "    {",
              "        if(GroupIn(Korovan, KorovanStarFinish) && ShipInNormalSpace(GroupToShip(Korovan)))",
              "        {",
              "            planetRace = PlanetRace(KorovanPlanetFinish);",
              "            planetOwner = PlanetOwner(KorovanPlanetFinish);",
              "            for(i = 0; i < Rnd(9, 12); i = i + 1)",
              "            {",
              "                //Временно меняем овнера планеты для спавна пиратов разной расы",
              "                tint = Rnd(1, 10);",
              "                if(tint >= 1 && tint <= 3)",
              "                {",
              "                    PlanetOwner(KorovanPlanetFinish, 0);",
              "                    PlanetRace(KorovanPlanetFinish, 0);",
              "                }",
              "                else if(tint >= 4 && tint <= 6)",
              "                {",
              "                    PlanetOwner(KorovanPlanetFinish, 1);",
              "                    PlanetRace(KorovanPlanetFinish, 1);",
              "                }",
              "                else if(tint == 7 || tint == 8)",
              "                {",
              "                    PlanetOwner(KorovanPlanetFinish, 2);",
              "                    PlanetRace(KorovanPlanetFinish, 2);",
              "                }",
              "                else if(tint == 9)",
              "                {",
              "                    PlanetOwner(KorovanPlanetFinish, 3);",
              "                    PlanetRace(KorovanPlanetFinish, 3);",
              "                }",
              "                else if(tint == 10)",
              "                {",
              "                    PlanetOwner(KorovanPlanetFinish, 4);",
              "                    PlanetRace(KorovanPlanetFinish, 4);",
              "                }",
              "                tdw = BuyPirate(KorovanPlanetFinish, 700);",
              "                ArrayAdd(pirates_ID, Id(tdw));",
              "                //Устанавливаем размер корпуса пирата",
              "                ItemSize(ShipItems(tdw, 0), 80 * GalaxyTechLevel() + round(0.30 * GalaxyDiffLevels()) + Rnd(-39, 43));",
              "                if(ItemSize(ShipItems(tdw, 0)) < 220) ItemSize(ShipItems(tdw, 0), 220 + Rnd(-17, 19));",
              "                HullHP(tdw, ItemSize(ShipItems(tdw, 0)));",
              "                Chameleon(tdw);",
              "                //Вводим пирата в пиратский клан",
              "                ShipOwner(tdw, 7);",
              "                //Гарантированно открываем пирату некоторые слоты",
              "                if(GetEquipmentStats(ShipItems(tdw, 0), 1) < 3) ShipSpecialBonuses(tdw, bonSlotWeapon, 3 - GetEquipmentStats(ShipItems(tdw, 0), 1));",
              "                if(GetEquipmentStats(ShipItems(tdw, 0), 6) < 1) ShipSpecialBonuses(tdw, bonSlotHook, 1);",
              "                //Определяем навыки точности",
              "                tint = GalaxyTechLevel() - 1;",
              "                tint = tint + Rnd(0, 2);",
              "                if(tint > 6) tint = 6;",
              "                if(!tint) tint = 1;",
              "                ShipSkill(tdw, 0, tint);",
              "                //И манёвренности",
              "                tint = GalaxyTechLevel() - 1;",
              "                tint = tint + Rnd(0, 2);",
              "                if(tint > 6) tint = 6;",
              "                if(!tint) tint = 1;",
              "                ShipSkill(tdw, 1, tint);",
              "                //Заставляем пирата хорошенько закупиться",
              "                ShipRefit(tdw);",
              "                ShipRefit(tdw);",
              "                ShipRefit(tdw);",
              "                ShipRefit(tdw);",
              "                //Если у пирата отсутствует захват, то добавляем ему его в обязательном порядке",
              "                if(!ShipEqInSlot(tdw, t_CargoHook))",
              "                {",
              "                    tdw2 = CreateEquipment(t_CargoHook, Rnd(25, 40), GalaxyTechLevel(), ItemOwner(ShipItems(tdw, 0)));",
              "                    AddItemToShip(tdw, tdw2);",
              "                    ItemIsInUse(tdw2, tdw, 1);",
              "                }",
              "                //Повышаем уровень самого отсосного оборудования пирата до текущего ГТУ",
              "                for(j = ShipItems(tdw); j > 0; j = j - 1)",
              "                {",
              "                    tdw2 = ShipItems(tdw, j);",
              "                    if(!ItemIsInUse(tdw2)) continue;",
              "                    if(ItemType(tdw2) < t_Engine || ItemType(tdw2) > t_DefGenerator) continue;",
              "                    if((GalaxyTechLevel() - ItemLevel(tdw2)) >= 3)",
              "                    {",
              "                        tdw3 = CreateEquipment(ItemType(tdw2), ItemSize(tdw2) + Rnd(9, 15), GalaxyTechLevel(), ItemOwner(tdw2));",
              "                        if(~EqSpecial(tdw2)) SpecialToEquipment(EqSpecial(tdw2), tdw3);",
              "                        if(~EqModule(tdw2)) ModuleToEquipment(EqModule(tdw2), tdw3);",
              "                        ItemLevel(tdw2, GalaxyTechLevel());",
              "                        ItemCost(tdw2, ItemCost(tdw3));",
              "                        if(Rnd(1, 100) <= 85) NoDropItem(tdw2, 1);",
              "                        FreeItem(tdw3);",
              "                    }",
              "                }",
              "                //Поднимаем ранг пирата до уровня не ниже рейдера",
              "                while (GetShipPirateRank(tdw) < 2)",
              "                {",
              "                    ShipPirateRankPoints(tdw, ShipNextPirateRankPoints(tdw));",
              "                    RaisePirateRank(tdw);",
              "                }",
              "                //Производим улучшение оборудования пирата в зависимости от его звания",
              "                if(GetShipPirateRank(tdw) == 2) tint = Rnd(7, 8);",
              "                else if(GetShipPirateRank(tdw) == 3) tint = Rnd(9, 10);",
              "                else if(GetShipPirateRank(tdw) == 4) tint = Rnd(11, 12);",
              "                else tint = 14;",
              "                ShipImproveItems(tdw, tint);",
              "                //Устраняем возможный перевес пирата, накидывая ему недостающее место",
              "                ShipCalcParam(tdw);",
              "                if(ShipFreeSpace(tdw) < 0)",
              "                {",
              "                    ItemSize(ShipItems(tdw, 0), ItemSize(ShipItems(tdw, 0)) + abs(ShipFreeSpace(tdw)) + Rnd(1, 5));",
              "                    HullHP(tdw, ItemSize(ShipItems(tdw, 0)));",
              "                }",
              "                //Накидываем пирату невидимые бонусы",
              "                ShipSpecialBonuses(tdw, bonHook, 500);",
              "                ShipSpecialBonuses(tdw, bonWEnergy, ShipProtectability(GroupToShip(Korovan)) / 2);",
              "                ShipSpecialBonuses(tdw, bonWSplinter, ShipProtectability(GroupToShip(Korovan)) / 2);",
              "                ShipSpecialBonuses(tdw, bonSpeed, 50 * GalaxyTechLevel());",
              "                ShipRepairEq(tdw);",
              "                ShipJoin(Pirates, tdw);",
              "                MakeShipEnterStar(tdw, KorovanStarFinish, PlayerStar, 1);",
              "            }",
              "            //Возвращаем планете её настоящего владельца",
              "            PlanetRace(KorovanPlanetFinish, planetRace);",
              "            PlanetOwner(KorovanPlanetFinish, planetOwner);",
              "            //Ставим маркер, что пираты готовы",
              "            vScst = 2;",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -30,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  37,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipDestroy(CurShip);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  180,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  47,
          "Total.Lines":  6,
          "Code.Type":  "Init",
          "Code":          
          [
              "groups = newarray(1);",
              "groups_ID = newarray(1);",
              "pirates_ID = newarray(1);",
              "//Имеется 50% вероятность, что скрипт не будет запущен, даже при соблюдении всех условий",
              "if(GCntRun('Mod_ExpCaravan') && Rnd(1, 100) <= 50) vScst = -1;",
              "else vScst = -2;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  120,
          "Pos.y":  -180,
          "Parent":  -1,
          "#":  85,
          "Total.Lines":  8,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Пират сбежал, а если ему повезло, то ещё и прихватил с собой контейнер",
              "if(ShipInHyperSpace(CurShip))",
              "{",
              "    if(ItemIn(Cargo_1, CurShip)) cargoStolen = cargoStolen + 1;",
              "    if(ItemIn(Cargo_2, CurShip)) cargoStolen = cargoStolen + 1;",
              "    if(ItemIn(Cargo_3, CurShip)) cargoStolen = cargoStolen + 1;",
              "    ShipDestroy(CurShip);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -240,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  87,
          "Total.Lines":  6,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Считаем, сколько грузов в итоге довезли до нужной планеты",
              "//(вряд ли транспорт по пути может что-то выкинуть, но мало ли)",
              "if(ItemIn(Cargo_1, CurShip)) cargoDelivered = cargoDelivered + 1;",
              "if(ItemIn(Cargo_2, CurShip)) cargoDelivered = cargoDelivered + 1;",
              "if(ItemIn(Cargo_3, CurShip)) cargoDelivered = cargoDelivered + 1;",
              "ShipDestroy(CurShip);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  160,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  96,
          "Total.Lines":  8,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tdw = GetTalkShip();",
              "if(ShipGetBad(tdw) != Player())",
              "{",
              "    if(RelationToRanger(tdw, Player()) >= 75) tstr = '</color>' + \"Здравствуй, <Player>! Искренне рад встретить тебя на этих бескрайних космических просторах.<br>К сожалению, сейчас совсем нет времени болтать, я очень сильно занят, но честно обещаю пропустить с тобой по кружечке \\\"Махпеллы\\\" как-нибудь в другой раз.\";",
              "    else if(RelationToRanger(tdw, Player()) >= 10 && RelationToRanger(tdw, Player()) < 75) tstr = '</color>' + \"А, это ты, <Player>. Извини, но болтать с тобой мне некогда, поговорим в другой раз.\";",
              "    else tstr = '</color>' + \"Да чтоб у тебя коммуникатор треснул! Проваливай с экрана, <Player>, мне сейчас ну вот совсем не до твоей мерзкой рожи!\";",
              "}",
              "else tstr = '</color>' + \"Да чтоб у тебя коммуникатор треснул! Проваливай с экрана, <Player>, мне сейчас ну вот совсем не до твоей мерзкой рожи!\";"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  98,
          "Total.Lines":  8,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tdw = GetTalkShip();",
              "if(ShipGetBad(tdw) != Player())",
              "{",
              "    if(RelationToRanger(tdw, Player()) >= 75) tstr = '</color>' + \"Здравия желаю, <Player>! Прошу меня простить, но прямо сейчас я нахожусь на задании и не могу отвлекаться.\";",
              "    else if(RelationToRanger(tdw, Player()) >= 10 && RelationToRanger(tdw, Player()) < 75) tstr = '</color>' + \"Эй, а ну не занимай эту частоту! Я выполняю важное задание и у меня сейчас нет времени с тобой трепаться.\";",
              "    else tstr = '</color>' + \"А, проклятый пират! Ну иди-ка сюда! Иди, и я по тебе так вдарю, что к клисанам в соседний рукав улетишь!!!\";",
              "}",
              "else tstr = '</color>' + \"А, проклятый пират! Ну иди-ка сюда! Иди, и я по тебе так вдарю, что к клисанам в соседний рукав улетишь!!!\";"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -200,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  99,
          "Total.Lines":  4,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Транспорт крутиться на месте, ожидая военных",
              "float tflt = pi * (ShipAngle(CurShip) + 90.0) / Rnd(179, 181); //Угол разворота",
              "OrderMove(CurShip, cos(tflt) * 10.0 + CoordX(CurShip), sin(tflt) * 10.0 + CoordY(CurShip));",
              "OrderLock(CurShip, 1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -70,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  101,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "OrderLock(CurShip, 0);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  80,
          "Pos.y":  -90,
          "Parent":  -1,
          "#":  113,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "j = ShipFreeSpace(CurShip);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -150,
          "Pos.y":  20,
          "Parent":  -1,
          "#":  116,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Если систему куда летел караван захватили, то меняем точку назначения на домашнюю систему",
              "ChangeState('W_JumpHome');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -300,
          "Pos.y":  -60,
          "Parent":  -1,
          "#":  119,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ChangeState('W_Home');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -190,
          "Pos.y":  -80,
          "Parent":  -1,
          "#":  120,
          "Total.Lines":  5,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(ShipInHyperSpace(CurShip))",
              "{",
              "    //Если стартовую систему захватили враги и возвращаться военному некуда",
              "    if(StarOwner(PlayerStar)) ShipOut(CurShip);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -220,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  123,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ChangeState('T_LandHome');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -160,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  124,
          "Total.Lines":  5,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(ShipInHyperSpace(CurShip))",
              "{",
              "    //Если стартовую систему захватили враги и возвращаться транспорту некуда",
              "    if(StarOwner(PlayerStar)) ShipOut(CurShip);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -200,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  126,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ChangeState('T_JumpHome');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  137,
          "#":  129,
          "Total.Lines":  68,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Не трогаем корабль, пока он в гипере, а то ещё зависнет там нафиг",
              "if(ShipInHyperSpace(CurShip)) exit;",
              "",
              "//Перебираем все выпавшие грузы и если они всё ещё болтаются в системе, выбираем вариант их \"удаления\"",
              "//(не очень красиво делать перебор и раздавать приказы из логики каждого военного, но быстрее и эффективнее так, чем по отдельности)",
              "for(i = 1; i <= 3; i = i + 1)",
              "{",
              "    cargo_num = GetValueFromScript('Mod_ExpCaravan', 'Cargo_' + i);",
              "    if(ScriptItemData(cargo_num, 1)) continue; //Пропускаем грузы, которые кто-то из военных собирается подобрать",
              "",
              "    if(i == 1) cargo = ScriptItemToItem(Cargo_1);",
              "    else if(i == 2) cargo = ScriptItemToItem(Cargo_2);",
              "    else cargo = ScriptItemToItem(Cargo_3);",
              "    if(!cargo) continue;",
              "",
              "    if(ItemIn(cargo, ShipStar(CurShip)))",
              "    {",
              "        for(j = 0; j < GroupCount(Korovan_Prot); j = j + 1)",
              "        {",
              "            ship = GroupShip(Korovan_Prot, j);",
              "            //Не позволяем военному назначить себе в приказы подбора и уничтожения уже назначенные туда номера грузов",
              "            if(GetData(0, ship) == i || (GetData(1, ship) & (1 << i)) || GetData(1, ship) >= (2+4+8)) continue; //Если данный военный уже занят \"обработкой\" текущего груза",
              "            if(ShipFreeSpace(ship) >= ItemSize(cargo) && !GetData(0, ship)) //Отдаём приказ поднять груз, если под него есть место в трюме (и если такой приказ ещё не был кораблём получен)",
              "            {",
              "                //Ставим маркер о том, что данный военный был выбран для подбора выпавшего груза",
              "                SetData(i, 0, ship); //Data0 - номер груза, который военный должен подобрать",
              "                ScriptItemData(cargo_num, 1, 1); //Маркер, что данный предмет хочет подобрать кто-то из военных",
              "                //После взрыва транспорта не раскидываем военных по их стейтам сразу же, ожидая, пока все получат наметки приказов",
              "                //Это нужно, чтобы стреляющие по грузу военные не получили приказ выстрела раньше, чем все \"подбирающие\" получат свои маркеры",
              "                if(first_assignment_done) ChangeState('W_Grab' + i, ship);",
              "                break; //\"Подбиратель\" уже назначен, дальнейший перебор приведёт только к \"борьбе\" за контейнер",
              "            }",
              "            else //Иначе отдаём приказ расстрелять груз (акткод нужен для контроля выстрела по предмету)",
              "            {",
              "                //Ставим маркер о том, что данный военный был выбран для уничтожения выпавшего груза",
              "                SetData(GetData(1, ship) + (1 << i), 1, ship); //Data1 - номера грузов в виде сета, которые данный военный должен расстрелять",
              "                //(предположительно, каждый военный по итогу запишет себе в \"расстрельный список\" сразу все выпавшие контейнеры, однако маркера успешно сбрасываются на проверках, так что это не страшно)",
              "                //После взрыва транспорта не раскидываем военных по их стейтам сразу же, ожидая, пока все получат наметки приказов",
              "                //Это нужно, чтобы стреляющие по грузу военные не получили приказ выстрела раньше, чем все \"подбирающие\" получат свои",
              "                if(first_assignment_done)",
              "                {",
              "                    if(!GetData(0, ship)) ChangeState('W_MoveAround', ship);",
              "                    else ChangeState('W_Grab' + GetData(0, ship), ship);",
              "                }",
              "            }",
              "        }",
              "    }",
              "}",
              "//Первое распределение военных по стейтам",
              "if(!first_assignment_done)",
              "{",
              "    for(j = 0; j < GroupCount(Korovan_Prot); j = j + 1)",
              "    {",
              "        ship = GroupShip(Korovan_Prot, j);",
              "        if(GetData(0, ship)) ChangeState('W_Grab' + GetData(0, ship), ship);",
              "        else ChangeState('W_MoveAround', ship);",
              "    }",
              "",
              "    first_assignment_done = 1;",
              "}",
              "",
              "//Если процесс сбора/уничтожения контейнеров военными завершён",
              "if(!ItemIn(Cargo_1, ShipStar(CurShip)) && !ItemIn(Cargo_2, ShipStar(CurShip)) && !ItemIn(Cargo_3, ShipStar(CurShip)))",
              "{",
              "    if(ShipStar(CurShip) == PlayerStar) ChangeState('W_Home');",
              "    else ChangeState('W_End');",
              "    exit;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  132,
          "#":  131,
          "Total.Lines":  66,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Военный летает рядом с группой, ожидает, когда можно будет пальнуть по назначенному ему грузу",
              "int is_warriors_pickers = 0;",
              "//Если груз для выстрела данному военному вообще был назначен (приказы могли получить и другие)",
              "if(GetData(1, CurShip))",
              "{",
              "    for(int l = 1; l <= 3; l = l + 1)",
              "    {",
              "        if(!(GetData(1, CurShip) & (1 << l))) continue;",
              "",
              "        int shot_permission = 1;",
              "        for(j = 0; j < GroupCount(Korovan_Prot); j = j + 1)",
              "        {",
              "            ship = GroupShip(Korovan_Prot, j);",
              "            int num = GetData(0, ship);",
              "            if(!num) continue;",
              "            is_warriors_pickers = 1; //Это значит, что кто-то из военных сейчас занят подбором контейнера",
              "            if(num != l) continue;",
              "            //Если кто-то из военных находится в процессе подбора данного груза",
              "            shot_permission = 0;",
              "            break;",
              "        }",
              "",
              "        if(shot_permission)",
              "        {",
              "            cargo = ScriptItemToItem(GetValueFromScript('Mod_ExpCaravan', 'Cargo_' + l));",
              "            //Отдаём прямой приказ уничтожить груз",
              "            if(ItemIn(cargo, ShipStar(CurShip)))",
              "            {",
              "                //Так называемое \"целеуказание\" для стрельбы из акткода",
              "                //Записываем цели (грузы) в разные переменные инфошки, чтобы военный имел возможность уничтожить сразу все грузы за один ход",
              "                ShipCustomShipInfoData(CurShip, 'ExpCaravan_WarriorShotInfos', l, Id(cargo));",
              "            }",
              "        }",
              "    }",
              "}",
              "else",
              "{",
              "    //Проверяем, имеются ли военные, которые в данный момент заняты подбором контейнера",
              "    for(j = 0; j < GroupCount(Korovan_Prot); j = j + 1)",
              "    {",
              "        ship = GroupShip(Korovan_Prot, j);",
              "        if(!GetData(0, ship)) continue;",
              "        is_warriors_pickers = 1;",
              "        break;",
              "    }",
              "}",
              "",
              "//Если ведущих группу \"военных-собирателей\" нет, то вручную выдаём остальным приказ лететь в зону гибели транспорта,",
              "//иначе они начнут по-дебильному разлетаться в разные стороны",
              "if(!is_warriors_pickers)",
              "{",
              "    //Берём случайный угол",
              "    float angle = 0.01 * RndObject(0, 200, CurShip);",
              "    int dist = RndObject(50, 150, CurShip);",
              "    OrderMove(CurShip, g_last_transport_coords[0] + round(sin(angle * pi) * dist),",
              "                       g_last_transport_coords[1] + round(cos(angle * pi) * dist));",
              "    OrderLock(CurShip, 1);",
              "}",
              "",
              "//Если процесс сбора/уничтожения контейнеров военными завершён",
              "if(!ItemIn(Cargo_1, ShipStar(CurShip)) && !ItemIn(Cargo_2, ShipStar(CurShip)) && !ItemIn(Cargo_3, ShipStar(CurShip)))",
              "{",
              "    if(ShipStar(CurShip) == PlayerStar) ChangeState('W_Home');",
              "    else ChangeState('W_End');",
              "    exit;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  40,
          "Parent":  129,
          "#":  133,
          "Total.Lines":  3,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Обнуляем маркер подобранного (или кем-то уничтоженного) груза,",
              "//чтобы военный не завис на месте без возможности получить дальнейший приказ",
              "SetData(0, 0, CurShip);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  138,
          "#":  137,
          "Total.Lines":  6,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Нельзя разместить это ниже, т.к. сраный \"компилятор\" тогда ломается, \"проблема ромба\"",
              "int i;",
              "int j;",
              "int cargo_num;",
              "dword cargo;",
              "dword ship;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -220,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  142,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "OrderLock(CurShip, 0);",
              "if(EndState) ShipDestroy(CurShip);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -190,
          "Pos.y":  60,
          "Parent":  -1,
          "#":  143,
          "Total.Lines":  16,
          "Code.Type":  "Turn",
          "Code":          
          [
              "OrderLock(CurShip, 0);",
              "",
              "//Если систему, в которую летел караван, захватили, то меняем точку назначения на домашнюю систему",
              "if(StarOwner(KorovanStarFinish))",
              "{",
              "    ChangeState('W_JumpHome');",
              "}",
              "//Если военный успешно добрался до планеты назначения",
              "else if(EndState)",
              "{",
              "    //Считаем, сколько грузов в итоге довезли до нужной планеты",
              "    if(ItemIn(Cargo_1, CurShip)) cargoDelivered = cargoDelivered + 1;",
              "    if(ItemIn(Cargo_2, CurShip)) cargoDelivered = cargoDelivered + 1;",
              "    if(ItemIn(Cargo_3, CurShip)) cargoDelivered = cargoDelivered + 1;",
              "    ShipDestroy(CurShip);",
              "}"          
          ]        
        }      
      ],
      "Places":      
      [
        {
          "Type":  "TPlace",
          "Name":  "ToFinishStar",
          "Pos.x":  -30,
          "Pos.y":  70,
          "Parent":  -1,
          "#":  20,
          "Place.Type":  3,
          "Angle":  "0",
          "Dist":  "1",
          "Radius":  50,
          "Obj1":  6,
          "Obj2":  -1        
        },
        {
          "Type":  "TPlace",
          "Name":  "Near_Kor",
          "Pos.x":  -30,
          "Pos.y":  90,
          "Parent":  -1,
          "#":  31,
          "Place.Type":  5,
          "Angle":  "0",
          "Dist":  "0",
          "Radius":  250,
          "Obj1":  7,
          "Obj2":  -1        
        },
        {
          "Type":  "TPlace",
          "Name":  "Near_C3",
          "Pos.x":  100,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  57,
          "Place.Type":  4,
          "Angle":  "0",
          "Dist":  "0,5",
          "Radius":  100,
          "Obj1":  56,
          "Obj2":  -1        
        },
        {
          "Type":  "TPlace",
          "Name":  "Near_C2",
          "Pos.x":  100,
          "Pos.y":  90,
          "Parent":  -1,
          "#":  58,
          "Place.Type":  4,
          "Angle":  "0",
          "Dist":  "0,5",
          "Radius":  100,
          "Obj1":  55,
          "Obj2":  -1        
        },
        {
          "Type":  "TPlace",
          "Name":  "Near_C1",
          "Pos.x":  100,
          "Pos.y":  70,
          "Parent":  -1,
          "#":  59,
          "Place.Type":  4,
          "Angle":  "0",
          "Dist":  "0,5",
          "Radius":  100,
          "Obj1":  54,
          "Obj2":  -1        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "KorovanStart",
          "Pos.x":  60,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  5,
          "Race":  63,
          "Owner":  63,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        },
        {
          "Type":  "TPlanet",
          "Name":  "KorovanPlanetFinish",
          "Pos.x":  60,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  9,
          "Race":  63,
          "Owner":  63,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        },
        {
          "Type":  "TPlanet",
          "Name":  "PiratePlanet",
          "Pos.x":  200,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  82,
          "Race":  63,
          "Owner":  129,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  100,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  0,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "PlayerStar",
          "Pos.x":  60,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  1,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  true,
          "NoComeKling":  true        
        },
        {
          "Type":  "TStar",
          "Name":  "KorovanStarFinish",
          "Pos.x":  60,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  6,
          "Constellation":  0,
          "Priority":  1,
          "NoKling":  true,
          "NoComeKling":  true        
        },
        {
          "Type":  "TStar",
          "Name":  "PirateStar",
          "Pos.x":  200,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  81,
          "Constellation":  0,
          "Priority":  2,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "Statements":      
      [
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -160,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  17,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!GroupIn(Korovan_Prot, Near_Kor) && !GetShipPlanet(CurShip)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -140,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  18,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GroupCount(Korovan_Prot)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -140,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  21,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GroupIn(Korovan, ToFinishStar) && GroupIn(Korovan_Prot, Near_Kor)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -220,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  23,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "EndState"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -380,
          "Pos.y":  80,
          "Parent":  -1,
          "#":  25,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "( GroupIn(Korovan, ToFinishStar) && GroupIn(Korovan_Prot, Near_Kor) ) ||",
              "( ShipStar(CurShip) != KorovanStarFinish && GroupIn(Korovan, KorovanStarFinish) )"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -380,
          "Pos.y":  0,
          "Parent":  -1,
          "#":  27,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "EndState"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -90,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  30,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GroupIn(Korovan_Prot, Near_Kor)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -260,
          "Pos.y":  -30,
          "Parent":  -1,
          "#":  32,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GroupIn(Korovan, KorovanStarFinish) && ShipInNormalSpace(GroupToShip(Korovan))"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -50,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  34,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!GroupCount(Korovan_Prot) && caravan_was_started"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -30,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  36,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "EndState"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -220,
          "Pos.y":  80,
          "Parent":  -1,
          "#":  38,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GroupCount(Korovan)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  120,
          "Pos.y":  0,
          "Parent":  61,
          "#":  39,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!GroupCount(Korovan) && caravan_was_started"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -300,
          "Pos.y":  -30,
          "Parent":  -1,
          "#":  41,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GroupCount(Korovan)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -220,
          "Pos.y":  0,
          "Parent":  -1,
          "#":  42,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!GroupCount(Korovan)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -190,
          "Pos.y":  0,
          "Parent":  -1,
          "#":  43,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GroupCount(Korovan)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -190,
          "Pos.y":  20,
          "Parent":  -1,
          "#":  44,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GetShipPlanet(GroupToShip(Korovan)) == KorovanPlanetFinish"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -200,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  46,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GroupCount(Korovan_Prot)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -240,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  60,
          "Total.Lines":  3,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!ItemIn(Cargo_1, ShipStar(CurShip)) &&",
              "!ItemIn(Cargo_2, ShipStar(CurShip)) &&",
              "!ItemIn(Cargo_3, ShipStar(CurShip))"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  137,
          "#":  61,
          "Total.Lines":  3,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ItemIn(Cargo_1, ShipStar(CurShip)) ||",
              "ItemIn(Cargo_2, ShipStar(CurShip)) ||",
              "ItemIn(Cargo_3, ShipStar(CurShip))"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -360,
          "Pos.y":  0,
          "Parent":  -1,
          "#":  62,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -220,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  63,
          "Total.Lines":  3,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!ItemIn(Cargo_1, ShipStar(CurShip)) &&",
              "!ItemIn(Cargo_2, ShipStar(CurShip)) &&",
              "!ItemIn(Cargo_3, ShipStar(CurShip))"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  -60,
          "Parent":  -1,
          "#":  68,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GroupCount(Korovan)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  100,
          "Pos.y":  -120,
          "Parent":  -1,
          "#":  70,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!GroupCount(Korovan)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -50,
          "Pos.y":  -120,
          "Parent":  -1,
          "#":  71,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -30,
          "Pos.y":  -140,
          "Parent":  -1,
          "#":  72,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ItemIn(Cargo_3, KorovanStarFinish) && j >= cargoSize3"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -40,
          "Pos.y":  -160,
          "Parent":  -1,
          "#":  73,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ItemIn(Cargo_2, KorovanStarFinish) && j >= cargoSize2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -50,
          "Pos.y":  -180,
          "Parent":  -1,
          "#":  74,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ItemIn(Cargo_1, KorovanStarFinish) && j >= cargoSize1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  80,
          "Pos.y":  -140,
          "Parent":  -1,
          "#":  78,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!ItemIn(Cargo_3, KorovanStarFinish)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  80,
          "Pos.y":  -160,
          "Parent":  -1,
          "#":  79,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!ItemIn(Cargo_2, KorovanStarFinish)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  80,
          "Pos.y":  -180,
          "Parent":  -1,
          "#":  80,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!ItemIn(Cargo_1, KorovanStarFinish)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  120,
          "Pos.y":  -120,
          "Parent":  -1,
          "#":  83,
          "Total.Lines":  7,
          "Code.Type":  "Turn",
          "Code":          
          [
              "(!ItemIn(Cargo_1, KorovanStarFinish) &&",
              "!ItemIn(Cargo_2, KorovanStarFinish) &&",
              "!ItemIn(Cargo_3, KorovanStarFinish))",
              "||",
              "(j < cargoSize1 &&",
              "j < cargoSize2 &&",
              "j < cargoSize3)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -50,
          "Pos.y":  -60,
          "Parent":  -1,
          "#":  86,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipInNormalSpace(CurShip)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -240,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  88,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "EndState"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  40,
          "Pos.y":  0,
          "Parent":  133,
          "#":  107,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!ItemIn(Cargo_1, ShipStar(CurShip))"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  40,
          "Pos.y":  20,
          "Parent":  133,
          "#":  108,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!ItemIn(Cargo_2, ShipStar(CurShip))"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  40,
          "Pos.y":  40,
          "Parent":  133,
          "#":  109,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!ItemIn(Cargo_3, ShipStar(CurShip))"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -50,
          "Pos.y":  -90,
          "Parent":  -1,
          "#":  114,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -260,
          "Pos.y":  -60,
          "Parent":  -1,
          "#":  118,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "EndState"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -200,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  122,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "EndState"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -220,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  125,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "StarOwner(KorovanStarFinish)!=0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -170,
          "Pos.y":  20,
          "Parent":  -1,
          "#":  127,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipInHyperSpace(GroupToShip(Korovan))"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  137,
          "#":  132,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "(!GetData(1, CurShip) || !is_warriors_pickers) && GetData(1, CurShip) < (2+4+8)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  106,
          "#":  134,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  134,
          "#":  135,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  -100,
          "Parent":  135,
          "#":  136,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -240,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  139,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "PlayerState",
          "Pos.x":  60,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  3,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "T_MoveToJump",
          "Pos.x":  -50,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  10,
          "Move":  1,
          "MoveObj":  20,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  66            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "Kor_d",
          "OnActCode":  "Kor_d",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "W_FollowStart",
          "Pos.x":  -220,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  11,
          "Move":  2,
          "MoveObj":  7,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  66            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "Prot_d",
          "OnActCode":  "Prot_d",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "T_Wait",
          "Pos.x":  -160,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  19,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  66            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "Kor_d",
          "OnActCode":  "Kor_d",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "T_JumpEnd",
          "Pos.x":  -140,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  22,
          "Move":  3,
          "MoveObj":  6,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  66            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "Kor_d",
          "OnActCode":  "Kor_d",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "T_LandEnd",
          "Pos.x":  -220,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  24,
          "Move":  4,
          "MoveObj":  9,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  66            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "Kor_d",
          "OnActCode":  "Kor_d",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "W_JumpEnd",
          "Pos.x":  -380,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  26,
          "Move":  3,
          "MoveObj":  6,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  66            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "Prot_d",
          "OnActCode":  "Prot_d",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "W_FollowEnd",
          "Pos.x":  -190,
          "Pos.y":  -30,
          "Parent":  -1,
          "#":  28,
          "Move":  2,
          "MoveObj":  7,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  66            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "Prot_d",
          "OnActCode":  "Prot_d",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "W_Wait",
          "Pos.x":  -380,
          "Pos.y":  -30,
          "Parent":  -1,
          "#":  33,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  66            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "Prot_d",
          "OnActCode":  "Prot_d",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "T_LandHome",
          "Pos.x":  -30,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  35,
          "Move":  4,
          "MoveObj":  5,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  66            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "Kor_d",
          "OnActCode":  "Kor_d",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "W_Home",
          "Pos.x":  -220,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  40,
          "Move":  4,
          "MoveObj":  5,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  66            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "Prot_d",
          "OnActCode":  "Prot_d",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "W_End",
          "Pos.x":  -190,
          "Pos.y":  40,
          "Parent":  -1,
          "#":  45,
          "Move":  4,
          "MoveObj":  9,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  66            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "Prot_d",
          "OnActCode":  "Prot_d",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "P_Wait",
          "Pos.x":  -50,
          "Pos.y":  -20,
          "Parent":  -1,
          "#":  67,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "P_Attack",
          "Pos.x":  80,
          "Pos.y":  -60,
          "Parent":  -1,
          "#":  69,
          "Move":  2,
          "MoveObj":  7,
          "Attack.Count":  2,
          "Attack.Items":          
          [
            {
              "Target.0":  7,
              "Target.1":  8            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "P_Grab3",
          "Pos.x":  0,
          "Pos.y":  -140,
          "Parent":  -1,
          "#":  75,
          "Move":  1,
          "MoveObj":  57,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  8            
            }          
          ],
          "TakeItem":  56,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "P_Grab2",
          "Pos.x":  -10,
          "Pos.y":  -160,
          "Parent":  -1,
          "#":  76,
          "Move":  1,
          "MoveObj":  58,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  8            
            }          
          ],
          "TakeItem":  55,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "P_Grab1",
          "Pos.x":  -20,
          "Pos.y":  -180,
          "Parent":  -1,
          "#":  77,
          "Move":  1,
          "MoveObj":  59,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  8            
            }          
          ],
          "TakeItem":  54,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "P_Escape",
          "Pos.x":  120,
          "Pos.y":  -150,
          "Parent":  -1,
          "#":  84,
          "Move":  3,
          "MoveObj":  81,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  8            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "W_Grab1",
          "Pos.x":  30,
          "Pos.y":  0,
          "Parent":  107,
          "#":  104,
          "Move":  1,
          "MoveObj":  59,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  66            
            }          
          ],
          "TakeItem":  54,
          "TakeAllItem":  false,
          "OnTalk":  "Prot_d",
          "OnActCode":  "Prot_d",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "W_Grab2",
          "Pos.x":  30,
          "Pos.y":  0,
          "Parent":  108,
          "#":  105,
          "Move":  1,
          "MoveObj":  58,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  66            
            }          
          ],
          "TakeItem":  55,
          "TakeAllItem":  false,
          "OnTalk":  "Prot_d",
          "OnActCode":  "Prot_d",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "W_Grab3",
          "Pos.x":  30,
          "Pos.y":  0,
          "Parent":  109,
          "#":  106,
          "Move":  1,
          "MoveObj":  57,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  66            
            }          
          ],
          "TakeItem":  56,
          "TakeAllItem":  false,
          "OnTalk":  "Prot_d",
          "OnActCode":  "Prot_d",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "W_JumpHome",
          "Pos.x":  -190,
          "Pos.y":  -60,
          "Parent":  -1,
          "#":  117,
          "Move":  3,
          "MoveObj":  1,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  66            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "Prot_d",
          "OnActCode":  "Prot_d",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "T_JumpHome",
          "Pos.x":  -160,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  121,
          "Move":  3,
          "MoveObj":  1,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  66            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "Kor_d",
          "OnActCode":  "Kor_d",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "W_MoveAround",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  131,
          "#":  130,
          "Move":  2,
          "MoveObj":  8,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  66            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "tdw",
          "Pos.x":  260,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  13,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tdw2",
          "Pos.x":  260,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  14,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "i",
          "Pos.x":  320,
          "Pos.y":  260,
          "Parent":  -1,
          "#":  15,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "j",
          "Pos.x":  360,
          "Pos.y":  260,
          "Parent":  -1,
          "#":  16,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "vScst",
          "Pos.x":  180,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  29,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "groups",
          "Pos.x":  260,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  48,
          "Var.Type":  "Unknown",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "attack",
          "Pos.x":  260,
          "Pos.y":  260,
          "Parent":  -1,
          "#":  49,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "enRad",
          "Pos.x":  260,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  50,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "caravan_was_started",
          "Pos.x":  260,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  51,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint",
          "Pos.x":  260,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  52,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tdw3",
          "Pos.x":  260,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  53,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "groups_ID",
          "Pos.x":  320,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  64,
          "Var.Type":  "Unknown",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "PK",
          "Pos.x":  320,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  65,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "Inventions_points",
          "Pos.x":  320,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  92,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "pirates_ID",
          "Pos.x":  320,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  93,
          "Var.Type":  "Unknown",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "PK_pirates",
          "Pos.x":  320,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  94,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr",
          "Pos.x":  260,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  97,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tfloat",
          "Pos.x":  320,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  100,
          "Var.Type":  "Float",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "planetOwner",
          "Pos.x":  320,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  102,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cargoSize1",
          "Pos.x":  260,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  103,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cargoSize2",
          "Pos.x":  260,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  110,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cargoSize3",
          "Pos.x":  260,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  111,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ShotAtCargo",
          "Pos.x":  260,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  112,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cargoDelivered",
          "Pos.x":  260,
          "Pos.y":  400,
          "Parent":  -1,
          "#":  115,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "planetRace",
          "Pos.x":  320,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  128,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "first_assignment_done",
          "Pos.x":  -380,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  138,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cargoStolen",
          "Pos.x":  260,
          "Pos.y":  420,
          "Parent":  -1,
          "#":  140,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "g_last_transport_coords",
          "Pos.x":  -380,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  141,
          "Var.Type":  "Array",
          "Init":  "2",
          "Global":  true        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  2,
      "End":  3,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  0,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  5,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TStarLink",
      "Begin":  6,
      "End":  1,
      "Nom":  0,
      "Arrow":  false,
      "DistMin":  20,
      "DistMax":  50,
      "Hole":  false    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  8,
      "End":  5,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  9,
      "End":  6,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  8,
      "End":  11,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  10,
      "End":  18,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  18,
      "End":  17,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  20,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  21,
      "End":  22,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  25,
      "End":  26,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  7,
      "End":  10,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  7,
      "End":  5,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  19,
      "End":  30,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  31,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  27,
      "End":  33,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  32,
      "End":  28,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  10,
      "End":  34,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  34,
      "End":  35,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  35,
      "End":  36,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  36,
      "End":  37,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  23,
      "End":  24,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  11,
      "End":  38,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  38,
      "End":  25,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  11,
      "End":  39,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  33,
      "End":  41,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  41,
      "End":  32,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  28,
      "End":  43,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  43,
      "End":  44,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  28,
      "End":  42,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  33,
      "End":  42,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  22,
      "End":  34,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  22,
      "End":  46,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  46,
      "End":  23,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  57,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  58,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  39,
      "End":  60,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  60,
      "End":  40,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  59,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  42,
      "End":  62,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  42,
      "End":  63,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  63,
      "End":  45,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  66,
      "End":  9,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  66,
      "End":  67,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  68,
      "End":  69,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  71,
      "End":  72,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  71,
      "End":  73,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  71,
      "End":  74,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  74,
      "End":  77,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  73,
      "End":  76,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  72,
      "End":  75,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  75,
      "End":  78,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  76,
      "End":  79,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  77,
      "End":  80,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TStarLink",
      "Begin":  6,
      "End":  81,
      "Nom":  0,
      "Arrow":  false,
      "DistMin":  10,
      "DistMax":  150,
      "Hole":  false    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  82,
      "End":  81,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  70,
      "End":  83,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  84,
      "End":  85,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  67,
      "End":  86,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  86,
      "End":  68,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  24,
      "End":  88,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  88,
      "End":  87,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  2,
      "End":  5,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  95,
      "End":  90,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  89,
      "End":  96,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  96,
      "End":  95,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  91,
      "End":  98,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  98,
      "End":  95,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  19,
      "End":  99,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  101,
      "End":  10,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  30,
      "End":  101,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  17,
      "End":  19,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  39,
      "End":  61,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  104,
      "End":  107,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  105,
      "End":  108,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  106,
      "End":  109,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  83,
      "End":  84,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  69,
      "End":  113,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  113,
      "End":  70,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  78,
      "End":  113,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  79,
      "End":  113,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  80,
      "End":  113,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  70,
      "End":  71,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  86,
      "End":  114,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  114,
      "End":  113,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  117,
      "End":  118,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  118,
      "End":  119,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  121,
      "End":  122,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  122,
      "End":  123,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  24,
      "End":  125,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  125,
      "End":  126,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  26,
      "End":  27,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  43,
      "End":  127,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  127,
      "End":  116,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  121,
      "End":  124,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  117,
      "End":  120,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  18,
      "End":  21,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  130,
      "End":  131,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  131,
      "End":  132,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  109,
      "End":  133,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  108,
      "End":  133,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  107,
      "End":  133,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  133,
      "End":  129,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  104,
      "End":  134,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  134,
      "End":  135,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  105,
      "End":  134,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  106,
      "End":  134,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  135,
      "End":  136,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  136,
      "End":  131,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  61,
      "End":  137,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  137,
      "End":  129,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  132,
      "End":  137,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  62,
      "End":  61,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  26,
      "End":  139,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  139,
      "End":  39,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  40,
      "End":  142,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  45,
      "End":  143,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  44,
      "End":  45,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "BlockPar.EC.Total.Strings":  8,
  "BlockPar.EC":  
  [
    {
      "#":  "13",
      "String":  "А, это ты, <Player>. Извини, но болтать с тобой мне некогда, поговорим в другой раз."    
    },
    {
      "#":  "14",
      "String":  "Здравствуй, <Player>! Искренне рад встретить тебя на этих бескрайних космических просторах.<br>К сожалению, сейчас совсем нет времени болтать, я очень сильно занят, но честно обещаю пропустить с тобой по кружечке \"Махпеллы\" как-нибудь в другой раз."    
    },
    {
      "#":  "15",
      "String":  "А, проклятый пират! Ну иди-ка сюда! Иди, и я по тебе так вдарю, что к клисанам в соседний рукав улетишь!!!"    
    },
    {
      "#":  "16",
      "String":  "Эй, а ну не занимай эту частоту! Я выполняю важное задание и у меня сейчас нет времени с тобой трепаться."    
    },
    {
      "#":  "17",
      "String":  "<0>"    
    },
    {
      "#":  "19",
      "String":  "Здравия желаю, <Player>! Прошу меня простить, но прямо сейчас я нахожусь на задании и не могу отвлекаться."    
    },
    {
      "#":  "4",
      "String":  "Конец связи"    
    },
    {
      "#":  "5",
      "String":  "Да чтоб у тебя коммуникатор треснул! Проваливай с экрана, <Player>, мне сейчас ну вот совсем не до твоей мерзкой рожи!"    
    }  
  ]
}