{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -543,
  "ViewPos.y":  -165,
  "ScriptName":"Mod_ExpProgramsNPC",
  "ScriptFileOut":"H:\\Mod_ExpProgramsNPC.scr",
  "ScriptTextOut":"H:\\Mod_ExpProgramsNPC.txt",
  "GraphPoint.Count":  19,
  "GraphLink.Count":  5,
  "GraphRectText.Count":  0,
  "Variables.Count":  10,
  "Stars.Count":  1,
  "Planets.Count":  1,
  "Ships.Count":  1,
  "States.Count":  1,
  "Groups.Count":  1,
  "Places.Count":  0,
  "Items.Count":  0,
  "Ethers.Count":  0,
  "Dialogs.Count":  0,
  "DialogMessages.Count":  0,
  "DialogAnswers.Count":  0,
  "Operations.Count":  3,
  "Statements.Count":  1,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "Groups":      
      [
        {
          "Type":"TGroup",
          "Name":"PlayerGroup",
          "Pos.x":          60,
          "Pos.y":          200,
          "Parent":          -1,
          "#":          3,
          "Owner":          62,
          "Group.Type":          126,
          "CntShipMin":          1,
          "CntShipMax":          1,
          "SpeedMin":          100,
          "SpeedMax":          10000,
          "Weapon":          0,
          "CargoHook":          0,
          "EmptySpace":          0,
          "AddPlayer":true,
          "StatusTraderMin":          0,
          "StatusTraderMax":          100,
          "StatusWarriorMin":          0,
          "StatusWarriorMax":          100,
          "StatusPirateMin":          0,
          "StatusPirateMax":          100,
          "DistSearch":          10000,
          "Dialog":          -1,
          "StrengthMin":"0",
          "StrengthMax":"0",
          "Ruins":""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          160,
          "Pos.y":          140,
          "Parent":          -1,
          "#":          5,
          "Total.Lines":          1,
          "Code.Type":"Global",
          "Code":          
          [
"GRun();"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          180,
          "Pos.y":          140,
          "Parent":          -1,
          "#":          6,
          "Total.Lines":          132,
          "Code.Type":"Init",
          "Code":          
          [
"//Стартовое получение информации по шансам кораблей получить программы",
"ProgramsDistChancesInit();",
"ProgramsDistUpdate = CT('Script.Mod_ExpProgramsNPC.ProgramsDistributionChances.Version');",
"",
"//Перебираем все корабли в Галактике и \"обрабатываем\" их",
"tstr2 = ',' + CT('Script.Mod_ExpProgramsNPC.ProgramsDistributionChances.ShipTypes');",
"i = BuildListOfNewShips(tarr1, 0, 2+4+8+16, 1+2+4+8+16+128, 1, '', tstr2);",
"if(i) //Если был обнаружен хотя бы один корабль, подходящий по заданным фильтрам",
"{",
"    for(i = 0; i < ArrayDim(tarr1); i = i + 1)",
"    {",
"        cur_ship = tarr1[i];",
"",
"        if(!cur_ship) continue; //Проверка на \"мертворождённый\" корабль",
"        if(IsPlayer(cur_ship)) continue; //Исключаем игрока",
"        if(ShipInScript(cur_ship, 0)) continue; //Исключаем скриптовые корабли, не считая корабли с OrderLock",
"        tstr1 = ShipType(cur_ship);",
"        if(findsubstr(tstr2, tstr1) == -1) continue; //Сверяем подходящие типы кораблей (поскольку при переборе все стандартные типы имеют пустой ShipType, приходится делать вот так)",
"        //if(!ShipEqInSlot(cur_ship, t_Scaner)) continue;",
"",
"        //Определяем шанс в зависимости от типа корабля",
"        tint1 = ProgramsDistChancesArray[tstr1, 'ProgramsGetChance'];",
"        //Бросок на шанс",
"        if(Rnd(1, 100) <= tint1)",
"        {",
"            AddProgramsToShip(cur_ship, tstr1, Rnd(1, ProgramsDistChancesArray[tstr1, 'ProgramsAtMax']), ProgramsDistChancesArray[tstr1, 'ProgramsAtMax']);",
"        }",
"    }",
"}",
"lastShipId = GalaxyShipId();",
"",
"//Заполняем массив с шансами кораблей на получение программ (каждому типу корабля соответствует свой набор шансов)",
"function ProgramsDistChancesInit()",
"{",
"    free(ProgramsDistChancesArray);",
"    ProgramsDistChancesArray = newarray(1);",
"    ArrayDelete(ProgramsDistChancesArray, 0);",
"",
"    //По очереди перебираем все строчки типов кораблей из списка, и парсим каждую строку на число программ в ней",
"    //Итоговая структура массива:",
"    //Верхний уровень - название типа корабля (в названии ячейки)",
"    //    Нижний уровень - набор переменных с цифрами, обозначающими шанс получения программы,",
"    //    а в нулевой переменной общий шанс на получение новой программы данного вида",
"    str path = 'Script.Mod_ExpProgramsNPC.ProgramsDistributionChances.';",
"    str ship_types = CT(path + 'ShipTypes');",
"    for(int i = 0; i < ParsCountFromString(ship_types, ','); i = i + 1)",
"    {",
"        unknown t_array;",
"        t_array = newarray(1);",
"        ArrayDelete(t_array, 0);",
"",
"        str cur_type = GetParFromString(ship_types, ',', i, 1);",
"        str progs_line = CT(path + cur_type);",
"        int chance_grade = 0;",
"        int prog_types = 0;",
"        for(int j = 0; j < ParsCountFromString(progs_line, ','); j = j + 1)",
"        {",
"            if(!j) ArrayAdd(t_array, int(GetParFromString(GetParFromString(progs_line, ',', 0, 1), ':', 0, 1)), 'ProgramsGetChance');",
"            //Нумерация ячеек с шансом получения конкретных программ начинается с 2",
"            else",
"            {",
"                str cur_prog = GetParFromString(progs_line, ',', j, 1);",
"                int chance = GetParFromString(cur_prog, ':', 1, 1);",
"                if(chance > 0)",
"                {",
"                    //Значение - шанс получения программы, имя переменной - название программы",
"                    chance_grade = chance_grade + chance;",
"                    ArrayAdd(t_array, chance_grade, GetParFromString(cur_prog, ':', 0, 1));",
"                    prog_types = prog_types + 1;",
"                }",
"            }",
"        }",
"        //В конец записываем, сколько программ будет доступно данному типу корабля для получения",
"        ArrayAdd(t_array, prog_types, 'ProgramsCount');",
"        //А также максимальное число программ в одновременном наличии для корабля данного типа",
"        ArrayAdd(t_array, int(GetParFromString(GetParFromString(progs_line, ',', 0, 1), ':', 1, 1)), 'ProgramsAtMax');",
"",
"        ArrayAdd(ProgramsDistChancesArray, t_array, cur_type);",
"        //Обязательно \"открепляем\" временный массив от основного, иначе дабокод сломается и второстепенный массив в основной записан не будет",
"        t_array = newarray(1);",
"    }",
"}",
"",
"//Выдаёт программы указанному кораблю",
"function AddProgramsToShip(dword ship, str ship_type, int progs_count, int progs_max)",
"{",
"    dword cur_info = ShipAddCustomShipInfo(ship, 'ShipWithProgramsInfo', 'NoShow', 0, progs_max);",
"    //Корабли без сканера программы не получают (если позже у них появится сканер, то получать программы они смогут)",
"    if(!ShipEqInSlot(ship, t_Scaner)) exit;",
"",
"    for(int i = 1; i <= progs_count; i = i + 1)",
"    {",
"        //Определяем, какую именно программу получил NPC (шанс получения наиболее редких программ снижается на низких ГТУ)",
"        str check = max(1, Rnd(1, 100) - (10 - 1.25 * GalaxyTechLevel()));",
"        for(int j = 1; j <= ProgramsDistChancesArray[ship_type, 'ProgramsCount']; j = j + 1)",
"        {",
"            //Нумерация шансов получения программ в массиве начинается с ячейки под номером 2, поэтому плюсуем к номеру единицу",
"            if(int(check) <= ProgramsDistChancesArray[ship_type, j])",
"            {",
"                check = j;",
"                break;",
"            }",
"        }",
"        check = GetVariableName(ProgramsDistChancesArray[ship_type, int(check)]);",
"        check = 'Program' + check + 'NPC';",
"        int prog_num = ShipFindCustomShipInfoByType(ship, check);",
"        //Если копии данного типа программы у корабля уже имеются",
"        if(~prog_num)",
"        {",
"            //Но сперва добавляем одну копию \"Интеркома\"",
"            ShipCustomShipInfoData(ship, 'ProgramIntercomNPC', 1, ShipCustomShipInfoData(ship, 'ProgramIntercomNPC', 1) + 1);",
"",
"            ShipCustomShipInfoData(ship, prog_num, 1, ShipCustomShipInfoData(ship, prog_num, 1) + 1);",
"        }",
"        //Иначе добавляем кораблю новую инфошку",
"        else",
"        {",
"            prog_num = ShipFindCustomShipInfoByType(ship, 'ProgramIntercomNPC');",
"            //Но сперва добавляем копию \"Интеркома\"",
"            if(~prog_num) ShipCustomShipInfoData(ship, 'ProgramIntercomNPC', 1, ShipCustomShipInfoData(ship, 'ProgramIntercomNPC', 1) + 1);",
"            else ShipAddCustomShipInfo(ship, 'ProgramIntercomNPC', '', 1);",
"",
"            ShipAddCustomShipInfo(ship, check, '', 1);",
"        }",
"",
"        //Повышаем счётчик имеющихся у корабля программ",
"        ShipCustomShipInfoData(ship, 'ShipWithProgramsInfo', 1, ShipCustomShipInfoData(ship, 'ShipWithProgramsInfo', 1) + 1);",
"    }",
"",
"    //Делать проверки на получение новых программ боты могут не чаще, чем раз в месяц",
"    ShipCustomShipInfoTextData(0, cur_info, 1, CurTurn() + 30);",
"}"          
          ]        
        },
        {
          "Type":"Top",
          "Name":"",
          "Pos.x":          200,
          "Pos.y":          140,
          "Parent":          -1,
          "#":          9,
          "Total.Lines":          33,
          "Code.Type":"Turn",
          "Code":          
          [
"//Автоматическое обновление массивов со списком шансов получения программ для NPC",
"//Срабатывает, только если параметр Version в разделе ProgramsDistributionChances был изменён",
"if(ProgramsDistUpdate != CT('Script.Mod_ExpProgramsNPC.ProgramsDistributionChances.Version'))",
"{",
"    ProgramsDistChancesInit();",
"    ProgramsDistUpdate = CT('Script.Mod_ExpProgramsNPC.ProgramsDistributionChances.Version');",
"}",
"",
"//Перебираем все новорождённые корабли в Галактике и \"обрабатываем\" их",
"tstr2 = ',' + CT('Script.Mod_ExpProgramsNPC.ProgramsDistributionChances.ShipTypes');",
"i = BuildListOfNewShips(tarr1, lastShipId, 2+4+8+16, 1+2+4+8+16+128, 1, '', tstr2);",
"if(i) //Если был обнаружен хотя бы один корабль, подходящий по заданным фильтрам",
"{",
"    for(i = 0; i < ArrayDim(tarr1); i = i + 1)",
"    {",
"        cur_ship = tarr1[i];",
"",
"        if(!cur_ship) continue; //Проверка на \"мертворождённый\" корабль",
"        if(ShipInScript(cur_ship, 0)) continue; //Исключаем скриптовые корабли, не считая корабли с OrderLock",
"        tstr1 = ShipType(cur_ship);",
"        if(findsubstr(tstr2, tstr1) == -1) continue; //Сверяем подходящие типы кораблей (поскольку при переборе все стандартные типы имеют пустой ShipType, приходится делать вот так)",
"        //if(!ShipEqInSlot(cur_ship, t_Scaner)) continue;",
"",
"        //Определяем шанс в зависимости от типа корабля",
"        tint1 = ProgramsDistChancesArray[tstr1, 'ProgramsGetChance'];",
"        //Бросок на шанс",
"        if(Rnd(1, 100) <= tint1)",
"        {",
"            AddProgramsToShip(cur_ship, tstr1, Rnd(1, ProgramsDistChancesArray[tstr1, 'ProgramsAtMax']), ProgramsDistChancesArray[tstr1, 'ProgramsAtMax']);",
"        }",
"    }",
"}",
"lastShipId = GalaxyShipId();"          
          ]        
        }      
      ],
      "Planets":      
      [
        {
          "Type":"TPlanet",
          "Name":"InitPlanet",
          "Pos.x":          60,
          "Pos.y":          170,
          "Parent":          -1,
          "#":          2,
          "Race":          62,
          "Owner":          62,
          "Economy":          14,
          "Goverment":          62,
          "RangeMin":          0,
          "RangeMax":          100,
          "Dialog":          -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":"TStarShip",
          "Name":"",
          "Pos.x":          60,
          "Pos.y":          110,
          "Parent":          -1,
          "#":          0,
          "Count":          1,
          "Owner":          62,
          "Ship.Type":          126,
          "Player":true,
          "SpeedMin":          0,
          "SpeedMax":          10000,
          "Weapon":          0,
          "CargoHook":          0,
          "EmptySpace":          0,
          "StatusTraderMin":          0,
          "StatusTraderMax":          100,
          "StatusWarriorMin":          0,
          "StatusWarriorMax":          100,
          "StatusPirateMin":          0,
          "StatusPirateMax":          100,
          "StrengthMin":"0",
          "StrengthMax":"0",
          "Ruins":""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":"TStar",
          "Name":"InitStar",
          "Pos.x":          60,
          "Pos.y":          140,
          "Parent":          -1,
          "#":          1,
          "Constellation":          0,
          "Priority":          0,
          "NoKling":false,
          "NoComeKling":false        
        }      
      ],
      "Statements":      
      [
        {
          "Type":"Tif",
          "Name":"",
          "Pos.x":          200,
          "Pos.y":          120,
          "Parent":          -1,
          "#":          10,
          "Total.Lines":          1,
          "Code.Type":"Turn",
          "Code":          
          [
"!ShipIsTakeoff(Player())"          
          ]        
        }      
      ],
      "States":      
      [
        {
          "Type":"TState",
          "Name":"PlayerState",
          "Pos.x":          60,
          "Pos.y":          230,
          "Parent":          -1,
          "#":          4,
          "Move":          0,
          "MoveObj":          -1,
          "Attack.Count":          0,
          "TakeItem":          -1,
          "TakeAllItem":false,
          "OnTalk":"",
          "OnActCode":"",
          "EType":          1,
          "EUnique":"",
          "EMsg":""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":"TVar",
          "Name":"i",
          "Pos.x":          160,
          "Pos.y":          170,
          "Parent":          -1,
          "#":          7,
          "Var.Type":"Int",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"j",
          "Pos.x":          200,
          "Pos.y":          170,
          "Parent":          -1,
          "#":          8,
          "Var.Type":"Int",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"ProgramsDistChancesArray",
          "Pos.x":          160,
          "Pos.y":          200,
          "Parent":          -1,
          "#":          11,
          "Var.Type":"Array",
          "Init":"",
          "Global":true        
        },
        {
          "Type":"TVar",
          "Name":"ProgramsDistUpdate",
          "Pos.x":          160,
          "Pos.y":          220,
          "Parent":          -1,
          "#":          12,
          "Var.Type":"Str",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"tstr1",
          "Pos.x":          160,
          "Pos.y":          250,
          "Parent":          -1,
          "#":          13,
          "Var.Type":"Str",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"lastShipId",
          "Pos.x":          240,
          "Pos.y":          170,
          "Parent":          -1,
          "#":          14,
          "Var.Type":"Dword",
          "Init":"0",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"tint1",
          "Pos.x":          160,
          "Pos.y":          270,
          "Parent":          -1,
          "#":          15,
          "Var.Type":"Int",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"tarr1",
          "Pos.x":          160,
          "Pos.y":          290,
          "Parent":          -1,
          "#":          16,
          "Var.Type":"Array",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"cur_ship",
          "Pos.x":          210,
          "Pos.y":          270,
          "Parent":          -1,
          "#":          17,
          "Var.Type":"Dword",
          "Init":"",
          "Global":false        
        },
        {
          "Type":"TVar",
          "Name":"tstr2",
          "Pos.x":          210,
          "Pos.y":          250,
          "Parent":          -1,
          "#":          18,
          "Var.Type":"Str",
          "Init":"",
          "Global":false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":"TGraphLink",
      "Begin":      3,
      "End":      4,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      3,
      "End":      2,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      2,
      "End":      1,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      0,
      "End":      1,
      "Nom":      0,
      "Arrow":true    
    },
    {
      "Type":"TGraphLink",
      "Begin":      10,
      "End":      9,
      "Nom":      0,
      "Arrow":true    
    }  
  ],
  "BlockPar.EC.Total.Strings":  0,
  "BlockPar.EC":  
  [
  
  ]
}