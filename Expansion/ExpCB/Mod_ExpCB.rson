{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -4,
  "ViewPos.y":  221,
  "ScriptName":  "Mod_ExpCB",
  "ScriptFileOut":  "H:\\Mod_ExpCB.scr",
  "ScriptTextOut":  "H:\\Mod_ExpCB.txt",
  "GraphPoint.Count":  144,
  "GraphLink.Count":  88,
  "GraphRectText.Count":  0,
  "Variables.Count":  48,
  "Stars.Count":  1,
  "Planets.Count":  1,
  "Ships.Count":  1,
  "States.Count":  5,
  "Groups.Count":  5,
  "Places.Count":  1,
  "Items.Count":  1,
  "Ethers.Count":  0,
  "Dialogs.Count":  8,
  "DialogMessages.Count":  14,
  "DialogAnswers.Count":  20,
  "Operations.Count":  25,
  "Statements.Count":  14,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "DialogAnswers":      
      [
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  580,
          "Pos.y":  590,
          "Parent":  -1,
          "#":  8,
          "Msg":  "Я передумал",
          "AMsg.Num":  "0"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  530,
          "Pos.y":  620,
          "Parent":  -1,
          "#":  10,
          "Msg":  "Снять ноды с нод счёта",
          "AMsg.Num":  "1"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  700,
          "Pos.y":  710,
          "Parent":  -1,
          "#":  33,
          "Msg":  "",
          "AMsg.Num":  "2"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  600,
          "Pos.y":  650,
          "Parent":  -1,
          "#":  39,
          "Msg":  "",
          "AMsg.Num":  "3"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  730,
          "Pos.y":  600,
          "Parent":  -1,
          "#":  41,
          "Msg":  "<temp_str2>",
          "AMsg.Num":  "4"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  600,
          "Pos.y":  620,
          "Parent":  -1,
          "#":  49,
          "Msg":  "Снять ноды с нод счёта",
          "AMsg.Num":  "5"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  760,
          "Pos.y":  560,
          "Parent":  -1,
          "#":  51,
          "Msg":  "",
          "AMsg.Num":  "6"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  600,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  53,
          "Msg":  "",
          "AMsg.Num":  "7"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  0,
          "Pos.y":  60,
          "Parent":  81,
          "#":  57,
          "Msg":  "Назад",
          "AMsg.Num":  "8"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  50,
          "Pos.y":  0,
          "Parent":  62,
          "#":  59,
          "Msg":  "<AnswerRec>",
          "AMsg.Num":  "9"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  30,
          "Pos.y":  40,
          "Parent":  44,
          "#":  77,
          "Msg":  "Назад",
          "AMsg.Num":  "10"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  74,
          "#":  80,
          "Msg":  "<AnswerRec>",
          "AMsg.Num":  "11"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  70,
          "Parent":  44,
          "#":  84,
          "Msg":  "Нет, как-то дороговато",
          "AMsg.Num":  "12"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  30,
          "Pos.y":  0,
          "Parent":  83,
          "#":  85,
          "Msg":  "",
          "AMsg.Num":  "13"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  104,
          "#":  107,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "14"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  110,
          "#":  112,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "15"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  111,
          "#":  113,
          "Msg":  "<tstr3>",
          "AMsg.Num":  "16"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  116,
          "#":  115,
          "Msg":  "",
          "AMsg.Num":  "17"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  125,
          "#":  126,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "18"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "fastexit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  139,
          "#":  140,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "19"        
        }      
      ],
      "DialogMessages":      
      [
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  560,
          "Pos.y":  590,
          "Parent":  -1,
          "#":  6,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "0"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  580,
          "Pos.y":  650,
          "Parent":  -1,
          "#":  16,
          "Msg":  "Операция прошла успешно. Ноды уже погружены в твой трюм.",
          "DMsg.Num":  "1"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  580,
          "Parent":  -1,
          "#":  24,
          "Msg":  "<temp_str>",
          "DMsg.Num":  "2"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  690,
          "Parent":  -1,
          "#":  34,
          "Msg":  "<temp_str>",
          "DMsg.Num":  "3"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  40,
          "Pos.y":  0,
          "Parent":  43,
          "#":  44,
          "Msg":  "<ThanksForMoney><SpeechRec>",
          "DMsg.Num":  "4"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  760,
          "Pos.y":  580,
          "Parent":  -1,
          "#":  50,
          "Msg":  "<temp_str>",
          "DMsg.Num":  "5"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  600,
          "Pos.y":  590,
          "Parent":  -1,
          "#":  52,
          "Msg":  "Ну, не хочешь как хочешь. Желаю удачи в \"обналичивании\" нодов у доминаторов.",
          "DMsg.Num":  "6"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  30,
          "Pos.y":  0,
          "Parent":  77,
          "#":  76,
          "Msg":  "<temp_array[GAnswerData]>",
          "DMsg.Num":  "7"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  30,
          "Pos.y":  0,
          "Parent":  84,
          "#":  83,
          "Msg":  "Не, ну ты уж совсем не борзей, да?! За эти данные многие наши разведчики отдали свои жизни, между прочим! Наверное...",
          "DMsg.Num":  "8"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  103,
          "#":  104,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "9"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  109,
          "#":  108,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "10"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  118,
          "#":  114,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "11"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  117,
          "#":  116,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "12"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  138,
          "#":  139,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "13"        
        }      
      ],
      "Dialogs":      
      [
        {
          "Type":  "TDialog",
          "Name":  "DDoS",
          "Pos.x":  560,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  21        
        },
        {
          "Type":  "TDialog",
          "Name":  "BuyNewMM",
          "Pos.x":  700,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  23        
        },
        {
          "Type":  "TDialog",
          "Name":  "BuyMMNoCount",
          "Pos.x":  700,
          "Pos.y":  630,
          "Parent":  -1,
          "#":  36        
        },
        {
          "Type":  "TDialog",
          "Name":  "coalship_count",
          "Pos.x":  910,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  42        
        },
        {
          "Type":  "TDialog",
          "Name":  "AddSysInfo",
          "Pos.x":  30,
          "Pos.y":  0,
          "Parent":  76,
          "#":  75        
        },
        {
          "Type":  "TDialog",
          "Name":  "BuyMMPartCount",
          "Pos.x":  730,
          "Pos.y":  650,
          "Parent":  -1,
          "#":  87        
        },
        {
          "Type":  "TDialog",
          "Name":  "BuyMMFullCount",
          "Pos.x":  760,
          "Pos.y":  670,
          "Parent":  -1,
          "#":  88        
        },
        {
          "Type":  "TDialog",
          "Name":  "HybridDroidQuestDialog",
          "Pos.x":  620,
          "Pos.y":  360,
          "Parent":  -1,
          "#":  101        
        }      
      ],
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "PlayerGroup",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  1,
          "#":  2,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "MainQuestShip",
          "Pos.x":  -130,
          "Pos.y":  0,
          "Parent":  1,
          "#":  120,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "GuardQuestShips",
          "Pos.x":  -130,
          "Pos.y":  80,
          "Parent":  1,
          "#":  128,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "SupportQuestShip",
          "Pos.x":  -130,
          "Pos.y":  40,
          "Parent":  1,
          "#":  130,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "AttackerQuestShips",
          "Pos.x":  -130,
          "Pos.y":  120,
          "Parent":  1,
          "#":  141,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Items":      
      [
        {
          "Type":  "TItem",
          "Name":  "HybridDroid",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  101,
          "#":  122,
          "Class":  5,
          "Item.Type":  0,
          "Size":  10,
          "Level":  1,
          "Radius":  150,
          "Owner":  6,
          "Useless":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  390,
          "Pos.y":  560,
          "Parent":  -1,
          "#":  5,
          "Total.Lines":  1,
          "Code.Type":  "Global",
          "Code":          
          [
              "GRun();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  500,
          "Pos.y":  650,
          "Parent":  -1,
          "#":  7,
          "Total.Lines":  10,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(RangerBaseNodes(Player()) > ShipMoney(Player()) / cost) end = ShipMoney(Player()) / cost;",
              "else end = RangerBaseNodes(Player());",
              "",
              "if(end < 1000) temp_str = 'Bm.Items.2Nod0_s';",
              "else if(end < 2000) temp_str = 'Bm.Items.2Nod1_s';",
              "else if(end < 4000) temp_str = 'Bm.Items.2Nod2_s';",
              "else if(end < 8000) temp_str = 'Bm.Items.2Nod3_s';",
              "else temp_str = 'Bm.Items.2Nod4_s';",
              "",
              "get_nods = CountBox(temp_str, \"Сколько нодов снять?\", 1, RangerBaseNodes(Player()), cost, 1, end, RangerBaseNodes(Player()), ShipMoney(Player()));"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  560,
          "Pos.y":  650,
          "Parent":  -1,
          "#":  15,
          "Total.Lines":  4,
          "Code.Type":  "Turn",
          "Code":          
          [
              "AddItemToShip(Player(), CreateNodes(get_nods, RndObject(0, 2, GetShipRuins(Player()))));",
              "RangerBaseNodes(Player(), RangerBaseNodes(Player()) - get_nods);",
              "ShipMoney(Player(), ShipMoney(Player()) - get_nods * cost);",
              "Sound('Sound.Sell');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  410,
          "Pos.y":  560,
          "Parent":  -1,
          "#":  19,
          "Total.Lines":  52,
          "Code.Type":  "Init",
          "Code":          
          [
              "modules = newarray(1);",
              "NShipInSys = newarray(1);",
              "temp_array = newarray(1);",
              "temp_array_2 = newarray(1);",
              "temp_array_3 = newarray(1);",
              "temp_array_4 = newarray(1);",
              "",
              "//Стартовый перебор с запоминанием числа ВБ и доминионов в Галактике",
              "for(i = 0; i < GalaxyStars(); i = i + 1)",
              "{",
              "    cur_star = GalaxyStar(i);",
              "",
              "    if(StarRuins(cur_star, 'SB')) TotalSBCount = TotalSBCount + 1;",
              "    else if(StarRuins(cur_star, 'WB')) TotalWBCount = TotalWBCount + 1;",
              "    else if(StarRuins(cur_star, 'CB')) TotalCBCount = TotalCBCount + 1;",
              "}",
              "",
              "function g_SetHybridDroidQuestStatus(int set = 0)",
              "{",
              "    HybridDroidQuestStatus = set;",
              "}",
              "",
              "function MainQuestShipActCode() //t_OnTakingDamageEn, t_OnTakingDamageSp, t_OnTakingDamageMi, t_OnDeath",
              "{",
              "    if(ScriptItemActionType(t_OnDeath))",
              "    {",
              "        dword cur_ship = ScriptItemActShip();",
              "        dword droid = ShipEqInSlot(cur_ship, t_RepairRobot);",
              "",
              "        NoDropItem(droid, 0);",
              "        DropItem(cur_ship, droid);",
              "",
              "        NoComeKlingToStar(ShipStar(cur_ship), 0);",
              "        Ether(4, 'HybridDroidQuestCB', '<color=0,255,0>' + CT('Quest.Info.OldQuests.Accepted') + Format('</color><br> <br>') + Format(CT('Script.Mod_ExpCB.HybridDroidQuestDialog.QuestNote2'), '<TargetShip'+'>', Name(cur_ship), '255,240,100'));",
              "        HybridDroidQuestStatus = -1;",
              "    }",
              "    else if(ScriptItemActionType(t_OnTakingDamageEn) || ScriptItemActionType(t_OnTakingDamageSp) || ScriptItemActionType(t_OnTakingDamageMi))",
              "    {",
              "        dword damager = ScriptItemActObject1();",
              "",
              "        if(ScriptItemActionType(t_OnTakingDamageMi))",
              "        {",
              "            if(ObjectType(damager) == 7) damager = MissileOwner(damager);",
              "            else exit;",
              "        }",
              "",
              "        if(ObjectType(damager) == 5)",
              "        {",
              "            if(!ShipInScript(damager, 0)) ShipJoin(AttackerQuestShips, damager, '', CurTurn() + 10);",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  430,
          "Pos.y":  560,
          "Parent":  -1,
          "#":  22,
          "Total.Lines":  55,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "if(!CoalitionDefeated())",
              "{",
              "    cur_ruin = GetShipRuins(Player());",
              "    if(cur_ruin)",
              "    {",
              "        if(ShipType(cur_ruin) == 'CB')",
              "        {",
              "            AddDialogInject('coalship_count', '', \"Предоставьте мне полную информацию о численности коалиционного флота\", 1);",
              "            AddDialogInject('BuyNewMM', CT('FormRuins.CB.TakeNod.CBOffer'), CT('FormRuins.CB.TakeNod.PlayerRequest'), 1);",
              "",
              "            //Делаем проверку, остались ли ещё в Галактике ЦР для проведения DDoS атаки",
              "            temp_int = 0;",
              "            for(i = 0; i < GalaxyStars() - 2; i = i + 1)",
              "            {",
              "                temp_dword = GalaxyStar(i);",
              "                if(StarOwner(temp_dword) != 0) continue;",
              "                if(!StarRuins(temp_dword, 'RC')) continue;",
              "                temp_int = temp_int + 1;",
              "            }",
              "",
              "            if(temp_int) AddDialogInject('DDoS', '', \"Хочу заказать DDoS атаку сети центров рейнджеров\", 1);",
              "            else",
              "            {",
              "                AddDialogBlock(\"Хочу заказать DDoS атаку сети центров рейнджеров\", 2);",
              "                AddDialogInject('DDoS', '', \"Хочу заказать DDoS атаку сети центров рейнджеров\", 1);",
              "            }",
              "",
              "            //Предложение о начале задания на получение гибридного дроида при игре за пиратский клан",
              "            if(!HybridDroidQuestStatus)",
              "            {",
              "                //Не ниже \"Атамана\"",
              "                if(CurrentMods('Evolution\\EvoFemRangers'))",
              "                {",
              "                    if(GetShipPirateRank(Player()) >= 5)",
              "                    {",
              "                        //Не менее 9 свободных Коалиционных систем",
              "                        if(ControlledSystems(0) >= 9)",
              "                        {",
              "                            //Если задание агенток ещё не было взято, либо уже провалено",
              "                            temp_int = GetValueFromScript('PC_fem_rangers', 'quest_status');",
              "                            if(temp_int == 4 || temp_int == 6 || temp_int == 12 || GetValueFromScript('PC_fem_rangers', 'player_hate'))",
              "                            {",
              "                                //В живых должно оставаться не менее 3 агенток",
              "                                if(RunFunctionFromScript('PC_fem_rangers', 'GetFemRangers') >= 3)",
              "                                {",
              "                                    AddDialogInject('HybridDroidQuestDialog', CT('Script.Mod_ExpCB.HybridDroidQuestDialog.AddOfferCB'), CT('Script.Mod_ExpCB.HybridDroidQuestDialog.PlayerAskOfferCB'), 5);",
              "                                }",
              "                            }",
              "                        }",
              "                    }",
              "                }",
              "            }",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  560,
          "Parent":  -1,
          "#":  25,
          "Total.Lines":  109,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(GetGameOptions('FontDialog') == 0) DefSplt = '</color>-------------------------------------------------------------';",
              "else if(GetGameOptions('FontDialog') == 1) DefSplt = '</color>------------------------------------------';",
              "else if(GetGameOptions('FontDialog') == 2) DefSplt = '</color>-----------------------------------------';",
              "else DefSplt = '</color>-------------------------------------';",
              "",
              "//Записываем на ЦР инфошку с информацией о приобретённых на станции ММ",
              "if(ShipFindCustomShipInfoByType(cur_ruin, 'CBSoldMMChainInfos') == -1) ShipAddCustomShipInfo(cur_ruin, 'CBSoldMMChainInfos', 'NoShow', 0, 0, 0);",
              "",
              "//Считаем общее количество \"наличных\" нодов у игрока",
              "temp_int_1 = GetNodesFromShip(Player()) + GetNodesFromStorage(GetShipRuins(Player()));",
              "//Ноды игрока, доступные с нод-счёта",
              "temp_int_2 = RangerBaseNodes(Player());",
              "",
              "//Расчёт скидки, как в оригинальной игре, только с делителем 180, вместо 130, что ограничивает максимальную скидку до 55%",
              "discount_float = round(100.0 * ShipStatus(Player(), 1) / 180) + 1;",
              "//Ограничиваем верхний предел скидки до 75%",
              "//if(discount_float > 75) discount_float = 75;",
              "discount_float = discount_float * 0.01;",
              "",
              "//Делаем перебор цепочки ММ для всех трёх уровней",
              "//Формируем текст для подстановки в реплику собеседника, а также рассчитываем цены ММ",
              "//1 - ММ первого уровня",
              "//2 - ММ второго уровня",
              "//3 - ММ третьего уровня",
              "temp_str = '';",
              "free(modules);",
              "modules = newarray(4, 5);",
              "//modules[0, 1] - остаток цены в нодах, которые будут сняты со счёта игрока при покупке за \"наличность\" + ноды со счёта для ММ первого уровня",
              "//modules[0, 2] - остаток цены в нодах, которые будут сняты со счёта игрока при покупке за \"наличность\" + ноды со счёта для ММ второго уровня",
              "//modules[0, 3] - остаток цены в нодах, которые будут сняты со счёта игрока при покупке за \"наличность\" + ноды со счёта для ММ третьего уровня",
              "//Вышеописанные ячейки заполняются на этапе формирования ответов игрока ^",
              "//modules[N, 0] - номер бонуса ММ соответствующего N уровня",
              "//modules[N, 1] - пиратская стоимость текущего ММ при оплате \"наличкой\" с учётом скидки",
              "//modules[N, 2] - пиратская стоимость текущего ММ при оплате с нод-счёта с учётом скидки",
              "//modules[N, 3] - пиратская стоимость текущего ММ при оплате \"наличкой\" без учёта скидки (нужна для расчётов)",
              "//modules[N, 4] - пиратская стоимость текущего ММ при оплате с нод-счёта без учёта скидки (нужна для расчётов)",
              "for(i = 1; i <= 3; i = i + 1)",
              "{",
              "    if(i == 1) temp_int = 2;",
              "    else if(i == 2) temp_int = 1;",
              "    else temp_int = 0;",
              "",
              "    //Если ещё не наступил день выдачи ММ из альтернативной цепочки",
              "    if(CurTurn() % 33) temp_int = RuinsMicromoduleChain(cur_ruin, temp_int, ShipCustomShipInfoData(cur_ruin, 'CBSoldMMChainInfos', i));",
              "    //Если сегодня как раз такой день",
              "    else temp_int = RuinsMicromoduleChain(cur_ruin, temp_int, ShipCustomShipInfoData(cur_ruin, 'CBSoldMMChainInfos', i), 1);",
              "",
              "    modules[i, 0] = temp_int;",
              "",
              "    //Рассчитываем стоимость очередного ММ (по умолчанию как для первого уровня) в нодах (использованы оригинальные формулы)",
              "    k = round(PortionInDiapason(BonusPriority(temp_int), 100, 0, 100, 2000));",
              "",
              "    k = Rnd(round(0.8 * k), round(1.2 * k), k + Id(cur_ruin));",
              "",
              "    //Выполняем необходимые округления",
              "    if(i < 3) k = RoundTo(1.0 * k / 1.5, 100, -1);",
              "    else k = RoundTo(1.0 * k / 1.5, 10, -1);",
              "",
              "    //Записываем все полученные стоимости в соответствующие переменные и определяем снижение цены для микромодулей предыдущих уровней",
              "    if(i == 1)",
              "    {",
              "        //Добавляем общую пиратскую наценку",
              "        k = round(1.5 * k);",
              "        //Отдельно запоминаем стоимость ММ до применения скидки",
              "        modules[i, 3] = k;",
              "        //Применяем скидку и записываем значение в массив",
              "        modules[i, 1] = round((1.0 - discount_float) * k);",
              "        //modules[i, 1] = k;",
              "",
              "        //Добавляем пиратскую наценку за покупку модуля с нод-счёта",
              "        k = round(1.5 * k);",
              "        //Отдельно запоминаем стоимость ММ при оплате с нод-счёта до применения скидки",
              "        modules[i, 4] = k;",
              "        //Применяем скидку и записываем значение в массив",
              "        modules[i, 2] = round((1.0 - discount_float) * k);",
              "        //modules[i, 2] = k;",
              "    }",
              "    //Стоимость ММ второго и третьего уровня не должна превышать половину стоимости ММ предыдущего уровня",
              "    else",
              "    {",
              "        //Добавляем общую пиратскую наценку",
              "        k = round(1.5 * k);",
              "        if(k > modules[i - 1, 3] / 2) k = modules[i - 1, 3] / 2;",
              "        //Отдельно запоминаем стоимость ММ до применения скидки",
              "        modules[i, 3] = k;",
              "        //Применяем скидку и записываем значение в массив",
              "        modules[i, 1] = round((1.0 - discount_float) * k);",
              "        //modules[i, 1] = k;",
              "",
              "        //Добавляем пиратскую наценку за покупку модуля с нод-счёта",
              "        k = round(1.5 * k);",
              "        if(k > modules[i - 1, 4] / 2) k = modules[i - 1, 4] / 2;",
              "        //Отдельно запоминаем стоимость ММ при оплате с нод-счёта до применения скидки",
              "        modules[i, 4] = k;",
              "        //Применяем скидку и записываем значение в массив",
              "        modules[i, 2] = round((1.0 - discount_float) * k);",
              "        //modules[i, 2] = k;",
              "    }",
              "",
              "    //Добавляем в текст название, описанием и стоимость в нодах очередного ММ",
              "    temp_str = temp_str + \"<br>\" + DefSplt;",
              "    temp_str = temp_str + \"<br>\" + i + Format(CT('FormRuins.CB.TakeNod.CBAnswerMM'), '<Name' + '>', BonusName(temp_int)) + \"<br>\" + BonusText(temp_int);",
              "    temp_str = temp_str + \"<br>\" + '<clr><clrEnd>' + \"<br>\" + Format(CT('FormRuins.CB.TakeNod.CBAnswerMMCost1'), '<Cost' + '>', modules[i, 1]);",
              "    temp_str = temp_str + \"<br>\" + Format(CT('FormRuins.CB.TakeNod.CBAnswerMMCost2'), '<Cost' + '>', modules[i, 2]);",
              "}",
              "",
              "//Собираем строчки для подстановки",
              "temp_str = '</color>' + Format(CT('FormRuins.CB.TakeNod.CBAnswerStart'), '<Text' + '>', temp_str, '') + \"<br>\" + DefSplt + \"<br>\" + Format(CT('FormRuins.CB.TakeNod.CBAnswerEnd'), '<CurNod' + '>', temp_int_1, '<BaseNod' + '>', temp_int_2, '<Discount' + '>', int(discount_float * 100));",
              "temp_str2 = '</color>' + CT('FormRuins.CB.TakeNod.PlayerNo');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  650,
          "Parent":  -1,
          "#":  35,
          "Total.Lines":  18,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Игрок приобрёл ММ только за \"наличные\" ноды (трюм + склад)",
              "i = GAnswerData;",
              "if(GetNodesFromShip(Player()) >= modules[i, 1]) GetNodesFromShip(Player(), modules[i, 1]);",
              "else",
              "{",
              "    temp_int = modules[i, 1] - GetNodesFromShip(Player());",
              "    GetNodesFromShip(Player(), GetNodesFromShip(Player()));",
              "    GetNodesFromStorage(GetShipRuins(Player()), temp_int);",
              "}",
              "//Запоминаем, какой номер ММ из цепочки был продан игроку",
              "temp_int = ShipCustomShipInfoData(cur_ruin, 'CBSoldMMChainInfos', i) + 1;",
              "if(temp_int > 50) temp_int = 0;",
              "ShipCustomShipInfoData(cur_ruin, 'CBSoldMMChainInfos', i, temp_int);",
              "",
              "AddItemToShip(Player(), CreateMM(modules[i, 0]));",
              "Sound('Sound.Sell');",
              "",
              "temp_str = '</color>' + Format(CT('FormRuins.CB.TakeNod.CBAfterBuy'), '<Name' + '>', BonusName(modules[i, 0]));"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  700,
          "Pos.y":  600,
          "Parent":  -1,
          "#":  37,
          "Total.Lines":  63,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Добавляем ответы игрока для приобретения микромодулей:",
              "//1 - ММ первого уровня",
              "//2 - ММ второго уровня",
              "//3 - ММ третьего уровня",
              "//temp_int_1 - общее число нодов игрока в \"наличке\" (трюм + склад)",
              "//temp_int_2 - число нодов игрока на его счету",
              "//modules[i, 0] - номер бонуса ММ соответствующего N уровня",
              "//modules[i, 1] - пиратская стоимость текущего ММ при оплате \"наличкой\" с учётом скидки",
              "//modules[i, 2] - пиратская стоимость текущего ММ при оплате с нод-счёта с учётом скидки",
              "j = 0;",
              "for(i = 1; i <= 3; i = i + 1)",
              "{",
              "    //Если игрок может купить ММ чисто за \"наличку\", добавляем соответствующий вариант",
              "    if(temp_int_1 >= modules[i, 1])",
              "    {",
              "        temp_str = Format(CT('FormRuins.CB.TakeNod.BuyCashIn'), '<Cost' + '>', modules[i, 1], '<Name' + '>', BonusName(modules[i, 0]));",
              "        InjectAnswer('BuyMMNoCount', temp_str, i);",
              "        j = 1;",
              "    }",
              "    else",
              "    {",
              "        //Если в \"наличке\" у игрока не пусто",
              "        if(temp_int_1)",
              "        {",
              "            //Если нод-счёт игрока не пуст",
              "            if(temp_int_2)",
              "            {",
              "                //Пересчитываем возможность приобретения ММ за \"наличку\" + за ноды со счёта",
              "                temp_int = modules[i, 1] - temp_int_1;",
              "                temp_int = round(1.5 * temp_int);",
              "                //Если игрок может купить ММ за \"наличку\" + за ноды со счёта, добавляем соответствующий вариант",
              "                if(temp_int_2 >= temp_int)",
              "                {",
              "                    modules[0, i] = temp_int;",
              "                    temp_str = Format(CT('FormRuins.CB.TakeNod.BuyCashInPlusCount'), '<Cost1' + '>', temp_int_1, '<Cost2' + '>', temp_int, '<Name' + '>', BonusName(modules[i, 0]));",
              "                    InjectAnswer('BuyMMPartCount', temp_str, i);",
              "",
              "                    j = 1;",
              "                }",
              "            }",
              "        }",
              "        //Если \"наличка\" игрока пуста",
              "        else",
              "        {",
              "            //Если игрок может купить ММ чисто за ноды со счёта, добавляем соответствующий вариант",
              "            if(temp_int_2 >= modules[i, 2])",
              "            {",
              "                temp_str = Format(CT('FormRuins.CB.TakeNod.BuyCount'), '<Cost' + '>', modules[i, 2], '<Name' + '>', BonusName(modules[i, 0]));",
              "                InjectAnswer('BuyMMFullCount', temp_str, i);",
              "",
              "                j = 1;",
              "            }",
              "        }",
              "    }",
              "",
              "    //Если покупка ММ для игрока в принципе невозможна, добавляем заблокированный вариант",
              "    if(!j)",
              "    {",
              "        temp_str = Format(CT('FormRuins.CB.TakeNod.BuyCashIn'), '<Cost' + '>', modules[i, 1], '<Name' + '>', BonusName(modules[i, 0]), '');",
              "        AddDialogBlock(temp_str, 1);",
              "        InjectAnswer('Blocked', temp_str, i);",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  70,
          "Parent":  42,
          "#":  43,
          "Total.Lines":  363,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ThanksForMoney = '';",
              "",
              "ArrayClear(temp_array);",
              "ArrayClear(temp_array_2);",
              "ArrayClear(temp_array_3);",
              "ArrayClear(temp_array_4);",
              "temp_str = '';",
              "//Задаём длину разделительной \"дефисной линии\" в зависимости от установленного в игре шрифта",
              "if(GetGameOptions('FontDialog') == '0') DefSplt = '-------------------------------------------------------------';",
              "else if(GetGameOptions('FontDialog') == '1') DefSplt =  '------------------------------------------';",
              "else if(GetGameOptions('FontDialog') == '2') DefSplt = '-----------------------------------------';",
              "else DefSplt = '-------------------------------------';",
              "",
              "//Высчитываем цену запроса разведсводки (250 и 150 здесь эмулируют 2.5% и 1.5%)",
              "temp_int_2 = ((ShipMoney(Player()) * (250 - ((ShipStatus(Player(), 1) * 150) / 100))) / 100) / 100;",
              "",
              "//Разброс минимальной цены в зависимости от пиратского рейтинга",
              "if(temp_int_2 < 500 && ShipStatus(Player(), 1) >= 66) temp_int_2 = 500;",
              "if(temp_int_2 < 750 && (ShipStatus(Player(), 1) < 66 && ShipStatus(Player(), 1) >= 33)) temp_int_2 = 750;",
              "if(temp_int_2 < 1000 && ShipStatus(Player(), 1) < 33) temp_int_2 = 1000;",
              "//Проверяем, не барон ли в данный момент игрок",
              "if(GetShipPirateRank(Player()) >= 7) temp_int_2 = 0;",
              "",
              "//Циклы поиска информации о числе и типах военных кораблей",
              "for(i = 0; i < GalaxyStars(); i = i + 1)",
              "{",
              "    temp_dword = GalaxyStar(i);",
              "    if(StarOwner(temp_dword) != 0) continue;",
              "    ArrayClear(NShipInSys);",
              "",
              "    for(j = 1; j <= 18; j = j + 1) ArrayAdd(NShipInSys, 0);",
              "    temp_int_1 = 0;",
              "    WarsOnWing = 0;",
              "    ShipsInSys = 0;",
              "    temp_str = \"</color>Система: <StarName(temp_dword)><br>Сектор: <ConName(StarToCon(temp_dword))><br><br><br>\";",
              "    //Вычисляем номер последней обитаемой планеты системы",
              "    for(j = 0; j < StarPlanets(temp_dword); j = j + 1)",
              "    {",
              "        if(PlanetOwner(StarPlanets(temp_dword, j)) == 6) continue;",
              "        LastPlanet = j;",
              "    }",
              "    //Перебираем все планеты в системе, составляем список",
              "    for(j = 0; j < StarPlanets(temp_dword); j = j + 1)",
              "    {",
              "        temp_dword_2 = StarPlanets(temp_dword, j);",
              "        if(PlanetOwner(temp_dword_2) == 6) continue;",
              "        temp_str = temp_str + DefSplt + \"<br>\" + \"Планета: <PlanetName(temp_dword_2)>\" + \"<br>\" + DefSplt;",
              "        //Проверяем наличие на планете военных кораблей",
              "        if(PlanetWarriors(temp_dword_2) >= 1)",
              "        {",
              "            temp_int_1 = temp_int_1 + PlanetWarriors(temp_dword_2);",
              "            //Формируем строчку подробной информации о кораблях на планете",
              "            for(k = 0; k <= (PlanetWarriors(temp_dword_2) - 1); k = k + 1)",
              "            {",
              "                temp_dword_3=PlanetWarriors(temp_dword_2,k);",
              "                temp_str2=ShipType(temp_dword_3);",
              "                //Считаем \"истребители\"",
              "                //Я пытался подставить функцию проверки статуса в иниткод, но в ней не сработала подстановка аргументов",
              "                //В итоге забил и просто продублировал её шесть раз",
              "                if(temp_str2 == 'Warrior')",
              "                {",
              "                    if(!ShipSubType(temp_dword_3))",
              "                    {",
              "                        TypeName = \"Военный\";",
              "                        //Здесь начинается та самая функция",
              "                        if(ShipInPlanet(temp_dword_3, temp_dword_2))",
              "                        {",
              "                            EndLine=\"В ангаре\"+'</color>';",
              "                            NShipInSys[1]=NShipInSys[1]+1;",
              "                            //Заполняем строку с Id всех кораблей на планетах",
              "                            //Позже она понадобиться для перепроверки работы кривой функции StarShips",
              "                            if(CheckById=='') CheckById=CheckById+'$'+Id(temp_dword_3)+'$';",
              "                            else CheckById=CheckById+',$'+Id(temp_dword_3)+'$';",
              "                        }",
              "                        else",
              "                        {",
              "                            //Если корабль не на планете, то проверяем в какой он системе",
              "                            if(ShipInStar(temp_dword_3, temp_dword))",
              "                            {",
              "                                EndLine=\"На вылете\"+'</color>';",
              "                                NShipInSys[1]=NShipInSys[1]+1;",
              "                                NShipInSys[2]=NShipInSys[2]+1;",
              "                                WarsOnWing=WarsOnWing+1;",
              "                            }",
              "                            else",
              "                            {",
              "                                EndLine = \"В системе\" + ' ' + StarName(ShipStar(temp_dword_3)) + '</color>';",
              "                                temp_int_1 = temp_int_1 - 1;",
              "                            }",
              "                        }",
              "                        //А это её конец",
              "                    }",
              "                    if(ShipSubType(temp_dword_3) == 1)",
              "                    {",
              "                        TypeName = \"Линкор\";",
              "                        if(ShipInPlanet(temp_dword_3,temp_dword_2))",
              "                        {",
              "                            EndLine=\"В ангаре\"+'</color>';",
              "                            NShipInSys[4]=NShipInSys[4]+1;",
              "                            if(CheckById=='') CheckById=CheckById+'$'+Id(temp_dword_3)+'$';",
              "                            else CheckById=CheckById+',$'+Id(temp_dword_3)+'$';",
              "                        }",
              "                        else",
              "                        {",
              "                            //Если корабль не на планете, то проверяем в какой он системе",
              "                            if(ShipInStar(temp_dword_3, temp_dword))",
              "                            {",
              "                                EndLine=\"На вылете\"+'</color>';",
              "                                NShipInSys[4]=NShipInSys[4]+1;",
              "                                NShipInSys[5]=NShipInSys[5]+1;",
              "                                WarsOnWing=WarsOnWing+1;",
              "                            }",
              "                            else",
              "                            {",
              "                                EndLine=\"В системе\"+' '+StarName(ShipStar(temp_dword_3))+'</color>';",
              "                                temp_int_1=temp_int_1-1;",
              "                            }",
              "                        }",
              "                    }",
              "                }",
              "                else if(temp_str2 == 'Militiaman1' || temp_str2 == 'Militiaman2' || temp_str2 == 'Militiaman3')",
              "                {",
              "                    TypeName = \"Ополченец\";",
              "                    if(ShipInPlanet(temp_dword_3,temp_dword_2))",
              "                    {",
              "                        EndLine=\"В ангаре\"+'</color>';",
              "                        NShipInSys[7]=NShipInSys[7]+1;",
              "                        if(CheckById=='') CheckById=CheckById+'$'+Id(temp_dword_3)+'$';",
              "                        else CheckById=CheckById+',$'+Id(temp_dword_3)+'$';",
              "                    }",
              "                    else",
              "                    {",
              "                        //Если корабль не на планете, то проверяем в какой он системе",
              "                        if(ShipInStar(temp_dword_3,temp_dword)==1)",
              "                        {",
              "                            EndLine=\"На вылете\"+'</color>';",
              "                            NShipInSys[7]=NShipInSys[7]+1;",
              "                            NShipInSys[8]=NShipInSys[8]+1;",
              "                            WarsOnWing=WarsOnWing+1;",
              "                        }",
              "                        else",
              "                        {",
              "                            EndLine=\"В системе\"+' '+StarName(ShipStar(temp_dword_3))+'</color>';",
              "                            temp_int_1=temp_int_1-1;",
              "                        }",
              "                    }",
              "                }",
              "                else if(temp_str2 == 'EliteWarrior')",
              "                {",
              "                    TypeName=\"Элитный военный\";",
              "                    if(ShipInPlanet(temp_dword_3,temp_dword_2))",
              "                    {",
              "                        EndLine=\"В ангаре\"+'</color>';",
              "                        NShipInSys[10]=NShipInSys[10]+1;",
              "                        if(CheckById=='') CheckById=CheckById+'$'+Id(temp_dword_3)+'$';",
              "                        else CheckById=CheckById+',$'+Id(temp_dword_3)+'$';",
              "                    }",
              "                    else",
              "                    {",
              "                        //Если корабль не на планете, то проверяем в какой он системе",
              "                        if(ShipInStar(temp_dword_3,temp_dword))",
              "                        {",
              "                            EndLine=\"На вылете\"+'</color>';",
              "                            NShipInSys[10]=NShipInSys[10]+1;",
              "                            NShipInSys[11]=NShipInSys[11]+1;",
              "                            WarsOnWing=WarsOnWing+1;",
              "                        }",
              "                        else",
              "                        {",
              "                            EndLine=\"В системе\"+' '+StarName(ShipStar(temp_dword_3))+'</color>';",
              "                            temp_int_1=temp_int_1-1;",
              "                        }",
              "                    }",
              "                }",
              "                else if(temp_str2 == 'Dreadnought')",
              "                {",
              "                    TypeName=\"Дредноут\";",
              "                    if(ShipInPlanet(temp_dword_3,temp_dword_2))",
              "                    {",
              "                        EndLine=\"В ангаре\"+'</color>';",
              "                        NShipInSys[16]=NShipInSys[16]+1;",
              "                        if(CheckById=='') CheckById=CheckById+'$'+Id(temp_dword_3)+'$';",
              "                        else CheckById=CheckById+',$'+Id(temp_dword_3)+'$';",
              "                    }",
              "                    else",
              "                    {",
              "                        //Если корабль не на планете, то проверяем в какой он системе",
              "                        if(ShipInStar(temp_dword_3,temp_dword))",
              "                        {",
              "                            EndLine=\"На вылете\"+'</color>';",
              "                            NShipInSys[16]=NShipInSys[16]+1;",
              "                            NShipInSys[17]=NShipInSys[17]+1;",
              "                            WarsOnWing=WarsOnWing+1;",
              "                        }",
              "                        else",
              "                        {",
              "                            EndLine=\"В системе\"+' '+StarName(ShipStar(temp_dword_3))+'</color>';",
              "                            temp_int_1=temp_int_1-1;",
              "                        }",
              "                    }",
              "                }",
              "                temp_str=temp_str+\"<br>\"+(k+1)+'. '+Name(temp_dword_3)+\"<br>\"+\"Тип: <TypeName>\"+\"<br>\"+\"Статус:\"+' <EndLine>';",
              "                if(k+1!=PlanetWarriors(temp_dword_2))temp_str=temp_str+\"<br>\";",
              "            }",
              "        }",
              "",
              "        //Если боевых кораблей на планете нет, то маркируем её как \"беззащитную\"",
              "        if(PlanetWarriors(temp_dword_2) <= 0) temp_str = temp_str + \"<br>- <color=255,0,0>Беззащитна</color> -\";",
              "        //Добавляем разделитель, если текущая планета не последняя в системе",
              "        //temp_str = temp_str + \"<br>\" + DefSplt;",
              "        if(j != LastPlanet) temp_str = temp_str + \"<br>\" + \"<br>\";",
              "    }",
              "    //Сравниваем количество военных кораблей в системе и на планетах, вычисляем точное количество военных кораблей в системе",
              "    for(j = 0; j < StarShips(temp_dword); j = j + 1)",
              "    {",
              "        temp_dword_3 = StarShips(temp_dword, j);",
              "",
              "        //Считаем количество враждебных станций в системе",
              "        if(ObjectType(temp_dword_3) == 4)",
              "        {",
              "            if(ShipStanding(temp_dword_3) > 1 && ShipStanding(temp_dword_3) < 5)",
              "            {",
              "                if(!ShipInHyperSpace(temp_dword_3)) NShipInSys[15] = NShipInSys[15] + 1;",
              "            }",
              "",
              "            continue;",
              "        }",
              "        ",
              "        //Считаем все корабли в космическом пространстве системы",
              "        //По Id сверяем корабли на планете и в системе, дабы не произошёл двойной зачёт одного и того же корабля",
              "        //Да, именно так работает функция StarShips - может учесть корабль на планете, а может не учесть",
              "        temp_str2 = ShipType(temp_dword_3);",
              "        if(temp_str2 == 'Warrior')",
              "        {",
              "            if(!ShipSubType(temp_dword_3))",
              "            {",
              "                if(findsubstr(CheckById, '$' + Id(temp_dword_3) + '$') == -1)",
              "                {",
              "                    ShipsInSys = ShipsInSys + 1;",
              "                    NShipInSys[3] = NShipInSys[3] + 1;",
              "                }",
              "            }",
              "            else if(ShipSubType(temp_dword_3) == 1)",
              "            {",
              "                if(findsubstr(CheckById, '$' + Id(temp_dword_3) + '$') == -1)",
              "                {",
              "                    ShipsInSys = ShipsInSys + 1;",
              "                    NShipInSys[6] = NShipInSys[6] + 1;",
              "                }",
              "            }",
              "        }",
              "        else if(temp_str2 == 'Militiaman1' || temp_str2 == 'Militiaman2' || temp_str2 == 'Militiaman3')",
              "        {",
              "            if(findsubstr(CheckById, '$' + Id(temp_dword_3) + '$') == -1)",
              "            {",
              "                ShipsInSys = ShipsInSys + 1;",
              "                NShipInSys[9] = NShipInSys[9] + 1;",
              "            }",
              "        }",
              "        else if(temp_str2 == 'EliteWarrior')",
              "        {",
              "            if(findsubstr(CheckById,'$' + Id(temp_dword_3) + '$') == -1)",
              "            {",
              "                ShipsInSys = ShipsInSys + 1;",
              "                NShipInSys[12] = NShipInSys[12] + 1;",
              "            }",
              "        }",
              "        else if(temp_str2 == 'Dreadnought')",
              "        {",
              "            if(findsubstr(CheckById, '$' + Id(temp_dword_3) + '$') == -1)",
              "            {",
              "                ShipsInSys = ShipsInSys + 1;",
              "                NShipInSys[18] = NShipInSys[18] + 1;",
              "            }",
              "        }",
              "    }",
              "",
              "    //Общее число военных объектов в системе (военные корабли + враждебные станции)",
              "    temp_int_1 = temp_int_1 + (ShipsInSys - WarsOnWing);",
              "    //Общее число обычных военных в системе",
              "    NShipInSys[1] = NShipInSys[1] + (NShipInSys[3] - NShipInSys[2]);",
              "    //Общее число линкоров (флагманов) в системе",
              "    NShipInSys[4] = NShipInSys[4] + (NShipInSys[6] - NShipInSys[5]);",
              "    //Общее число ополченцев в системе",
              "    NShipInSys[7] = NShipInSys[7] + (NShipInSys[9] - NShipInSys[8]);",
              "    //Общее число элитных военных в системе",
              "    NShipInSys[10] = NShipInSys[10] + (NShipInSys[12] - NShipInSys[11]);",
              "    //Общее число враждебных станций в системе",
              "    //NShipInSys[15] = NShipInSys[15]; //NShipInSys[13] и NShipInSys[14] свободны",
              "    //Общее число дредноутов в системе",
              "    NShipInSys[16] = NShipInSys[16] + (NShipInSys[18] - NShipInSys[17]);",
              "",
              "    //Дописываем строке \"подвал\", содержащий общее число всех кораблей в системе",
              "    if(temp_int_1)",
              "    {",
              "        temp_str = temp_str + \"<br>\" + \"<br>\" + DefSplt + \"<br>\" + \"<color=0,50,200>Всего в системе</color>\" + \"<br>\" + DefSplt;",
              "        if(NShipInSys[7]) temp_str = temp_str + \"<br>Ополченцев: <NShipInSys[7]>\";",
              "        if(NShipInSys[1]) temp_str = temp_str + \"<br>Военных: <NShipInSys[1]>\";",
              "        if(NShipInSys[10]) temp_str = temp_str + \"<br>Элитных военных: <NShipInSys[10]>\";",
              "        if(NShipInSys[4]) temp_str = temp_str + \"<br>Линкоров: <NShipInSys[4]>\";",
              "        if(NShipInSys[16]) temp_str = temp_str + \"<br>Дредноутов: <NShipInSys[16]>\";",
              "        if(NShipInSys[15]) temp_str = temp_str + Format(CT('Script.Mod_ExpCB.HostileStations'), '<Count'+'>', NShipInSys[15]);",
              "    }",
              "    else temp_str = temp_str + \"</color><br><br><br><color=255,0,0>Система беззащитна!</color>\";",
              "",
              "    //Заполняем основной массив temp_array с подробной информацией о системах",
              "    ArrayAdd(temp_array, temp_str);",
              "    //Составляем и добавляем в массив temp_array_2 строчки краткого обзора списка систем",
              "    if(temp_int_1) temp_str = \"</color><clrEnd>Система: <StarName(temp_dword)><br>Сектор: <ConName(StarToCon(temp_dword))><br>Военных объектов: <temp_int_1>\";",
              "    else temp_str = \"</color><clrEnd>Система: <StarName(temp_dword)><br>Cектор: <ConName(StarToCon(temp_dword))><br>Военных объектов: <color=255,0,0>0</color>\";",
              "    ArrayAdd(temp_array_2, temp_str);",
              "    //Добавляем в массив temp_array_3 список систем для подстановки в ответы",
              "    //Сраная \"трёхметровая\" Витта Прайонис удостоилась отдельной проверки",
              "    if(StarName(temp_dword) == \"Витта Прайонис\") ArrayAdd(temp_array_3, \"Подробнее о системе <color=0,50,200>Витта Прай.</color>\");",
              "    else ArrayAdd(temp_array_3, \"Подробнее о системе\" + ' <StarName(temp_dword)>');",
              "    //Добавляем вспомогательный массив с числом кораблей в системах",
              "    ArrayAdd(temp_array_4, temp_int_1);",
              "    temp_str = '';",
              "    CheckById = '';",
              "    temp_int_1 = 0;",
              "    WarsOnWing = 0;",
              "    ShipsInSys = 0;",
              "    LastPlanet = 0;",
              "    ArrayClear(NShipInSys);",
              "}",
              "",
              "temp_str = '';",
              "",
              "//Расставляем разделители в списке систем",
              "for(i = 1; i < ArrayDim(temp_array_2); i = i + 1)",
              "{",
              "    temp_str = temp_str + '<temp_array_2[i]>';",
              "    if((i + 2) <= ArrayDim(temp_array_2))",
              "    {",
              "        if(GetGameOptions('FontDialog') == '0') temp_str = temp_str + \"<br>\" + '------------------------------' + \"<br>\";",
              "        else if(GetGameOptions('FontDialog') == '1') temp_str = temp_str + \"<br>\" + '--------------------------' + \"<br>\";",
              "        else if(GetGameOptions('FontDialog') == '2') temp_str = temp_str + \"<br>\" + '---------------------------' + \"<br>\";",
              "        else temp_str = temp_str + \"<br>\" + '--------------------------' + \"<br>\";",
              "    }",
              "}",
              "//Вычисляем количество всех военных кораблей в галактике",
              "ArrayAdd(temp_array_4, 0);",
              "for(i = 1; i < ArrayDim(temp_array_4); i = i + 1)",
              "{",
              "    if((i - 1) != temp_array_4[ArrayDim(temp_array_4) - 1]) temp_array_4[ArrayDim(temp_array_4) - 1] = temp_array_4[ArrayDim(temp_array_4) - 1] + temp_array_4[i - 1];",
              "}",
              "",
              "//Выставляем реплику в зависимости от того барон или не барон игрок",
              "//А также в зависимости от того, производилась ли сегодня оплата разведданных",
              "if(!temp_int_2)",
              "{",
              "    SpeechRec = '</color>' + \"Разумеется, ваше пиратейшество, вот полная сводка всех боеспособных военных кораблей Коалиции за сегодняшний день:<br> <br><temp_str><br> <br>Всего в Галактике: <temp_array_4[ArrayDim(temp_array_4) - 1]>\";",
              "}",
              "if(PayCheck) temp_int_2 = -1;",
              "if(temp_int_2 == -1)",
              "{",
              "    SpeechRec = '</color>' + \"Вот полная сводка всех боеспособных военных кораблей Коалиции за сегодняшний день:<br> <br><temp_str><br> <br>Всего в Галактике: <temp_array_4[ArrayDim(temp_array_4) - 1]>\";",
              "}",
              "if(temp_int_2 > 0)",
              "{",
              "    SpeechRec = \"</color>Узнать число военных кораблей, говоришь? Это можно.<br>Осведомителей у нас хватает на каждой подконтрольной Коалиции планете, так что о присутствии её вооружённых сил нам ежедневно докладывают, можно сказать, из первых уст.<br>Однако, сам понимаешь, бесплатно такую информацию предоставлять невыгодно.<br>С учётом твоего авторитета в нашем движении, скажем... <temp_int_2> cr. за сегодняшнюю сводку. Число просмотров до конца дня неограничено.\";",
              "    AnswerRec = \"</color>Купить свежую разведсводку\";",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  450,
          "Pos.y":  560,
          "Parent":  -1,
          "#":  61,
          "Total.Lines":  126,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//В конце дня обнуляем переменную \"оплаты\" разведсводки",
              "if(PayCheck) PayCheck = 0;",
              "",
              "//Перебираем все последние галактические эвенты, ловим события уничтожения/постройки баз",
              "for(i = GalaxyEvents() - 1; i >= 0; i = i - 1)",
              "{",
              "    if(GalaxyEventDate(i) < CurTurn()) break;",
              "    tstr1 = GalaxyEventType(i);",
              "",
              "    //Была построена/уничтожена ВБ, либо доминион, обновляем счётчики",
              "    if(tstr1 == 'RuinsCreated')",
              "    {",
              "        if(GalaxyEventData(i, 0) == t_SB)",
              "        {",
              "            if(GalaxyEventsTextData(i, 1) == '') TotalSBCount = TotalSBCount + 1;",
              "        }",
              "        else if(GalaxyEventData(i, 0) == t_WB)",
              "        {",
              "            if(GalaxyEventsTextData(i, 1) == '') TotalWBCount = TotalWBCount + 1;",
              "        }",
              "        else if(GalaxyEventData(i, 0) == t_CB)",
              "        {",
              "            if(GalaxyEventsTextData(i, 1) == '') TotalCBCount = TotalCBCount + 1;",
              "        }",
              "    }",
              "    else if(tstr1 == 'RuinsDestroyed')",
              "    {",
              "        if(GalaxyEventData(i, 0) == t_SB)",
              "        {",
              "            if(GalaxyEventsTextData(i, 1) == '') TotalSBCount = max(TotalSBCount - 1, 0);",
              "        }",
              "        else if(GalaxyEventData(i, 0) == t_WB)",
              "        {",
              "            if(GalaxyEventsTextData(i, 1) == '') TotalWBCount = max(TotalWBCount - 1, 0);",
              "        }",
              "        else if(GalaxyEventData(i, 0) == t_CB)",
              "        {",
              "            if(GalaxyEventsTextData(i, 1) == '') TotalCBCount = max(TotalCBCount - 1, 0);",
              "        }",
              "    }",
              "}",
              "",
              "//HybridDroidQuestStatus == -2 - квест провален или игрок получил гибридного дроида иным путём",
              "//HybridDroidQuestStatus == -1 - квест выполнен",
              "//HybridDroidQuestStatus ==  0 - квест не получен",
              "//HybridDroidQuestStatus ==  1 - квест взят, игрок должен найти спецагентку с секретным грузом на борту, используя пеленгатор",
              "//HybridDroidQuestStatus ==  2 - игрок прилетел в систему к агентке и использовал там пеленгатор, агентка получает возможность перейти в режим доставки дроида",
              "//HybridDroidQuestStatus ==  3 - агентка стриггерила эвент, дипломат, транк и военные вступают в игру",
              "//HybridDroidQuestStatus ==  4 - игрок атаковал дипломата и ему было выведено гневное сообщение",
              "if(HybridDroidQuestStatus > 0)",
              "{",
              "    if(HybridDroidQuestStatus == 1 || HybridDroidQuestStatus == 2)",
              "    {",
              "        cur_ship = IdToShip(HybridDroidQuestAgentId);",
              "        if(!cur_ship) //Агентку каким-то образом уничтожили, квест провален",
              "        {",
              "            Ether(5, 'HybridDroidQuestCB', '<color=255,0,0>' + CT('Quest.Info.OldQuests.NotAccepted') + Format('</color>') + Format('<br> <br>') + CT('Script.Mod_ExpCB.HybridDroidQuestDialog.QuestNote1'));",
              "            HybridDroidQuestStatus = -2;",
              "        }",
              "        else",
              "        {",
              "            //Крутим счётчик дней в уведомлении квеста",
              "            if(HybridDroidQuestTimer > CurTurn())",
              "            {",
              "                Ether(3, 'HybridDroidQuestCB', '<color=255,240,100>' + CT('Quest.Info.CurQuests.NotAccepted') + Format('</color><br>') + Format(CT('Quest.Info.CountDay'), '<Day'+'>', HybridDroidQuestTimer - CurTurn(), '255,240,100') + Format('<br> <br>') + CT('Script.Mod_ExpCB.HybridDroidQuestDialog.QuestNote1'));",
              "            }",
              "",
              "            if(Hit(cur_ship, 0) || HybridDroidQuestTimer <= CurTurn()) //Игрок атаковал агентку, квест также провален",
              "            {",
              "                for(i = ShipItems(cur_ship) - 1; i >= 1; i = i - 1)",
              "                {",
              "                    cur_item = ShipItems(cur_ship, i);",
              "                    if(ItemType(cur_item) != t_UselessItem) continue;",
              "                    if(EquipmentImageName(cur_item) != 'ExpCB_SecretPackage') continue;",
              "                    FreeItem(GetItemFromShip(cur_ship, i));",
              "                    break;",
              "                }",
              "                ShipSpecialBonuses(cur_ship, bonDef, ShipSpecialBonuses(cur_ship, bonDef) - 25);",
              "",
              "                if(Hit(cur_ship, 0))",
              "                {",
              "                    Ether(10, '', '<color=255,240,100>' + Name(cur_ship) + Format('</color><br> <br>') + CT('Script.Mod_ExpCB.HybridDroidQuestDialog.AgentRageOnAggression'));",
              "                    ConChangeRelationToRanger(StarToCon(ShipStar(cur_ship)), Player(), -91);",
              "                    //Также меняем отношение станций, если подключён мод ExpTraitors",
              "                    if(IsScriptActive('Mod_ExpTraitors'))",
              "                    {",
              "                        ChangeRuinsRelationFunFiller['LocalVariableRelation'] = ChangeRuinsRelationFunFiller['LocalVariableRelation'] - 80;",
              "                        ChangeRuinsRelationFunFiller['ChangeRuinsRelationToPlayerCallMark'] = 1;",
              "                    }",
              "                }",
              "                Ether(5, 'HybridDroidQuestCB', '<color=255,0,0>' + CT('Quest.Info.OldQuests.NotAccepted') + Format('</color>') + Format('<br> <br>') + CT('Script.Mod_ExpCB.HybridDroidQuestDialog.QuestNote1'));",
              "                HybridDroidQuestStatus = -2;",
              "            }",
              "            else if(ShipStar(Player()) == ShipStar(cur_ship)) //Игрок подлетел слишком близко и обжёгся (нет), квест также провален",
              "            {",
              "                if(ShipInNormalSpace(Player()) && ShipInNormalSpace(cur_ship))",
              "                {",
              "                    if(Dist(Player(), cur_ship) < 500)",
              "                    {",
              "                        for(i = ShipItems(cur_ship) - 1; i >= 1; i = i - 1)",
              "                        {",
              "                            cur_item = ShipItems(cur_ship, i);",
              "                            if(ItemType(cur_item) != t_UselessItem) continue;",
              "                            if(EquipmentImageName(cur_item) != 'ExpCB_SecretPackage') continue;",
              "                            FreeItem(GetItemFromShip(cur_ship, i));",
              "                            break;",
              "                        }",
              "                        ShipSpecialBonuses(cur_ship, bonDef, ShipSpecialBonuses(cur_ship, bonDef) - 25);",
              "",
              "                        Ether(10, '', '<color=255,240,100>' + Name(cur_ship) + Format('</color><br> <br>') + CT('Script.Mod_ExpCB.HybridDroidQuestDialog.AgentRageOnApproach'));",
              "                        ConChangeRelationToRanger(StarToCon(ShipStar(cur_ship)), Player(), -91);",
              "                        //Также меняем отношение станций, если подключён мод ExpTraitors",
              "                        if(IsScriptActive('Mod_ExpTraitors'))",
              "                        {",
              "                            ChangeRuinsRelationFunFiller['LocalVariableRelation'] = ChangeRuinsRelationFunFiller['LocalVariableRelation'] - 80;",
              "                            ChangeRuinsRelationFunFiller['ChangeRuinsRelationToPlayerCallMark'] = 1;",
              "                        }",
              "",
              "                        Ether(5, 'HybridDroidQuestCB', '<color=255,0,0>' + CT('Quest.Info.OldQuests.NotAccepted') + Format('</color>') + Format('<br> <br>') + CT('Script.Mod_ExpCB.HybridDroidQuestDialog.QuestNote1'));",
              "                        HybridDroidQuestStatus = -2;",
              "                    }",
              "                }",
              "            }",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  -50,
          "Parent":  43,
          "#":  62,
          "Total.Lines":  4,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player(), ShipMoney(Player()) - temp_int_2);",
              "Sound('Sound.Buy');",
              "ThanksForMoney = \"</color>От души! Ты только не переживай, деньги эти пойдут ну обеспечение работы агентурной сети. С коррупцией у нас строго.<br>\";",
              "PayCheck = 1;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  30,
          "Pos.y":  0,
          "Parent":  59,
          "#":  74,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "for(i = 1; i < ArrayDim(temp_array_3); i = i + 1) InjectAnswer('AddSysInfo', temp_array_3[i], i);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  730,
          "Pos.y":  670,
          "Parent":  -1,
          "#":  89,
          "Total.Lines":  15,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Игрок приобрёл ММ за \"наличные\" ноды (трюм + склад) + за ноды со счёта",
              "i = GAnswerData;",
              "GetNodesFromShip(Player(), GetNodesFromShip(Player()));",
              "GetNodesFromStorage(cur_ruin, GetNodesFromStorage(cur_ruin));",
              "RangerBaseNodes(Player(), RangerBaseNodes(Player()) - modules[0, i]);",
              "",
              "//Запоминаем, какой номер ММ из цепочки был продан игроку",
              "temp_int = ShipCustomShipInfoData(cur_ruin, 'CBSoldMMChainInfos', i) + 1;",
              "if(temp_int > 50) temp_int = 0;",
              "ShipCustomShipInfoData(cur_ruin, 'CBSoldMMChainInfos', i, temp_int);",
              "",
              "AddItemToShip(Player(), CreateMM(modules[i, 0]));",
              "Sound('Sound.Sell');",
              "",
              "temp_str = '</color>' + Format(CT('FormRuins.CB.TakeNod.CBAfterBuy'), '<Name' + '>', BonusName(modules[i, 0]));"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  760,
          "Pos.y":  690,
          "Parent":  -1,
          "#":  90,
          "Total.Lines":  13,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Игрок приобрёл ММ только за ноды со счёта",
              "i = GAnswerData;",
              "RangerBaseNodes(Player(), RangerBaseNodes(Player()) - modules[i, 2]);",
              "",
              "//Запоминаем, какой номер ММ из цепочки был продан игроку",
              "temp_int = ShipCustomShipInfoData(cur_ruin, 'CBSoldMMChainInfos', i) + 1;",
              "if(temp_int > 50) temp_int = 0;",
              "ShipCustomShipInfoData(cur_ruin, 'CBSoldMMChainInfos', i, temp_int);",
              "",
              "AddItemToShip(Player(), CreateMM(modules[i, 0]));",
              "Sound('Sound.Sell');",
              "",
              "temp_str = '</color>' + Format(CT('FormRuins.CB.TakeNod.CBAfterBuy'), '<Name' + '>', BonusName(modules[i, 0]));"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  760,
          "Pos.y":  600,
          "Parent":  -1,
          "#":  94,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "temp_str = '</color>' + CT('FormRuins.CB.TakeNod.CBAfterPlayerNo');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  560,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  98,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cost = PortionInDiapason(GalaxyTechLevel(), 4, 8, 10, 50);",
              "tstr1 = '</color>' + Format(CT('Script.Mod_ExpCB.DDoS_Info'), '<Cost'+'>', cost, '<NodeAccount'+'>', RangerBaseNodes(Player()));"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  136,
          "#":  103,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1 = '</color>' + CT('Script.Mod_ExpCB.HybridDroidQuestDialog.OfferCB');",
              "tstr2 = '</color>' + CT('Script.Mod_ExpCB.HybridDroidQuestDialog.PlayerAskNextOfferCB');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  107,
          "#":  109,
          "Total.Lines":  7,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cost = GalaxyMoney(4, PirateClan) * 50;",
              "discount = round(100.0 * ShipStatus(Player(), 1) / 130) + 1;",
              "cost = round(0.01 * discount * cost);",
              "",
              "tstr1 = '</color>' + Format(CT('Script.Mod_ExpCB.HybridDroidQuestDialog.NextOfferCB'), '<Cost'+'>', cost, '<Discount'+'>', '' + discount + '%');",
              "tstr2 = '</color>' + Format(CT('Script.Mod_ExpCB.HybridDroidQuestDialog.PlayerYesOfferCB'), '<EndDate'+'>', HybridDroidQuestTimer);",
              "tstr3 = '</color>' + CT('Script.Mod_ExpCB.HybridDroidQuestDialog.PlayerNoOfferCB');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  112,
          "#":  117,
          "Total.Lines":  40,
          "Code.Type":  "Turn",
          "Code":          
          [
              "dword package = CreateQuestItem('ExpCB_SecretPackage', None);",
              "ItemSize(package, 20); //Типа нераспакованный гибридный дроид",
              "dword ship = RunFunctionFromScript('PC_fem_rangers', 'GetFemRangers', 0);",
              "HybridDroidQuestAgentId = Id(ship);",
              "",
              "ShipAddCustomShipInfo(ship, 'ExpCB_AgentWithSecretPackage', 'NoShow');",
              "ShipAddCustomShipInfo(ship, 'ShipImmortalInfo', 'NoShow');",
              "",
              "AddItemToShip(ship, package);",
              "NoDropItem(package, 1);",
              "if(ShipEqInSlot(ship, t_DefGenerator)) FreeItem(GetItemFromShip(ship, ShipEqInSlot(ship, t_DefGenerator)));",
              "dword item = CreateEquipmentWithSpecial(FindBonusByNameInCfg('447'), 25, 8, ShipPilotRace(ship)); //Нанобролитовый генератор защиты III",
              "AddItemToShip(ship, item);",
              "ItemIsInUse(item, ship, 1);",
              "ShipSpecialBonuses(ship, bonDef, ShipSpecialBonuses(ship, bonDef) + 25);",
              "ShipImproveItems(ship, 5); //Заодно пофиксит перевес, если таковой возникнет",
              "",
              "/*",
              "int cnt = RunFunctionFromScript('PC_fem_rangers', 'GetFemRangers');",
              "for(int i = 0; i < cnt; i = i + 1)",
              "{",
              "    dword ship = RunFunctionFromScript('PC_fem_rangers', 'GetFemRangers', i);",
              "    AddItemToShip(ship, cur_item);",
              "}",
              "*/",
              "",
              "cur_item = CreateQuestItem('ExpCB_MilitaryFinder', Peleng);",
              "UselessItemData(cur_item, 1, HybridDroidQuestAgentId);",
              "UselessItemData(cur_item, 2, Id(package));",
              "AddItemToShip(Player(), cur_item);",
              "HybridDroidQuestStatus = 1;",
              "HybridDroidQuestTimer = CurTurn() + 200 + RndObject(-15, 25, cur_ruin);",
              "RunFunctionFromScript('PC_fem_rangers', 'FailHybridDroidAcception');",
              "",
              "ShipMoney(Player(), ShipMoney(Player()) - cost);",
              "Sound('Sound.Buy');",
              "",
              "Ether(3, 'HybridDroidQuestCB', '<color=255,240,100>' + CT('Quest.Info.CurQuests.NotAccepted') + Format('</color><br>') + Format(CT('Quest.Info.CountDay'), '<Day'+'>', HybridDroidQuestTimer - CurTurn() + 1, '255,240,100') + Format('<br> <br>') + CT('Script.Mod_ExpCB.HybridDroidQuestDialog.QuestNote1'));",
              "",
              "tstr1 = '</color>' + CT('Script.Mod_ExpCB.HybridDroidQuestDialog.YesOfferCB');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  113,
          "#":  118,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1 = '</color>' + CT('Script.Mod_ExpCB.HybridDroidQuestDialog.NoOfferCB');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  121,
          "#":  132,
          "Total.Lines":  57,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Логика дипломата-испытателя",
              "if(!ShipInNormalSpace(CurShip))",
              "{",
              "    if(GroupCount(SupportQuestShip))",
              "    {",
              "        OrderTakeOff(CurShip);",
              "        exit;",
              "    }",
              "",
              "    ShipDestroy(CurShip, 1);",
              "    OrderNone(CurShip);",
              "",
              "    Ether(5, 'HybridDroidQuestCB', '<color=255,0,0>' + CT('Quest.Info.OldQuests.NotAccepted') + Format('</color><br> <br>') + Format(CT('Script.Mod_ExpCB.HybridDroidQuestDialog.QuestNote2'), '<TargetShip'+'>', Name(CurShip), '255,240,100'));",
              "    HybridDroidQuestStatus = -2; //Дипломат вернулся на родную планету, квест провален",
              "",
              "    exit;",
              "}",
              "",
              "",
              "if(!Hit(CurShip, 0) && Dist(CurShip, Player()) >= 500 && HybridDroidQuestStatus < 4)",
              "{",
              "    if(!GroupCount(SupportQuestShip)) OrderLanding(CurShip, GetShipHomePlanet(CurShip));",
              "    else",
              "    {",
              "        OrderFollowShip(CurShip, GroupToShip(SupportQuestShip), 1);",
              "        ShipSetBad(CurShip, GroupToShip(SupportQuestShip));",
              "    }",
              "}",
              "else //Игрок атаковал дипломата, тот огрызается",
              "{",
              "    if(ShipStar(Player()) == ShipStar(CurShip) && ShipInNormalSpace(Player()))",
              "    {",
              "        OrderFollowShip(CurShip, Player(), 1);",
              "        ShipSetBad(CurShip, Player());",
              "    }",
              "    else",
              "    {",
              "        OrderLanding(CurShip, GetShipHomePlanet(CurShip));",
              "        ShipSetBad(CurShip, Player());",
              "    }",
              "",
              "    if(HybridDroidQuestStatus < 4)",
              "    {",
              "        if(Hit(CurShip, 0)) Ether(10, '', '<color=255,240,100>' + Name(CurShip) + Format('</color><br> <br>') + Format(CT('Script.Mod_ExpCB.HybridDroidQuestDialog.DiplomatRageOnAggression'), '<Planet'+'>', Name(GetShipHomePlanet(CurShip)), '255,240,100'));",
              "        else Ether(10, '', '<color=255,240,100>' + Name(CurShip) + Format('</color><br> <br>') + Format(CT('Script.Mod_ExpCB.HybridDroidQuestDialog.DiplomatRageOnApproach'), '<Planet'+'>', Name(GetShipHomePlanet(CurShip)), '255,240,100'));",
              "",
              "        ConChangeRelationToRanger(StarToCon(ShipStar(cur_ship)), Player(), -91);",
              "        //Также меняем отношение станций, если подключён мод ExpTraitors",
              "        if(IsScriptActive('Mod_ExpTraitors'))",
              "        {",
              "            ChangeRuinsRelationFunFiller['LocalVariableRelation'] = ChangeRuinsRelationFunFiller['LocalVariableRelation'] - 80;",
              "            ChangeRuinsRelationFunFiller['ChangeRuinsRelationToPlayerCallMark'] = 1;",
              "        }",
              "",
              "        HybridDroidQuestStatus = 4;",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  131,
          "#":  133,
          "Total.Lines":  24,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Логика транклюкатора-мишени",
              "if(!ShipInNormalSpace(CurShip))",
              "{",
              "    if(GroupCount(MainQuestShip))",
              "    {",
              "        OrderTakeOff(CurShip);",
              "        exit;",
              "    }",
              "",
              "    //Если цель задания была уничтожена, удаляем военного",
              "    ShipDestroy(CurShip, 1);",
              "    exit;",
              "}",
              "",
              "if(!GroupCount(MainQuestShip))",
              "{",
              "    ShipDestroy(CurShip, 1);",
              "    OrderNone(CurShip);",
              "    exit;",
              "}",
              "else",
              "{",
              "    OrderFollowShip(CurShip, GroupToShip(MainQuestShip), 1);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  0,
          "Parent":  129,
          "#":  134,
          "Total.Lines":  33,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Логика военных сопровождения",
              "if(!ShipInNormalSpace(CurShip))",
              "{",
              "    if(GroupCount(MainQuestShip))",
              "    {",
              "        OrderTakeOff(CurShip);",
              "        exit;",
              "    }",
              "",
              "    //Если цель задания была уничтожена, удаляем военного",
              "    ShipDestroy(CurShip, 1);",
              "    OrderNone(CurShip);",
              "    exit;",
              "}",
              "",
              "int check = 0;",
              "if(!GroupCount(MainQuestShip)) check = 1;",
              "else if(Hit(GroupToShip(MainQuestShip), 0)) check = 1; //Игрок атаковал дипломата",
              "",
              "if(check)",
              "{",
              "    OrderLock(CurShip, 1);",
              "",
              "    if(ShipStar(Player()) != ShipStar(CurShip))",
              "    {",
              "        OrderLanding(CurShip, GetShipHomePlanet(CurShip));",
              "    }",
              "    else",
              "    {",
              "        OrderFollowShip(CurShip, Player(), 1);",
              "        ShipSetBad(CurShip, Player());",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  137,
          "#":  138,
          "Total.Lines":  10,
          "Code.Type":  "Turn",
          "Code":          
          [
              "cur_ship = GetTalkShip();",
              "if(ShipGroup(cur_ship) == MainQuestShip)",
              "{",
              "    if(ShipGetBad(cur_ship) != Player()) tstr1 = '</color>' + CT('Script.Mod_ExpCB.HybridDroidQuestDialog.DiplomatAnswer');",
              "    else tstr1 = '</color>' + CT('Script.Mod_ExpCB.HybridDroidQuestDialog.DiplomatAnswerAfterAggression');",
              "}",
              "else if(ShipGroup(cur_ship) == SupportQuestShip) tstr1 = '</color>' + CT('Script.Mod_ExpCB.HybridDroidQuestDialog.TranclucatorAnswer');",
              "else tstr1 = '</color>' + CT('Script.Mod_ExpCB.HybridDroidQuestDialog.WarriorAnswer');",
              "",
              "tstr2 = '</color>' + CT('Talk.Exit');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  240,
          "Pos.y":  770,
          "Parent":  -1,
          "#":  143,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(GetData(0) <= CurTurn()) ShipOut(CurShip);"          
          ]        
        }      
      ],
      "Places":      
      [
        {
          "Type":  "TPlace",
          "Name":  "GuardQuestShipsRange",
          "Pos.x":  0,
          "Pos.y":  -100,
          "Parent":  128,
          "#":  135,
          "Place.Type":  5,
          "Angle":  "0",
          "Dist":  "0",
          "Radius":  350,
          "Obj1":  120,
          "Obj2":  -1        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "InitPlanet",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  0,
          "#":  1,
          "Race":  62,
          "Owner":  62,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  390,
          "Pos.y":  590,
          "Parent":  -1,
          "#":  4,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "InitStar",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  4,
          "#":  0,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "Statements":      
      [
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  560,
          "Pos.y":  620,
          "Parent":  -1,
          "#":  9,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "RangerBaseNodes(Player()) && ShipMoney(Player()) >= cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  530,
          "Pos.y":  650,
          "Parent":  -1,
          "#":  14,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "get_nods > 0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  500,
          "Pos.y":  590,
          "Parent":  -1,
          "#":  47,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "get_nods <= 0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  580,
          "Pos.y":  620,
          "Parent":  -1,
          "#":  48,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "RangerBaseNodes(Player()) <= 0 || ShipMoney(Player()) < cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  30,
          "Parent":  59,
          "#":  58,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "temp_int_2 > 0 && ShipMoney(Player()) >= temp_int_2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  50,
          "Parent":  74,
          "#":  73,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "temp_int_2 <= 0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  -30,
          "Parent":  44,
          "#":  79,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "temp_int_2 > 0 && ShipMoney(Player()) < temp_int_2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  40,
          "Parent":  43,
          "#":  81,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "temp_int_2 <= 0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  40,
          "Parent":  44,
          "#":  82,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "temp_int_2 > 0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  108,
          "#":  110,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) >= cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  20,
          "Parent":  108,
          "#":  111,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  108,
          "#":  125,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player()) < cost"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  101,
          "#":  136,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GetShipRuins(Player())"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  101,
          "#":  137,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!GetShipRuins(Player())"          
          ]        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "PlayerState",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  2,
          "#":  3,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "MainQuestShipState",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  120,
          "#":  121,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "HybridDroidQuestDialog",
          "OnActCode":  "[t_OnTakingDamageEn,t_OnTakingDamageSp,t_OnTakingDamageMi,t_OnDeath|]\r\nMainQuestShipActCode();",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "GuardQuestShipsState",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  128,
          "#":  129,
          "Move":  1,
          "MoveObj":  135,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  141            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "HybridDroidQuestDialog",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "SupportQuestShipState",
          "Pos.x":  260,
          "Pos.y":  690,
          "Parent":  -1,
          "#":  131,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "HybridDroidQuestDialog",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "AttackerQuestShipsState",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  141,
          "#":  142,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "end",
          "Pos.x":  0,
          "Pos.y":  240,
          "Parent":  26,
          "#":  11,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "get_nods",
          "Pos.x":  0,
          "Pos.y":  140,
          "Parent":  26,
          "#":  12,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_str",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  68,
          "#":  13,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_int",
          "Pos.x":  0,
          "Pos.y":  40,
          "Parent":  26,
          "#":  17,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "modules",
          "Pos.x":  330,
          "Pos.y":  0,
          "Parent":  26,
          "#":  18,
          "Var.Type":  "Unknown",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cost",
          "Pos.x":  0,
          "Pos.y":  220,
          "Parent":  26,
          "#":  20,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "i",
          "Pos.x":  500,
          "Pos.y":  750,
          "Parent":  -1,
          "#":  26,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "j",
          "Pos.x":  30,
          "Pos.y":  0,
          "Parent":  26,
          "#":  27,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "k",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  26,
          "#":  28,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "l",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  27,
          "#":  29,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ruin",
          "Pos.x":  600,
          "Pos.y":  790,
          "Parent":  -1,
          "#":  30,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_array",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  69,
          "#":  31,
          "Var.Type":  "Unknown",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_dword",
          "Pos.x":  600,
          "Pos.y":  850,
          "Parent":  -1,
          "#":  32,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "discount",
          "Pos.x":  0,
          "Pos.y":  120,
          "Parent":  26,
          "#":  38,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_int_1",
          "Pos.x":  0,
          "Pos.y":  60,
          "Parent":  26,
          "#":  40,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_array_2",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  31,
          "#":  45,
          "Var.Type":  "Unknown",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_dword_2",
          "Pos.x":  600,
          "Pos.y":  870,
          "Parent":  -1,
          "#":  46,
          "Var.Type":  "Unknown",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_int_2",
          "Pos.x":  0,
          "Pos.y":  80,
          "Parent":  26,
          "#":  54,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "AnswerRec",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  56,
          "#":  55,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "SpeechRec",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  78,
          "#":  56,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "PayCheck",
          "Pos.x":  0,
          "Pos.y":  200,
          "Parent":  26,
          "#":  60,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_dword_3",
          "Pos.x":  600,
          "Pos.y":  890,
          "Parent":  -1,
          "#":  63,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "WarsOnWing",
          "Pos.x":  0,
          "Pos.y":  180,
          "Parent":  26,
          "#":  64,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ShipsInSys",
          "Pos.x":  0,
          "Pos.y":  160,
          "Parent":  26,
          "#":  65,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "TypeName",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  55,
          "#":  66,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "LastPlanet",
          "Pos.x":  0,
          "Pos.y":  100,
          "Parent":  26,
          "#":  67,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "EndLine",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  86,
          "#":  68,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "NShipInSys",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  18,
          "#":  69,
          "Var.Type":  "Unknown",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "CheckById",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  92,
          "#":  70,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_array_3",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  45,
          "#":  71,
          "Var.Type":  "Unknown",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_array_4",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  71,
          "#":  72,
          "Var.Type":  "Unknown",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ThanksForMoney",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  70,
          "#":  78,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DefSplt",
          "Pos.x":  210,
          "Pos.y":  0,
          "Parent":  26,
          "#":  86,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "discount_float",
          "Pos.x":  0,
          "Pos.y":  270,
          "Parent":  26,
          "#":  91,
          "Var.Type":  "Float",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_str2",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  13,
          "#":  92,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ruin",
          "Pos.x":  600,
          "Pos.y":  770,
          "Parent":  -1,
          "#":  93,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "TotalCBCount",
          "Pos.x":  410,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  95,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_star",
          "Pos.x":  600,
          "Pos.y":  750,
          "Parent":  -1,
          "#":  96,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "TotalWBCount",
          "Pos.x":  410,
          "Pos.y":  520,
          "Parent":  -1,
          "#":  97,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr1",
          "Pos.x":  710,
          "Pos.y":  950,
          "Parent":  -1,
          "#":  99,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "TotalSBCount",
          "Pos.x":  410,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  100,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "HybridDroidQuestStatus",
          "Pos.x":  0,
          "Pos.y":  -60,
          "Parent":  101,
          "#":  102,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr2",
          "Pos.x":  710,
          "Pos.y":  970,
          "Parent":  -1,
          "#":  105,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr3",
          "Pos.x":  710,
          "Pos.y":  990,
          "Parent":  -1,
          "#":  106,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_item",
          "Pos.x":  600,
          "Pos.y":  830,
          "Parent":  -1,
          "#":  119,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_ship",
          "Pos.x":  600,
          "Pos.y":  810,
          "Parent":  -1,
          "#":  123,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "HybridDroidQuestAgentId",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  102,
          "#":  124,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "HybridDroidQuestTimer",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  124,
          "#":  127,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  4,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  1,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  2,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  2,
      "End":  3,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  6,
      "End":  9,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  10,
      "End":  7,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  7,
      "End":  14,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  14,
      "End":  15,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  15,
      "End":  16,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  23,
      "End":  25,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  25,
      "End":  24,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  36,
      "End":  35,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  35,
      "End":  34,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  34,
      "End":  33,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  24,
      "End":  37,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  9,
      "End":  10,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  16,
      "End":  39,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  6,
      "End":  8,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  24,
      "End":  41,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  43,
      "End":  44,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  7,
      "End":  47,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  47,
      "End":  6,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  48,
      "End":  49,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  6,
      "End":  48,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  50,
      "End":  51,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  8,
      "End":  52,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  52,
      "End":  53,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  44,
      "End":  58,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  58,
      "End":  59,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  59,
      "End":  62,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  62,
      "End":  43,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  44,
      "End":  73,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  73,
      "End":  74,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  75,
      "End":  76,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  76,
      "End":  77,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  77,
      "End":  44,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  44,
      "End":  79,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  79,
      "End":  80,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  44,
      "End":  81,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  81,
      "End":  57,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  44,
      "End":  82,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  82,
      "End":  84,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  84,
      "End":  83,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  83,
      "End":  85,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  87,
      "End":  89,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  88,
      "End":  90,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  89,
      "End":  34,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  90,
      "End":  34,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  42,
      "End":  43,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  41,
      "End":  94,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  94,
      "End":  50,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  21,
      "End":  98,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  98,
      "End":  6,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  103,
      "End":  104,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  104,
      "End":  107,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  110,
      "End":  112,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  111,
      "End":  113,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  108,
      "End":  110,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  108,
      "End":  111,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  107,
      "End":  109,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  109,
      "End":  108,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  114,
      "End":  115,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  112,
      "End":  117,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  117,
      "End":  116,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  113,
      "End":  118,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  118,
      "End":  114,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  116,
      "End":  115,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  120,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  120,
      "End":  121,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  108,
      "End":  125,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  125,
      "End":  126,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  128,
      "End":  129,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  128,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  130,
      "End":  131,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  130,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  121,
      "End":  132,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  131,
      "End":  133,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  129,
      "End":  134,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  101,
      "End":  136,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  136,
      "End":  103,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  101,
      "End":  137,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  137,
      "End":  138,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  138,
      "End":  139,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  139,
      "End":  140,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  135,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  141,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  141,
      "End":  142,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  142,
      "End":  143,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "BlockPar.EC.Total.Strings":  43,
  "BlockPar.EC":  
  [
    {
      "#":  "103",
      "String":  "Я передумал"    
    },
    {
      "#":  "104",
      "String":  "Снять ноды с нод счёта"    
    },
    {
      "#":  "109",
      "String":  "Сколько нодов снять?"    
    },
    {
      "#":  "128",
      "String":  "Операция прошла успешно. Ноды уже погружены в твой трюм."    
    },
    {
      "#":  "136",
      "String":  "Ну, не хочешь как хочешь. Желаю удачи в \"обналичивании\" нодов у доминаторов."    
    },
    {
      "#":  "141",
      "String":  "</color>Узнать число военных кораблей, говоришь? Это можно.<br>Осведомителей у нас хватает на каждой подконтрольной Коалиции планете, так что о присутствии её вооружённых сил нам ежедневно докладывают, можно сказать, из первых уст.<br>Однако, сам понимаешь, бесплатно такую информацию предоставлять невыгодно.<br>С учётом твоего авторитета в нашем движении, скажем... <0> cr. за сегодняшнюю сводку. Число просмотров до конца дня неограничено."    
    },
    {
      "#":  "143",
      "String":  "<0>"    
    },
    {
      "#":  "144",
      "String":  "Назад"    
    },
    {
      "#":  "149",
      "String":  "На вылете"    
    },
    {
      "#":  "150",
      "String":  "В ангаре"    
    },
    {
      "#":  "151",
      "String":  "Статус:"    
    },
    {
      "#":  "152",
      "String":  "Тип: <0>"    
    },
    {
      "#":  "16",
      "String":  "<br>"    
    },
    {
      "#":  "163",
      "String":  "Ополченец"    
    },
    {
      "#":  "174",
      "String":  "<br>Ополченцев: <0>"    
    },
    {
      "#":  "179",
      "String":  "<br>- <color=255,0,0>Беззащитна</color> -"    
    },
    {
      "#":  "196",
      "String":  "<br>Элитных военных: <0>"    
    },
    {
      "#":  "197",
      "String":  "<br>Военных: <0>"    
    },
    {
      "#":  "198",
      "String":  "Элитный военный"    
    },
    {
      "#":  "199",
      "String":  "Военный"    
    },
    {
      "#":  "200",
      "String":  "Планета: <0>"    
    },
    {
      "#":  "202",
      "String":  "В системе"    
    },
    {
      "#":  "205",
      "String":  "<0><1>"    
    },
    {
      "#":  "207",
      "String":  "</color>От души! Ты только не переживай, деньги эти пойдут ну обеспечение работы агентурной сети. С коррупцией у нас строго.<br>"    
    },
    {
      "#":  "208",
      "String":  "Подробнее о системе"    
    },
    {
      "#":  "209",
      "String":  "Подробнее о системе <color=0,50,200>Витта Прай.</color>"    
    },
    {
      "#":  "210",
      "String":  "Витта Прайонис"    
    },
    {
      "#":  "212",
      "String":  "</color>Система: <0><br>Сектор: <1><br><br><br>"    
    },
    {
      "#":  "213",
      "String":  "</color><br><br><br><color=255,0,0>Система беззащитна!</color>"    
    },
    {
      "#":  "214",
      "String":  "Не, ну ты уж совсем не борзей, да?! За эти данные многие наши разведчики отдали свои жизни, между прочим! Наверное..."    
    },
    {
      "#":  "215",
      "String":  "Нет, как-то дороговато"    
    },
    {
      "#":  "219",
      "String":  "</color>Купить свежую разведсводку"    
    },
    {
      "#":  "222",
      "String":  "<color=0,50,200>Всего в системе</color>"    
    },
    {
      "#":  "238",
      "String":  "Вот полная сводка всех боеспособных военных кораблей Коалиции за сегодняшний день:<br> <br><0><br> <br>Всего в Галактике: <1>"    
    },
    {
      "#":  "239",
      "String":  "Разумеется, ваше пиратейшество, вот полная сводка всех боеспособных военных кораблей Коалиции за сегодняшний день:<br> <br><0><br> <br>Всего в Галактике: <1>"    
    },
    {
      "#":  "243",
      "String":  "Предоставьте мне полную информацию о численности коалиционного флота"    
    },
    {
      "#":  "244",
      "String":  "Хочу заказать DDoS атаку сети центров рейнджеров"    
    },
    {
      "#":  "249",
      "String":  "<br>Дредноутов: <0>"    
    },
    {
      "#":  "251",
      "String":  "Дредноут"    
    },
    {
      "#":  "252",
      "String":  "<br>Линкоров: <0>"    
    },
    {
      "#":  "253",
      "String":  "Линкор"    
    },
    {
      "#":  "254",
      "String":  "</color><clrEnd>Система: <0><br>Cектор: <1><br>Военных объектов: <color=255,0,0>0</color>"    
    },
    {
      "#":  "255",
      "String":  "</color><clrEnd>Система: <0><br>Сектор: <1><br>Военных объектов: <2>"    
    }  
  ]
}