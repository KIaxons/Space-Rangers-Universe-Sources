{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -149,
  "ViewPos.y":  18,
  "ScriptName":  "Mod_ExpAutoSearch",
  "ScriptFileOut":  "H:\\Mod_ExpAutoSearch.scr",
  "ScriptTextOut":  "H:\\Mod_ExpAutoSearch.txt",
  "GraphPoint.Count":  64,
  "GraphLink.Count":  35,
  "GraphRectText.Count":  0,
  "Variables.Count":  26,
  "Stars.Count":  1,
  "Planets.Count":  1,
  "Ships.Count":  1,
  "States.Count":  1,
  "Groups.Count":  1,
  "Places.Count":  0,
  "Items.Count":  0,
  "Ethers.Count":  0,
  "Dialogs.Count":  2,
  "DialogMessages.Count":  2,
  "DialogAnswers.Count":  6,
  "Operations.Count":  10,
  "Statements.Count":  13,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "DialogAnswers":      
      [
        {
          "Type":  "TDialogAnswer",
          "Name":  "restart",
          "Pos.x":  780,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  25,
          "Msg":  "<tstr3>",
          "AMsg.Num":  "0"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  640,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  30,
          "Msg":  "<tstr1>",
          "AMsg.Num":  "1"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  660,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  31,
          "Msg":  "<tstr1>",
          "AMsg.Num":  "2"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  710,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  37,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "3"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "block",
          "Pos.x":  730,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  40,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "4"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  780,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  53,
          "Msg":  "<tstr2>",
          "AMsg.Num":  "5"        
        }      
      ],
      "DialogMessages":      
      [
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  720,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  24,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "0"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  710,
          "Pos.y":  490,
          "Parent":  -1,
          "#":  48,
          "Msg":  "<tstr1>",
          "DMsg.Num":  "1"        
        }      
      ],
      "Dialogs":      
      [
        {
          "Type":  "TDialog",
          "Name":  "AutoSearch",
          "Pos.x":  720,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  23        
        },
        {
          "Type":  "TDialog",
          "Name":  "AutoSearchChange",
          "Pos.x":  780,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  43        
        }      
      ],
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "PlayerGroup",
          "Pos.x":  370,
          "Pos.y":  360,
          "Parent":  -1,
          "#":  6,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  420,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  3,
          "Total.Lines":  1,
          "Code.Type":  "Global",
          "Code":          
          [
              "GRun();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  440,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  4,
          "Total.Lines":  414,
          "Code.Type":  "Init",
          "Code":          
          [
              "//GItemsToSearchArr[0,0] == число текущих активных запросов;",
              "//GItemsToSearchArr[0,1] == максимально допустимое число запросов;",
              "//GItemsToSearchArr[1+,N] == различные параметры запроса;",
              "",
              "//Запрос для корпуса:",
              "//GItemsToSearchArr[N,0] == доступна ли для выбора малокская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,1] == доступна ли для выбора пеленгская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,2] == доступна ли для выбора человеческая раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,3] == доступна ли для выбора фэянская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,4] == доступна ли для выбора гаальская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,5] == доступна ли для выбора доминаторская раса-производитель;",
              "//GItemsToSearchArr[N,6] == доступна ли для выбора неизвестная раса-производитель;",
              "//GItemsToSearchArr[N,7] == доступна ли для выбора пиратская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,8] == доступна ли для выбора кастомная раса-производитель;",
              "//GItemsToSearchArr[N,9] == название первой кастомной расы, если она доступна;",
              "//GItemsToSearchArr[N,10] == название второй доступной кастомной расы;",
              "//GItemsToSearchArr[N,11] == название третьей доступной кастомной расы;",
              "//GItemsToSearchArr[N,12] == доступен ли для выбора рейнджерский корпус;",
              "//GItemsToSearchArr[N,13] == доступен ли для выбора корпус военного;",
              "//GItemsToSearchArr[N,14] == доступен ли для выбора пиратский корпус;",
              "//GItemsToSearchArr[N,15] == доступен ли для выбора корпус транспорта;",
              "//GItemsToSearchArr[N,16] == доступен ли для выбора корпус дипломата;",
              "//GItemsToSearchArr[N,17] == доступен ли для выбора корпус лайнера;",
              "//GItemsToSearchArr[N,18] == доступен ли для выбора корпус флагмана;",
              "//GItemsToSearchArr[N,19] == минимальное число открытых слотов под оружие;",
              "//GItemsToSearchArr[N,20] == минимальное число открытых слотов под артефакты;",
              "//GItemsToSearchArr[N,21] == должен ли быть открытым слот радара;",
              "//GItemsToSearchArr[N,22] == должен ли быть открытым слот сканера;",
              "//GItemsToSearchArr[N,23] == должен ли быть открытым слот дроида;",
              "//GItemsToSearchArr[N,24] == должен ли быть открытым слот захвата;",
              "//GItemsToSearchArr[N,25] == должен ли быть открытым слот ГЗП;",
              "//GItemsToSearchArr[N,26] == должен ли быть открытым слот форсажа;",
              "//GItemsToSearchArr[N,27] == максимально допустимая восприимчивость к энергетическому урону;",
              "//GItemsToSearchArr[N,28] == максимально допустимая восприимчивость к осколочному урону;",
              "//GItemsToSearchArr[N,29] == максимально допустимая восприимчивость к ракетному урону;",
              "//GItemsToSearchArr[N,30] == минимальное количество брони корпуса;",
              "//GItemsToSearchArr[N,31] == обязательная серия корпуса: -2 - без серии и -1 - любая серия;",
              "//GItemsToSearchArr[N,32] == может ли в корпус быть установлен микромодуль в виде системного имени: -2, если ММ запрещены и -1, если разрешены любые ММ;",
              "//GItemsToSearchArr[N,33] == доступный для выбора акрин в виде системного имени: -2, если акрины запрещены и -1, если разрешены любые акрины;",
              "//GItemsToSearchArr[N,34] == минимальный уровень акрина, если актуально;",
              "//GItemsToSearchArr[N,35] == минимальный ТУ корпуса;",
              "//GItemsToSearchArr[N,36] == минимальная вместимость корпуса;",
              "//GItemsToSearchArr[N,37] == предельная стоимость корпуса;",
              "//GItemsToSearchArr[N,38] == тип запроса: 'Hulls';",
              "//GItemsToSearchArr[N,39] == в какой ход (CurTurn()) должен быть произведён следующий запрос;",
              "//GItemsToSearchArr[N,40] == частота текущего поискового запроса, каждые N дней;",
              "",
              "//Запрос для оружия:",
              "//GItemsToSearchArr[N,0] == доступна ли для выбора малокская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,1] == доступна ли для выбора пеленгская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,2] == доступна ли для выбора человеческая раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,3] == доступна ли для выбора фэянская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,4] == доступна ли для выбора гаальская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,5] == доступна ли для выбора доминаторская раса-производитель;",
              "//GItemsToSearchArr[N,6] == доступна ли для выбора неизвестная раса-производитель;",
              "//GItemsToSearchArr[N,7] == доступна ли для выбора пиратская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,8] == доступна ли для выбора кастомная раса-производитель;",
              "//GItemsToSearchArr[N,9] == название первой кастомной расы, если она доступна;",
              "//GItemsToSearchArr[N,10] == название второй доступной кастомной расы;",
              "//GItemsToSearchArr[N,11] == название третьей доступной кастомной расы;",
              "//GItemsToSearchArr[N,12] == доступен ли для выбора энергетический тип оружия;",
              "//GItemsToSearchArr[N,13] == доступен ли для выбора осколочный тип оружия;",
              "//GItemsToSearchArr[N,14] == доступен ли для выбора ракетный тип оружия;",
              "//GItemsToSearchArr[N,15] == минимальный уровень минимальных повреждений оружия;",
              "//GItemsToSearchArr[N,16] == минимальный уровень максимальных повреждений оружия;",
              "//GItemsToSearchArr[N,17] == минимальная дальность стрельбы;",
              "//GItemsToSearchArr[N,18] == минимальное число выстрелов за ход;",
              "//GItemsToSearchArr[N,19] == числовой тип оружия: -1, если тип не выбран;",
              "//GItemsToSearchArr[N,20] == кастомный тип оружия: -1, если тип не выбран;",
              "//GItemsToSearchArr[N,21] == ---",
              "//GItemsToSearchArr[N,22] == ---",
              "//GItemsToSearchArr[N,23] == ---",
              "//GItemsToSearchArr[N,24] == ---",
              "//GItemsToSearchArr[N,25] == ---",
              "//GItemsToSearchArr[N,26] == ---",
              "//GItemsToSearchArr[N,27] == ---",
              "//GItemsToSearchArr[N,28] == ---",
              "//GItemsToSearchArr[N,29] == ---",
              "//GItemsToSearchArr[N,30] == ---",
              "//GItemsToSearchArr[N,31] == ---",
              "//GItemsToSearchArr[N,32] == может ли в оружие быть установлен микромодуль в виде системного имени: -2, если ММ запрещены и -1, если разрешены любые ММ;",
              "//GItemsToSearchArr[N,33] == доступная для выбора модификация (акрин) в виде системного имени: -2, если акрины запрещены и -1, если разрешены любые акрины;",
              "//GItemsToSearchArr[N,34] == минимальный уровень модификации (акрина), если актуально;",
              "//GItemsToSearchArr[N,35] == минимальный ТУ оружия;",
              "//GItemsToSearchArr[N,36] == предельный вес оружия;",
              "//GItemsToSearchArr[N,37] == предельная стоимость оружия;",
              "//GItemsToSearchArr[N,38] == тип запроса: 'Weapons';",
              "//GItemsToSearchArr[N,39] == в какой ход (CurTurn()) должен быть произведён следующий запрос;",
              "//GItemsToSearchArr[N,40] == частота текущего поискового запроса, каждые N дней;",
              "",
              "//Запрос для двигателя:",
              "//GItemsToSearchArr[N,0] == доступна ли для выбора малокская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,1] == доступна ли для выбора пеленгская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,2] == доступна ли для выбора человеческая раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,3] == доступна ли для выбора фэянская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,4] == доступна ли для выбора гаальская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,5] == доступна ли для выбора доминаторская раса-производитель;",
              "//GItemsToSearchArr[N,6] == доступна ли для выбора неизвестная раса-производитель;",
              "//GItemsToSearchArr[N,7] == доступна ли для выбора пиратская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,8] == доступна ли для выбора кастомная раса-производитель;",
              "//GItemsToSearchArr[N,9] == название первой кастомной расы, если она доступна;",
              "//GItemsToSearchArr[N,10] == название второй доступной кастомной расы;",
              "//GItemsToSearchArr[N,11] == название третьей доступной кастомной расы;",
              "//GItemsToSearchArr[N,12] == минимальная скорость двигателя;",
              "//GItemsToSearchArr[N,13] == минимальная дальность прыжка двигателя;",
              "//GItemsToSearchArr[N,14] == ---",
              "//GItemsToSearchArr[N,15] == ---",
              "//GItemsToSearchArr[N,16] == ---",
              "//GItemsToSearchArr[N,17] == ---",
              "//GItemsToSearchArr[N,18] == ---",
              "//GItemsToSearchArr[N,19] == ---",
              "//GItemsToSearchArr[N,20] == ---",
              "//GItemsToSearchArr[N,21] == ---",
              "//GItemsToSearchArr[N,22] == ---",
              "//GItemsToSearchArr[N,23] == ---",
              "//GItemsToSearchArr[N,24] == ---",
              "//GItemsToSearchArr[N,25] == ---",
              "//GItemsToSearchArr[N,26] == ---",
              "//GItemsToSearchArr[N,27] == ---",
              "//GItemsToSearchArr[N,28] == ---",
              "//GItemsToSearchArr[N,29] == ---",
              "//GItemsToSearchArr[N,30] == ---",
              "//GItemsToSearchArr[N,31] == ---",
              "//GItemsToSearchArr[N,32] == может ли в двигатель быть установлен микромодуль в виде системного имени: -2, если ММ запрещены и -1, если разрешены любые ММ;",
              "//GItemsToSearchArr[N,33] == доступный для выбора акрин в виде системного имени: -2, если акрины запрещены и -1, если разрешены любые акрины;",
              "//GItemsToSearchArr[N,34] == минимальный уровень акрина, если актуально;",
              "//GItemsToSearchArr[N,35] == минимальный ТУ двигателя;",
              "//GItemsToSearchArr[N,36] == предельный вес двигателя;",
              "//GItemsToSearchArr[N,37] == предельная стоимость двигателя;",
              "//GItemsToSearchArr[N,38] == тип запроса: 'Engines';",
              "//GItemsToSearchArr[N,39] == в какой ход (CurTurn()) должен быть произведён следующий запрос;",
              "//GItemsToSearchArr[N,40] == частота текущего поискового запроса, каждые N дней;",
              "",
              "//Запрос для топливного бака:",
              "//GItemsToSearchArr[N,0] == доступна ли для выбора малокская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,1] == доступна ли для выбора пеленгская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,2] == доступна ли для выбора человеческая раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,3] == доступна ли для выбора фэянская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,4] == доступна ли для выбора гаальская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,5] == доступна ли для выбора доминаторская раса-производитель;",
              "//GItemsToSearchArr[N,6] == доступна ли для выбора неизвестная раса-производитель;",
              "//GItemsToSearchArr[N,7] == доступна ли для выбора пиратская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,8] == доступна ли для выбора кастомная раса-производитель;",
              "//GItemsToSearchArr[N,9] == название первой кастомной расы, если она доступна;",
              "//GItemsToSearchArr[N,10] == название второй доступной кастомной расы;",
              "//GItemsToSearchArr[N,11] == название третьей доступной кастомной расы;",
              "//GItemsToSearchArr[N,12] == минимальная ёмкость бака;",
              "//GItemsToSearchArr[N,13] == ---",
              "//GItemsToSearchArr[N,14] == ---",
              "//GItemsToSearchArr[N,15] == ---",
              "//GItemsToSearchArr[N,16] == ---",
              "//GItemsToSearchArr[N,17] == ---",
              "//GItemsToSearchArr[N,18] == ---",
              "//GItemsToSearchArr[N,19] == ---",
              "//GItemsToSearchArr[N,20] == ---",
              "//GItemsToSearchArr[N,21] == ---",
              "//GItemsToSearchArr[N,22] == ---",
              "//GItemsToSearchArr[N,23] == ---",
              "//GItemsToSearchArr[N,24] == ---",
              "//GItemsToSearchArr[N,25] == ---",
              "//GItemsToSearchArr[N,26] == ---",
              "//GItemsToSearchArr[N,27] == ---",
              "//GItemsToSearchArr[N,28] == ---",
              "//GItemsToSearchArr[N,29] == ---",
              "//GItemsToSearchArr[N,30] == ---",
              "//GItemsToSearchArr[N,31] == ---",
              "//GItemsToSearchArr[N,32] == может ли в двигатель быть установлен микромодуль в виде системного имени: -2, если ММ запрещены и -1, если разрешены любые ММ;",
              "//GItemsToSearchArr[N,33] == доступный для выбора акрин в виде системного имени: -2, если акрины запрещены и -1, если разрешены любые акрины;",
              "//GItemsToSearchArr[N,34] == минимальный уровень акрина, если актуально;",
              "//GItemsToSearchArr[N,35] == минимальный ТУ двигателя;",
              "//GItemsToSearchArr[N,36] == предельный вес двигателя;",
              "//GItemsToSearchArr[N,37] == предельная стоимость двигателя;",
              "//GItemsToSearchArr[N,38] == тип запроса: 'FuelTanks';",
              "//GItemsToSearchArr[N,39] == в какой ход (CurTurn()) должен быть произведён следующий запрос;",
              "//GItemsToSearchArr[N,40] == частота текущего поискового запроса, каждые N дней;",
              "",
              "//Запрос для радара:",
              "//GItemsToSearchArr[N,0] == доступна ли для выбора малокская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,1] == доступна ли для выбора пеленгская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,2] == доступна ли для выбора человеческая раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,3] == доступна ли для выбора фэянская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,4] == доступна ли для выбора гаальская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,5] == доступна ли для выбора доминаторская раса-производитель;",
              "//GItemsToSearchArr[N,6] == доступна ли для выбора неизвестная раса-производитель;",
              "//GItemsToSearchArr[N,7] == доступна ли для выбора пиратская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,8] == доступна ли для выбора кастомная раса-производитель;",
              "//GItemsToSearchArr[N,9] == название первой кастомной расы, если она доступна;",
              "//GItemsToSearchArr[N,10] == название второй доступной кастомной расы;",
              "//GItemsToSearchArr[N,11] == название третьей доступной кастомной расы;",
              "//GItemsToSearchArr[N,12] == минимальная дистанция радара;",
              "//GItemsToSearchArr[N,13] == ---",
              "//GItemsToSearchArr[N,14] == ---",
              "//GItemsToSearchArr[N,15] == ---",
              "//GItemsToSearchArr[N,16] == ---",
              "//GItemsToSearchArr[N,17] == ---",
              "//GItemsToSearchArr[N,18] == ---",
              "//GItemsToSearchArr[N,19] == ---",
              "//GItemsToSearchArr[N,20] == ---",
              "//GItemsToSearchArr[N,21] == ---",
              "//GItemsToSearchArr[N,22] == ---",
              "//GItemsToSearchArr[N,23] == ---",
              "//GItemsToSearchArr[N,24] == ---",
              "//GItemsToSearchArr[N,25] == ---",
              "//GItemsToSearchArr[N,26] == ---",
              "//GItemsToSearchArr[N,27] == ---",
              "//GItemsToSearchArr[N,28] == ---",
              "//GItemsToSearchArr[N,29] == ---",
              "//GItemsToSearchArr[N,30] == ---",
              "//GItemsToSearchArr[N,31] == ---",
              "//GItemsToSearchArr[N,32] == может ли в двигатель быть установлен микромодуль в виде системного имени: -2, если ММ запрещены и -1, если разрешены любые ММ;",
              "//GItemsToSearchArr[N,33] == доступный для выбора акрин в виде системного имени: -2, если акрины запрещены и -1, если разрешены любые акрины;",
              "//GItemsToSearchArr[N,34] == минимальный уровень акрина, если актуально;",
              "//GItemsToSearchArr[N,35] == минимальный ТУ двигателя;",
              "//GItemsToSearchArr[N,36] == предельный вес двигателя;",
              "//GItemsToSearchArr[N,37] == предельная стоимость двигателя;",
              "//GItemsToSearchArr[N,38] == тип запроса: 'Radars';",
              "//GItemsToSearchArr[N,39] == в какой ход (CurTurn()) должен быть произведён следующий запрос;",
              "//GItemsToSearchArr[N,40] == частота текущего поискового запроса, каждые N дней;",
              "",
              "//Запрос для сканера:",
              "//GItemsToSearchArr[N,0] == доступна ли для выбора малокская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,1] == доступна ли для выбора пеленгская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,2] == доступна ли для выбора человеческая раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,3] == доступна ли для выбора фэянская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,4] == доступна ли для выбора гаальская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,5] == доступна ли для выбора доминаторская раса-производитель;",
              "//GItemsToSearchArr[N,6] == доступна ли для выбора неизвестная раса-производитель;",
              "//GItemsToSearchArr[N,7] == доступна ли для выбора пиратская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,8] == доступна ли для выбора кастомная раса-производитель;",
              "//GItemsToSearchArr[N,9] == название первой кастомной расы, если она доступна;",
              "//GItemsToSearchArr[N,10] == название второй доступной кастомной расы;",
              "//GItemsToSearchArr[N,11] == название третьей доступной кастомной расы;",
              "//GItemsToSearchArr[N,12] == минимальная мощность сканера;",
              "//GItemsToSearchArr[N,13] == ---",
              "//GItemsToSearchArr[N,14] == ---",
              "//GItemsToSearchArr[N,15] == ---",
              "//GItemsToSearchArr[N,16] == ---",
              "//GItemsToSearchArr[N,17] == ---",
              "//GItemsToSearchArr[N,18] == ---",
              "//GItemsToSearchArr[N,19] == ---",
              "//GItemsToSearchArr[N,20] == ---",
              "//GItemsToSearchArr[N,21] == ---",
              "//GItemsToSearchArr[N,22] == ---",
              "//GItemsToSearchArr[N,23] == ---",
              "//GItemsToSearchArr[N,24] == ---",
              "//GItemsToSearchArr[N,25] == ---",
              "//GItemsToSearchArr[N,26] == ---",
              "//GItemsToSearchArr[N,27] == ---",
              "//GItemsToSearchArr[N,28] == ---",
              "//GItemsToSearchArr[N,29] == ---",
              "//GItemsToSearchArr[N,30] == ---",
              "//GItemsToSearchArr[N,31] == ---",
              "//GItemsToSearchArr[N,32] == может ли в двигатель быть установлен микромодуль в виде системного имени: -2, если ММ запрещены и -1, если разрешены любые ММ;",
              "//GItemsToSearchArr[N,33] == доступный для выбора акрин в виде системного имени: -2, если акрины запрещены и -1, если разрешены любые акрины;",
              "//GItemsToSearchArr[N,34] == минимальный уровень акрина, если актуально;",
              "//GItemsToSearchArr[N,35] == минимальный ТУ двигателя;",
              "//GItemsToSearchArr[N,36] == предельный вес двигателя;",
              "//GItemsToSearchArr[N,37] == предельная стоимость двигателя;",
              "//GItemsToSearchArr[N,38] == тип запроса: 'Scanners';",
              "//GItemsToSearchArr[N,39] == в какой ход (CurTurn()) должен быть произведён следующий запрос;",
              "//GItemsToSearchArr[N,40] == частота текущего поискового запроса, каждые N дней;",
              "",
              "//Запрос для дроида:",
              "//GItemsToSearchArr[N,0] == доступна ли для выбора малокская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,1] == доступна ли для выбора пеленгская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,2] == доступна ли для выбора человеческая раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,3] == доступна ли для выбора фэянская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,4] == доступна ли для выбора гаальская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,5] == доступна ли для выбора доминаторская раса-производитель;",
              "//GItemsToSearchArr[N,6] == доступна ли для выбора неизвестная раса-производитель;",
              "//GItemsToSearchArr[N,7] == доступна ли для выбора пиратская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,8] == доступна ли для выбора кастомная раса-производитель;",
              "//GItemsToSearchArr[N,9] == название первой кастомной расы, если она доступна;",
              "//GItemsToSearchArr[N,10] == название второй доступной кастомной расы;",
              "//GItemsToSearchArr[N,11] == название третьей доступной кастомной расы;",
              "//GItemsToSearchArr[N,12] == минимальная эффективность дроида;",
              "//GItemsToSearchArr[N,13] == ---",
              "//GItemsToSearchArr[N,14] == ---",
              "//GItemsToSearchArr[N,15] == ---",
              "//GItemsToSearchArr[N,16] == ---",
              "//GItemsToSearchArr[N,17] == ---",
              "//GItemsToSearchArr[N,18] == ---",
              "//GItemsToSearchArr[N,19] == ---",
              "//GItemsToSearchArr[N,20] == ---",
              "//GItemsToSearchArr[N,21] == ---",
              "//GItemsToSearchArr[N,22] == ---",
              "//GItemsToSearchArr[N,23] == ---",
              "//GItemsToSearchArr[N,24] == ---",
              "//GItemsToSearchArr[N,25] == ---",
              "//GItemsToSearchArr[N,26] == ---",
              "//GItemsToSearchArr[N,27] == ---",
              "//GItemsToSearchArr[N,28] == ---",
              "//GItemsToSearchArr[N,29] == ---",
              "//GItemsToSearchArr[N,30] == ---",
              "//GItemsToSearchArr[N,31] == ---",
              "//GItemsToSearchArr[N,32] == может ли в двигатель быть установлен микромодуль в виде системного имени: -2, если ММ запрещены и -1, если разрешены любые ММ;",
              "//GItemsToSearchArr[N,33] == доступный для выбора акрин в виде системного имени: -2, если акрины запрещены и -1, если разрешены любые акрины;",
              "//GItemsToSearchArr[N,34] == минимальный уровень акрина, если актуально;",
              "//GItemsToSearchArr[N,35] == минимальный ТУ двигателя;",
              "//GItemsToSearchArr[N,36] == предельный вес двигателя;",
              "//GItemsToSearchArr[N,37] == предельная стоимость двигателя;",
              "//GItemsToSearchArr[N,38] == тип запроса: 'Droids';",
              "//GItemsToSearchArr[N,39] == в какой ход (CurTurn()) должен быть произведён следующий запрос;",
              "//GItemsToSearchArr[N,40] == частота текущего поискового запроса, каждые N дней;",
              "",
              "//Запрос для захвата:",
              "//GItemsToSearchArr[N,0] == доступна ли для выбора малокская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,1] == доступна ли для выбора пеленгская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,2] == доступна ли для выбора человеческая раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,3] == доступна ли для выбора фэянская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,4] == доступна ли для выбора гаальская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,5] == доступна ли для выбора доминаторская раса-производитель;",
              "//GItemsToSearchArr[N,6] == доступна ли для выбора неизвестная раса-производитель;",
              "//GItemsToSearchArr[N,7] == доступна ли для выбора пиратская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,8] == доступна ли для выбора кастомная раса-производитель;",
              "//GItemsToSearchArr[N,9] == название первой кастомной расы, если она доступна;",
              "//GItemsToSearchArr[N,10] == название второй доступной кастомной расы;",
              "//GItemsToSearchArr[N,11] == название третьей доступной кастомной расы;",
              "//GItemsToSearchArr[N,12] == минимальный размер захватываемых объектов;",
              "//GItemsToSearchArr[N,13] == минимальная дальность захвата;",
              "//GItemsToSearchArr[N,14] == минимальная скорость на дальней дистанции;",
              "//GItemsToSearchArr[N,15] == минимальная скорость на ближней дистанции;",
              "//GItemsToSearchArr[N,16] == ---",
              "//GItemsToSearchArr[N,17] == ---",
              "//GItemsToSearchArr[N,18] == ---",
              "//GItemsToSearchArr[N,19] == ---",
              "//GItemsToSearchArr[N,20] == ---",
              "//GItemsToSearchArr[N,21] == ---",
              "//GItemsToSearchArr[N,22] == ---",
              "//GItemsToSearchArr[N,23] == ---",
              "//GItemsToSearchArr[N,24] == ---",
              "//GItemsToSearchArr[N,25] == ---",
              "//GItemsToSearchArr[N,26] == ---",
              "//GItemsToSearchArr[N,27] == ---",
              "//GItemsToSearchArr[N,28] == ---",
              "//GItemsToSearchArr[N,29] == ---",
              "//GItemsToSearchArr[N,30] == ---",
              "//GItemsToSearchArr[N,31] == ---",
              "//GItemsToSearchArr[N,32] == может ли в двигатель быть установлен микромодуль в виде системного имени: -2, если ММ запрещены и -1, если разрешены любые ММ;",
              "//GItemsToSearchArr[N,33] == доступный для выбора акрин в виде системного имени: -2, если акрины запрещены и -1, если разрешены любые акрины;",
              "//GItemsToSearchArr[N,34] == минимальный уровень акрина, если актуально;",
              "//GItemsToSearchArr[N,35] == минимальный ТУ двигателя;",
              "//GItemsToSearchArr[N,36] == предельный вес двигателя;",
              "//GItemsToSearchArr[N,37] == предельная стоимость двигателя;",
              "//GItemsToSearchArr[N,38] == тип запроса: 'Grippers';",
              "//GItemsToSearchArr[N,39] == в какой ход (CurTurn()) должен быть произведён следующий запрос;",
              "//GItemsToSearchArr[N,40] == частота текущего поискового запроса, каждые N дней;",
              "",
              "//Запрос для ГЗП:",
              "//GItemsToSearchArr[N,0] == доступна ли для выбора малокская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,1] == доступна ли для выбора пеленгская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,2] == доступна ли для выбора человеческая раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,3] == доступна ли для выбора фэянская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,4] == доступна ли для выбора гаальская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,5] == доступна ли для выбора доминаторская раса-производитель;",
              "//GItemsToSearchArr[N,6] == доступна ли для выбора неизвестная раса-производитель;",
              "//GItemsToSearchArr[N,7] == доступна ли для выбора пиратская раса-производитель (-1 - недоступна и заблокирована);",
              "//GItemsToSearchArr[N,8] == доступна ли для выбора кастомная раса-производитель;",
              "//GItemsToSearchArr[N,9] == название первой кастомной расы, если она доступна;",
              "//GItemsToSearchArr[N,10] == название второй доступной кастомной расы;",
              "//GItemsToSearchArr[N,11] == название третьей доступной кастомной расы;",
              "//GItemsToSearchArr[N,12] == минимальный процент блокируемого урона;",
              "//GItemsToSearchArr[N,13] == ---",
              "//GItemsToSearchArr[N,14] == ---",
              "//GItemsToSearchArr[N,15] == ---",
              "//GItemsToSearchArr[N,16] == ---",
              "//GItemsToSearchArr[N,17] == ---",
              "//GItemsToSearchArr[N,18] == ---",
              "//GItemsToSearchArr[N,19] == ---",
              "//GItemsToSearchArr[N,20] == ---",
              "//GItemsToSearchArr[N,21] == ---",
              "//GItemsToSearchArr[N,22] == ---",
              "//GItemsToSearchArr[N,23] == ---",
              "//GItemsToSearchArr[N,24] == ---",
              "//GItemsToSearchArr[N,25] == ---",
              "//GItemsToSearchArr[N,26] == ---",
              "//GItemsToSearchArr[N,27] == ---",
              "//GItemsToSearchArr[N,28] == ---",
              "//GItemsToSearchArr[N,29] == ---",
              "//GItemsToSearchArr[N,30] == ---",
              "//GItemsToSearchArr[N,31] == ---",
              "//GItemsToSearchArr[N,32] == может ли в двигатель быть установлен микромодуль в виде системного имени: -2, если ММ запрещены и -1, если разрешены любые ММ;",
              "//GItemsToSearchArr[N,33] == доступный для выбора акрин в виде системного имени: -2, если акрины запрещены и -1, если разрешены любые акрины;",
              "//GItemsToSearchArr[N,34] == минимальный уровень акрина, если актуально;",
              "//GItemsToSearchArr[N,35] == минимальный ТУ двигателя;",
              "//GItemsToSearchArr[N,36] == предельный вес двигателя;",
              "//GItemsToSearchArr[N, 37] == предельная стоимость двигателя;",
              "//GItemsToSearchArr[N, 38] == тип запроса: 'ShieldGenerators';",
              "//GItemsToSearchArr[N, 39] == в какой ход (CurTurn()) должен быть произведён следующий запрос;",
              "//GItemsToSearchArr[N, 40] == частота текущего поискового запроса, каждые N дней;",
              "maxRequestCount = 15;",
              "GItemsToSearchArr = newarray(1 + maxRequestCount, 41);",
              "GItemsToSearchArr[0, 0] = 0;",
              "GItemsToSearchArr[0, 1] = maxRequestCount;",
              "",
              "//Задаём максимальное число выводимых по запросу успешных результатов",
              "maxResultsCount = 8;",
              "//Задаём цену оформления и переоформления запроса",
              "requestCreateCost = round(0.80 * GalaxyMoney(1, 2));",
              "//Задаём цену произведения запроса",
              "requestRollCost = 6;",
              "",
              "//GAcrynListTempArr[0] == режим открытия кастомной формы настроек автопоиска: -1 - форма закрывается без оформления запроса, 0 - режим составления нового запроса, 1-N - режим изменения уже созданного запроса;",
              "//GAcrynListTempArr[1] == тип предмета, для которого в настоящий момент составлен список акринов/орудий в массиве, нужен, чтобы не обновлять массив при каждом обращении пока открыта форма настройки автопоиска;",
              "//GAcrynListTempArr[2+] == список номеров бонусов или типов орудий, доступных для выбора;",
              "GAcrynListTempArr = newarray(2);",
              "",
              "//Стартовый перебор числа БЦ в Галактике",
              "for(i = 0; i < GalaxyStars(); i = i + 1)",
              "{",
              "    cur_star = GalaxyStar(i);",
              "    if(!StarRuins(cur_star, 'BK')) continue;",
              "    TotalBKCount = TotalBKCount + 1;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  480,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  5,
          "Total.Lines":  323,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Перерассчитываем стоимость оформления и переоформления поискового запроса",
              "requestCreateCost = round(0.80 * GalaxyMoney(1, 2));",
              "",
              "//Проверяем галасобытия, ищем создание и уничтожение бизнес-центров",
              "for(i=GalaxyEvents() - 1; i >= 0; i = i - 1)",
              "{",
              "    if(GalaxyEventDate(i) < CurTurn()) break;",
              "    if(GalaxyEventType(i) == 'RuinsCreated')",
              "    {",
              "        //Если был построен БЦ, производим поиск, т.к. БЦ мог построить другой мод в своих целях",
              "        if(GalaxyEventData(i, 0) == t_BK)",
              "        {",
              "            if(GalaxyEventsTextData(i, 1) == '')",
              "            {",
              "                //Проверяем появление нового БЦ в Галактике",
              "                cur_star = GalaxyStar(GalaxyEventData(i, 2) - 1);",
              "                if(StarRuins(cur_star, 'BK'))",
              "                {",
              "                    //Если таки действительно построили новый БЦ",
              "                    //Если ранее все БЦ в Галактике были уничтожены, то обнуляем счетчики во всех автопоисковых запросах",
              "                    if(!TotalBKCount)",
              "                    {",
              "                        for(tint1 = 1; tint1 <= GItemsToSearchArr[0, 0]; tint1 = tint1 + 1)",
              "                        {",
              "                            //Обновляем таймер запроса",
              "                            GItemsToSearchArr[tint1, 39] = CurTurn() + GItemsToSearchArr[tint1, 40];",
              "                        }",
              "                    }",
              "                    TotalBKCount = TotalBKCount + 1;",
              "                }",
              "            }",
              "        }",
              "    }",
              "    else if(GalaxyEventType(i) == 'RuinsDestroyed')",
              "    {",
              "        //Если был уничтожен БЦ, отматываем счётчик",
              "        if(GalaxyEventData(i, 0) == t_BK)",
              "        {",
              "            if(GalaxyEventsTextData(i,1) == '')",
              "            {",
              "                TotalBKCount = TotalBKCount - 1;",
              "                if(!TotalBKCount)",
              "                {",
              "                    if(GItemsToSearchArr[0, 0]) NewsAdd(CT('Script.Mod_ExpAutoSearch.NoBKLeft'));",
              "                }",
              "            }",
              "        }",
              "    }",
              "}",
              "//Если в Галактике есть хотя бы один БЦ",
              "if(TotalBKCount)",
              "{",
              "    //Корректировка в процессе начатой партии, можно будет убрать к середине лета 2022",
              "    maxResultsCount = 8;",
              "",
              "    //Проверяем наличие активных запросов",
              "    if(GItemsToSearchArr[0, 0])",
              "    {",
              "        //Если у игрока имеется не более двух просрочек по кредиту",
              "        if(PlayerDebtCnt() <= 2)",
              "        {",
              "            GAcrynListTempArr = newarray(1);",
              "            //Ищем среди активных запросов те, которые должны произойти на этом ходу",
              "            for(i = 1; i <= GItemsToSearchArr[0, 0]; i = i + 1)",
              "            {",
              "                if(GItemsToSearchArr[i, 39] <= CurTurn()) ArrayAdd(GAcrynListTempArr, i);",
              "            }",
              "            //Если нашли хоть один такой",
              "            if(ArrayDim(GAcrynListTempArr) > 1)",
              "            {",
              "                //Передаём в dll указатель на любой сектор для того чтобы она смогла найти в памяти галактические системы, планеты и т.п.",
              "                //Используется для последовательного перебора систем, начиная с нулевой, но в текущей реализации не нужно",
              "                //LoadSectorsToAutoSearchLib(GalaxySectors(0));",
              "                tint3 = 0;",
              "                for(i = 1; i < ArrayDim(GAcrynListTempArr); i = i + 1)",
              "                {",
              "                    requestNum = GAcrynListTempArr[i];",
              "                    //Если у игрока на счету достаточно денег для произведения запроса",
              "                    if(ShipMoney(Player()) < requestRollCost)",
              "                    {",
              "                        //Обновляем таймер запроса",
              "                        GItemsToSearchArr[requestNum, 39] = CurTurn() + GItemsToSearchArr[requestNum, 40];",
              "                        CustomEther('AutoSearch', 0, '', Format(CT('Script.Mod_ExpAutoSearch.NoMoneyForRequest'), '#0#', requestRollCost));",
              "                        //Sound('Sound.NoSize');",
              "                        continue;",
              "                    }",
              "                    else tint3 = tint3 + requestRollCost;",
              "                    //Передаём dll акрин уже в виде номера (сохранять точный номер в запрос нецелесообразно по причине возможной ренумерации при переподключении модов)",
              "                    if(GItemsToSearchArr[requestNum, 33] >= 0) tint1 = FindBonusByNameInCfg(GItemsToSearchArr[requestNum, 33]);",
              "                    else tint1 = GItemsToSearchArr[requestNum, 33];",
              "                    //Определяем необходимость пропуска скрытого пиратского сектора",
              "                    tint2 = 0;",
              "                    if(PirateWin()) tint2 = 1;",
              "                    //Передаём в dll параметры текущего запроса",
              "                    FillAutoSearchRequestList(GItemsToSearchArr[requestNum, 38], GItemsToSearchArr[requestNum, 0], GItemsToSearchArr[requestNum, 1], GItemsToSearchArr[requestNum, 2], GItemsToSearchArr[requestNum, 3], GItemsToSearchArr[requestNum, 4], GItemsToSearchArr[requestNum, 5], GItemsToSearchArr[requestNum, 6], GItemsToSearchArr[requestNum, 7], GItemsToSearchArr[requestNum, 12], GItemsToSearchArr[requestNum, 13], GItemsToSearchArr[requestNum, 14], GItemsToSearchArr[requestNum, 15], GItemsToSearchArr[requestNum, 16], GItemsToSearchArr[requestNum, 17], GItemsToSearchArr[requestNum, 18], GItemsToSearchArr[requestNum, 30], GItemsToSearchArr[requestNum, 19], '' + GItemsToSearchArr[requestNum, 20], tint1, GItemsToSearchArr[requestNum, 34], GItemsToSearchArr[requestNum, 36], GItemsToSearchArr[requestNum, 37], tint2);",
              "                    //Запускаем цикл поиска в dll и получаем назад число успешных результатов",
              "                    tint1 = AutoSearchLaunch(GalaxyPtr(), ShipStar(Player()));",
              "                    if(tint1)",
              "                    {",
              "                        //Нужно если создаём единый список, а не делим на отдельные Ether",
              "                        tstr1 = '';",
              "                        //Перебираем полученные из dll результаты",
              "                        for(j = 0, tint2 = 0; j < tint1; j = j + 1)",
              "                        {",
              "                            //Нужно если выводим по одному уведомлению на каждый успешный результат",
              "                            //tstr1 = '';",
              "                            cur_item = GetAutoSearchResult(j, 0);",
              "                            item_type = ItemType(cur_item);",
              "",
              "                            //Если поиск производился для корпусов, то дополнительно применяем к результатам некоторые проверки, которые было невозможно перенести в dll",
              "                            if(GItemsToSearchArr[requestNum, 38] == 'Hulls')",
              "                            {",
              "                                //Проверка на восприимчивость к энергетическому урону",
              "                                if(GItemsToSearchArr[requestNum, 27])",
              "                                {",
              "                                    if(HullDamageSuspectibility(cur_item, 0) > GItemsToSearchArr[requestNum, 27]) continue;",
              "                                }",
              "                                //Проверка на восприимчивость к осколочному урону",
              "                                if(GItemsToSearchArr[requestNum, 28])",
              "                                {",
              "                                    if(HullDamageSuspectibility(cur_item,1) > GItemsToSearchArr[requestNum, 28]) continue;",
              "                                }",
              "                                //Проверка на восприимчивость к ракетному урону",
              "                                if(GItemsToSearchArr[requestNum, 29])",
              "                                {",
              "                                    if(HullDamageSuspectibility(cur_item,2) > GItemsToSearchArr[requestNum, 29]) continue;",
              "                                }",
              "                                //Проверка на количество слотов под оружие",
              "                                if(GetEquipmentStats(cur_item, 1) < GItemsToSearchArr[requestNum, 19]) continue;",
              "                                //Проверка на количество слотов под артефакты",
              "                                if(GetEquipmentStats(cur_item, 2) < GItemsToSearchArr[requestNum, 20]) continue;",
              "                                //Проверка на слот под радар",
              "                                if(GetEquipmentStats(cur_item, 3) < GItemsToSearchArr[requestNum, 21]) continue;",
              "                                //Проверка на слот под сканер",
              "                                if(GetEquipmentStats(cur_item, 4) < GItemsToSearchArr[requestNum, 22]) continue;",
              "                                //Проверка на слот под дроида",
              "                                if(GetEquipmentStats(cur_item, 5) < GItemsToSearchArr[requestNum, 23]) continue;",
              "                                //Проверка на слот под захват",
              "                                if(GetEquipmentStats(cur_item, 6) < GItemsToSearchArr[requestNum, 24]) continue;",
              "                                //Проверка на слот под ГЗП",
              "                                if(GetEquipmentStats(cur_item, 7) < GItemsToSearchArr[requestNum, 25]) continue;",
              "                                //Проверка на форсаж",
              "                                if(GetEquipmentStats(cur_item, 8) < GItemsToSearchArr[requestNum, 26]) continue;",
              "                            }",
              "",
              "                            cur_shop = GetAutoSearchResult(j, 1);",
              "",
              "                            if(ObjectType(cur_shop) == 3)",
              "                            {",
              "                                //Учитываем Роджерию (не называем её планетой)",
              "                                if(cur_shop == PlanetPirateClan()) tstr2 = CT('Script.Mod_ExpAutoSearch.TheShop') + ' <color=255,240,100>' + Name(cur_shop) + '</color>';",
              "                                else tstr2 = CT('Script.Mod_ExpAutoSearch.TheShop') + ' <color=255,240,100>' + CT('Planet.Name') + ' ' + Name(cur_shop) + '</color>';",
              "                                cur_star = PlanetToStar(cur_shop);",
              "                            }",
              "                            else",
              "                            {",
              "                                tstr2 = CT('Script.Mod_ExpAutoSearch.TheShop') + ' <color=255,240,100>' + Name(cur_shop) + '</color>';",
              "                                cur_star = ShipStar(cur_shop);",
              "                            }",
              "",
              "                            //Пропускаем скрытый сектор, если пиратская ветка ещё не завершена",
              "                            if(!PirateWin())",
              "                            {",
              "                                if(StarToCon(cur_star) == StarToCon(PlanetToStar(PlanetPirateClan()))) continue;",
              "                            }",
              "",
              "                            //Вывод разделителей при \"тромбовании\" всех результатов по одному запросу в один Ether",
              "                            //Лучше не включать, т.к. при выводе сразу десяти результатов первые два \"прошибают потолок\" экрана",
              "                            if(j && tstr1 != '') tstr1 = tstr1 + \"<br>\" + '--------------------------------' + \"<br>\";",
              "",
              "                            //Выписываем название и размер предмета",
              "                            tstr1 = tstr1 + '<color=255,240,100>- ' + Name(cur_item) + ' [<color=0,255,0>' + ItemSize(cur_item) + '</color>] -</color>' + \"<br>\";",
              "",
              "                            //Выписываем сектор",
              "                            tstr1 = tstr1 + CT('FormInfo.M09Const') + ' <color=255,240,100>' + Name(StarToCon(cur_star)) + '</color>' + \"<br>\";",
              "",
              "                            //Выписываем систему",
              "                            tstr1 = tstr1 + CT('FormInfo.M09Star') + ' <color=255,240,100>' + Name(cur_star) + '</color>' + \"<br>\";",
              "",
              "                            //Выписываем магазин",
              "                            tstr1 = tstr1 + tstr2 + \"<br>\";",
              "",
              "                            //Выписываем ТУ предмета (для оружия здесь же указывается его тип)",
              "                            if(item_type >= t_Weapon1)",
              "                            {",
              "                                tint4 = ItemLevel(cur_item);",
              "                                if(tint4 >= 8) tstr2 = 'H';",
              "                                else if(tint4 == 7) tstr2 = 'G';",
              "                                else if(tint4 == 6) tstr2 = 'F';",
              "                                else if(tint4 == 5) tstr2 = 'E';",
              "                                else if(tint4 == 4) tstr2 = 'D';",
              "                                else if(tint4 == 3) tstr2 = 'C';",
              "                                else if(tint4 == 2) tstr2 = 'B';",
              "                                else if(tint4 <= 1) tstr2 = 'A';",
              "",
              "                                if(GetEquipmentStats(cur_item, 3) == 0) tstr1 = tstr1 + CT('FormInfo.ISType') + ' <color=255,240,100>' + CT('FormInfo.Equipment.EnergyType') + '</color>' + ' <color=255,240,100>(' + tstr2 + ')</color>' + \"<br>\";",
              "                                else if(GetEquipmentStats(cur_item, 3) == 1) tstr1 = tstr1 + CT('FormInfo.ISType') + ' <color=255,240,100>' + CT('FormInfo.Equipment.SplinterType') + '</color>' + ' <color=255,240,100>(' + tstr2 + ')</color>' + \"<br>\";",
              "                                else tstr1 = tstr1 + CT('FormInfo.ISType') + ' <color=255,240,100>' + CT('FormInfo.Equipment.MissileType') + '</color>' + ' <color=255,240,100>(' + tstr2 + ')</color>' + \"<br>\";",
              "                            }",
              "                            else tstr1 = tstr1 + DeleteTags(CT('FormInfo.Equipment.Tech')) + '<color=255,240,100>' + ItemLevel(cur_item) + '</color>' + \"<br>\";",
              "",
              "                            //Выписываем модификацию оружия (если искали оружие и если модификация есть)",
              "                            if(item_type >= t_Weapon1)",
              "                            {",
              "                                tint4 = EqSpecial(cur_item);",
              "                                if(tint4 > -1)",
              "                                {",
              "                                    tstr1 = tstr1 + CT('Items.Weapon.WSpecial') + ' <color=255,240,100>' + BonusName(tint4) + '</color>' + \"<br>\";",
              "                                }",
              "                            }",
              "",
              "                            //Выписываем статы предмета",
              "                            if(item_type >= t_Weapon1)",
              "                            {",
              "                                tstr1 = tstr1 + Format(DeleteTags(CT('FormInfo.Equipment.Damage')), ' -', GetEquipmentStats(cur_item, ' <MinDamage'+'><color=248,252,216>-</color><'+'MaxDamage><'+'Bonus>')) + ', ' + Format(DeleteTags(CT('FormInfo.Equipment.Radius')), ' ', GetEquipmentStats(cur_item, ' <Radius'+'>'));",
              "                                //Для ракетного оружия также добавляем максимальный боезапас",
              "                                if(GetEquipmentStats(cur_item, 3) == 2) tstr1 = tstr1 + ', ' + Format(CT('FormInfo.Equipment.MaxAmmo'), '<MaxCount'+'>', GetEquipmentStats(cur_item, '<MaxCount'+'>')) + \"<br>\";",
              "                                else tstr1 = tstr1 + \"<br>\";",
              "                            }",
              "                            else if(item_type == t_Hull)",
              "                            {",
              "                                tint4 = HullSeries(cur_item);",
              "                                if(tint4 > -1) tstr1 = tstr1 + Format(DeleteTags(CT('FormInfo.Equipment.Series')), ' ', ' ' + CT('HullType.' + SeriesNumInCfg(tint4) + '.Name')) + \"<br>\";",
              "                                tstr1 = tstr1 + Format(CT('FormInfo.Equipment.SusceptibilitySearch'), '#1#', GetEquipmentStats(cur_item, '<FragilityE'+'>'), '#2#', GetEquipmentStats(cur_item, '<FragilityS'+'>'), '#3#', GetEquipmentStats(cur_item, '<FragilityM'+'>')) + \"<br>\";",
              "                                tstr1 = tstr1 + Format(DeleteTags(CT('FormInfo.Equipment.Protect')), ' ', GetEquipmentStats(cur_item, ' <HitProtect'+'>')) + \"<br>\";",
              "                            }",
              "                            else if(item_type == t_Engine)",
              "                            {",
              "                                tstr1 = tstr1 + Format(DeleteTags(CT('FormInfo.Equipment.Speed')), ' ', GetEquipmentStats(cur_item, ' <Speed'+'>')) + ', ' + Format(DeleteTags(CT('FormInfo.Equipment.Jump')), ' ', GetEquipmentStats(cur_item, ' <Parsec'+'>')) + \"<br>\";",
              "                            }",
              "                            else if(item_type == t_FuelTanks)",
              "                            {",
              "                                tstr1 = tstr1 + Format(DeleteTags(CT('FormInfo.Equipment.Fuel')), ' ', GetEquipmentStats(cur_item, ' <Capacity'+'>')) + \"<br>\";",
              "                            }",
              "                            else if(item_type == t_Radar)",
              "                            {",
              "                                tstr1 = tstr1 + Format(DeleteTags(CT('FormInfo.Equipment.Radar')), ' ', GetEquipmentStats(cur_item, ' <Radius'+'>')) + \"<br>\";",
              "                            }",
              "                            else if(item_type == t_Scaner)",
              "                            {",
              "                                tstr1 = tstr1 + Format(DeleteTags(CT('FormInfo.Equipment.Scaner')), ' ', GetEquipmentStats(cur_item, ' <Percent'+'>')) + \"<br>\";",
              "                            }",
              "                            else if(item_type == t_RepairRobot)",
              "                            {",
              "                                tstr1 = tstr1 + Format(DeleteTags(CT('FormInfo.Equipment.Droid')), ' ', GetEquipmentStats(cur_item, ' <RecoverHitPoints'+'>')) + \"<br>\";",
              "                            }",
              "                            else if(item_type == t_CargoHook)",
              "                            {",
              "                                tstr1 = tstr1 + Format(DeleteTags(CT('FormInfo.Equipment.Hook')), ' ', GetEquipmentStats(cur_item, ' <PickUpSize' + '>')) + ', ' + Format(DeleteTags(CT('FormInfo.Equipment.HookRadius')), ' ', GetEquipmentStats(cur_item, ' <Radius'+'>')) + ', ' + Format(DeleteTags(CT('FormInfo.Equipment.HookSpeed')), ' -', GetEquipmentStats(cur_item, ' <SpeedMin'+'><color=248,252,216>-</color><SpeedMax'+'>')) + \"<br>\";",
              "                            }",
              "                            else if(item_type == t_DefGenerator)",
              "                            {",
              "                                tstr1 = tstr1 + Format(DeleteTags(CT('FormInfo.Equipment.Defend')), ' ', GetEquipmentStats(cur_item, ' <Percent' + '>')) + \"<br>\";",
              "                            }",
              "",
              "                            if(item_type != t_Hull)",
              "                            {",
              "                                //Выписываем надёжность предмета",
              "                                tflt1 = ItemFragility(cur_item);",
              "                                tflt2 = 0.60;",
              "                                tflt3 = 5.00;",
              "                                tint4 = 0;",
              "                                for(k = 0; k <= 6; k = k + 1)",
              "                                {",
              "                                    if(k <= 3) tflt2 = tflt2 + 0.10;",
              "                                    else tflt2 = tflt2 + 0.20;",
              "                                    if(abs(tflt1 - tflt2) < tflt3)",
              "                                    {",
              "                                        tflt3 = abs(tflt1 - tflt2);",
              "                                        tint4 = k;",
              "                                    }",
              "                                }",
              "                                tstr1 = tstr1 + CT('FormInfo.Equipment.Reliability') + '<color=255,240,100>' + CT('FormInfo.Equipment.QualityGrade' + tint4) + '</color>' + \"<br>\";",
              "                            }",
              "",
              "                            //Выписываем стоимость предмета",
              "                            tstr1 = tstr1 + CT('FormInfo.CostShort') + ' <color=255,240,100>' + ItemCost(cur_item) + '</color> cr.';",
              "",
              "                            //Вывод отдельного уведомления для каждого успешного результата",
              "                            //CustomEther('AutoSearch', 7, '', tstr1);",
              "",
              "                            //Прерываем цикл, если число результатов достигло максимального предела (чтобы не засорять панель уведомлений сотнями Ether)",
              "                            tint2 = tint2 + 1;",
              "                            if(tint2 >= maxResultsCount) break;",
              "                        }",
              "",
              "                        //Если были найдены подходящие варианты",
              "                        if(tstr1 != '')",
              "                        {",
              "                            //Выводим общее уведомление с восемью (максимум) успешными результатами (больше их не влезает по высоте)",
              "                            CustomEther('AutoSearch', 7, '', tstr1);",
              "                            Sound('Sound.NewMsg');",
              "                            Sound('Sound.Scan');",
              "                            //Sound('Sound.Repair');",
              "                        }",
              "                        //Если ничего подходящего не нашлось",
              "                        //else",
              "                        //{",
              "                            //Sound('Sound.NewMsg');",
              "                            //Sound('Sound.NoSize');",
              "                        //}",
              "",
              "                        //Если автопоиск не нашёл ни одного подходящего предмета (при желании можно добавить сюда какой-нибудь вывод)",
              "                        //if(!tint2) CustomEther('AutoSearch', 0, '', Format(CT('Script.Mod_ExpAutoSearch.NoSuccessfulResults'), '#0#', ''));",
              "                    }",
              "                    //Обновляем таймер запроса",
              "                    GItemsToSearchArr[requestNum, 39] = CurTurn() + GItemsToSearchArr[requestNum, 40];",
              "                }",
              "",
              "                //Если был произведён хотя бы один запрос",
              "                if(tint3)",
              "                {",
              "                    ShipMoney(Player(), ShipMoney(Player()) - tint3);",
              "                    //Sound('Sound.Sell');",
              "                }",
              "",
              "                //Зачищаем временный массив, превращая его в unknown",
              "                free(GAcrynListTempArr);",
              "                copy(GAcrynListTempArr, clear);",
              "            }",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  460,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  22,
          "Total.Lines":  26,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "cur_shop = GetShipRuins(Player());",
              "if(cur_shop)",
              "{",
              "    //Если ExpPilotBridge подключён",
              "    if(IsScriptActive('Mod_ExpPilotBridge'))",
              "    {",
              "        if(PlayerBridge() == 14)",
              "        {",
              "            if(IsScriptActive('Mod_ExpBK'))tstr1 = CT('Script.Mod_ExpAutoSearch.DialogHeaderWithExpBK');",
              "            else tstr1 = CT('Script.Mod_ExpAutoSearch.DialogHeaderWithNoExpBK');",
              "            //Блокируем диалог, если игрок допустил уже больше двух просрочек по кредиту",
              "            if(PlayerDebtCnt() > 2) AddDialogBlock(CT('Script.Mod_ExpAutoSearch.MainDialogInject'), 1);",
              "            AddDialogInject('AutoSearch', tstr1, CT('Script.Mod_ExpAutoSearch.MainDialogInject'), 7);",
              "        }",
              "    }",
              "    //Иначе выводим диалог на БЦ",
              "    else",
              "    {",
              "        if(ShipType(cur_shop) == 'BK')",
              "        {",
              "            //Блокируем диалог, если игрок допустил уже больше двух просрочек по кредиту",
              "            if(PlayerDebtCnt() > 2) AddDialogBlock(CT('Script.Mod_ExpAutoSearch.MainDialogInject'), 1);",
              "            AddDialogInject('AutoSearch', '', CT('Script.Mod_ExpAutoSearch.MainDialogInject'), 0);",
              "        }",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  720,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  26,
          "Total.Lines":  3,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1 = '</color>' + CT('Script.Mod_ExpAutoSearch.CreateNewRequest');",
              "tstr2 = '</color>' + CT('Script.Mod_ExpAutoSearch.ChangeExistedRequest');",
              "tstr3 = '</color>' + CT('Script.Mod_ExpAutoSearch.GetBack');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  720,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  27,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1 = '</color>' + Format(CT('Script.Mod_ExpAutoSearch.GreetingsText'), '#0#', maxRequestCount, '#1#', maxResultsCount, '#2#', requestCreateCost, '#3#', requestRollCost);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  640,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  32,
          "Total.Lines":  9,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GAcrynListTempArr = newarray(2);",
              "GAcrynListTempArr[0] = 0;",
              "OpenCustomForm('AutoSearch');",
              "//Если новый запрос был создан",
              "if(GAcrynListTempArr[0]) tstr1 = '</color>' + CT('Script.Mod_ExpAutoSearch.GreetingsNewRequestText');",
              "//Если не был",
              "else tstr1 = '</color>' + Format(CT('Script.Mod_ExpAutoSearch.GreetingsText'), '#0#', maxRequestCount, '#1#', maxResultsCount, '#2#', requestCreateCost, '#3#', requestRollCost);",
              "free(GAcrynListTempArr);",
              "arraychange(GAcrynListTempArr, 1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  780,
          "Pos.y":  490,
          "Parent":  -1,
          "#":  42,
          "Total.Lines":  8,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Выводим в ответы список активных запросов",
              "for(i = 1; i <= GItemsToSearchArr[0, 0]; i = i + 1)",
              "{",
              "    tstr1 = DeleteTags(CT('Script.Mod_ExpAutoSearch.' + GItemsToSearchArr[i, 38]));",
              "    tstr1 = '' + i + '. ' + Format(CT('Script.Mod_ExpAutoSearch.RequestAnswer'), '#0#', tstr1,'#1#', GItemsToSearchArr[i, 40]);",
              "    InjectAnswer('AutoSearchChange', tstr1, i);",
              "}",
              "tstr2 = '</color>' + CT('Script.Mod_ExpAutoSearch.GetBack');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  750,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  47,
          "Total.Lines":  13,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GAcrynListTempArr = newarray(2);",
              "GAcrynListTempArr[0] = GAnswerData;",
              "//Запоминаем старое значение числа запросов на случай, если изменяемый запрос будет удалён",
              "tint1 = GItemsToSearchArr[0, 0];",
              "OpenCustomForm('AutoSearch');",
              "//Если запрос был изменён",
              "if(GAcrynListTempArr[0]) tstr1 = '</color>' + CT('Script.Mod_ExpAutoSearch.RequestWasChanged');",
              "//Если запрос был удалён",
              "else if(GItemsToSearchArr[0, 0] < tint1) tstr1 = '</color>' + CT('Script.Mod_ExpAutoSearch.RequestWasDeleted');",
              "//Если запрос не изменялся и не удалялся",
              "else tstr1 = '</color>' + CT('Script.Mod_ExpAutoSearch.RequestChangeList');",
              "free(GAcrynListTempArr);",
              "arraychange(GAcrynListTempArr, 1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  710,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  49,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tstr1 = '</color>' + CT('Script.Mod_ExpAutoSearch.RequestChangeList');"          
          ]        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "InitPlanet",
          "Pos.x":  370,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  7,
          "Race":  62,
          "Owner":  62,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  340,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  9,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "InitStar",
          "Pos.x":  340,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  8,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "Statements":      
      [
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  480,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  11,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!ShipIsTakeoff(Player())"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  620,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  33,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  620,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  34,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  640,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  35,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GItemsToSearchArr[0, 0] < maxRequestCount"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  660,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  36,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GItemsToSearchArr[0, 0] >= maxRequestCount"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  710,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  38,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GItemsToSearchArr[0, 0]"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  730,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  39,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!GItemsToSearchArr[0, 0]"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  780,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  41,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  730,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  50,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GItemsToSearchArr[0, 0]"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  730,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  51,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!GItemsToSearchArr[0, 0]"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  620,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  52,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  620,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  54,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  720,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  57,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "PlayerState",
          "Pos.x":  370,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  10,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "GItemsToSearchArr",
          "Pos.x":  420,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  0,
          "Var.Type":  "Unknown",
          "Init":  "",
          "Global":  true        
        },
        {
          "Type":  "TVar",
          "Name":  "GAcrynListTempArr",
          "Pos.x":  420,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  1,
          "Var.Type":  "Unknown",
          "Init":  "",
          "Global":  true        
        },
        {
          "Type":  "TVar",
          "Name":  "i",
          "Pos.x":  480,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  2,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "requestNum",
          "Pos.x":  480,
          "Pos.y":  320,
          "Parent":  -1,
          "#":  12,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "j",
          "Pos.x":  510,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  13,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_shop",
          "Pos.x":  480,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  14,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_item",
          "Pos.x":  480,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  15,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr1",
          "Pos.x":  540,
          "Pos.y":  420,
          "Parent":  -1,
          "#":  16,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint1",
          "Pos.x":  480,
          "Pos.y":  420,
          "Parent":  -1,
          "#":  17,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint2",
          "Pos.x":  480,
          "Pos.y":  440,
          "Parent":  -1,
          "#":  18,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "clear",
          "Pos.x":  550,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  19,
          "Var.Type":  "Unknown",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "maxResultsCount",
          "Pos.x":  340,
          "Pos.y":  440,
          "Parent":  -1,
          "#":  20,
          "Var.Type":  "Int",
          "Init":  "8",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "maxRequestCount",
          "Pos.x":  340,
          "Pos.y":  420,
          "Parent":  -1,
          "#":  21,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr2",
          "Pos.x":  540,
          "Pos.y":  440,
          "Parent":  -1,
          "#":  28,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tstr3",
          "Pos.x":  540,
          "Pos.y":  460,
          "Parent":  -1,
          "#":  29,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint3",
          "Pos.x":  480,
          "Pos.y":  460,
          "Parent":  -1,
          "#":  44,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "TotalBKCount",
          "Pos.x":  480,
          "Pos.y":  600,
          "Parent":  -1,
          "#":  45,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_star",
          "Pos.x":  480,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  46,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "requestRollCost",
          "Pos.x":  340,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  55,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint4",
          "Pos.x":  480,
          "Pos.y":  480,
          "Parent":  -1,
          "#":  56,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "requestCreateCost",
          "Pos.x":  340,
          "Pos.y":  480,
          "Parent":  -1,
          "#":  58,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "k",
          "Pos.x":  540,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  59,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tflt1",
          "Pos.x":  480,
          "Pos.y":  530,
          "Parent":  -1,
          "#":  60,
          "Var.Type":  "Float",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tflt2",
          "Pos.x":  480,
          "Pos.y":  550,
          "Parent":  -1,
          "#":  61,
          "Var.Type":  "Float",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tflt3",
          "Pos.x":  480,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  62,
          "Var.Type":  "Float",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "item_type",
          "Pos.x":  480,
          "Pos.y":  500,
          "Parent":  -1,
          "#":  63,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  6,
      "End":  10,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  7,
      "End":  8,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  9,
      "End":  8,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  6,
      "End":  7,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  11,
      "End":  5,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  24,
      "End":  26,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  30,
      "End":  32,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  33,
      "End":  34,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  32,
      "End":  33,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  26,
      "End":  35,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  35,
      "End":  30,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  26,
      "End":  36,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  26,
      "End":  38,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  26,
      "End":  39,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  39,
      "End":  40,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  26,
      "End":  41,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  41,
      "End":  25,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  43,
      "End":  47,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  48,
      "End":  42,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  47,
      "End":  50,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  47,
      "End":  51,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  51,
      "End":  52,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  42,
      "End":  53,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  53,
      "End":  54,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  54,
      "End":  34,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  52,
      "End":  34,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  34,
      "End":  57,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  57,
      "End":  24,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  23,
      "End":  27,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  27,
      "End":  57,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  49,
      "End":  48,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  50,
      "End":  48,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  36,
      "End":  31,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  38,
      "End":  37,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  37,
      "End":  49,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "BlockPar.EC.Total.Strings":  2,
  "BlockPar.EC":  
  [
    {
      "#":  "0",
      "String":  "<br>"    
    },
    {
      "#":  "2",
      "String":  "<0>"    
    }  
  ]
}