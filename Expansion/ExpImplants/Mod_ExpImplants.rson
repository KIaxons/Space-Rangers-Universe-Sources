{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -384,
  "ViewPos.y":  -238,
  "ScriptName":  "Mod_ExpImplants",
  "ScriptFileOut":  "H:\\Mod_ExpImplants.scr",
  "ScriptTextOut":  "H:\\Mod_ExpImplants.txt",
  "GraphPoint.Count":  209,
  "GraphLink.Count":  122,
  "GraphRectText.Count":  8,
  "Variables.Count":  63,
  "Stars.Count":  1,
  "Planets.Count":  1,
  "Ships.Count":  1,
  "States.Count":  1,
  "Groups.Count":  1,
  "Places.Count":  0,
  "Items.Count":  0,
  "Ethers.Count":  0,
  "Dialogs.Count":  26,
  "DialogMessages.Count":  33,
  "DialogAnswers.Count":  11,
  "Operations.Count":  47,
  "Statements.Count":  24,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "DialogAnswers":      
      [
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  480,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  80,
          "Msg":  "",
          "AMsg.Num":  "0"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  320,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  86,
          "Msg":  "Далее",
          "AMsg.Num":  "1"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "",
          "Pos.x":  360,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  88,
          "Msg":  "Далее",
          "AMsg.Num":  "2"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  690,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  110,
          "Msg":  "",
          "AMsg.Num":  "3"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "fastexit",
          "Pos.x":  770,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  123,
          "Msg":  "Конец связи",
          "AMsg.Num":  "4"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "fastexit",
          "Pos.x":  770,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  124,
          "Msg":  "Конец связи",
          "AMsg.Num":  "5"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  260,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  138,
          "Msg":  "",
          "AMsg.Num":  "6"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  320,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  146,
          "Msg":  "",
          "AMsg.Num":  "7"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "exit",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  132,
          "#":  149,
          "Msg":  "",
          "AMsg.Num":  "8"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "fastexit",
          "Pos.x":  820,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  182,
          "Msg":  "<temp_str_1>",
          "AMsg.Num":  "9"        
        },
        {
          "Type":  "TDialogAnswer",
          "Name":  "fastexit",
          "Pos.x":  820,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  183,
          "Msg":  "<temp_str_1>",
          "AMsg.Num":  "10"        
        }      
      ],
      "DialogMessages":      
      [
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  340,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  29,
          "Msg":  "Так-с... Ну вот и все, биомодуль <temp_str> успешно установлен. И совсем не больно, правда? А вы боялись. В послеоперационный период вам рекомендуется постельный режим, хотя бы в течении пяти дней и... Вы ведь не собираетесь следовать нашим рекомендациям ведь так? Все вы, рейнджеры, такие. Знаю-знаю, галактику спасать и так далее, но о вашем здоровье никто кроме вас самих позаботиться не сможет. Запомните это. Ладно уж, раз вам совсем наплевать на свое здоровье, то мы можем поставить еще один имплант, конечно если хотите, но учтите, что я вам этого не рекомендую.",
          "DMsg.Num":  "0"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  360,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  32,
          "Msg":  "Биомодуль <temp_str_2> успешно удален из вашего организма. Все ткани были восстановлены, никаких следов не осталось - вы как новенький. Первое время старайтесь пить как можно больше воды и не перенапрягайте восстановленные части тела, в остальном все в порядке. Мы вполне можем провести еще одну операцию по удалению, если есть такая необходимость.",
          "DMsg.Num":  "1"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  360,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  46,
          "Msg":  "Радостно, наконец, встретить сознательного гуманоида, который понимает, какой вред ему может причинить химический допинг.\r\nМы можем <clr>удалить<clrEnd> любой стимулятор из вашего организма, введя специальное вещество, которое вступит в реакцию с молекулами стимулятора, что приводит к их взаимному уничтожению. Процедура проста и абсолютно безвредна, но главный её плюс в том, что мы можем удалить только те стимуляторы, о которых вы сами попросите, не затронув при этом остальные.\r\nВ качестве альтернативы, мы могли бы провести <clr>комплексную очистку<clrEnd> организма от всех стимуляторов, а также прочих вредоносных веществ, бактерий и паразитов одновременно. Такая очистка не только избавит ваш организм от стимуляторов, но и позволит временно <clr>повысить общий иммунитет<clrEnd> и, как следствие, устойчивость к различным болезням. В интересах вашего здоровья, я настоятельно рекомендую обратить внимание именно на такую процедуру.\r\nСогласно результатам анализа, сейчас в вашем организме содержаться следующие стимуляторы:\r\n<DefSplt>\r\n<temp_str><DefSplt>\r\nТакже я обязан напомнить, что хотя удаление стимуляторов и остановит их пагубное воздействие на организм, для исправления уже нанесённого вреда этого будет мало.",
          "DMsg.Num":  "2"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  400,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  48,
          "Msg":  "Мы удалили стимулятор <temp_str_2> из вашего организма и хотя ущерб, которые он уже нанес, мы не исправили, по крайней мере мы избавили вас от дальнейших осложнений.\r\n<temp_str>",
          "DMsg.Num":  "3"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  260,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  49,
          "Msg":  "Это ваше право, но, я вас очень прошу, подумайте еще раз. Стимуляторы разрушают вашу иммунную систему и наносят серьезный ущерб здоровью. Отказ от них сослужит вам добрую службу.",
          "DMsg.Num":  "4"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  540,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  57,
          "Msg":  "Ну вот и чудненько. Как я уже сказал, наши импланты не такие дорогие, как у докторишек, кроме того, своим парням отдаем еще дешевле. Кстати, не забыл, что для своих ребят дешевле? Твой пиратский рейтинг дает право на скидку в <temp_dword>%\r\nИтак, что мы имеем на сегодняшний день:\r\n<temp_str>И учти - никаких сканирований мы тут не проводим. Это еще одна из причин, по которой всю ответственность ты берешь на себя. Если чувствуешь, что организм не выдерживает - не ставь биомодуль, но решение принимай сам. Мы тебе не няньки, чтобы сопли подтирать.",
          "DMsg.Num":  "5"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  600,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  62,
          "Msg":  "Надоели импланты? Возможность их <clr>удалить<clrEnd> у нас тоже есть. Причём с нехваткой конечностей никаких проблем не возникнет, все недостающие ткани мы тебе на 3D-биопринтере распечатаем. Ага, мы и такое умеем. Круто, да?\r\nКстати, ещё не забыл, что для своих ребят у нас дешевле? Твой пиратский рейтинг даёт право на скидку в <clr><temp_dword>%<clrEnd>.\r\nИтак, вот что мы можем из тебя вырезать:\r\n<DefSplt>\r\n<temp_str_1><DefSplt>\r\nНу, что удалять будем?",
          "DMsg.Num":  "6"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  580,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  64,
          "Msg":  "Мы закончили. Все в полном ажуре, швов почти не видно, биомодуль <temp_str> полностью функционирует и готов к работе. Кстати, ты знал, что многие женщины тащатся от подобных железяк, а? Советую этим пользоваться, если понимаешь о чем я. Ну а пока ты перевариваешь данную информацию мы можем поставить тебе еще парочку имплантов, если хочешь, конечно.",
          "DMsg.Num":  "7"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  420,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  67,
          "Msg":  "Желаете расширить возможности собственного тела? Похвально. Многие в наше время задумываются об этом. Значительное улучшение навыков, совершенно новые  возможности, а все, что требуется - заплатить деньги и полежать несколько часов в операционной. Просто сказка, но не все так просто.\r\nУстановка имплантатов или, как их сейчас модно называть, биомодулей - это сложная операция. Могут возникать осложнения, и я уже не говорю о той нагрузке на организм, которую оказывают биомодули сами по себе. В общем, мы настоятельно рекомендуем отнестись к решению поставить себе один из них со всей серьезностью и ответственностью.\r\nМы, в свою очередь, обеспечим вас самым качественным медицинским сервисом и только проверенными лицензионными имплантатами, это очень важно, поверьте, вы не хотите, чтобы дешевая рахишская подделка отказала прямо внутри вашего тела. На этом лучше не экономить. Если вы хотите узнать поподробнее о биомодулях, то можете прослушать наш инструктаж, если вы здесь в первый раз, то мы настоятельно рекомендуем вам это сделать.",
          "DMsg.Num":  "8"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  380,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  70,
          "Msg":  "Желаете расширить возможности собственного тела? Похвально. Многие в наше время задумываются об этом. Значительное улучшение навыков, совершенно новые возможности, а все, что требуется - заплатить деньги и полежать несколько часов в операционной. Просто сказка, но не все так просто.\r\nУстановка имплантатов или, как их сейчас модно называть, биомодулей - это сложная операция. Могут возникать осложнения, и я уже не говорю о той нагрузке на организм, которую оказывают биомодули сами по себе. В общем, мы настоятельно рекомендуем отнестись к решению поставить себе один из них со всей серьезностью и ответственностью.\r\nМы же здесь для того, чтобы обеспечить вас самым качественным медицинским сервисом и только проверенными лицензионными имплантатами. Да-да, несмотря на то, что находимся в системе, принадлежащей пиратскому синдикату, где найти дешевый контрафакт не составило бы труда, мы продолжаем заказывать биомодули исключительно у проверенных поставщиков, а то и у производителей напрямую. Конечно это дорого, но поверьте за надежность стоит доплатить. Если вы хотите узнать поподробнее о биомодулях, то можете прослушать наш инструктаж, если вы здесь в первый раз, то мы настоятельно рекомендуем вам это сделать.",
          "DMsg.Num":  "9"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  320,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  73,
          "Msg":  "Хорошо. Как я уже говорил, мы предоставляем только лицензионные биомодули, однако полностью от возможных осложнений это вас не защитит. Перед тем, как начать операцию мы проведем несколько тестов, и если они покажут, что ваш организм не справиться с нагрузкой в операции будет отказано. Тесты, разумеется, бесплатны.\r\nИтак, на данный момент наша станция располагает следующими биомодулями:\r\n<temp_str>Теперь мы проведем небольшое сканирование...\r\n<temp_str_1>",
          "DMsg.Num":  "10"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  430,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  79,
          "Msg":  "Не могу не согласиться с вашим решением. Биомодули, без сомнения, полезная штука, но вместе с тем и очень коварная. Сами можете не заметить, как потеряете часть, а то и всего себя. Великий гаальский философ и иикэ-банист Баал-Да сказал однажды: «Когда в вашей иикэ-баане вянет один из цветков, и вы его заменяете, то это все та же иикэ-баана, которая и была раньше. Потом вянет еще один цветок, вы и его меняете, потом еще один и еще. В конце концов, вы заменяете все цветки. Это по-прежнему та же самая иикэ-баана? Или уже нет?»... Понимаете насколько это глубокая мысль, и как она к вам относится? Вы меня вообще слушали? Ай, ладно, дело ваше.",
          "DMsg.Num":  "11"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  340,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  82,
          "Msg":  "<temp_str_1>",
          "DMsg.Num":  "12"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  320,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  85,
          "Msg":  "Важно понимать, что биомодули, или, если по научному, бионические модульные аугментации - это далеко не такая безопасная вещь, как может показаться на первый взгляд. Конечно, они не могут вызвать зависимость, как, например, стимуляторы, но определенную нагрузку на организм биомодули оказывают.\r\nКаждый живой организм может выдержать только определенную нагрузку, если же её превысить, то начинают появляться осложнения - сильные боли, сложности в управлении бионическими протезами, иногда даже галлюцинации. Мы называем это состояние - аугментационная лихорадка. Способов лечения на данный момент не существует. Единственный путь справиться с таким состоянием - снизить нагрузку на организм, либо же повысить порог его выносливости. \r\nВам должно быть интересно, как же избежать подобных осложнений. На самом деле ничего сложного - просто будьте аккуратны и не устанавливайте себе все подряд. Помните, что выносливость организма напрямую зависит от расы. Если брать сухую статистику и абстрагироваться от случайных индивидуальных особенностей, то мы получим следующую картину: фэяне обладают самым низким уровнем выносливости среди всех рас Коалиции, гаальцы - чуть более выносливы, люди и пеленги немного выносливее гаальцев, ну и абсолютными чемпионами являются малоки.",
          "DMsg.Num":  "13"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  340,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  87,
          "Msg":  "Разумеется, выносливость можно и повысить. Многие стимуляторы, а как показали последние исследования, даже некоторые болезни, способны повысить устойчивость организма к нагрузкам. Одним из лучших выборов в данном случае является Кровяной Джогар, но вообще-то любые стимуляторы укрепляющие организм, улучшающие работу мозга или повышающие силу воли так или иначе помогают бороться с нагрузками. Однако нужно понимать, что любые стимуляторы - это временный эффект. Кроме того нужно помнить о болезнях. Да, некоторые могут помочь организму справиться с нагрузкой, но подавляющее большинство только мешает. От сюда следуют два простых способа предупреждения аугментационной лихорадки - вкалывать стимуляторы и лечить болезни. Конечно, этого не всегда может быть достаточно, особенно если лихорадка все-таки началась. Тогда и остается самый последний, самый радикальный, но зато и самый надежный способ - удаление части, а то и всех биомодулей.",
          "DMsg.Num":  "14"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  340,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  89,
          "Msg":  "Ну и, наконец, вам должно быть интересно, сколько всего имплантов вы сможете установить. Видите ли, количество ограничено не только нагрузкой на организм, но и определенными физиологическими особенностями. Так, скажем, гипотетически, кому угодно возможно установить четыре бионических руки, но успешно пользоваться ими сможет только пеленг, т.к. организм представителя другой расы просто неспособен понять, как управлять двумя лишними руками, в то время как пеленгам, у которых от рождения четыре руки, особого труда это не составит. Точно также и с остальными частями тела - фэяне, благодаря фасеточному строению своего мозга могут эффективно использовать до четырех имплантов соответствующего типа, остальные расы не в состоянии скоординировать более двух, ну а гаальцы, с рождения имеют три глаза и, соответственно, могут эффективно пользоваться тремя глазными имплантами. Вот, собственно, и вся общая информация. Теперь, когда вы в полной мере понимаете риски и возможности мы можем с чистой совестью пригласить вас в операционную.",
          "DMsg.Num":  "15"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  340,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  93,
          "Msg":  "Также мы предоставляем услуги по <clr>удалению<clrEnd> ненужных имплантов, и, несмотря на очевидную сложность подобных операций, можем гарантировать полную безопасность и постоперационный комфорт.\r\nДля <clr>восстановления<clrEnd> всех недостающих тканей используются искусственно выращенные стволовые клетки, а в некоторых особо тяжёлых случаях - частичное клонирование. Можете быть абсолютно спокойны: даже если вы заменили большую часть тела кибернетикой, мы сможем собрать вас заново в максимально оригинальном виде.\r\nИтак, в настоящий момент в ваше тело имплантированы следующие биомодули:\r\n<DefSplt>\r\n<temp_str_1><DefSplt>\r\nЧто будем удалять?",
          "DMsg.Num":  "16"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  600,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  99,
          "Msg":  "А, ну биомодули это дело хорошее. Но учти - не самое безопасное. Впрочем, я не собираюсь тебя грузить всей этой фигней, если интересно - слетай к докторишкам, они тебе там все популярно разжуют. Мы же тут имеем дело с самодостаточными, самостоятельными и ответственными гуманоидами. Никаких гарантий, кроме подгона дешевого импланта и выполненной операции не даем. Если возникнут какие-то проблемы, то к нам никаких претензий.\r\nПоскольку мы имеем доступ в такие места, о которых ты даже не подозреваешь, мы можем добывать импланты относительно дешево. В среднем мы продаем их на треть дешевле, чем в медицинских центрах. Поверь, наценка там разве что за брендовую наклейку, так что будь спокоен - весь функционал на месте. Но самое интересное - запрещенные биомодули. Ты не поверишь, сколько интересных имплантов Коалиция, в силу тех или иных причин, запрещает. В официальной продаже их не найдешь, а вот у нас они иногда попадаются. Они, как правило, намного дороже, но уж поверь, если что-то и стоит своих денег, то это они.\r\nТеперь немного о плохом: аппаратура - кусок гобзавских фекалий. Даже при всем нашем профессионализме, оперировать, используя ЭТО, крайне тяжело. Осложнения после операций практически неизбежны. Из-за этого нагрузка на организм от наших биомодулей, в среднем, раза в полтора выше, чем у аналогичных установленных в медицинских центрах. Это я сразу говорю, чтобы не выслушивать потом твое нытье. Итак, если у тебя со всем этим проблем нет, тогда, как говориться, милости просим.",
          "DMsg.Num":  "17"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  560,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  101,
          "Msg":  "<temp_str>",
          "DMsg.Num":  "18"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  620,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  105,
          "Msg":  "Биомодуль <temp_str_2> успешно удален, ну и ещё кое-что по мелочи. Останется небольшой шрам, но ведь это не повод для беспокойства, правда? Кроме этого - никаких последствий. Ты прям как новенький. Если есть желание еще что-то удалить, то мы можем вернуть тебя на стол, это не проблема.",
          "DMsg.Num":  "19"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  650,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  109,
          "Msg":  "Ну и какого клисана ты тогда меня от дел отрываешь? Не устраивают наши условия -  отправляйся к докторишкам. Мы тут с тобой нянчиться не собираемся. Нужен биомодуль - поставим, не нужен - тогда не отнимай мое время.",
          "DMsg.Num":  "20"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  740,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  121,
          "Msg":  "<temp_str>",
          "DMsg.Num":  "21"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  740,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  122,
          "Msg":  "<temp_str>",
          "DMsg.Num":  "22"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  260,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  128,
          "Msg":  "Прямо сейчас в вашем организме <clr>стимуляторов нет<clrEnd>, однако мы всё равно рады, что вы так заботитесь о своём здоровье. Продолжайте в том же духе - проживёте долгую и насыщенную жизнь.",
          "DMsg.Num":  "23"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  320,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  129,
          "Msg":  "Ну вот и всё. Мы провели комплексную очистку организма от стимуляторов и всех прочих вредоносных веществ. В медицинском смысле вы чисты как младенец!\r\nДанная процедура на время поможет вашему телу лучше справляться с внешними болезнями, ведь ему стало не с кем сражаться внутри самого себя.\r\nОчень прошу сохранить наш труд, и впредь стараться вести исключительно здоровый образ жизни.",
          "DMsg.Num":  "24"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  155,
          "#":  131,
          "Msg":  "Прививки - это дело хорошее. Они дают практически полный иммунитет к определенной болезни и действуют довольно долго. Наша сеть Медицинских Центров всегда выступала за прививки, однако последнее время большую популярность обрело антипрививочное движение, поэтому нас обязали законом также рассказать о недостатках этого метода...\r\nВо-первых, прививки могут способствовать ослаблению общего иммунитета, научных подтверждений тому нет, однако предупредить о такой возможности мы обязаны. Во-вторых, если ваш иммунитет недостаточно силен, то он может не справиться даже с ослабленной версией вируса, которая содержится в вакцине, в этом случае вы заболеете спустя некоторое время. Поэтому мы рекомендуем после прививки не покидать нашу базу, ну или, по крайней мере, не отлетать далеко. В-третьих, любой организм способен поддерживать производство только ограниченного количества типов антител, если их будет слишком много они могут начать воспринимать друг друга как угрозу организму и... Проще говоря мы не делаем более 3-х прививок за раз. Поверьте - это для вашего же блага.\r\nЯ надеюсь, для вас это все не является проблемой. Перейдем к делу. Сейчас в вашем организме содержится <3 - vaccinations_available> вида антител. Это значит, что мы можем сделать вам еще <vaccinations_available> прививок от следующих болезней:\r\n<temp_str>",
          "DMsg.Num":  "25"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  148,
          "#":  132,
          "Msg":  "Так-так... Посмотрим... Нет, в вашем организме и так уже слишком много различных антител, новые прививки будут неэффективны. Прилетайте позже, когда срок действия ваших прививок истечет, а сейчас, прошу, не задерживайте очередь.",
          "DMsg.Num":  "26"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  149,
          "#":  133,
          "Msg":  "Отлично. Один маленький укольчик... Как комарик укусит... Ну вот и всё. Теперь в ближайший год <temp_str> вас беспокоить не будет. Хотите леденец? Нет? Ну ладно...\r\nЧто-нибудь ещё?",
          "DMsg.Num":  "27"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  152,
          "#":  134,
          "Msg":  "Дело ваше. Хотя лично я считаю, что прививки - наиболее эффективный способ сохранить свое здоровье. Однако дело это сугубо добровольное - не хотите, не надо. Чем еще я вам могу помочь?",
          "DMsg.Num":  "28"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  480,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  160,
          "Msg":  "Мы рады, что вы умеете вовремя остановиться. Не стоит пренебрегать опасностью, которую могут нести в себе биомодули, несмотря на всю их несомненную полезность. Главное, не забывайте следить за своим  самочувствием и при первых же признаках осложнений, если они проявятся, как можно скорее обязательно обращайтесь к нам.",
          "DMsg.Num":  "29"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  690,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  164,
          "Msg":  "Ну смотри... А то ведь я могу еще что-нибудь тебе заменить. Хочешь глаза пенчекряка? А жабры жвырклаца? Не хочешь? Ну и ладно. Наслаждайся своими новыми частями тела, если все-таки надумаешь еще какую-нибудь железку поставить, то я всегда тут.",
          "DMsg.Num":  "30"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  790,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  179,
          "Msg":  "<temp_str>",
          "DMsg.Num":  "31"        
        },
        {
          "Type":  "TDialogMsg",
          "Name":  "",
          "Pos.x":  790,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  181,
          "Msg":  "<temp_str>",
          "DMsg.Num":  "32"        
        }      
      ],
      "Dialogs":      
      [
        {
          "Type":  "TDialog",
          "Name":  "dialog_mc",
          "Pos.x":  440,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  9        
        },
        {
          "Type":  "TDialog",
          "Name":  "implant_on",
          "Pos.x":  320,
          "Pos.y":  70,
          "Parent":  -1,
          "#":  27        
        },
        {
          "Type":  "TDialog",
          "Name":  "implant_off_2",
          "Pos.x":  400,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  28        
        },
        {
          "Type":  "TDialog",
          "Name":  "dialog_mc_2",
          "Pos.x":  320,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  45        
        },
        {
          "Type":  "TDialog",
          "Name":  "imp_on_pb",
          "Pos.x":  540,
          "Pos.y":  70,
          "Parent":  -1,
          "#":  55        
        },
        {
          "Type":  "TDialog",
          "Name":  "imp_on_pb_3",
          "Pos.x":  580,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  59        
        },
        {
          "Type":  "TDialog",
          "Name":  "implant_off_pb",
          "Pos.x":  600,
          "Pos.y":  130,
          "Parent":  -1,
          "#":  60        
        },
        {
          "Type":  "TDialog",
          "Name":  "implant_tutorial",
          "Pos.x":  320,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  72        
        },
        {
          "Type":  "TDialog",
          "Name":  "implant_on_3",
          "Pos.x":  360,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  75        
        },
        {
          "Type":  "TDialog",
          "Name":  "implant_on_2",
          "Pos.x":  340,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  76        
        },
        {
          "Type":  "TDialog",
          "Name":  "imp_MC_exit",
          "Pos.x":  430,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  78        
        },
        {
          "Type":  "TDialog",
          "Name":  "implant_off",
          "Pos.x":  380,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  91        
        },
        {
          "Type":  "TDialog",
          "Name":  "dialog_pb",
          "Pos.x":  640,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  96        
        },
        {
          "Type":  "TDialog",
          "Name":  "imp_on_pb_2",
          "Pos.x":  560,
          "Pos.y":  90,
          "Parent":  -1,
          "#":  97        
        },
        {
          "Type":  "TDialog",
          "Name":  "imp_PB_exit",
          "Pos.x":  650,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  98        
        },
        {
          "Type":  "TDialog",
          "Name":  "implant_off_pb_2",
          "Pos.x":  620,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  104        
        },
        {
          "Type":  "TDialog",
          "Name":  "dialog_hypno",
          "Pos.x":  710,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  119        
        },
        {
          "Type":  "TDialog",
          "Name":  "dialog_blind",
          "Pos.x":  710,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  120        
        },
        {
          "Type":  "TDialog",
          "Name":  "Vaccination",
          "Pos.x":  110,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  130        
        },
        {
          "Type":  "TDialog",
          "Name":  "dialog_mc_2_2",
          "Pos.x":  400,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  140        
        },
        {
          "Type":  "TDialog",
          "Name":  "dialog_mc_2_3",
          "Pos.x":  360,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  141        
        },
        {
          "Type":  "TDialog",
          "Name":  "dialog_mc_exit",
          "Pos.x":  260,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  144        
        },
        {
          "Type":  "TDialog",
          "Name":  "Vaccination_exit",
          "Pos.x":  20,
          "Pos.y":  40,
          "Parent":  130,
          "#":  152        
        },
        {
          "Type":  "TDialog",
          "Name":  "Vaccination_1",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  154,
          "#":  153        
        },
        {
          "Type":  "TDialog",
          "Name":  "BlindOnPlayer",
          "Pos.x":  650,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  176        
        },
        {
          "Type":  "TDialog",
          "Name":  "FearOnPlayer",
          "Pos.x":  650,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  177        
        }      
      ],
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "PlayerGroup",
          "Pos.x":  -30,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  3,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  80,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  5,
          "Total.Lines":  1,
          "Code.Type":  "Global",
          "Code":          
          [
              "GRun();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  260,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  8,
          "Total.Lines":  3,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "AddDialogInject('dialog_mc', '', \"Меня интересуют биомодули\", 0);",
              "AddDialogInject('dialog_mc_2', '', \"Удаление вредных веществ из организма\", 0);",
              "AddDialogInject('Vaccination', '', \"Сделать прививку\", 0);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  320,
          "Pos.y":  90,
          "Parent":  -1,
          "#":  19,
          "Total.Lines":  207,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Определяем наличие на корабле и модификатор биомира",
              "temp_float = 1.0;",
              "if(ArtefactTypeInUse(Player(),t_ArtBio))",
              "{",
              "    temp_float=CT('Biomodules.BioworldInSlotCoef');",
              "}",
              "else",
              "{",
              "    if(ArtefactTypeInUse(Player(),t_ArtArtefactor))",
              "    {",
              "        for(i=0;i<ShipArts(Player());i=i+1)",
              "        {",
              "            temp_dword=ShipArts(Player(),i);",
              "            if(ItemType(temp_dword)==t_ArtBio)",
              "            {",
              "                if(ItemDurability(temp_dword))",
              "                {",
              "                    temp_float=CT('Biomodules.BioworldInHoldCoef');",
              "                    break;",
              "                }",
              "            }",
              "        }",
              "    }",
              "}",
              "temp_int_1=0;",
              "if(ShipHealthFactor(Player(),15))temp_int_1=temp_int_1+3;",
              "if(ShipHealthFactor(Player(),17))temp_int_1=temp_int_1+3;",
              "if(ShipHealthFactor(Player(),18))temp_int_1=temp_int_1+8;",
              "if(ShipHealthFactor(Player(),20))temp_int_1=temp_int_1+2;",
              "if(ShipHealthFactor(Player(),23))temp_int_1=temp_int_1-1;",
              "if(ShipHealthFactor(Player(),3))temp_int_1=temp_int_1+2;",
              "if(ShipHealthFactor(Player(),4))temp_int_1=temp_int_1-3;",
              "if(ShipHealthFactor(Player(),6))temp_int_1=temp_int_1-6;",
              "if(ShipHealthFactor(Player(),7))temp_int_1=temp_int_1-4;",
              "if(ShipHealthFactor(Player(),9))temp_int_1=temp_int_1-1;",
              "if(ShipHealthFactor(Player(),10))temp_int_1=temp_int_1-2;",
              "if(ShipHealthFactor(Player(),11))temp_int_1=temp_int_1-2;",
              "if(ShipHealthFactor(Player(),12))temp_int_1=temp_int_1-4;",
              "temp_int_1 = temp_int_1 + GlobalImplantsEnduranceBonus;",
              "temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM');",
              "if(temp_int_2>-1)",
              "{",
              "    if(ShipPilotRace(Player())==0)",
              "    {",
              "        cur_stama=round(temp_float*10+temp_int_1-stama_count);",
              "        free_brain=2-ShipCustomShipInfoData(Player(),temp_int_2,3);",
              "        free_eye=2-ShipCustomShipInfoData(Player(),temp_int_2,2);",
              "        free_hand=2-ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "    }",
              "    else if(ShipPilotRace(Player())==1)",
              "    {",
              "        cur_stama=round(temp_float*7+temp_int_1-stama_count);",
              "        free_brain=2-ShipCustomShipInfoData(Player(),temp_int_2,3);",
              "        free_eye=2-ShipCustomShipInfoData(Player(),temp_int_2,2);",
              "        free_hand=4-ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "    }",
              "    else if(ShipPilotRace(Player())==2)",
              "    {",
              "        cur_stama=round(temp_float*7+temp_int_1-stama_count);",
              "        free_brain=2-ShipCustomShipInfoData(Player(),temp_int_2,3);",
              "        free_eye=2-ShipCustomShipInfoData(Player(),temp_int_2,2);",
              "        free_hand=2-ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "    }",
              "    else if(ShipPilotRace(Player())==3)",
              "    {",
              "        cur_stama=round(temp_float*5+temp_int_1-stama_count);",
              "        free_brain=4-ShipCustomShipInfoData(Player(),temp_int_2,3);",
              "        free_eye=2-ShipCustomShipInfoData(Player(),temp_int_2,2);",
              "        free_hand=2-ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "    }",
              "    else if(ShipPilotRace(Player())==4)",
              "    {",
              "        cur_stama=round(temp_float*6+temp_int_1-stama_count);",
              "        free_brain=2-ShipCustomShipInfoData(Player(),temp_int_2,3);",
              "        free_eye=3-ShipCustomShipInfoData(Player(),temp_int_2,2);",
              "        free_hand=2-ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "    }",
              "}",
              "else",
              "{",
              "    if(ShipPilotRace(Player())==0)",
              "    {",
              "        cur_stama=round(temp_float*10+temp_int_1-stama_count);",
              "        free_brain=2;free_eye=2;free_hand=2;",
              "    }",
              "    else if(ShipPilotRace(Player())==1)",
              "    {",
              "        cur_stama=round(temp_float*7+temp_int_1-stama_count);",
              "        free_brain=2;free_eye=2;free_hand=4;",
              "    }",
              "    else if(ShipPilotRace(Player())==2)",
              "    {",
              "        cur_stama=round(temp_float*7+temp_int_1-stama_count);",
              "        free_brain=2;free_eye=2;free_hand=2;",
              "    }",
              "    else if(ShipPilotRace(Player())==3)",
              "    {",
              "        cur_stama=round(temp_float*5+temp_int_1-stama_count);",
              "        free_brain=4;free_eye=2;free_hand=2;",
              "    }",
              "    else if(ShipPilotRace(Player())==4)",
              "    {",
              "        cur_stama=round(temp_float*6+temp_int_1-stama_count);",
              "        free_brain=2;free_eye=3;free_hand=2;",
              "    }",
              "}",
              "temp_int=ShipFindCustomShipInfoByType(Player(),'bioMM_ILL');",
              "if(temp_int>-1)cur_stama=cur_stama-3;//Дополнительный штраф к нагрузке от самого факта наличия лихорадки",
              "if(new_module<=CurTurn())",
              "{",
              "    ArrayClear(biomm_MC);",
              "    ArrayClear(temp_array_2);",
              "    if(GalaxyTechLevel()<3)ArrayAdd(temp_array_2,1);",
              "    else if(GalaxyTechLevel()>=3 && GalaxyTechLevel()<5)",
              "    {",
              "        ArrayAdd(temp_array_2,1);",
              "        ArrayAdd(temp_array_2,3);",
              "    }",
              "    else if(GalaxyTechLevel()>=5 && GalaxyTechLevel()<7)",
              "    {",
              "        ArrayAdd(temp_array_2,1);",
              "        ArrayAdd(temp_array_2,3);",
              "        ArrayAdd(temp_array_2,5);",
              "    }",
              "    else if(GalaxyTechLevel()==7)",
              "    {",
              "        ArrayAdd(temp_array_2,1);",
              "        ArrayAdd(temp_array_2,3);",
              "        ArrayAdd(temp_array_2,5);",
              "        ArrayAdd(temp_array_2,7);",
              "    }",
              "    else if(GalaxyTechLevel()==8)",
              "    {",
              "        ArrayAdd(temp_array_2,1);",
              "        ArrayAdd(temp_array_2,3);",
              "        ArrayAdd(temp_array_2,5);",
              "        ArrayAdd(temp_array_2,7);",
              "        ArrayAdd(temp_array_2,8);",
              "    }",
              "    while(ArrayDim(biomm_MC)<4)",
              "    {",
              "        temp_int_2=Rnd(1,ArrayDim(temp_array_2)-1);",
              "        temp_str=DeleteTags('Biomodules.'+temp_array_2[temp_int_2]+'_gtu.legal_count');",
              "        temp_int=Rnd(1,CT(temp_str));",
              "        temp_str_1=DeleteTags('Biomodules.'+temp_array_2[temp_int_2]+'_gtu.'+temp_int);",
              "        if(ArrayDim(biomm_MC)==2)",
              "        {",
              "            while(temp_str_1==biomm_MC[1])",
              "            {",
              "                temp_int=Rnd(1,CT(temp_str));",
              "                temp_str_1=DeleteTags('Biomodules.'+temp_array_2[temp_int_2]+'_gtu.'+temp_int);",
              "            }",
              "        }",
              "        if(ArrayDim(biomm_MC)==3)",
              "        {",
              "            while(temp_str_1==biomm_MC[1] || temp_str_1==biomm_MC[2])",
              "            {",
              "                temp_int=Rnd(1,CT(temp_str));",
              "                temp_str_1=DeleteTags('Biomodules.'+temp_array_2[temp_int_2]+'_gtu.'+temp_int);",
              "            }",
              "        }",
              "        ArrayAdd(biomm_MC,temp_str_1);",
              "    }",
              "}",
              "if(GetGameOptions('FontDialog')==0)temp_str='<clrEnd>-------------------------------------------------------------'+\"<br>\";",
              "else if(GetGameOptions('FontDialog')==1)temp_str='<clrEnd>------------------------------------------'+\"<br>\";",
              "else if(GetGameOptions('FontDialog')==2)temp_str='<clrEnd>-----------------------------------------'+\"<br>\";",
              "else if(GetGameOptions('FontDialog')==3)temp_str='<clrEnd>-------------------------------------'+\"<br>\";",
              "for(i=1; i<ArrayDim(biomm_MC); i=i+1)",
              "{",
              "    temp_str=temp_str+\"<clrEnd>Биомодуль: <clr>\"+CT(biomm_MC[i]+DeleteTags('.Name'))+\"<br>\";",
              "    temp_str=temp_str+\"<clrEnd>Описание: \"+' '+CT(biomm_MC[i]+DeleteTags('.Description'))+\"<br>\";",
              "    if(CT(biomm_MC[i]+DeleteTags('.Slot'))=='B') temp_str=temp_str+\"<clrEnd>Модифицируемая часть: <clr>Мозг\"+\"<br>\";",
              "    if(CT(biomm_MC[i]+DeleteTags('.Slot'))=='H') temp_str=temp_str+\"<clrEnd>Модифицируемая часть: <clr>Рука\"+\"<br>\";",
              "    if(CT(biomm_MC[i]+DeleteTags('.Slot'))=='E') temp_str=temp_str+\"<clrEnd>Модифицируемая часть: <clr>Глаз\"+\"<br>\";",
              "    temp_str=temp_str+\"<clrEnd>Необходимо выносливости: <clr>\"+' '+CT(biomm_MC[i]+DeleteTags('.Stama'))+\"<br>\";",
              "",
              "    if(GetGameOptions('FontDialog') == '0') temp_str = temp_str + '<clrEnd>-------------------------------------------------------------' + \"<br>\";",
              "    else if(GetGameOptions('FontDialog') == '1') temp_str = temp_str + '<clrEnd>------------------------------------------' + \"<br>\";",
              "    else if(GetGameOptions('FontDialog') == '2') temp_str = temp_str + '<clrEnd>-----------------------------------------' + \"<br>\";",
              "    else temp_str = temp_str + '<clrEnd>-------------------------------------' + \"<br>\";",
              "}",
              "if(cur_stama <= 0) temp_str_1 = \"</color>К сожалению, наши базовые медицинские сканеры показывают, что ваш организм уже испытывает серьезную нагрузку. Мы вынуждены отказать вам в установке новых биомодулей. Более того, мы бы рекомендовали удалить один или несколько имеющихся, чтобы снизить нагрузку и избежать осложнений.\";",
              "if(free_hand <= 0 && free_brain <= 0 && free_eye <= 0) temp_str_1 = \"</color>К сожалению, похоже, что ваше тело уже просто не способно вместить в себя еще больше кибернетики. Боюсь установка новых биомодулей в данной ситуации просто физически невозможна. Если хотите мы можем что-нибудь удалить.\";",
              "if(free_hand <= 0 && free_brain <= 0 && free_eye <= 0 && cur_stama <= 0) temp_str_1 = \"</color>Великий Космос, да наши сканеры просто взбесились. На вашем теле уже нет живого места – сплошная кибернетика, а организм испытывает просто невероятные нагрузки. Если вы до сих пор не испытываете никаких осложнений, то это невероятная удача, но я бы не стал слишком на нее рассчитывать. Мы рекомендуем как можно скорее удалить часть биомодулей, пожалейте свой организм.\";",
              "if((free_hand > 0 || free_brain > 0 || free_eye > 0) && cur_stama > 0) temp_str_1 = \"</color>Ну-с, похоже, что все в порядке. Общих противопоказаний нет, однако могут возникнуть индивидуальные проблемы с некоторыми конкретными биомодулями, но это мы уже будем проверять позже.\";",
              "",
              "//Проверка на то, была ли уже рассчитана цена новой партии биомодулей на МЦ",
              "//После расчёта цены это условие исполняться не будет вплоть до следующего обновления ассортимента имплантов",
              "if(new_module <= CurTurn())",
              "{",
              "    new_module = CurTurn() + Rnd(10, 20);",
              "    //Расчёт цен биомодулей",
              "    for(i = 1; i <= 3; i = i + 1)",
              "    {",
              "        //Берём ГТУ биомодуля",
              "        temp_int_2 = substr(biomm_MC[i], 11, 1);",
              "        //Берём номер биомодуля из списка его ГТУ",
              "        temp_int = substr(biomm_MC[i], 17, 2);",
              "        temp_int_2 = temp_int_2 / 2;",
              "        if(!temp_int_2) temp_int_2 = 1;",
              "        cost = GalaxyMoney(3) * 3 * temp_int_2;",
              "        //Небольшая добавка к цене биомодуля в зависимости от высоты его номера в списке Lang",
              "        cost = cost + (cost * temp_int * 2) / 100;",
              "        biomm_cost[i] = cost;",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  100,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  22,
          "Total.Lines":  1022,
          "Code.Type":  "Init",
          "Code":          
          [
              "biomm_PB = newarray(1);",
              "biomm_MC = newarray(1);",
              "temp_array = newarray(1);",
              "temp_array_2 = newarray(1);",
              "biomm_cost = newarray(7);",
              "biomm_cost[1] = 0;",
              "biomm_cost[2] = 0;",
              "biomm_cost[3] = 0;",
              "biomm_cost[4] = 0;",
              "biomm_cost[5] = 0;",
              "biomm_cost[6] = 0;",
              "add_dialog = newarray(3);",
              "add_dialog[1] = 0;",
              "add_dialog[2] = 0;",
              "add_dialog_cd = newarray(3);",
              "add_dialog_cd[1] = 0;",
              "add_dialog_cd[2] = 0;",
              "for(i = 0; i <= 29; i = i + 1) immun_array[i] = 0;",
              "CurrentPlayerRace_Global = ShipPilotRace(Player());",
              "ImplantsVersionUpdate();",
              "SpecArrsUpdate = CT('Biomodules.ImplantsVersion');",
              "",
              "//Перебираем все корабли в Галактике и \"обрабатываем\" их",
              "temp_int = BuildListOfNewShips(temp_array, 0, 2+4+8+16, 1+2+4+8+16+128, 1, ',SubFactionFixedStanding,SubFactionPlayerMercsFixedStanding', ',EliteWarrior,Militiaman1,Militiaman2,Militiaman3,Merc,Freelancer,Smuggler,RangerPirate,FemRanger,Rebel,PirateRunner,RedLeader,AtlantLeader,FeiLeader,PlayerMerc');",
              "if(temp_int) //Если был обнаружен хотя бы один корабль, подходящий по заданным фильтрам",
              "{",
              "    for(i = 0; i < ArrayDim(temp_array); i = i + 1)",
              "    {",
              "        temp_int = 0;",
              "        temp_dword = temp_array[i];",
              "",
              "        if(!temp_dword) continue; //Проверка на \"мертворождённый\" корабль",
              "        if(IsPlayer(temp_dword)) continue; //Исключаем игрока",
              "        //if(ShipInScript(temp_dword, 0)) continue; //Исключаем скриптовые корабли, не считая корабли с OrderLock",
              "",
              "        //Определяем шанс в зависимости от типа корабля",
              "        temp_str = ShipType(temp_dword);",
              "        if(temp_str == 'Ranger' || temp_str == 'RangerPirate' || temp_str == 'Merc' || temp_str == 'Freelancer' || temp_str == 'PlayerMerc') //Рейнджеры и изменники",
              "        {",
              "            temp_str = 'Ranger';",
              "            temp_int = ImplantChanceArray[0];",
              "        }",
              "        else if(temp_str == 'FemRanger') //Спецагенты",
              "        {",
              "            temp_str = 'Ranger';",
              "            temp_int = ImplantChanceArray[1];",
              "        }",
              "        else if(temp_str == 'Pirate' || temp_str == 'Rebel' || temp_str == 'PirateRunner')",
              "        {",
              "            temp_str = 'Pirate';",
              "            temp_int = ImplantChanceArray[2];",
              "        }",
              "        else if(ShipTypeN(temp_dword) == t_Warrior)",
              "        {",
              "            //Если военный не является флагманом",
              "            if(!ShipSubType(temp_dword))",
              "            {",
              "                temp_str = 'Warrior';",
              "                temp_int = ImplantChanceArray[3];",
              "            }",
              "            else continue;",
              "        }",
              "        else if(temp_str == 'Transport')",
              "        {",
              "            temp_str = 'Transport';",
              "            temp_int = ImplantChanceArray[4];",
              "        }",
              "        else if(temp_str == 'Smuggler')",
              "        {",
              "            temp_str = 'Transport';",
              "            temp_int = ImplantChanceArray[5];",
              "        }",
              "        else if(temp_str == 'Liner')",
              "        {",
              "            temp_str = 'Liner';",
              "            temp_int = ImplantChanceArray[6];",
              "        }",
              "        else if(temp_str == 'Diplomat')",
              "        {",
              "            temp_str = 'Diplomat';",
              "            temp_int = ImplantChanceArray[7];",
              "        }",
              "        else continue;",
              "",
              "        //Бросок на шанс",
              "        if(Rnd(1, 100) > temp_int) continue;",
              "        AddImplantsToShip(temp_dword, temp_str, ShipPilotRace(temp_dword));",
              "    }",
              "}",
              "lastShipId = GalaxyShipId();",
              "",
              "//Функция для добавления бонусов из разделов конкретных имплантов на корабль",
              "function AddImplantBonuses(dword ship, str bon_path, int bon_size)",
              "{",
              "    //Внутренние переменные с номерами бонусов не являются глобалками, так что можем спокойно запрашивать их через скрипт",
              "    int bon_num = GetValueFromScript('', bon_path);",
              "    ShipSpecialBonuses(ship, bon_num, ShipSpecialBonuses(ship, bon_num) + bon_size);",
              "}",
              "//Функция для добавления имплантов на корабль NPC",
              "function AddImplantsToShip(dword ship, str type, int race)",
              "{",
              "    //Определяем доступность частей тела пилота, исходя из его расы",
              "    //Если у капитана ещё нет ни одного биомодуля",
              "    infos = ShipFindCustomShipInfoByType(ship, 'bioMM_NPC');",
              "    if(infos == -1)",
              "    {",
              "        temp_str_2 = CT('ShipInfo.AddInfo.CustomInfos.bioMM_NPC.Description');",
              "        free_brain = 2;",
              "        free_hand = 2;",
              "        free_eye = 2;",
              "        int bioms_at_max = 6;",
              "        if(race == 1)",
              "        {",
              "            free_hand = 4;",
              "            bioms_at_max = 8;",
              "        }",
              "        else if(race == 3)",
              "        {",
              "            free_brain = 4;",
              "            bioms_at_max = 8;",
              "        }",
              "        else if(race == 4)",
              "        {",
              "            free_eye = 3;",
              "            bioms_at_max = 7;",
              "        }",
              "    }",
              "    //Если биомодули у пилота уже есть, то просто считываем количество доступных частей тела из инфошки",
              "    else",
              "    {",
              "        temp_str_2 = ShipCustomShipInfoDescription(ship, infos);",
              "        free_brain = ShipCustomShipInfoData(ship, infos, 1);",
              "        free_hand = ShipCustomShipInfoData(ship, infos, 2);",
              "        free_eye = ShipCustomShipInfoData(ship, infos, 3);",
              "        bioms_at_max = free_brain + free_hand + free_eye;",
              "    }",
              "",
              "    //Определяем количество устанавливаемых биомодулей",
              "    GTL = GalaxyTechLevel();",
              "    if(GTL >= 7) bioms_at_max = bioms_at_max;",
              "    else if(GTL == 5 || GTL == 6) bioms_at_max = bioms_at_max - 1;",
              "    else if(GTL == 4)",
              "    {",
              "        bioms_at_max = bioms_at_max - 2;",
              "        if(bioms_at_max > 5) bioms_at_max = 5;",
              "    }",
              "    else if(GTL == 3) bioms_at_max = bioms_at_max - 3;",
              "    else if(GTL < 3) bioms_at_max = 3;",
              "",
              "    //Считаем конкретные шансы",
              "    int bioms_to_install = 0;",
              "    if(bioms_at_max > 0)",
              "    {",
              "        int roll = Rnd(1, 100);",
              "        //Шансы на установку большого числа имплантов тем ниже, чем более развитой является раса пилота",
              "        if(roll <= ImplantChanceArray[9] - race) bioms_to_install = bioms_at_max;",
              "        else if(roll <= ImplantChanceArray[10] - race) bioms_to_install = round(1.0 * bioms_at_max / 1.2);",
              "        else if(roll <= ImplantChanceArray[11] - race) bioms_to_install = round(1.0 * bioms_at_max / 1.5);",
              "        else if(roll <= ImplantChanceArray[12] - race) bioms_to_install = round(1.0 * bioms_at_max / 2.0);",
              "        else if(roll <= ImplantChanceArray[13] - race) bioms_to_install = round(1.0 * bioms_at_max / 3.0);",
              "        else bioms_to_install = 1;",
              "        //Не менее одного биомодуля",
              "        if(bioms_to_install <= 0) bioms_to_install = 1;",
              "    }",
              "    //Устанавливаем самым лютым киборгам Биомир",
              "    if(bioms_to_install >= 4)",
              "    {",
              "        //Малоки ар стронг! (а потому обходятся без этих ваших \"облегчителей\")",
              "        if(race)",
              "        {",
              "            //Шанс на получение Биомира тем выше, чем более развита раса, и чем больше имплантов установлено",
              "            if(Rnd(1, 100) <= (9 + race) * bioms_to_install)",
              "            {",
              "                //Проверяем наличие открытых слотов под арты и добавляем один, если нужно",
              "                if(!ShipSlots(ship, 2)) ShipSpecialBonuses(ship, bonSlotArt, ShipSpecialBonuses(ship, bonSlotArt) + 1);",
              "                temp_int_4 = 5;",
              "                while(temp_int_4 == 5) temp_int_4 = Rnd(0, 6);",
              "                temp_dword = CreateArt(t_ArtBio, temp_int_4);",
              "                AddItemToShip(ship, temp_dword);",
              "                ItemIsInUse(temp_dword, ship, 1);",
              "                //Запрещаем боту снимать и дропать этот Биомир",
              "                NoDropItem(temp_dword, 1);",
              "                ShipCalcParam(ship);",
              "                if(ShipFreeSpace(ship) < 0)",
              "                {",
              "                    temp_dword = ShipItems(ship, 0);",
              "                    ItemSize(temp_dword, ItemSize(temp_dword) + abs(ShipFreeSpace(ship)) + Rnd(1, 3));",
              "                }",
              "            }",
              "            if(bioms_to_install >= 6)",
              "            {",
              "                //Также докидываем сверху Кровяной джогар, если бот уж совсем упоролся",
              "                if(Rnd(1, 100) <= (8 + race) * bioms_to_install) ShipHealthFactor(ship, 18, Rnd(1551, 3289));",
              "            }",
              "        }",
              "        //Но всё же хоть немного ослаблять нагрузку малоки иногда будут",
              "        else",
              "        {",
              "            if(bioms_to_install >= 5)",
              "            {",
              "                if(Rnd(1, 100) <= 6 * bioms_to_install) ShipHealthFactor(ship, 18, Rnd(1646, 3397));",
              "            }",
              "        }",
              "    }",
              "    //Производим установку биомодулей",
              "    for(int o = 1; o <= bioms_to_install; o = o + 1)",
              "    {",
              "        //Определяем, какой именно модуль будем ставить",
              "        //pir_color_chance - шанс на получение кораблём \"пиратского\" биомодуля",
              "        //   Фактически влияет только на цвет его имени в инфошке",
              "        if(type == 'Ranger')",
              "        {",
              "            temp_str_1 = 'RangerImps';",
              "            pir_color_chance = 30;",
              "        }",
              "        else if(type == 'Warrior')",
              "        {",
              "            temp_str_1 = 'WarriorImps';",
              "            pir_color_chance = 5;",
              "        }",
              "        else if(type == 'Pirate')",
              "        {",
              "            temp_str_1 = 'PirateImps';",
              "            pir_color_chance = 77;",
              "        }",
              "        else if(type == 'Transport')",
              "        {",
              "            temp_str_1 = 'TransportImps';",
              "            pir_color_chance = 20;",
              "        }",
              "        else if(type == 'Liner')",
              "        {",
              "            temp_str_1 = 'LinerImps';",
              "            pir_color_chance = 10;",
              "        }",
              "        else if(type == 'Diplomat')",
              "        {",
              "            temp_str_1 = 'DiplomatImps';",
              "            pir_color_chance = 25;",
              "        }",
              "",
              "        temp_int_5 = 0;",
              "        while(!temp_int_5)",
              "        {",
              "            temp_int_3 = Rnd(1, GetValueFromScript('Mod_ExpImplants', temp_str_1, 0, GTL));",
              "            if(Rnd(1, 100) <= GetValueFromScript('Mod_ExpImplants', temp_str_1, temp_int_3, race))",
              "            {",
              "                //Проверяем, осталось ли в теле пилота место под данный биомодуль",
              "                //Заодно начинаем заполнять строчку с его названием",
              "                temp_str = GetValueFromScript('Mod_ExpImplants', temp_str_1, temp_int_3, 7);",
              "                if(temp_str == 'B')",
              "                {",
              "                    if(free_brain)",
              "                    {",
              "                        //Проверка на конфликтующий биомодуль",
              "                        temp_str_3 = GetValueFromScript('Mod_ExpImplants', temp_str_1, temp_int_3, 13);",
              "                        if(temp_str_3 != '')",
              "                        {",
              "                            //Ищем в описании инфошки (в уже установленных биомодулях) имя конфликтующего биомодуля",
              "                            if(~findsubstr(temp_str_2, '>' + temp_str_3)) continue; //Приставка > означает конец цветового тэга, поскольку цвет биомодулей у пиратов может отличаться, не проверяем по конкретному цвету",
              "                        }",
              "                        //Проверка на то, что данный биомодуль уже был (возможно) установлен боту",
              "                        temp_str_3 = GetValueFromScript('Mod_ExpImplants', temp_str_1, temp_int_3, 12);",
              "                        if(~findsubstr(temp_str_2, '>' + temp_str_3)) continue; //Приставка > означает конец цветового тэга, поскольку цвет биомодулей у пиратов может отличаться, не проверяем по конкретному цвету",
              "                        free_brain = free_brain - 1;",
              "                        //Добавляем к описанию инфошки новый биомодуль",
              "                        if(Rnd(1, 100) <= pir_color_chance) bioName = ' ' + CT('Biomodules.PirateBiomoduleNameColor') + temp_str_3 + '</color>';",
              "                        else bioName = ' <color=255,240,100>' + temp_str_3 + '</color>';",
              "                        temp_str_2 = temp_str_2 + \"<br>\" + CT('Script.Mod_ExpImplants.Brain') + bioName;",
              "                        temp_int_5 = temp_int_3;",
              "                    }",
              "                }",
              "                else if(temp_str == 'H')",
              "                {",
              "                    if(free_hand)",
              "                    {",
              "                        //Проверка на конфликтующий биомодуль",
              "                        temp_str_3 = GetValueFromScript('Mod_ExpImplants', temp_str_1, temp_int_3, 13);",
              "                        if(temp_str_3 != '')",
              "                        {",
              "                            //Ищем в описании инфошки (в уже установленных биомодулях) имя конфликтующего биомодуля",
              "                            if(~findsubstr(temp_str_2, '>' + temp_str_3)) continue; //Приставка > означает конец цветового тэга, поскольку цвет биомодулей у пиратов может отличаться, не проверяем по конкретному цвету",
              "                        }",
              "                        //Проверка на то, что данный биомодуль уже был (возможно) установлен боту",
              "                        temp_str_3 = GetValueFromScript('Mod_ExpImplants', temp_str_1, temp_int_3, 12);",
              "                        if(~findsubstr(temp_str_2, '>' + temp_str_3)) continue; //Приставка > означает конец цветового тэга, поскольку цвет биомодулей у пиратов может отличаться, не проверяем по конкретному цвету",
              "                        free_hand = free_hand - 1;",
              "                        //Добавляем к описанию инфошки новый биомодуль",
              "                        if(Rnd(1, 100) <= pir_color_chance) bioName = ' ' + CT('Biomodules.PirateBiomoduleNameColor') + temp_str_3 + '</color>';",
              "                        else bioName = ' <color=255,240,100>' + temp_str_3 + '</color>';",
              "                        temp_str_2 = temp_str_2 + \"<br>\" + CT('Script.Mod_ExpImplants.Hand') + bioName;",
              "                        //Накидываем боту немного стимуляторов, если устанавливается \"Игла\" (имплантируется в руку)",
              "                        if(temp_str_3 == CT('Biomodules.5_gtu.6.Name'))",
              "                        {",
              "                            temp_int_5 = Rnd(2, 4);",
              "                            temp_str_3 = '';",
              "                            //Выбираем выпавшее количество стимуляторов",
              "                            while(temp_int_5)",
              "                            {",
              "                                //Выбираем неповторяющиеся стимуляторы",
              "                                temp_int_4 = Rnd(13, 21);",
              "                                if(findsubstr(temp_str_3, '+' + temp_int_4) == -1)",
              "                                {",
              "                                    ShipHealthFactor(ship, temp_int_4, Rnd(963, 2672));",
              "                                    temp_str_3 = temp_str_3 + '+' + temp_int_4;",
              "                                    temp_int_5 = temp_int_5 - 1;",
              "                                }",
              "                            }",
              "                            //С вероятностью в 33% вешаем на такого бота наркозависимость",
              "                            if(Rnd(1, 100) <= 33) ShipHealthFactor(ship, 6, Rnd(1238, 2431));",
              "                        }",
              "",
              "                        temp_int_5 = temp_int_3;",
              "                    }",
              "                }",
              "                else",
              "                {",
              "                    if(free_eye)",
              "                    {",
              "                        //Проверка на конфликтующий биомодуль",
              "                        temp_str_3 = GetValueFromScript('Mod_ExpImplants', temp_str_1, temp_int_3, 13);",
              "                        if(temp_str_3 != '')",
              "                        {",
              "                            //Ищем в описании инфошки (в уже установленных биомодулях) имя конфликтующего биомодуля",
              "                            if(~findsubstr(temp_str_2, '>' + temp_str_3)) continue; //Приставка > означает конец цветового тэга, поскольку цвет биомодулей у пиратов может отличаться, не проверяем по конкретному цвету",
              "                        }",
              "                        //Проверка на то, что данный биомодуль уже был (возможно) установлен боту",
              "                        temp_str_3 = GetValueFromScript('Mod_ExpImplants', temp_str_1, temp_int_3, 12);",
              "                        if(~findsubstr(temp_str_2, '>' + temp_str_3)) continue; //Приставка > означает конец цветового тэга, поскольку цвет биомодулей у пиратов может отличаться, не проверяем по конкретному цвету",
              "                        free_eye = free_eye - 1;",
              "                        //Добавляем к описанию инфошки новый биомодуль",
              "                        if(Rnd(1, 100) <= pir_color_chance) bioName = ' ' + CT('Biomodules.PirateBiomoduleNameColor') + temp_str_3 + '</color>';",
              "                        else bioName = ' <color=255,240,100>' + temp_str_3 + '</color>';",
              "                        temp_str_2 = temp_str_2 + \"<br>\" + CT('Script.Mod_ExpImplants.Eye') + bioName;",
              "                        temp_int_5 = temp_int_3;",
              "                    }",
              "                }",
              "            }",
              "        }",
              "        //Добавляем на корабль доп. инфошку биомодуля, если таковая нужна",
              "        temp_str_3 = GetValueFromScript('Mod_ExpImplants', temp_str_1, temp_int_5, 11);",
              "        if(temp_str_3 != '') ShipAddCustomShipInfo(ship, temp_str_3, 'NoShow');",
              "        //Добавляем кораблю бонусы биомодуля, если таковые имеются",
              "        temp_str_3 = 'Biomodules.' + GetValueFromScript('Mod_ExpImplants', temp_str_1, temp_int_5, 5) + '_gtu.' + GetValueFromScript('Mod_ExpImplants', temp_str_1, temp_int_5, 6);",
              "        for(k = CT(temp_str_3 + '.Bonus_count'); k > 0; k = k - 1)",
              "        {",
              "            temp_str = CT(temp_str_3 + '.Bonus_' + k);",
              "            temp_int_1 = CT(temp_str_3 + '.Bonus_' + k + '_var');",
              "            AddImplantBonuses(ship, temp_str, temp_int_1);",
              "        }",
              "    }",
              "    //Добавляем инфошку и заполняем описание (также запоминаем всё ещё свободные части тела и ГТУ, на котором произошло добавление биомодулей)",
              "    if(infos == -1) ShipAddCustomShipInfo(ship, 'bioMM_NPC', temp_str_2, free_brain, free_hand, free_eye, '', '', GTL);",
              "    else",
              "    {",
              "        //Свободные участки мозга",
              "        ShipCustomShipInfoData(ship, infos, 1, free_brain);",
              "        //Свободные руки",
              "        ShipCustomShipInfoData(ship, infos, 2, free_hand);",
              "        //Свободные глаза",
              "        ShipCustomShipInfoData(ship, infos, 3, free_eye);",
              "        //ГТУ на момент установки",
              "        ShipCustomShipInfoTextData(ship, infos, 3, GTL);",
              "        //Обновляем описание",
              "        ShipCustomShipInfoDescription(ship, infos, temp_str_2);",
              "    }",
              "",
              "    //Для отладки",
              "    //SFT(Name(ship) + ' ' + GameDateTxtByTurn(CurTurn()) + ':');",
              "    //SFT(temp_str_2);",
              "}",
              "//Функция для обновления информации о биомодулях в массивах",
              "function ImplantsVersionUpdate()",
              "{",
              "    //Структура массивов:",
              "    //Первый элемент (под номером 0):",
              "    //Array[0,0] - ---",
              "    //Array[0,1] - число биомодулей для 1 ГТУ;",
              "    //Array[0,2] - число биомодулей для 1 ГТУ;",
              "    //Array[0,3] - число биомодулей для 1-3 ГТУ;",
              "    //Array[0,4] - число биомодулей для 1-3 ГТУ;",
              "    //Array[0,5] - число биомодулей для 1-5 ГТУ;",
              "    //Array[0,6] - число биомодулей для 1-5 ГТУ;",
              "    //Array[0,7] - число биомодулей для 1-7 ГТУ;",
              "    //Array[0,8] - число биомодулей для 1-8 ГТУ;",
              "    //Array[0,9] - число биомодулей для 1-8 ГТУ;",
              "    //Array[0,10] - ---",
              "    //Array[0,11] - ---",
              "    //Array[0,12] - ---",
              "    //Array[0,13] - ---",
              "    //Все последующие элементы (по числу доступных классу биомодулей):",
              "    //Array[N,0] - шанс установки биомодуля для малоков;",
              "    //Array[N,1] - шанс установки биомодуля для пеленгов;",
              "    //Array[N,2] - шанс установки биомодуля для людей;",
              "    //Array[N,3] - шанс установки биомодуля для фэян;",
              "    //Array[N,4] - шанс установки биомодуля для гаальцев;",
              "    //Array[N,5] - ГТУ биомодуля числом;",
              "    //Array[N,6] - номер биомодуля числом;",
              "    //Array[N,7] - слот установки: 'B' - мозг, 'H' - рука, 'E' - глаз;",
              "    //Array[N,8] - выносливость при установке на МЦ (если её нет, то 0);",
              "    //Array[N,9] - выносливость при установке на ПБ;",
              "    //Array[N,10] - имя дополнительной инфошки игрока, если есть, а если нет, то '';",
              "    //Array[N,11] - имя дополнительной инфошки NPC, если есть, а если нет, то '';",
              "    //Array[N,12] - название биомодуля строкой;",
              "    //Array[N,13] - название биомодуля, с которым имеется конфликт, если такой есть, а если нет, то '';",
              "",
              "    //Делаем первичный подсчёт числа биомодулей для каждого класса, определяем необходимую длину массивов",
              "    temp_int = 0;",
              "    temp_int_1 = 0;",
              "    temp_int_2 = 0;",
              "    temp_int_3 = 0;",
              "    temp_int_4 = 0;",
              "    temp_int_5 = 0;",
              "    j = -1;",
              "    while(j != 8)",
              "    {",
              "        j = j + 2;",
              "        if(j == 9) j = j - 1;",
              "        for(i = 1; i <= CT('Biomodules.' + j + '_gtu.ilegal_count'); i = i + 1)",
              "        {",
              "            if(CT('Biomodules.' + j + '_gtu.' + i + '.Ranger') > 0) temp_int = temp_int + 1;",
              "            if(CT('Biomodules.' + j + '_gtu.' + i + '.Warrior') > 0) temp_int_1 = temp_int_1 + 1;",
              "            if(CT('Biomodules.' + j + '_gtu.' + i + '.Pirate') > 0) temp_int_2 = temp_int_2 + 1;",
              "            if(CT('Biomodules.' + j + '_gtu.' + i + '.Transport') > 0) temp_int_3 = temp_int_3 + 1;",
              "            if(CT('Biomodules.' + j + '_gtu.' + i + '.Liner') > 0) temp_int_4 = temp_int_4 + 1;",
              "            if(CT('Biomodules.' + j + '_gtu.' + i + '.Diplomat') > 0) temp_int_5 = temp_int_5 + 1;",
              "        }",
              "    }",
              "    //Перед объявлением на всякий случай полностью затираем массивы, во избежание возможной утечки памяти",
              "    free(RangerImps);",
              "    free(WarriorImps);",
              "    free(PirateImps);",
              "    free(TransportImps);",
              "    free(LinerImps);",
              "    free(DiplomatImps);",
              "    RangerImps = newarray(temp_int + 1, 14);",
              "    WarriorImps = newarray(temp_int_1 + 1, 14);",
              "    PirateImps = newarray(temp_int_2 + 1, 14);",
              "    TransportImps = newarray(temp_int_3 + 1, 14);",
              "    LinerImps = newarray(temp_int_4 + 1, 14);",
              "    DiplomatImps = newarray(temp_int_5 + 1, 14);",
              "",
              "    //Заполняем объявленные массивы и подсчитываем число модулей каждого класса для каждого ГТУ",
              "    temp_int = 0;",
              "    temp_int_1 = 0;",
              "    temp_int_2 = 0;",
              "    temp_int_3 = 0;",
              "    temp_int_4 = 0;",
              "    temp_int_5 = 0;",
              "    j = -1;",
              "    while(j != 8)",
              "    {",
              "        j = j + 2;",
              "        if(j == 9)j = j - 1;",
              "        for(i = 1; i <= CT('Biomodules.' + j + '_gtu.ilegal_count'); i = i + 1)",
              "        {",
              "            //Биомодули для NPC-рейнджеров",
              "            if(CT('Biomodules.' + j + '_gtu.' + i + '.Ranger') > 0)",
              "            {",
              "                temp_int = temp_int + 1;",
              "                temp_str = 'Biomodules.' + j + '_gtu.' + i;",
              "                RangerImps[temp_int, 0] = 0 + CT(temp_str + '.Ranger') + CT(temp_str + '.Maloc');",
              "                RangerImps[temp_int, 1] = 0 + CT(temp_str + '.Ranger') + CT(temp_str + '.Peleng');",
              "                RangerImps[temp_int, 2] = 0 + CT(temp_str + '.Ranger') + CT(temp_str + '.People');",
              "                RangerImps[temp_int, 3] = 0 + CT(temp_str + '.Ranger') + CT(temp_str + '.Fei');",
              "                RangerImps[temp_int, 4] = 0 + CT(temp_str + '.Ranger') + CT(temp_str + '.Gaal');",
              "                RangerImps[temp_int, 5] = j;",
              "                RangerImps[temp_int, 6] = i;",
              "                RangerImps[temp_int, 7] = CT(temp_str + '.Slot');",
              "                if(CT(temp_str + '.Stama') != '') RangerImps[temp_int, 8] = CT(temp_str + '.Stama');",
              "                else RangerImps[temp_int, 8] = 0;",
              "                RangerImps[temp_int, 9] = CT(temp_str + '.Stama_pirate');",
              "                RangerImps[temp_int, 10] = CT(temp_str + '.AddPlayerInfo');",
              "                RangerImps[temp_int, 11] = CT(temp_str + '.AddNPCInfo');",
              "                //Если биомодуль может быть исключительно пиратским, выдаём его названию постоянный пиратский цвет",
              "                if(RangerImps[temp_int, 8]) RangerImps[temp_int, 12] = CT(temp_str + '.Name');",
              "                else RangerImps[temp_int, 12] = CT('Biomodules.PirateBiomoduleNameColor') + CT(temp_str + '.Name') + '</color>';",
              "                RangerImps[temp_int, 13] = CT(temp_str + '.Conflict');",
              "            }",
              "            //Биомодули для NPC-военных",
              "            if(CT('Biomodules.' + j + '_gtu.' + i + '.Warrior') > 0)",
              "            {",
              "                temp_int_1 = temp_int_1 + 1;",
              "                temp_str = 'Biomodules.' + j + '_gtu.' + i;",
              "                WarriorImps[temp_int_1, 0] = 0 + CT(temp_str + '.Warrior') + CT(temp_str + '.Maloc');",
              "                WarriorImps[temp_int_1, 1] = 0 + CT(temp_str + '.Warrior') + CT(temp_str + '.Peleng');",
              "                WarriorImps[temp_int_1, 2] = 0 + CT(temp_str + '.Warrior') + CT(temp_str + '.People');",
              "                WarriorImps[temp_int_1, 3] = 0 + CT(temp_str + '.Warrior') + CT(temp_str + '.Fei');",
              "                WarriorImps[temp_int_1, 4] = 0 + CT(temp_str + '.Warrior') + CT(temp_str + '.Gaal');",
              "                WarriorImps[temp_int_1, 5] = j;",
              "                WarriorImps[temp_int_1, 6] = i;",
              "                WarriorImps[temp_int_1, 7] = CT(temp_str + '.Slot');",
              "                if(CT(temp_str + '.Stama') != '') WarriorImps[temp_int_1, 8] = CT(temp_str + '.Stama');",
              "                else WarriorImps[temp_int_1, 8] = 0;",
              "                WarriorImps[temp_int_1, 9] = CT(temp_str + '.Stama_pirate');",
              "                WarriorImps[temp_int_1, 10] = CT(temp_str + '.AddPlayerInfo');",
              "                WarriorImps[temp_int_1, 11] = CT(temp_str + '.AddNPCInfo');",
              "                //Если биомодуль может быть исключительно пиратским, выдаём его названию постоянный пиратский цвет",
              "                if(WarriorImps[temp_int_1, 8]) WarriorImps[temp_int_1, 12] = CT(temp_str + '.Name');",
              "                else WarriorImps[temp_int_1, 12] = CT('Biomodules.PirateBiomoduleNameColor') + CT(temp_str + '.Name') + '</color>';",
              "                WarriorImps[temp_int_1, 13] = CT(temp_str + '.Conflict');",
              "            }",
              "            //Биомодули для NPC-пиратов",
              "            if(CT('Biomodules.' + j + '_gtu.' + i + '.Pirate') > 0)",
              "            {",
              "                temp_int_2 = temp_int_2 + 1;",
              "                temp_str = 'Biomodules.' + j + '_gtu.' + i;",
              "                PirateImps[temp_int_2, 0] = 0 + CT(temp_str + '.Pirate') + CT(temp_str + '.Maloc');",
              "                PirateImps[temp_int_2, 1] = 0 + CT(temp_str + '.Pirate') + CT(temp_str + '.Peleng');",
              "                PirateImps[temp_int_2, 2] = 0 + CT(temp_str + '.Pirate') + CT(temp_str + '.People');",
              "                PirateImps[temp_int_2, 3] = 0 + CT(temp_str + '.Pirate') + CT(temp_str + '.Fei');",
              "                PirateImps[temp_int_2, 4] = 0 + CT(temp_str + '.Pirate') + CT(temp_str + '.Gaal');",
              "                PirateImps[temp_int_2, 5] = j;",
              "                PirateImps[temp_int_2, 6] = i;",
              "                PirateImps[temp_int_2, 7] = CT(temp_str + '.Slot');",
              "                if(CT(temp_str + '.Stama') != '') PirateImps[temp_int_2, 8] = CT(temp_str + '.Stama');",
              "                else PirateImps[temp_int_2, 8] = 0;",
              "                PirateImps[temp_int_2, 9] = CT(temp_str + '.Stama_pirate');",
              "                PirateImps[temp_int_2, 10] = CT(temp_str + '.AddPlayerInfo');",
              "                PirateImps[temp_int_2, 11] = CT(temp_str + '.AddNPCInfo');",
              "                //Если биомодуль может быть исключительно пиратским, выдаём его названию постоянный пиратский цвет",
              "                if(PirateImps[temp_int_2, 8]) PirateImps[temp_int_2, 12] = CT(temp_str + '.Name');",
              "                else PirateImps[temp_int_2, 12] = CT('Biomodules.PirateBiomoduleNameColor') + CT(temp_str + '.Name') + '</color>';",
              "                PirateImps[temp_int_2, 13] = CT(temp_str + '.Conflict');",
              "            }",
              "            //Биомодули для NPC-транспортов",
              "            if(CT('Biomodules.' + j + '_gtu.' + i + '.Transport') > 0)",
              "            {",
              "                temp_int_3 = temp_int_3 + 1;",
              "                temp_str = 'Biomodules.' + j + '_gtu.' + i;",
              "                TransportImps[temp_int_3, 0] = 0 + CT(temp_str + '.Transport') + CT(temp_str + '.Maloc');",
              "                TransportImps[temp_int_3, 1] = 0 + CT(temp_str + '.Transport') + CT(temp_str + '.Peleng');",
              "                TransportImps[temp_int_3, 2] = 0 + CT(temp_str + '.Transport') + CT(temp_str + '.People');",
              "                TransportImps[temp_int_3, 3] = 0 + CT(temp_str + '.Transport') + CT(temp_str + '.Fei');",
              "                TransportImps[temp_int_3, 4] = 0 + CT(temp_str + '.Transport') + CT(temp_str + '.Gaal');",
              "                TransportImps[temp_int_3, 5] = j;",
              "                TransportImps[temp_int_3, 6] = i;",
              "                TransportImps[temp_int_3, 7] = CT(temp_str + '.Slot');",
              "                if(CT(temp_str + '.Stama') != '') TransportImps[temp_int_3, 8] = CT(temp_str + '.Stama');",
              "                else TransportImps[temp_int_3, 8] = 0;",
              "                TransportImps[temp_int_3, 9] = CT(temp_str + '.Stama_pirate');",
              "                TransportImps[temp_int_3, 10] = CT(temp_str + '.AddPlayerInfo');",
              "                TransportImps[temp_int_3, 11] = CT(temp_str + '.AddNPCInfo');",
              "                //Если биомодуль может быть исключительно пиратским, выдаём его названию постоянный пиратский цвет",
              "                if(TransportImps[temp_int_3, 8]) TransportImps[temp_int_3, 12] = CT(temp_str + '.Name');",
              "                else TransportImps[temp_int_3, 12] = CT('Biomodules.PirateBiomoduleNameColor') + CT(temp_str + '.Name') + '</color>';",
              "                TransportImps[temp_int_3, 13] = CT(temp_str + '.Conflict');",
              "            }",
              "            //Биомодули для NPC-лайнеров",
              "            if(CT('Biomodules.' + j + '_gtu.' + i + '.Liner') > 0)",
              "            {",
              "                temp_int_4 = temp_int_4 + 1;",
              "                temp_str = 'Biomodules.' + j + '_gtu.' + i;",
              "                LinerImps[temp_int_4, 0] = 0 + CT(temp_str + '.Liner') + CT(temp_str + '.Maloc');",
              "                LinerImps[temp_int_4, 1] = 0 + CT(temp_str + '.Liner') + CT(temp_str + '.Peleng');",
              "                LinerImps[temp_int_4, 2] = 0 + CT(temp_str + '.Liner') + CT(temp_str + '.People');",
              "                LinerImps[temp_int_4, 3] = 0 + CT(temp_str + '.Liner') + CT(temp_str + '.Fei');",
              "                LinerImps[temp_int_4, 4] = 0 + CT(temp_str + '.Liner') + CT(temp_str + '.Gaal');",
              "                LinerImps[temp_int_4, 5] = j;",
              "                LinerImps[temp_int_4, 6] = i;",
              "                LinerImps[temp_int_4, 7] = CT(temp_str + '.Slot');",
              "                if(CT(temp_str + '.Stama') != '') LinerImps[temp_int_4, 8] = CT(temp_str + '.Stama');",
              "                else LinerImps[temp_int_4, 8] = 0;",
              "                LinerImps[temp_int_4, 9] = CT(temp_str + '.Stama_pirate');",
              "                LinerImps[temp_int_4, 10] = CT(temp_str + '.AddPlayerInfo');",
              "                LinerImps[temp_int_4, 11] = CT(temp_str + '.AddNPCInfo');",
              "                LinerImps[temp_int_4, 12] = CT(temp_str + '.Name');",
              "                //Если биомодуль может быть исключительно пиратским, выдаём его названию постоянный пиратский цвет",
              "                if(LinerImps[temp_int_4, 8]) LinerImps[temp_int_4, 12] = CT(temp_str + '.Name');",
              "                else LinerImps[temp_int_4, 12] = CT('Biomodules.PirateBiomoduleNameColor') + CT(temp_str + '.Name') + '</color>';",
              "                LinerImps[temp_int_4, 13] = CT(temp_str + '.Conflict');",
              "            }",
              "            //Биомодули для NPC-дипломатов",
              "            if(CT('Biomodules.' + j + '_gtu.' + i + '.Diplomat') > 0)",
              "            {",
              "                temp_int_5 = temp_int_5 + 1;",
              "                temp_str = 'Biomodules.' + j + '_gtu.' + i;",
              "                DiplomatImps[temp_int_5, 0] = 0 + CT(temp_str + '.Diplomat') + CT(temp_str + '.Maloc');",
              "                DiplomatImps[temp_int_5, 1] = 0 + CT(temp_str + '.Diplomat') + CT(temp_str + '.Peleng');",
              "                DiplomatImps[temp_int_5, 2] = 0 + CT(temp_str + '.Diplomat') + CT(temp_str + '.People');",
              "                DiplomatImps[temp_int_5, 3] = 0 + CT(temp_str + '.Diplomat') + CT(temp_str + '.Fei');",
              "                DiplomatImps[temp_int_5, 4] = 0 + CT(temp_str + '.Diplomat') + CT(temp_str + '.Gaal');",
              "                DiplomatImps[temp_int_5, 5] = j;",
              "                DiplomatImps[temp_int_5, 6] = i;",
              "                DiplomatImps[temp_int_5, 7] = CT(temp_str + '.Slot');",
              "                if(CT(temp_str + '.Stama') != '') DiplomatImps[temp_int_5, 8] = CT(temp_str + '.Stama');",
              "                else DiplomatImps[temp_int_5, 8] = 0;",
              "                DiplomatImps[temp_int_5, 9] = CT(temp_str + '.Stama_pirate');",
              "                DiplomatImps[temp_int_5, 10] = CT(temp_str + '.AddPlayerInfo');",
              "                DiplomatImps[temp_int_5, 11] = CT(temp_str + '.AddNPCInfo');",
              "                //Если биомодуль может быть исключительно пиратским, выдаём его названию постоянный пиратский цвет",
              "                if(DiplomatImps[temp_int_5, 8]) DiplomatImps[temp_int_5, 12] = CT(temp_str + '.Name');",
              "                else DiplomatImps[temp_int_5, 12] = CT('Biomodules.PirateBiomoduleNameColor') + CT(temp_str + '.Name') + '</color>';",
              "                DiplomatImps[temp_int_5, 13] = CT(temp_str + '.Conflict');",
              "            }",
              "        }",
              "        RangerImps[0, j] = temp_int;",
              "        RangerImps[0, j + 1] = temp_int;",
              "        WarriorImps[0, j] = temp_int_1;",
              "        WarriorImps[0, j + 1] = temp_int_1;",
              "        PirateImps[0, j] = temp_int_2;",
              "        PirateImps[0, j + 1] = temp_int_2;",
              "        TransportImps[0, j] = temp_int_3;",
              "        TransportImps[0, j + 1] = temp_int_3;",
              "        LinerImps[0, j] = temp_int_4;",
              "        LinerImps[0, j + 1] = temp_int_4;",
              "        DiplomatImps[0, j] = temp_int_5;",
              "        DiplomatImps[0, j + 1] = temp_int_5;",
              "",
              "        //Заполняем массив с шансами выдачи биомодулей для возможности его удобной конфигурации через Lang",
              "        //Перед объявлением на всякий случай полностью затираем массив, во избежание возможной утечки памяти",
              "        free(ImplantChanceArray);",
              "        ImplantChanceArray = newarray(14);",
              "        ImplantChanceArray[0] = CT('Biomodules.ImplantsChanceListForNPC.Rangers');",
              "        ImplantChanceArray[1] = CT('Biomodules.ImplantsChanceListForNPC.SpecialAgents');",
              "        ImplantChanceArray[2] = CT('Biomodules.ImplantsChanceListForNPC.Pirates');",
              "        ImplantChanceArray[3] = CT('Biomodules.ImplantsChanceListForNPC.Warriors');",
              "        ImplantChanceArray[4] = CT('Biomodules.ImplantsChanceListForNPC.Transports');",
              "        ImplantChanceArray[5] = CT('Biomodules.ImplantsChanceListForNPC.Smugglers');",
              "        ImplantChanceArray[6] = CT('Biomodules.ImplantsChanceListForNPC.Liners');",
              "        ImplantChanceArray[7] = CT('Biomodules.ImplantsChanceListForNPC.Diplomats');",
              "        ImplantChanceArray[8] = CT('Biomodules.ImplantsChanceListForNPC.MercenaryBosses');",
              "        //Отдельно записываем шансы для бросков на определение количества имплантов",
              "        ImplantChanceArray[9] = CT('Biomodules.ImplantsChanceListForNPC.QuantityRollMax');",
              "        ImplantChanceArray[10] = CT('Biomodules.ImplantsChanceListForNPC.QuantityRollSubMax');",
              "        ImplantChanceArray[11] = CT('Biomodules.ImplantsChanceListForNPC.QuantityRollMiddle');",
              "        ImplantChanceArray[12] = CT('Biomodules.ImplantsChanceListForNPC.QuantityRollSupMin');",
              "        ImplantChanceArray[13] = CT('Biomodules.ImplantsChanceListForNPC.QuantityRollMin');",
              "    }",
              "}",
              "",
              "//Если игрок как-либо сменил расу, производим с ним некоторые операции",
              "function PlayerChangeRaceCheck()",
              "{",
              "    //Если игрок как-либо сменил расу",
              "    if(ShipPilotRace(Player()) != CurrentPlayerRace_Global)",
              "    {",
              "        //Сразу вешаем на игроку инфошку реабилитации после смены расы",
              "        int add_time = 0;",
              "        int skill_accuracy = 0;",
              "        int skill_mobility = 0;",
              "        int skill_technical = 0;",
              "        int skill_trader = 0;",
              "        int skill_charm = 0;",
              "        int skill_leadership = 0;",
              "        //Сперва удаляем ещё не истёкшую старую инфошку, если такая имеется",
              "        if(~ShipFindCustomShipInfoByType(Player(), 'ExpImplants_ChangeRaceRehabilitation'))",
              "        {",
              "            str penalties = ShipCustomShipInfoTextData(Player(), 'ExpImplants_ChangeRaceRehabilitation', 1);",
              "            skill_accuracy = skill_accuracy + GetParFromString(penalties, ',', 0, 0);",
              "            skill_mobility = skill_mobility + GetParFromString(penalties, ',', 1, 0);",
              "            skill_technical = skill_technical + GetParFromString(penalties, ',', 2, 0);",
              "            skill_trader = skill_trader + GetParFromString(penalties, ',', 3, 0);",
              "            skill_charm = skill_charm + GetParFromString(penalties, ',', 4, 0);",
              "            skill_leadership = skill_leadership + GetParFromString(penalties, ',', 5, 0);",
              "            add_time = add_time + ShipCustomShipInfoData(Player(), 'ExpImplants_ChangeRaceRehabilitation', 1) - CurTurn();",
              "            ShipDeleteCustomShipInfo(Player(), 'ExpImplants_ChangeRaceRehabilitation');",
              "        }",
              "",
              "        //Удаляем старые штрафы перед наложением обновлённых",
              "        //(реализация так себе, но пофиг, код всё равно редкий)",
              "        ShipSpecialBonuses(Player(), bonSkill1, ShipSpecialBonuses(Player(), bonSkill1) + skill_accuracy);",
              "        ShipSpecialBonuses(Player(), bonSkill2, ShipSpecialBonuses(Player(), bonSkill2) + skill_mobility);",
              "        ShipSpecialBonuses(Player(), bonSkill3, ShipSpecialBonuses(Player(), bonSkill3) + skill_technical);",
              "        ShipSpecialBonuses(Player(), bonSkill4, ShipSpecialBonuses(Player(), bonSkill4) + skill_trader);",
              "        ShipSpecialBonuses(Player(), bonSkill5, ShipSpecialBonuses(Player(), bonSkill5) + skill_charm);",
              "        ShipSpecialBonuses(Player(), bonSkill6, ShipSpecialBonuses(Player(), bonSkill6) + skill_leadership);",
              "",
              "        //int new_race = ShipPilotRace(Player());",
              "        if(CurrentPlayerRace_Global == Maloc)",
              "        {",
              "            skill_accuracy = min(skill_accuracy + 2, 10);",
              "            skill_leadership = min(skill_leadership + 2, 10);",
              "        }",
              "        else if(CurrentPlayerRace_Global == Peleng)",
              "        {",
              "            skill_mobility = min(skill_mobility + 2, 10);",
              "            skill_charm = min(skill_charm + 2, 10);",
              "        }",
              "        else if(CurrentPlayerRace_Global == People)",
              "        {",
              "            skill_mobility = min(skill_mobility + 2, 10);",
              "            skill_trader = min(skill_trader + 2, 10);",
              "        }",
              "        else if(CurrentPlayerRace_Global == Fei)",
              "        {",
              "            skill_technical = min(skill_technical + 2, 10);",
              "            skill_charm = min(skill_charm + 2, 10);",
              "        }",
              "        else //if(CurrentPlayerRace_Global == Gaal)",
              "        {",
              "            skill_mobility = min(skill_mobility + 2, 10);",
              "            skill_leadership = min(skill_leadership + 2, 10);",
              "        }",
              "",
              "        penalties = '';",
              "        penalties = penalties + skill_accuracy;",
              "        ShipSpecialBonuses(Player(), bonSkill1, ShipSpecialBonuses(Player(), bonSkill1) - skill_accuracy);",
              "        penalties = penalties + ',' + skill_mobility;",
              "        ShipSpecialBonuses(Player(), bonSkill2, ShipSpecialBonuses(Player(), bonSkill2) - skill_mobility);",
              "        penalties = penalties + ',' + skill_technical;",
              "        ShipSpecialBonuses(Player(), bonSkill3, ShipSpecialBonuses(Player(), bonSkill3) - skill_technical);",
              "        penalties = penalties + ',' + skill_trader;",
              "        ShipSpecialBonuses(Player(), bonSkill4, ShipSpecialBonuses(Player(), bonSkill4) - skill_trader);",
              "        penalties = penalties + ',' + skill_charm;",
              "        ShipSpecialBonuses(Player(), bonSkill5, ShipSpecialBonuses(Player(), bonSkill5) - skill_charm);",
              "        penalties = penalties + ',' + skill_leadership;",
              "        ShipSpecialBonuses(Player(), bonSkill6, ShipSpecialBonuses(Player(), bonSkill6) - skill_leadership);",
              "        PlayerImmunity(0); //До кучи обнуляем игроку иммунитет",
              "        GlobalImplantsEnduranceBonus = GlobalImplantsEnduranceBonus - 3; //Также снижаем выносливость к установке имплантов",
              "        ShipAddCustomShipInfo(Player(), 'ExpImplants_ChangeRaceRehabilitation', '', CurTurn() + min(120 + add_time / 2, 365), 3, 0, penalties);",
              "",
              "        //Удаляем все биомодули",
              "        if(~ShipFindCustomShipInfoByType(Player(), 'bioMM'))",
              "        {",
              "            unknown tarr = newarray(1);",
              "            for(int i = ShipCustomShipInfosCount(Player()) - 1; i >= 0; i = i - 1)",
              "            {",
              "                str tstr = ShipCustomShipInfoTextData(Player(), i, 2);",
              "                if(tstr == '') continue;",
              "                if(substr(tstr, 0, 10) == 'Biomodules') ArrayAdd(tarr, i);",
              "            }",
              "",
              "            for(i = 1; i < ArrayDim(tarr); i = i + 1)",
              "            {",
              "                int tint1 = CT(ShipCustomShipInfoTextData(Player(), tarr[i], 2) + DeleteTags('.Bonus_count'));",
              "                if(tint1 > 0)",
              "                {",
              "                    for(int j = 1; j <= tint1; j = j + 1)",
              "                    {",
              "                        tstr = CT(ShipCustomShipInfoTextData(Player(), tarr[i], 2) + DeleteTags('.Bonus_' + j));",
              "                        tstr = DeleteTags('<tstr>');",
              "                        int tint2 = -1 * CT(ShipCustomShipInfoTextData(Player(), tarr[i], 2) + DeleteTags('.Bonus_' + j + '_var'));",
              "                        AddImplantBonuses(Player(), tstr, tint2);",
              "                    }",
              "                }",
              "",
              "                int tint3 = ShipCustomShipInfoData(Player(), tarr[i], 1);",
              "                //Эта переменная на кой-то хер хранит в себе текущую выносливость игрока вместо переменной инфошки",
              "                stama_count = stama_count - tint3;",
              "                tint2 = ShipCustomShipInfoTextData(Player(), 'bioMM', 3);",
              "                ShipCustomShipInfoTextData(Player(), 'bioMM', 3, tint2 - tint3);",
              "                tstr = CT(ShipCustomShipInfoTextData(Player(), tarr[i], 2) + DeleteTags('.Slot'));",
              "                if(tstr == 'H') tint3 = 1;",
              "                else if(tstr == 'E') tint3 = 2;",
              "                else if(tstr == 'B') tint3 = 3;",
              "                ShipCustomShipInfoData(Player(), 'bioMM', tint3, ShipCustomShipInfoData(Player(), 'bioMM', tint3) - 1);",
              "",
              "                //Определяем наличие на корабле и модификатор биомира",
              "                float tflt = 1.0;",
              "                if(ArtefactTypeInUse(Player(), t_ArtBio))",
              "                {",
              "                    tflt = CT('Biomodules.BioworldInSlotCoef');",
              "                }",
              "                else",
              "                {",
              "                    if(ArtefactTypeInUse(Player(), t_ArtArtefactor))",
              "                    {",
              "                        for(j = 0; j < ShipArts(Player()); j = j + 1)",
              "                        {",
              "                            dword art = ShipArts(Player(), j);",
              "                            if(ItemType(art) == t_ArtBio)",
              "                            {",
              "                                if(ItemDurability(art))",
              "                                {",
              "                                    tflt = CT('Biomodules.BioworldInHoldCoef');",
              "                                    break;",
              "                                }",
              "                            }",
              "                        }",
              "                    }",
              "                }",
              "",
              "                tint2 = 0;",
              "                if(ShipHealthFactor(Player(), 15)) tint2 = tint2 + 3;",
              "                if(ShipHealthFactor(Player(), 17)) tint2 = tint2 + 3;",
              "                if(ShipHealthFactor(Player(), 18)) tint2 = tint2 + 8;",
              "                if(ShipHealthFactor(Player(), 20)) tint2 = tint2 + 2;",
              "                if(ShipHealthFactor(Player(), 23)) tint2 = tint2 - 1;",
              "                if(ShipHealthFactor(Player(), 3)) tint2 = tint2 + 2;",
              "                if(ShipHealthFactor(Player(), 4)) tint2 = tint2 - 3;",
              "                if(ShipHealthFactor(Player(), 6)) tint2 = tint2 - 6;",
              "                if(ShipHealthFactor(Player(), 7)) tint2 = tint2 - 4;",
              "                if(ShipHealthFactor(Player(), 9)) tint2 = tint2 - 1;",
              "                if(ShipHealthFactor(Player(), 10)) tint2 = tint2 - 2;",
              "                if(ShipHealthFactor(Player(), 11)) tint2 = tint2 - 2;",
              "                if(ShipHealthFactor(Player(), 12)) tint2 = tint2 - 4;",
              "                tint2 = tint2 + GlobalImplantsEnduranceBonus;",
              "",
              "                int cur_stama;",
              "                if(ShipPilotRace(Player()) == Maloc) cur_stama = round(tflt * 10 + tint2 - stama_count);",
              "                else if(ShipPilotRace(Player()) == Peleng) cur_stama = round(tflt * 7 + tint2 - stama_count);",
              "                else if(ShipPilotRace(Player()) == People) cur_stama = round(tflt * 7 + tint2 - stama_count);",
              "                else if(ShipPilotRace(Player()) == Fei) cur_stama = round(tflt * 5 + tint2 - stama_count);",
              "                else cur_stama = round(tflt * 6 + tint2 - stama_count);",
              "",
              "                if(~ShipFindCustomShipInfoByType(Player(), 'bioMM_ILL'))",
              "                {",
              "                    if(cur_stama >= 0)",
              "                    {",
              "                        ShipDeleteCustomShipInfo(Player(), 'bioMM_ILL');",
              "                        ShipSpecialBonuses(Player(), bonSkill1, ShipSpecialBonuses(Player(), bonSkill1) + 6);",
              "                        ShipSpecialBonuses(Player(), bonSkill2, ShipSpecialBonuses(Player(), bonSkill2) + 6);",
              "                        ShipSpecialBonuses(Player(), bonSkill3, ShipSpecialBonuses(Player(), bonSkill3) + 6);",
              "                        ShipSpecialBonuses(Player(), bonSkill4, ShipSpecialBonuses(Player(), bonSkill4) + 4);",
              "                        ShipSpecialBonuses(Player(), bonSkill5, ShipSpecialBonuses(Player(), bonSkill5) + 4);",
              "                        ShipSpecialBonuses(Player(), bonSkill6, ShipSpecialBonuses(Player(), bonSkill6) + 4);",
              "                        Ether('mp_Galaxy', '', \"Благодаря хирургическому вмешательству \\\"Аугментационная лихорадка\\\" больше вам не угрожает.\");",
              "                    }",
              "                    tint1 = CurTurn() + 20 - (cur_stama - stama_count);",
              "                    ShipCustomShipInfoTextData(Player(), 'bioMM', 1, tint1);",
              "                    ShipCustomShipInfoTextData(Player(), 'bioMM', 3, stama_count);",
              "                }",
              "",
              "                //После удаления основной инфошки биомодуля, ищем и удаляем возможную дополнительную инфошку, а также чистим все прочие остатки",
              "                ShipDeleteCustomShipInfo(Player(), tarr[i]);",
              "                tint1 = CT(ShipCustomShipInfoTextData(Player(), tarr[i], 2) + DeleteTags('.Uni_code'));",
              "                if(tint1 == 19) king_will = king_will - 1;",
              "                if(tint1 == 10)",
              "                {",
              "                    if(~ShipFindCustomShipInfoByType(Player(), 'bioMM_Doono'))",
              "                    {",
              "                        tint2 = ShipCustomShipInfoData(Player(), 'bioMM_Doono', 1);",
              "                        if(tint2 == 1) ShipDeleteCustomShipInfo(Player(), 'bioMM_Doono');",
              "                        if(tint2 >= 2) ShipCustomShipInfoData(Player(), 'bioMM_Doono', 1, tint2 - 1);",
              "                    }",
              "                }",
              "                if(tint1 == 11) broot = broot - 1;",
              "                if(tint1 == 12)",
              "                {",
              "                    tint3 = ShipFindCustomShipInfoByType(Player(), 'bioMM_BM');",
              "                    if(tint3 >= 0)",
              "                    {",
              "                        tint2 = ShipCustomShipInfoData(Player(), tint3, 1);",
              "                        if(tint2 == 1) ShipDeleteCustomShipInfo(Player(), 'bioMM_BM');",
              "                        if(tint2 >= 2) ShipCustomShipInfoData(Player(), tint3, 1, tint2 - 1);",
              "                    }",
              "                }",
              "                if(tint1 == 13)",
              "                {",
              "                    tint3 = ShipFindCustomShipInfoByType(Player(), 'bioMM_KM');",
              "                    if(tint3 >= 0)",
              "                    {",
              "                        tint2 = ShipCustomShipInfoData(Player(), tint3, 1);",
              "                        if(tint2 == 1) ShipDeleteCustomShipInfo(Player(), 'bioMM_KM');",
              "                        if(tint2 >= 2) ShipCustomShipInfoData(Player(), tint3, 1, tint2 - 1);",
              "                    }",
              "                }",
              "                if(tint1 == 14)",
              "                {",
              "                    tint3 = ShipFindCustomShipInfoByType(Player(), 'bioMM_TM');",
              "                    if(tint3 >= 0)",
              "                    {",
              "                        tint2 = ShipCustomShipInfoData(Player(), tint3, 1);",
              "                        if(tint2 == 1) ShipDeleteCustomShipInfo(Player(), 'bioMM_TM');",
              "                        if(tint2 >= 2) ShipCustomShipInfoData(Player(), tint3, 1, tint2 - 1);",
              "                    }",
              "                }",
              "                if(tint1 == 15)",
              "                {",
              "                    tint1 = tint1; //Свободный номер",
              "                }",
              "                if(tint1 == 16)",
              "                {",
              "                    tint3 = ShipFindCustomShipInfoByType(Player(), 'bioMM_AD');",
              "                    if(tint3 >= 0)",
              "                    {",
              "                        tint2 = ShipCustomShipInfoData(Player(), tint3, 1);",
              "                        if(tint2 == 1) ShipDeleteCustomShipInfo(Player(), 'bioMM_AD');",
              "                        if(tint2 >= 2) ShipCustomShipInfoData(Player(), tint3, 1, tint2 - 1);",
              "                    }",
              "                }",
              "                if(tint1 == 17)",
              "                {",
              "                    tint3 = ShipFindCustomShipInfoByType(Player(), 'bioMM_MR');",
              "                    if(tint3 >= 0)",
              "                    {",
              "                        tint2 = ShipCustomShipInfoData(Player(), tint3, 1);",
              "                        if(tint2 == 1)",
              "                        {",
              "                            temp_dword_1 = ShipItems(Player(), 0);",
              "                            ItemExtraSpecialsDeleteByType(temp_dword_1, FindBonusByCustomTag('BM_MR_akrin'), 1);",
              "                            ItemSize(temp_dword_1, ItemSize(temp_dword_1) - ShipCustomShipInfoData(Player(), tint3, 2));",
              "                            HullHP(temp_dword_1, ItemSize(temp_dword_1));",
              "                            ShipDeleteCustomShipInfo(Player(), 'bioMM_MR');",
              "                        }",
              "                        if(tint2 >= 2) ShipCustomShipInfoData(Player(), tint3, 1, tint2 - 1);",
              "                    }",
              "                }",
              "                if(tint1 == 18)",
              "                {",
              "                    tint3 = ShipFindCustomShipInfoByType(Player(), 'bioMM_BS');",
              "                    if(tint3 >= 0)",
              "                    {",
              "                        tint2 = ShipCustomShipInfoData(Player(), tint3, 1);",
              "                        if(tint2 == 1) ShipDeleteCustomShipInfo(Player(), 'bioMM_BS');",
              "                        if(tint2 >= 2) ShipCustomShipInfoData(Player(), tint3, 1, tint2 - 1);",
              "                    }",
              "                }",
              "                if(tint1 == 20) open_hole = open_hole - 1;",
              "                if(tint1 == 22)",
              "                {",
              "                    tint3 = ShipFindCustomShipInfoByType(Player(), 'bioMM_RT');",
              "                    if(tint3 >= 0)",
              "                    {",
              "                        tint2 = ShipCustomShipInfoData(Player(), tint3, 1);",
              "                        if(tint2 == 1) ShipDeleteCustomShipInfo(Player(), 'bioMM_RT');",
              "                        if(tint2 >= 2) ShipCustomShipInfoData(Player(), tint3, 1, tint2 - 1);",
              "                    }",
              "                }",
              "                if(tint1 == 23)",
              "                {",
              "                    tint3 = ShipFindCustomShipInfoByType(Player(), 'bioMM_IC');",
              "                    if(tint3 >= 0)",
              "                    {",
              "                        tint2 = ShipCustomShipInfoData(Player(), tint3, 1);",
              "                        if(tint2 == 1) ShipDeleteCustomShipInfo(Player(), 'bioMM_IC');",
              "                        if(tint2 >= 2) ShipCustomShipInfoData(Player(), tint3, 1, tint2 - 1);",
              "                    }",
              "                    //Зачищаем массив с измененной длительностью болезней/стимуляторов при удалении Иммунокорректора",
              "                    for(j = 0; j <= 24; j = j + 1)",
              "                    {",
              "                        if(immun_array[j])",
              "                        {",
              "                            //Возвращаем болезни/стимулятору их изначальную продолжительность",
              "                            if(ShipHealthFactor(Player(), j)) ShipHealthFactor(Player(), j, ShipHealthFactor(Player(), j) + immun_array[j]);",
              "                            immun_array[j] = 0;",
              "                        }",
              "                    }",
              "                    immun_array[29] = 0;",
              "                }",
              "                if(tint1 == 24)",
              "                {",
              "                    tint3 = ShipFindCustomShipInfoByType(Player(), 'bioMM_ND');",
              "                    if(tint3 >= 0)",
              "                    {",
              "                        tint2 = ShipCustomShipInfoData(Player(), tint3, 1);",
              "                        if(tint2 == 1) ShipDeleteCustomShipInfo(Player(), 'bioMM_ND');",
              "                        if(tint2 >= 2) ShipCustomShipInfoData(Player(), tint3, 1, tint2 - 1);",
              "                    }",
              "                    //Зачищаем массив с измененной длительностью болезней/стимуляторов при удалении Иглы",
              "                    for(j = 0; j <= 24; j = j + 1)",
              "                    {",
              "                        if(immun_array[j])",
              "                        {",
              "                            //Возвращаем болезни/стимулятору их изначальную продолжительность",
              "                            if(ShipHealthFactor(Player(), j))",
              "                            {",
              "                                if(ShipHealthFactor(Player(), j) > immun_array[j]) ShipHealthFactor(Player(), j, ShipHealthFactor(Player(), j) - immun_array[j]);",
              "                                else ShipHealthFactor(Player(), j, 1);",
              "                            }",
              "                            immun_array[j] = 0;",
              "                        }",
              "                    }",
              "                    immun_array[29] = 0;",
              "                }",
              "                if(tint1 == 25)",
              "                {",
              "                    tint3 = ShipFindCustomShipInfoByType(Player(), 'bioMM_BZ');",
              "                    if(tint3 >= 0)",
              "                    {",
              "                        tint2 = ShipCustomShipInfoData(Player(), tint3, 1);",
              "                        if(tint2 == 1) ShipDeleteCustomShipInfo(Player(), 'bioMM_BZ');",
              "                        if(tint2 >= 2) ShipCustomShipInfoData(Player(), tint3, 1, tint2 - 1);",
              "                    }",
              "                }",
              "                if(tint1 == 26)",
              "                {",
              "                    tint1 = tint1;//Свободный номер",
              "                }",
              "                if(tint1 == 28)add_dialog[2] = add_dialog[2] - 1;",
              "                if(tint1 == 29)add_dialog[1] = add_dialog[1] - 1;",
              "                if(tint1 == 27)",
              "                {",
              "                    tint3 = ShipFindCustomShipInfoByType(Player(), 'bioMM_DH');",
              "                    if(tint3 >= 0)",
              "                    {",
              "                        tint2 = ShipCustomShipInfoData(Player(), tint3, 1);",
              "                        if(tint2 == 1) ShipDeleteCustomShipInfo(Player(), 'bioMM_DH');",
              "                        if(tint2 >= 2) ShipCustomShipInfoData(Player(), tint3, 1, tint2 - 1);",
              "                    }",
              "                }",
              "                if(tint1 == 30)",
              "                {",
              "                    tint3 = ShipFindCustomShipInfoByType(Player(), 'bioMM_NS');",
              "                    if(tint3 >= 0)",
              "                    {",
              "                        tint2 = ShipCustomShipInfoData(Player(), tint3, 1);",
              "                        if(tint2 == 1) ShipDeleteCustomShipInfo(Player(), 'bioMM_NS');",
              "                        if(tint2 >= 2) ShipCustomShipInfoData(Player(), tint3, 1, tint2 - 1);",
              "                    }",
              "                }",
              "                if(tint1 == 31)",
              "                {",
              "                    tint3 = ShipFindCustomShipInfoByType(Player(), 'bioMM_LS');",
              "                    if(tint3 >= 0)",
              "                    {",
              "                        tint2 = ShipCustomShipInfoData(Player(), tint3, 1);",
              "                        if(tint2 == 1) ShipDeleteCustomShipInfo(Player(), 'bioMM_LS');",
              "                        if(tint2 >= 2) ShipCustomShipInfoData(Player(), tint3, 1, tint2 - 1);",
              "                    }",
              "                }",
              "                tint1 = ShipFindCustomShipInfoByType(Player(), 'bioMM');",
              "                tint3 = ShipCustomShipInfoData(Player(), tint1, 1) + ShipCustomShipInfoData(Player(), tint1, 2) + ShipCustomShipInfoData(Player(), tint1, 3);",
              "                if(!tint3) ShipDeleteCustomShipInfo(Player(), 'bioMM');",
              "            }",
              "        }",
              "",
              "        //Также удаляем все болезни и стимуляторы",
              "        for(j = 0; j <= 24; j = j + 1)",
              "        {",
              "            if(ShipHealthFactor(Player(), j))",
              "            {",
              "                //Отдельное условие для наркозависимости",
              "                if(j == 6) ShipHealthFactor(Player(), j, round(1.0 * ShipHealthFactor(Player(), j) / (0.1 * RndObject(-5, 7, Player()) + 2)));",
              "                else ShipHealthFactor(Player(), j, 0);",
              "            }",
              "        }",
              "",
              "        CurrentPlayerRace_Global = ShipPilotRace(Player());",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  360,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  30,
          "Total.Lines":  247,
          "Code.Type":  "Turn",
          "Code":          
          [
              "var_dialog = 1;",
              "Sound('Sound.Repair');",
              "PlayerImmunity(PlayerImmunity() - (PlayerImmunity() * Rnd(10, 20)) / 100);",
              "ShipMoney(Player(), ShipMoney(Player()) - biomm_cost[GAnswerData]);",
              "//Добавляем общую инфошку биомодулей, если её у игрока ещё нет",
              "if(ShipFindCustomShipInfoByType(Player(), 'bioMM') < 0) ShipAddCustomShipInfo(Player(), 'bioMM', '', 0, 0, 0);",
              "//Узнаём, в какую часть тела будет установлен новый имплант",
              "temp_str = CT(biomm_MC[GAnswerData] + DeleteTags('.Slot'));",
              "if(temp_str == 'B')",
              "{",
              "    for(i = 1; i <= 4; i = i + 1)",
              "    {",
              "        temp_int = -2;",
              "        temp_str_1 = 'bioMM_brain_' + i;",
              "        temp_int = ShipFindCustomShipInfoByType(Player(), temp_str_1);",
              "        if(temp_int >= 0) continue;",
              "        temp_str_2 = CT(biomm_MC[GAnswerData] + DeleteTags('.Stama'));",
              "        temp_int_2 = temp_str_2;",
              "        stama_count = stama_count + temp_int_2;",
              "        temp_str_2 = CT(biomm_MC[GAnswerData] + DeleteTags('.Description'));",
              "        //Устанавливается скрытая инфошка нового биомодуля",
              "        ShipAddCustomShipInfo(Player(),temp_str_1,'NoShow',temp_int_2,biomm_cost[GAnswerData],0,'</color>'+CT(biomm_MC[GAnswerData]+DeleteTags('.Name')),biomm_MC[GAnswerData],'Legal');",
              "        //Увеличиваем счётчик установленных биомодулей в общей инфошке",
              "        temp_int=ShipFindCustomShipInfoByType(Player(),'bioMM');",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int,3);",
              "        ShipCustomShipInfoData(Player(),temp_int,3,temp_int_2+1);",
              "        break;",
              "    }",
              "}",
              "else if(temp_str=='H')",
              "{",
              "    for(i=1; i<=4; i=i+1)",
              "    {",
              "        temp_int=-2;",
              "        temp_str_1='bioMM_hand_'+i;",
              "        temp_int=ShipFindCustomShipInfoByType(Player(),temp_str_1);",
              "        if(temp_int>=0)continue;",
              "        temp_str_2=CT(biomm_MC[GAnswerData]+DeleteTags('.Stama'));",
              "        temp_int_2=temp_str_2;",
              "        stama_count=stama_count+temp_int_2;",
              "        temp_str_2=CT(biomm_MC[GAnswerData]+DeleteTags('.Description'));",
              "        //Устанавливается скрытая инфошка нового биомодуля",
              "        ShipAddCustomShipInfo(Player(),temp_str_1,'NoShow',temp_int_2,biomm_cost[GAnswerData],0,'</color>'+CT(biomm_MC[GAnswerData]+DeleteTags('.Name')),biomm_MC[GAnswerData],'Legal');",
              "        //Увеличиваем счётчик установленных биомодулей в общей инфошке",
              "        temp_int=ShipFindCustomShipInfoByType(Player(),'bioMM');",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int,1);",
              "        ShipCustomShipInfoData(Player(),temp_int,1,temp_int_2+1);",
              "        break;",
              "    }",
              "}",
              "else if(temp_str=='E')",
              "{",
              "    for(i=1; i<=3; i=i+1)",
              "    {",
              "        temp_int=-2;",
              "        temp_str_1='bioMM_eye_'+i;",
              "        temp_int=ShipFindCustomShipInfoByType(Player(),temp_str_1);",
              "        if(temp_int>=0)continue;",
              "        temp_str_2=CT(biomm_MC[GAnswerData]+DeleteTags('.Stama'));",
              "        temp_int_2=temp_str_2;",
              "        stama_count=stama_count+temp_int_2;",
              "        temp_str_2=CT(biomm_MC[GAnswerData]+DeleteTags('.Description'));",
              "        //Устанавливается скрытая инфошка нового биомодуля",
              "        ShipAddCustomShipInfo(Player(),temp_str_1,'NoShow',temp_int_2,biomm_cost[GAnswerData],0,'</color>'+CT(biomm_MC[GAnswerData]+DeleteTags('.Name')),biomm_MC[GAnswerData],'Legal');",
              "        //Увеличиваем счётчик установленных биомодулей в общей инфошке",
              "        temp_int=ShipFindCustomShipInfoByType(Player(),'bioMM');",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int,2);",
              "        ShipCustomShipInfoData(Player(),temp_int,2,temp_int_2+1);",
              "        break;",
              "    }",
              "}",
              "temp_int_2=CurTurn()+20-(cur_stama-stama_count);",
              "ShipCustomShipInfoTextData(Player(),temp_int,1,temp_int_2);",
              "ShipCustomShipInfoTextData(Player(),temp_int,3,stama_count);",
              "temp_str=CT(biomm_MC[GAnswerData]+DeleteTags('.Bonus_count'));",
              "temp_int = temp_str;",
              "if(temp_int > 0)",
              "{",
              "    for(i = 1; i <= temp_int; i = i + 1)",
              "    {",
              "        temp_str = CT(biomm_MC[GAnswerData] + DeleteTags('.Bonus_' + i));",
              "        temp_str = DeleteTags('<temp_str>');",
              "        temp_str_1 = CT(biomm_MC[GAnswerData] + DeleteTags('.Bonus_' + i + '_var'));",
              "        temp_int_1 = temp_str_1;",
              "        AddImplantBonuses(Player(), temp_str, temp_int_1);",
              "    }",
              "}",
              "//Проверяем, требуется ли данному биомодулю дополнительная инфошка/переменная в скрипте",
              "temp_int = CT(biomm_MC[GAnswerData] + '.Uni_code');",
              "if(temp_int == 10)",
              "{",
              "    temp_int_1 = ShipFindCustomShipInfoByType(Player(),'bioMM_Doono');",
              "    if(~temp_int_1)",
              "    {",
              "        temp_int_2 = ShipCustomShipInfoData(Player(), temp_int_1, 1);",
              "        ShipCustomShipInfoData(Player(), temp_int_1, 1, temp_int_2 + 1);",
              "    }",
              "    else ShipAddCustomShipInfo(Player(), 'bioMM_Doono', 'NoShow', 1, GetShipExpByType(Player(), 0), 0, '0.' + CT(biomm_MC[GAnswerData] + '.AddExpPercent'));",
              "}",
              "else if(temp_int==11)",
              "{",
              "    broot=broot+1;",
              "    broot_data=CurTurn()+Rnd(20,80);",
              "}",
              "else if(temp_int==12)",
              "{",
              "    temp_int_1=ShipFindCustomShipInfoByType(Player(),'bioMM_BM');",
              "    if(temp_int_1>=0)",
              "    {",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int_1,1);",
              "        ShipCustomShipInfoData(Player(),temp_int_1,1,temp_int_2+1);",
              "    }",
              "    else ShipAddCustomShipInfo(Player(),'bioMM_BM','NoShow',1);",
              "}",
              "else if(temp_int==13)",
              "{",
              "    temp_int_1=ShipFindCustomShipInfoByType(Player(),'bioMM_KM');",
              "    if(temp_int_1>=0)",
              "    {",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int_1,1);",
              "        ShipCustomShipInfoData(Player(),temp_int_1,1,temp_int_2+1);",
              "    }",
              "    else ShipAddCustomShipInfo(Player(),'bioMM_KM','NoShow',1);",
              "}",
              "else if(temp_int==14)",
              "{",
              "    temp_int_1=ShipFindCustomShipInfoByType(Player(),'bioMM_TM');",
              "    if(temp_int_1>=0)",
              "    {",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int_1,1);",
              "        ShipCustomShipInfoData(Player(),temp_int_1,1,temp_int_2+1);",
              "    }",
              "    else ShipAddCustomShipInfo(Player(),'bioMM_TM','NoShow',1);",
              "}",
              "else if(temp_int==15)",
              "{",
              "    temp_int=temp_int;//Свободный номер",
              "}",
              "else if(temp_int==16)",
              "{",
              "    temp_int_1=ShipFindCustomShipInfoByType(Player(),'bioMM_AD');",
              "    if(temp_int_1>=0)",
              "    {",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int_1,1);",
              "        ShipCustomShipInfoData(Player(),temp_int_1,1,temp_int_2+1);",
              "    }",
              "    else ShipAddCustomShipInfo(Player(),'bioMM_AD','NoShow',1);",
              "}",
              "else if(temp_int==17)",
              "{",
              "    temp_int_1=ShipFindCustomShipInfoByType(Player(),'bioMM_MR');",
              "    if(temp_int_1>=0)",
              "    {",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int_1,1);",
              "        ShipCustomShipInfoData(Player(),temp_int_1,1,temp_int_2+1);",
              "    }",
              "    else",
              "    {",
              "        temp_dword_1=ShipItems(Player(),0);",
              "        ItemExtraSpecialsAddByType(temp_dword_1,FindBonusByCustomTag('BM_MR_akrin'));",
              "        ShipAddCustomShipInfo(Player(),'bioMM_MR','NoShow',1,0,(ItemSize(temp_dword_1)*25)/100);",
              "        ItemSize(temp_dword_1,ItemSize(temp_dword_1)+(ItemSize(temp_dword_1)*25)/100);",
              "        HullHP(temp_dword_1,ItemSize(temp_dword_1));",
              "    }",
              "}",
              "else if(temp_int==18)",
              "{",
              "    temp_int_1=ShipFindCustomShipInfoByType(Player(),'bioMM_BS');",
              "    if(temp_int_1>=0)",
              "    {",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int_1,1);",
              "        ShipCustomShipInfoData(Player(),temp_int_1,1,temp_int_2+1);",
              "    }",
              "    else ShipAddCustomShipInfo(Player(),'bioMM_BS','NoShow',1);",
              "}",
              "else if(temp_int==19)king_will=king_will+1;",
              "else if(temp_int==20)open_hole=open_hole+1;",
              "else if(temp_int==22)",
              "{",
              "    temp_int_1=ShipFindCustomShipInfoByType(Player(),'bioMM_RT');",
              "    if(temp_int_1>=0)",
              "    {",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int_1,1);",
              "        ShipCustomShipInfoData(Player(),temp_int_1,1,temp_int_2+1);",
              "    }",
              "    else ShipAddCustomShipInfo(Player(),'bioMM_RT','NoShow',1);",
              "}",
              "else if(temp_int==23)",
              "{",
              "    temp_int_1=ShipFindCustomShipInfoByType(Player(),'bioMM_IC');",
              "    if(temp_int_1>=0)",
              "    {",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int_1,1);",
              "        ShipCustomShipInfoData(Player(),temp_int_1,1,temp_int_2+1);",
              "    }",
              "    else ShipAddCustomShipInfo(Player(),'bioMM_IC','NoShow',1);",
              "    immun_array[29]=1;",
              "    for(i=0; i<=24; i=i+1)",
              "    {",
              "        //Выставляем новый срок болезни/стимулятора, если таковые у игрока имеются",
              "        if(ShipHealthFactor(Player(),i) && !immun_array[i])",
              "        {",
              "            immun_array[i]=ShipHealthFactor(Player(),i)/2;",
              "            ShipHealthFactor(Player(),i,immun_array[i]);",
              "        }",
              "        //По истечении болезни/стимулятора обнуляем элемент",
              "        if(!ShipHealthFactor(Player(),i) && immun_array[i])immun_array[i]=0;",
              "    }",
              "}",
              "else if(temp_int==24)",
              "{",
              "    temp_int_1=ShipFindCustomShipInfoByType(Player(),'bioMM_ND');",
              "    if(temp_int_1>=0)",
              "    {",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int_1,1);",
              "        ShipCustomShipInfoData(Player(),temp_int_1,1,temp_int_2+1);",
              "    }",
              "    else ShipAddCustomShipInfo(Player(),'bioMM_ND','NoShow',1);",
              "    immun_array[29]=2;",
              "    for(i=0; i<=24; i=i+1)",
              "    {",
              "        //Выставляем новый срок болезни/стимулятора, если таковые у игрока имеются",
              "        if(ShipHealthFactor(Player(),i) && !immun_array[i])",
              "        {",
              "            immun_array[i]=ShipHealthFactor(Player(),i);",
              "            ShipHealthFactor(Player(),i,immun_array[i]*2);",
              "        }",
              "        //По истечении болезни/стимулятора обнуляем элемент",
              "        if(!ShipHealthFactor(Player(),i) && immun_array[i])immun_array[i]=0;",
              "    }",
              "}",
              "else if(temp_int==25)",
              "{",
              "    temp_int_1=ShipFindCustomShipInfoByType(Player(),'bioMM_BZ');",
              "    if(temp_int_1 >= 0)",
              "    {",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int_1,1);",
              "        ShipCustomShipInfoData(Player(),temp_int_1,1,temp_int_2+1);",
              "    }",
              "    else ShipAddCustomShipInfo(Player(),'bioMM_BZ','NoShow',1);",
              "}",
              "else if(temp_int==26)",
              "{",
              "    temp_int=temp_int;//Свободный номер",
              "}",
              "//Записываем в переменную название биомодуля для подстановки в диалог",
              "temp_str=CT(biomm_MC[GAnswerData]+DeleteTags('.Name'));"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  400,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  31,
          "Total.Lines":  310,
          "Code.Type":  "Turn",
          "Code":          
          [
              "var_dialog=1;",
              "PlayerImmunity(PlayerImmunity()-(PlayerImmunity()*Rnd(5,10))/100);",
              "temp_str=CT(ShipCustomShipInfoTextData(Player(),GAnswerData,2)+DeleteTags('.Bonus_count'));",
              "temp_str_2=CT(ShipCustomShipInfoTextData(Player(),GAnswerData,2)+DeleteTags('.Name'));",
              "temp_int=temp_str;",
              "if(temp_int > 0)",
              "{",
              "    for(i = 1; i <= temp_int; i = i + 1)",
              "    {",
              "        temp_str = CT(ShipCustomShipInfoTextData(Player(), GAnswerData, 2) + DeleteTags('.Bonus_' + i));",
              "        temp_str = DeleteTags('<temp_str>');",
              "        temp_str_1 = CT(ShipCustomShipInfoTextData(Player(), GAnswerData, 2) + DeleteTags('.Bonus_' + i + '_var'));",
              "        temp_int_1 = temp_str_1;",
              "        temp_int_1 = -1 * temp_int_1;",
              "        AddImplantBonuses(Player(), temp_str, temp_int_1);",
              "    }",
              "}",
              "temp_str=CT(ShipCustomShipInfoTextData(Player(),GAnswerData,2)+DeleteTags('.Slot'));",
              "Sound('Sound.Sell');",
              "if(temp_str=='B')",
              "{",
              "    temp_int=ShipCustomShipInfoData(Player(),GAnswerData,2)/4;",
              "    ShipMoney(Player(),ShipMoney(Player())-temp_int);",
              "    temp_int_2=ShipCustomShipInfoData(Player(),GAnswerData,1);",
              "    stama_count=stama_count-temp_int_2;",
              "    temp_int=ShipFindCustomShipInfoByType(Player(),'bioMM');",
              "    temp_int_1=ShipCustomShipInfoTextData(Player(),temp_int,3);",
              "    ShipCustomShipInfoTextData(Player(),temp_int,3,temp_int_1-temp_int_2);",
              "    temp_int_2=ShipCustomShipInfoData(Player(),temp_int,3);",
              "    ShipCustomShipInfoData(Player(),temp_int,3,temp_int_2-1);",
              "}",
              "if(temp_str=='H')",
              "{",
              "    temp_int=ShipCustomShipInfoData(Player(),GAnswerData,2)/4;",
              "    ShipMoney(Player(),ShipMoney(Player())-temp_int);",
              "    temp_int_2=ShipCustomShipInfoData(Player(),GAnswerData,1);",
              "    stama_count=stama_count-temp_int_2;",
              "    temp_int=ShipFindCustomShipInfoByType(Player(),'bioMM');",
              "    temp_int_1=ShipCustomShipInfoTextData(Player(),temp_int,3);",
              "    ShipCustomShipInfoTextData(Player(),temp_int,3,temp_int_1-temp_int_2);",
              "    temp_int_2=ShipCustomShipInfoData(Player(),temp_int,1);",
              "    ShipCustomShipInfoData(Player(),temp_int,1,temp_int_2-1);",
              "}",
              "if(temp_str=='E')",
              "{",
              "    temp_int=ShipCustomShipInfoData(Player(),GAnswerData,2)/4;",
              "    ShipMoney(Player(),ShipMoney(Player())-temp_int);",
              "    temp_int_2=ShipCustomShipInfoData(Player(),GAnswerData,1);",
              "    stama_count=stama_count-temp_int_2;",
              "    temp_int=ShipFindCustomShipInfoByType(Player(),'bioMM');",
              "    temp_int_1=ShipCustomShipInfoTextData(Player(),temp_int,3);",
              "    ShipCustomShipInfoTextData(Player(),temp_int,3,temp_int_1-temp_int_2);",
              "    temp_int_2=ShipCustomShipInfoData(Player(),temp_int,2);",
              "    ShipCustomShipInfoData(Player(),temp_int,2,temp_int_2-1);",
              "}",
              "//Определяем наличие на корабле и модификатор биомира",
              "temp_float=1.0;",
              "if(ArtefactTypeInUse(Player(),t_ArtBio))",
              "{",
              "    temp_float=CT('Biomodules.BioworldInSlotCoef');",
              "}",
              "else",
              "{",
              "    if(ArtefactTypeInUse(Player(),t_ArtArtefactor))",
              "    {",
              "        for(i=0;i<ShipArts(Player());i=i+1)",
              "        {",
              "            temp_dword=ShipArts(Player(),i);",
              "            if(ItemType(temp_dword)==t_ArtBio)",
              "            {",
              "                if(ItemDurability(temp_dword))",
              "                {",
              "                    temp_float=CT('Biomodules.BioworldInHoldCoef');",
              "                    break;",
              "                }",
              "            }",
              "        }",
              "    }",
              "}",
              "temp_int_1=0;",
              "if(ShipHealthFactor(Player(),15))temp_int_1=temp_int_1+3;",
              "if(ShipHealthFactor(Player(),17))temp_int_1=temp_int_1+3;",
              "if(ShipHealthFactor(Player(),18))temp_int_1=temp_int_1+8;",
              "if(ShipHealthFactor(Player(),20))temp_int_1=temp_int_1+2;",
              "if(ShipHealthFactor(Player(),23))temp_int_1=temp_int_1-1;",
              "if(ShipHealthFactor(Player(),3))temp_int_1=temp_int_1+2;",
              "if(ShipHealthFactor(Player(),4))temp_int_1=temp_int_1-3;",
              "if(ShipHealthFactor(Player(),6))temp_int_1=temp_int_1-6;",
              "if(ShipHealthFactor(Player(),7))temp_int_1=temp_int_1-4;",
              "if(ShipHealthFactor(Player(),9))temp_int_1=temp_int_1-1;",
              "if(ShipHealthFactor(Player(),10))temp_int_1=temp_int_1-2;",
              "if(ShipHealthFactor(Player(),11))temp_int_1=temp_int_1-2;",
              "if(ShipHealthFactor(Player(),12))temp_int_1=temp_int_1-4;",
              "temp_int_1 = temp_int_1 + GlobalImplantsEnduranceBonus;",
              "if(ShipPilotRace(Player())==0)cur_stama=round(temp_float*10+temp_int_1-stama_count);",
              "else if(ShipPilotRace(Player())==1)cur_stama=round(temp_float*7+temp_int_1-stama_count);",
              "else if(ShipPilotRace(Player())==2)cur_stama=round(temp_float*7+temp_int_1-stama_count);",
              "else if(ShipPilotRace(Player())==3)cur_stama=round(temp_float*5+temp_int_1-stama_count);",
              "else if(ShipPilotRace(Player())==4)cur_stama=round(temp_float*6+temp_int_1-stama_count);",
              "temp_int=ShipFindCustomShipInfoByType(Player(),'bioMM_ILL');",
              "if(temp_int>-1)",
              "{",
              "    if(cur_stama>=0)",
              "    {",
              "        ShipDeleteCustomShipInfo(Player(),'bioMM_ILL');",
              "        ShipSpecialBonuses(Player(),bonSkill1,ShipSpecialBonuses(Player(),bonSkill1)+6);",
              "        ShipSpecialBonuses(Player(),bonSkill2,ShipSpecialBonuses(Player(),bonSkill2)+6);",
              "        ShipSpecialBonuses(Player(),bonSkill3,ShipSpecialBonuses(Player(),bonSkill3)+6);",
              "        ShipSpecialBonuses(Player(),bonSkill4,ShipSpecialBonuses(Player(),bonSkill4)+4);",
              "        ShipSpecialBonuses(Player(),bonSkill5,ShipSpecialBonuses(Player(),bonSkill5)+4);",
              "        ShipSpecialBonuses(Player(),bonSkill6,ShipSpecialBonuses(Player(),bonSkill6)+4);",
              "        Ether('mp_Galaxy','',\"Благодаря хирургическому вмешательству \\\"Аугментационная лихорадка\\\" больше вам не угрожает.\");",
              "    }",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM');",
              "    temp_int=CurTurn()+20-(cur_stama-stama_count);",
              "    ShipCustomShipInfoTextData(Player(),temp_int_2,1,temp_int);",
              "    ShipCustomShipInfoTextData(Player(),temp_int_2,3,stama_count);",
              "}",
              "temp_str=CT(ShipCustomShipInfoTextData(Player(),GAnswerData,2)+DeleteTags('.Uni_code'));",
              "ShipDeleteCustomShipInfo(Player(),GAnswerData);",
              "temp_int=temp_str;",
              "if(temp_int==19)king_will=king_will-1;",
              "if(temp_int==10)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_Doono');",
              "    if(~temp_int_2)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_Doono');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "}",
              "if(temp_int==11)broot=broot-1;",
              "if(temp_int==12)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_BM');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_BM');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "}",
              "if(temp_int==13)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_KM');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_KM');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "}",
              "if(temp_int==14)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_TM');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_TM');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "}",
              "if(temp_int==15)",
              "{",
              "    temp_int=temp_int;//Свободный номер",
              "}",
              "if(temp_int==16)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_AD');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_AD');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "}",
              "if(temp_int==17)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_MR');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)",
              "        {",
              "            temp_dword_1=ShipItems(Player(),0);",
              "            ItemExtraSpecialsDeleteByType(temp_dword_1,FindBonusByCustomTag('BM_MR_akrin'),1);",
              "            ItemSize(temp_dword_1,ItemSize(temp_dword_1)-ShipCustomShipInfoData(Player(),temp_int_2,2));",
              "            HullHP(temp_dword_1,ItemSize(temp_dword_1));",
              "            ShipDeleteCustomShipInfo(Player(),'bioMM_MR');",
              "        }",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "}",
              "if(temp_int==18)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_BS');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_BS');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "}",
              "if(temp_int==20)open_hole=open_hole-1;",
              "if(temp_int==22)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_RT');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_RT');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "}",
              "if(temp_int==23)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_IC');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_IC');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "    //Зачищаем массив с измененной длительностью болезней/стимуляторов при удалении Иммунокорректора",
              "    for(i=0;i<=24;i=i+1)",
              "    {",
              "        if(immun_array[i])",
              "        {",
              "            //Возвращаем болезни/стимулятору их изначальную продолжительность",
              "            if(ShipHealthFactor(Player(),i))ShipHealthFactor(Player(),i,ShipHealthFactor(Player(),i)+immun_array[i]);",
              "            immun_array[i]=0;",
              "        }",
              "    }",
              "    immun_array[29]=0;",
              "}",
              "if(temp_int==24)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_ND');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_ND');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "    //Зачищаем массив с измененной длительностью болезней/стимуляторов при удалении Иглы",
              "    for(i=0;i<=24;i=i+1)",
              "    {",
              "        if(immun_array[i])",
              "        {",
              "            //Возвращаем болезни/стимулятору их изначальную продолжительность",
              "            if(ShipHealthFactor(Player(),i))",
              "            {",
              "                if(ShipHealthFactor(Player(),i)>immun_array[i])ShipHealthFactor(Player(),i,ShipHealthFactor(Player(),i)-immun_array[i]);",
              "                else ShipHealthFactor(Player(),i,1);",
              "            }",
              "            immun_array[i]=0;",
              "        }",
              "    }",
              "    immun_array[29]=0;",
              "}",
              "if(temp_int==25)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_BZ');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_BZ');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "}",
              "if(temp_int==26)",
              "{",
              "    temp_int=temp_int;//Свободный номер",
              "}",
              "if(temp_int==28)add_dialog[2]=add_dialog[2]-1;",
              "if(temp_int==29)add_dialog[1]=add_dialog[1]-1;",
              "if(temp_int==27)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_DH');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_DH');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "}",
              "if(temp_int==30)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_NS');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_NS');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "}",
              "if(temp_int==31)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_LS');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_LS');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "}",
              "temp_int=ShipFindCustomShipInfoByType(Player(),'bioMM');",
              "temp_int_2=ShipCustomShipInfoData(Player(),temp_int,1)+ShipCustomShipInfoData(Player(),temp_int,2)+ShipCustomShipInfoData(Player(),temp_int,3);",
              "if(temp_int_2==0)ShipDeleteCustomShipInfo(Player(),'bioMM');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  100,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  34,
          "Total.Lines":  142,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Автоматическое обновление массивов со списком биомодулей для NPC",
              "//Срабатывает, только если параметр ImplantsVersion в разделе Biomodules был изменён",
              "if(SpecArrsUpdate != CT('Biomodules.ImplantsVersion'))",
              "{",
              "    ImplantsVersionUpdate();",
              "    SpecArrsUpdate = CT('Biomodules.ImplantsVersion');",
              "}",
              "",
              "//Тернкод для биомодуля Королевская воля",
              "if(king_will)",
              "{",
              "    for(i=GalaxyEvents()-1;i>=0;i=i-1)",
              "    {",
              "        if(GalaxyEventDate(i)<CurTurn()) break;",
              "        if(GalaxyEventType(i)=='PlayerFinishesQuest')",
              "        {",
              "            temp_int=Rnd(1,100);",
              "            if(temp_int>33 && temp_int<=66)",
              "            {",
              "                temp_int_1=GalaxyEventData(i,2);",
              "                if(temp_int_1 > 10)",
              "                {",
              "                    temp_int=Rnd(50,85);",
              "                    temp_int_1=round((0.01*temp_int)*temp_int_1);",
              "                    ShipMoney(Player(),ShipMoney(Player())+temp_int_1);",
              "                    temp_int_2=Rnd(0,2);",
              "                    if(temp_int_2==0) Ether('mp_Galaxy','',\"У главы правительства нашей планеты сегодня большой праздник - пополнение в семье и он на радостях навыписывал всем премий. И вам, за выполненное задание, в том числе. Похоже вы ему понравились... Так или иначе, поздравляю вас с дополнительным гонораром в <temp_int_1> cr.\");",
              "                    if(temp_int_2==1) Ether('mp_Galaxy','',\"Рейнджер, ваша помощь нашей планете была оценена по достоинству и мы решили, что вы заслуживаете дополнительную премию в <temp_int_1> cr. Надеемся на дальнейшее сотрудничество.\");",
              "                    if(temp_int_2==2) Ether('mp_Galaxy','',\"Вы так быстро нас покинули, а ведь мы, в качестве особой благодарности за выполненное задание хотели сделать вам особенный подарок... Но теперь уже поздно, к сожалению. Поэтому примите вместо подарка эту скромную сумму в <temp_int_1> cr. Можете считать это дополнительной премией за выполнение нашего задания. Удачных вам полетов.\");",
              "                    Sound('Sound.Sell');",
              "                }",
              "            }",
              "        }",
              "    }",
              "}",
              "//Тернкод для биомодуля Брутфорс",
              "if(broot)",
              "{",
              "    if(broot_data <= CurTurn())",
              "    {",
              "        //Задаём интервал до следующего \"поиска\"",
              "        broot_data=CurTurn()+Rnd(27,83);",
              "        //Минимальный шанс на успех - 1%",
              "        temp_int=1;",
              "        //Перебираем все ВБ и ПБ в Галактике в \"поисках\" сетевых уязвимостей",
              "        //Чем больше ВБ и ПБ, тем выше шанс, что поиски окажутся успешными",
              "        for(i=0;i<GalaxyStars();i=i+1)",
              "        {",
              "            if(temp_int>=100)break;",
              "            temp_dword=GalaxyStar(i);",
              "            if(StarOwner(temp_dword)==1)continue;",
              "            if(StarCustomFaction(temp_dword)!='')continue;",
              "            if(StarRuins(temp_dword,'WB'))temp_int=temp_int+5;",
              "            if(StarRuins(temp_dword,'PB'))temp_int=temp_int+3;",
              "        }",
              "        if(temp_int>=100)temp_int=100;",
              "        for(i=0;i<broot;i=i+1)",
              "        {",
              "            //Сравниваем набранный процент \"успеха\" с рандомным броском",
              "            temp_int_1=Rnd(1,100);",
              "            if(temp_int_1<=temp_int)",
              "            {",
              "                temp_int_2=Rnd(0,98);",
              "                if(temp_int_2<=14)SetProgramm(5,GetProgramm(5)+Rnd(10,20));",
              "                if(temp_int_2>14 && temp_int_2<=28)SetProgramm(9,GetProgramm(9)+Rnd(5,15));",
              "                if(temp_int_2>28 && temp_int_2<=42)SetProgramm(8,GetProgramm(8)+Rnd(4,12));",
              "                if(temp_int_2>42 && temp_int_2<=56)SetProgramm(7,GetProgramm(7)+Rnd(3,9));",
              "                if(temp_int_2>56 && temp_int_2<=70)SetProgramm(11,GetProgramm(11)+Rnd(2,6));",
              "                if(temp_int_2>70 && temp_int_2<=84)SetProgramm(6,GetProgramm(6)+Rnd(1,5));",
              "                if(temp_int_2>84)SetProgramm(10,GetProgramm(10)+Rnd(1,2));",
              "                Ether('mp_Galaxy','broot_1',\"Брутфорс обнаружил рабочие копии антидоминаторских программ... загрузка завершена.\");",
              "            }",
              "        }",
              "    }",
              "}",
              "//Тернкод для биомодуля Варпер",
              "if(open_hole)",
              "{",
              "    if(open_hole_count==0 && ShipInNormalSpace(Player()) && Id(ShipStar(Player()))!=open_hole_star)",
              "    {",
              "        open_hole_star=Id(ShipStar(Player()))-1;",
              "    }",
              "    else if(ShipInHyperSpace(Player()) && !ShipInHole(Player()))",
              "    {",
              "        if(!ShipInStar(Player(),GalaxyStar(open_hole_star)))",
              "        {",
              "            open_hole_count=open_hole_count+1;",
              "            open_hole_data=CurTurn();",
              "        }",
              "    }",
              "    else if(open_hole_count==3 && ShipInNormalSpace(Player()) && open_hole_data+1==CurTurn())",
              "    {",
              "        open_hole_star=Id(ShipStar(Player()))-1;",
              "        open_hole_count=0;",
              "        temp_int=Rnd(1,100);",
              "        if(temp_int>30 && temp_int<=40)",
              "        {",
              "            for(count2=10;count2<70;count2=count2+1)",
              "            {",
              "                temp_dword_1=StarNearbyStars(ShipStar(Player()),count2);",
              "                if(!SectorVisible(StarToCon(temp_dword_1)))continue;",
              "                break;",
              "            }",
              "            temp_dword=HoleCreate2(ShipStar(Player()),temp_dword_1);",
              "            HoleX1(temp_dword,CoordX(Player())-200.0*sin((ShipAngle(Player())*pi)/180.0));",
              "            HoleY1(temp_dword,CoordY(Player())+200.0*cos((ShipAngle(Player())*pi)/180.0));",
              "            HoleTurnCreate(temp_dword,CurTurn()-100);",
              "        }",
              "    }",
              "}",
              "//immun_array[0]-immun_array[24] - болезни и стимуляторы (длительность)",
              "//immun_array[29] - тип установленного биомодуля",
              "//Тернкод для биомодуля Иммунокорректор (если установлен, то immun_array[29]==1)",
              "if(immun_array[29]==1)",
              "{",
              "    for(i=0; i<=24; i=i+1)",
              "    {",
              "        //Выставляем новый срок болезни/стимулятора, если таковые у игрока имеются",
              "        if(ShipHealthFactor(Player(),i) && !immun_array[i])",
              "        {",
              "            immun_array[i]=ShipHealthFactor(Player(),i)/2;",
              "            ShipHealthFactor(Player(),i,ShipHealthFactor(Player(),i)/2);",
              "        }",
              "        //По истечении болезни/стимулятора обнуляем элемент",
              "        if(!ShipHealthFactor(Player(),i) && immun_array[i])immun_array[i]=0;",
              "    }",
              "}",
              "//Тернкод для биомодуля Игла (если установлен, то immun_array[29]==2)",
              "if(immun_array[29]==2)",
              "{",
              "    for(i=0; i<=24; i=i+1)",
              "    {",
              "        //Выставляем новый срок болезни/стимулятора, если таковые у игрока имеются",
              "        if(ShipHealthFactor(Player(),i) && !immun_array[i])",
              "        {",
              "            immun_array[i]=ShipHealthFactor(Player(),i);",
              "            ShipHealthFactor(Player(),i,immun_array[i]*2);",
              "        }",
              "        //По истечении болезни/стимулятора обнуляем элемент",
              "        if(!ShipHealthFactor(Player(),i) && immun_array[i])immun_array[i]=0;",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  400,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  47,
          "Total.Lines":  42,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Удаляем кастомный стимулятор \"Экспир\" из мода ShuMercs",
              "if(GAnswerData == 25)",
              "{",
              "    //Откатываем штраф к bonStimCapacity для игрока",
              "    ShipSpecialBonuses(Player(), bonStimCapacity, ShipSpecialBonuses(Player(), bonStimCapacity) + ShipCustomShipInfoTextData(Player(), 'ShuMercs_ExpirinStimulant', 2));",
              "    ShipDeleteCustomShipInfo(Player(), 'ShuMercs_ExpirinStimulant');",
              "    //Запоминаем название удалённого стимулятора для дальнейшей подстановки в диалог",
              "    temp_str_2 = CT('ShipInfo.AddInfo.CustomInfos.ShuMercs_ExpirinStimulant.Name');",
              "}",
              "//Либо же любой из стандартных стимуляторов",
              "else",
              "{",
              "    ShipHealthFactor(Player(), GAnswerData, 0);",
              "    //Запоминаем название удалённого стимулятора для дальнейшей подстановки в диалог",
              "    temp_str_2 = CT('Illness.Stimulant.' + (GAnswerData - 13) + '.Name');",
              "}",
              "temp_int = GalaxyMoney(2);",
              "temp_int = temp_int + (temp_int * GAnswerData) / 100;",
              "ShipMoney(Player(), ShipMoney(Player()) - temp_int);",
              "Sound('Sound.Sell');",
              "",
              "temp_int = 0;",
              "temp_str = \"<clrEnd>Однако, в вашем организме остались и другие стимуляторы:\" + \"<br>\" + DefSplt + \"<br>\";",
              "temp_int = 0;",
              "//Составляем список оставшихся в организме стимуляторов",
              "for(i = 13; i <= 24; i = i + 1)",
              "{",
              "    if(ShipHealthFactor(Player(), i))",
              "    {",
              "        temp_int = temp_int + 1;",
              "        temp_str = temp_str + '</color>' + temp_int + '. <color=0,50,200>' + CT('Illness.Stimulant.' + (i - 13) + '.Name') + \"</color><br>\";",
              "    }",
              "}",
              "//Также добавляем в список кастомный стимулятор \"Экспирин\" из мода ShuMercs",
              "if(~ShipFindCustomShipInfoByType(Player(), 'ShuMercs_ExpirinStimulant'))",
              "{",
              "    temp_int = temp_int + 1;",
              "    temp_str = temp_str + '</color>' + temp_int + '. <color=0,50,200>' + CT('ShipInfo.AddInfo.CustomInfos.ShuMercs_ExpirinStimulant.Name') + \"</color><br>\";",
              "}",
              "",
              "temp_str = temp_str + DefSplt + \"<br>\" + \"Желаете их удалить?\";",
              "if(!temp_int) temp_str = '';"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  540,
          "Pos.y":  90,
          "Parent":  -1,
          "#":  56,
          "Total.Lines":  210,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Определяем наличие на корабле и модификатор биомира",
              "temp_float = 1.0;",
              "if(ArtefactTypeInUse(Player(),t_ArtBio))",
              "{",
              "    temp_float=CT('Biomodules.BioworldInSlotCoef');",
              "}",
              "else",
              "{",
              "    if(ArtefactTypeInUse(Player(),t_ArtArtefactor))",
              "    {",
              "        for(i=0;i<ShipArts(Player());i=i+1)",
              "        {",
              "            temp_dword=ShipArts(Player(),i);",
              "            if(ItemType(temp_dword)==t_ArtBio)",
              "            {",
              "                if(ItemDurability(temp_dword))",
              "                {",
              "                    temp_float=CT('Biomodules.BioworldInHoldCoef');",
              "                    break;",
              "                }",
              "            }",
              "        }",
              "    }",
              "}",
              "temp_int_1=0;",
              "if(ShipHealthFactor(Player(),15))temp_int_1=temp_int_1+3;",
              "if(ShipHealthFactor(Player(),17))temp_int_1=temp_int_1+3;",
              "if(ShipHealthFactor(Player(),18))temp_int_1=temp_int_1+8;",
              "if(ShipHealthFactor(Player(),20))temp_int_1=temp_int_1+2;",
              "if(ShipHealthFactor(Player(),23))temp_int_1=temp_int_1-1;",
              "if(ShipHealthFactor(Player(),3))temp_int_1=temp_int_1+2;",
              "if(ShipHealthFactor(Player(),4))temp_int_1=temp_int_1-3;",
              "if(ShipHealthFactor(Player(),6))temp_int_1=temp_int_1-6;",
              "if(ShipHealthFactor(Player(),7))temp_int_1=temp_int_1-4;",
              "if(ShipHealthFactor(Player(),9))temp_int_1=temp_int_1-1;",
              "if(ShipHealthFactor(Player(),10))temp_int_1=temp_int_1-2;",
              "if(ShipHealthFactor(Player(),11))temp_int_1=temp_int_1-2;",
              "if(ShipHealthFactor(Player(),12))temp_int_1=temp_int_1-4;",
              "temp_int_1 = temp_int_1 + GlobalImplantsEnduranceBonus;",
              "temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM');",
              "if(temp_int_2>-1)",
              "{",
              "    if(ShipPilotRace(Player())==0)",
              "    {",
              "        cur_stama=round(temp_float*10+temp_int_1-stama_count);",
              "        free_brain=2-ShipCustomShipInfoData(Player(),temp_int_2,3);",
              "        free_eye=2-ShipCustomShipInfoData(Player(),temp_int_2,2);",
              "        free_hand=2-ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "    }",
              "    else if(ShipPilotRace(Player())==1)",
              "    {",
              "        cur_stama=round(temp_float*7+temp_int_1-stama_count);",
              "        free_brain=2-ShipCustomShipInfoData(Player(),temp_int_2,3);",
              "        free_eye=2-ShipCustomShipInfoData(Player(),temp_int_2,2);",
              "        free_hand=4-ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "    }",
              "    else if(ShipPilotRace(Player())==2)",
              "    {",
              "        cur_stama=round(temp_float*7+temp_int_1-stama_count);",
              "        free_brain=2-ShipCustomShipInfoData(Player(),temp_int_2,3);",
              "        free_eye=2-ShipCustomShipInfoData(Player(),temp_int_2,2);",
              "        free_hand=2-ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "    }",
              "    else if(ShipPilotRace(Player())==3)",
              "    {",
              "        cur_stama=round(temp_float*5+temp_int_1-stama_count);",
              "        free_brain=4-ShipCustomShipInfoData(Player(),temp_int_2,3);",
              "        free_eye=2-ShipCustomShipInfoData(Player(),temp_int_2,2);",
              "        free_hand=2-ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "    }",
              "    else if(ShipPilotRace(Player())==4)",
              "    {",
              "        cur_stama=round(temp_float*6+temp_int_1-stama_count);",
              "        free_brain=2-ShipCustomShipInfoData(Player(),temp_int_2,3);",
              "        free_eye=3-ShipCustomShipInfoData(Player(),temp_int_2,2);",
              "        free_hand=2-ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "    }",
              "}",
              "else",
              "{",
              "    if(ShipPilotRace(Player())==0)",
              "    {",
              "        cur_stama=round(temp_float*10+temp_int_1-stama_count);",
              "        free_brain=2;free_eye=2;free_hand=2;",
              "    }",
              "    else if(ShipPilotRace(Player())==1)",
              "    {",
              "        cur_stama=round(temp_float*7+temp_int_1-stama_count);",
              "        free_brain=2;free_eye=2;free_hand=4;",
              "    }",
              "    else if(ShipPilotRace(Player())==2)",
              "    {",
              "        cur_stama=round(temp_float*7+temp_int_1-stama_count);",
              "        free_brain=2;free_eye=2;free_hand=2;",
              "    }",
              "    else if(ShipPilotRace(Player())==3)",
              "    {",
              "        cur_stama=round(temp_float*5+temp_int_1-stama_count);",
              "        free_brain=4;free_eye=2;free_hand=2;",
              "    }",
              "    else if(ShipPilotRace(Player())==4)",
              "    {",
              "        cur_stama=round(temp_float*6+temp_int_1-stama_count);",
              "        free_brain=2;free_eye=3;free_hand=2;",
              "    }",
              "}",
              "temp_int = ShipFindCustomShipInfoByType(Player(), 'bioMM_ILL');",
              "if(temp_int > -1) cur_stama = cur_stama - 3;//Дополнительный штраф к нагрузке от самого факта наличия лихорадки",
              "if(new_module_pb <= CurTurn())",
              "{",
              "    ArrayClear(biomm_PB);",
              "    ArrayClear(temp_array_2);",
              "    if(GalaxyTechLevel()<3)ArrayAdd(temp_array_2,1);",
              "    else if(GalaxyTechLevel()>=3 && GalaxyTechLevel()<5)",
              "    {",
              "        ArrayAdd(temp_array_2,1);",
              "        ArrayAdd(temp_array_2,3);",
              "    }",
              "    else if(GalaxyTechLevel()>=5 && GalaxyTechLevel()<7)",
              "    {",
              "        ArrayAdd(temp_array_2,1);",
              "        ArrayAdd(temp_array_2,3);",
              "        ArrayAdd(temp_array_2,5);",
              "    }",
              "    else if(GalaxyTechLevel()==7)",
              "    {",
              "        ArrayAdd(temp_array_2,1);",
              "        ArrayAdd(temp_array_2,3);",
              "        ArrayAdd(temp_array_2,5);",
              "        ArrayAdd(temp_array_2,7);",
              "    }",
              "    else if(GalaxyTechLevel()==8)",
              "    {",
              "        ArrayAdd(temp_array_2,1);",
              "        ArrayAdd(temp_array_2,3);",
              "        ArrayAdd(temp_array_2,5);",
              "        ArrayAdd(temp_array_2,7);",
              "        ArrayAdd(temp_array_2,8);",
              "    }",
              "    while(ArrayDim(biomm_PB)<4)",
              "    {",
              "        temp_int_2=Rnd(1,ArrayDim(temp_array_2)-1);",
              "        temp_str=DeleteTags('Biomodules.'+temp_array_2[temp_int_2]+'_gtu.ilegal_count');",
              "        temp_int=Rnd(1,CT(temp_str));",
              "        temp_str_1=DeleteTags('Biomodules.'+temp_array_2[temp_int_2]+'_gtu.'+temp_int);",
              "        if(ArrayDim(biomm_PB)==2)",
              "        {",
              "            while(temp_str_1==biomm_PB[1])",
              "            {",
              "                temp_int=Rnd(1,CT(temp_str));",
              "                temp_str_1=DeleteTags('Biomodules.'+temp_array_2[temp_int_2]+'_gtu.'+temp_int);",
              "            }",
              "        }",
              "        if(ArrayDim(biomm_PB)==3)",
              "        {",
              "            while(temp_str_1==biomm_PB[1] || temp_str_1==biomm_PB[2])",
              "            {",
              "                temp_int=Rnd(1,CT(temp_str));",
              "                temp_str_1=DeleteTags('Biomodules.'+temp_array_2[temp_int_2]+'_gtu.'+temp_int);",
              "            }",
              "        }",
              "        ArrayAdd(biomm_PB,temp_str_1);",
              "    }",
              "}",
              "",
              "if(GetGameOptions('FontDialog')==0)temp_str='<clrEnd>-------------------------------------------------------------'+\"<br>\";",
              "else if(GetGameOptions('FontDialog')==1)temp_str='<clrEnd>------------------------------------------'+\"<br>\";",
              "else if(GetGameOptions('FontDialog')==2)temp_str='<clrEnd>-----------------------------------------'+\"<br>\";",
              "else temp_str='<clrEnd>-------------------------------------'+\"<br>\";",
              "",
              "for(i = 1; i < ArrayDim(biomm_PB); i = i + 1)",
              "{",
              "    temp_str=temp_str+\"<clrEnd>Биомодуль: <clr>\"+CT(biomm_PB[i]+DeleteTags('.Name'))+\"<br>\";",
              "    temp_str=temp_str+\"<clrEnd>Описание: \"+' '+CT(biomm_PB[i]+DeleteTags('.Description'))+\"<br>\";",
              "    if(CT(biomm_PB[i]+DeleteTags('.Slot'))=='B') temp_str=temp_str+\"<clrEnd>Модифицируемая часть: <clr>Мозг\"+\"<br>\";",
              "    if(CT(biomm_PB[i]+DeleteTags('.Slot'))=='H') temp_str=temp_str+\"<clrEnd>Модифицируемая часть: <clr>Рука\"+\"<br>\";",
              "    if(CT(biomm_PB[i]+DeleteTags('.Slot'))=='E') temp_str=temp_str+\"<clrEnd>Модифицируемая часть: <clr>Глаз\"+\"<br>\";",
              "    temp_str=temp_str+\"<clrEnd>Необходимо выносливости: <clr>\"+' '+CT(biomm_PB[i]+DeleteTags('.Stama_pirate'))+\"<br>\";",
              "",
              "    if(GetGameOptions('FontDialog') == '0') temp_str = temp_str + '<clrEnd>-------------------------------------------------------------' + \"<br>\";",
              "    else if(GetGameOptions('FontDialog') == '1') temp_str = temp_str + '<clrEnd>------------------------------------------' + \"<br>\";",
              "    else if(GetGameOptions('FontDialog') == '2') temp_str = temp_str + '<clrEnd>-----------------------------------------' + \"<br>\";",
              "    else temp_str = temp_str + '<clrEnd>-------------------------------------' + \"<br>\";",
              "}",
              "//Вычисляем процент пиратской скидки (78% при 100 рейтинге)",
              "temp_dword = round(100.0 * ShipStatus(Player(), 1) / 130) + 1;",
              "",
              "//Проверка на то, была ли уже рассчитана цена новой партии биомодулей на ПБ",
              "//После расчёта цены это условие исполняться не будет вплоть до следующего обновления ассортимента имплантов",
              "if(new_module_pb <= CurTurn())",
              "{",
              "    new_module_pb = CurTurn() + Rnd(10, 20);",
              "    //Расчёт цен биомодулей",
              "    for(i = 1; i <= 3; i = i + 1)",
              "    {",
              "        //Берём ГТУ биомодуля",
              "        temp_int_2 = substr(biomm_PB[i], 11, 1);",
              "        //Берём номер биомодуля из списка его ГТУ",
              "        temp_int = substr(biomm_PB[i], 17, 2);",
              "        cost = GalaxyMoney(3) * 3 * temp_int_2;",
              "        //Небольшая добавка к цене биомодуля в зависимости от высоты его номера в списке Lang",
              "        cost = cost + (cost * temp_int * 2) / 100;",
              "        temp_int = CT(biomm_PB[i] + DeleteTags('.Stama'));",
              "        //Снижаем цену в случае, если биомодуль легальный",
              "        if(temp_int) cost = cost - round(0.4 * cost);",
              "        //Повышаем цену в случае, если биомодуль нелегальный",
              "        else cost = cost + round(0.65 * cost);",
              "        biomm_cost[i + 3] = cost;",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  540,
          "Pos.y":  130,
          "Parent":  -1,
          "#":  58,
          "Total.Lines":  77,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ArrayClear(temp_array);",
              "for(i=0;i<ShipCustomShipInfosCount(Player());i=i+1)",
              "{",
              "    temp_str=ShipCustomShipInfoTextData(Player(),i,2);",
              "    if(temp_str=='')continue;",
              "    if(substr(temp_str,0,10)=='Biomodules')ArrayAdd(temp_array,DeleteTags(ShipCustomShipInfoTextData(Player(),i,1)));",
              "}",
              "for(i=1;i<ArrayDim(biomm_PB);i=i+1)",
              "{",
              "    temp_str=CT(biomm_PB[i]+DeleteTags('.Slot'));",
              "    temp_str_1=CT(biomm_PB[i]+DeleteTags('.Stama_pirate'));",
              "    temp_int=temp_str_1;",
              "    temp_str_1=CT(biomm_PB[i]+DeleteTags('.Name'));",
              "    temp_int_3=0;",
              "    for(count2=1;count2<ArrayDim(temp_array);count2=count2+1)",
              "    {",
              "        if(temp_str_1==temp_array[count2])temp_int_3=1;",
              "    }",
              "    cost=biomm_cost[i+3]-(biomm_cost[i+3]*temp_dword)/100;",
              "    temp_int_1=0;",
              "    //Проверка на конфликтующие биомодули (в настоящий момент только Иммунокорректор и Игла)",
              "    if((temp_str_1==CT('Biomodules.5_gtu.6.Name') && immun_array[29]==2) || (temp_str_1==CT('Biomodules.5_gtu.11.Name') && immun_array[29]==1))temp_int_1=1;",
              "    if(!temp_int_3 && ShipMoney(Player())>=cost && temp_str=='B' && free_brain>0) InjectAnswer('imp_on_pb_3',\"Установить <temp_str_1> (<cost> cr).\",i);",
              "    if(!temp_int_3 && temp_int_1==0 && ShipMoney(Player())>=cost && temp_str=='H' && free_hand>0) InjectAnswer('imp_on_pb_3',\"Установить <temp_str_1> (<cost> cr).\",i);",
              "    if(!temp_int_3 && ShipMoney(Player())>=cost && temp_str=='E' && free_eye>0) InjectAnswer('imp_on_pb_3',\"Установить <temp_str_1> (<cost> cr).\",i);",
              "    if(temp_str=='B' && (temp_int_3 || free_brain<=0 || ShipMoney(Player())<cost))",
              "    {",
              "        temp_int_5=0;",
              "        for(count2=1;count2<ArrayDim(temp_array);count2=count2+1)",
              "        {",
              "            if(temp_str_1==temp_array[count2])temp_int_5=1;",
              "        }",
              "        if(ShipMoney(Player())<cost || temp_int_5)",
              "        {",
              "            AddDialogBlock(\"Установить\"+' '+temp_str_1+' ('+cost+' cr).',1);",
              "            InjectAnswer('imp_on_pb_2',\"Установить\"+' '+temp_str_1+' ('+cost+' cr).',i);",
              "        }",
              "        else InjectAnswer('imp_on_pb_2',\"Установить <temp_str_1> (<cost> cr).\",i);",
              "    }",
              "    if(temp_str=='H' && (temp_int_3 || temp_int_1==1 || free_hand<=0 || ShipMoney(Player())<cost))",
              "    {",
              "        temp_int_5=0;",
              "        for(count2=1;count2<ArrayDim(temp_array);count2=count2+1)",
              "        {",
              "            if(temp_str_1==temp_array[count2])temp_int_5=1;",
              "        }",
              "        if(ShipMoney(Player())<cost || temp_int_5)",
              "        {",
              "            AddDialogBlock(\"Установить\"+' '+temp_str_1+' ('+cost+' cr).',1);",
              "            InjectAnswer('imp_on_pb_2',\"Установить\"+' '+temp_str_1+' ('+cost+' cr).',i);",
              "        }",
              "        else InjectAnswer('imp_on_pb_2',\"Установить <temp_str_1> (<cost> cr).\",i);",
              "    }",
              "    if(temp_str=='E' && (temp_int_3 || free_eye<=0 || ShipMoney(Player())<cost))",
              "    {",
              "        temp_int_5=0;",
              "        for(count2=1;count2<ArrayDim(temp_array);count2=count2+1)",
              "        {",
              "            if(temp_str_1==temp_array[count2])temp_int_5=1;",
              "        }",
              "        if(ShipMoney(Player())<cost || temp_int_5)",
              "        {",
              "            AddDialogBlock(\"Установить\"+' '+temp_str_1+' ('+cost+' cr).',1);",
              "            InjectAnswer('imp_on_pb_2',\"Установить\"+' '+temp_str_1+' ('+cost+' cr).',i);",
              "        }",
              "        else InjectAnswer('imp_on_pb_2',\"Установить <temp_str_1> (<cost> cr).\",i);",
              "    }",
              "}",
              "temp_int = 0;",
              "for(i = 0; i < ShipCustomShipInfosCount(Player()); i = i + 1)",
              "{",
              "    temp_str = ShipCustomShipInfoTextData(Player(), i, 2);",
              "    if(temp_str == '') continue;",
              "    if(substr(temp_str, 0, 10) == 'Biomodules') temp_int = 1;",
              "}",
              "if(temp_int == 1) InjectAnswer('implant_off_pb', \"Удалить биомодуль\", 1);",
              "InjectAnswer('imp_PB_exit', \"Отказаться от услуг\", 1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  600,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  61,
          "Total.Lines":  19,
          "Code.Type":  "Turn",
          "Code":          
          [
              "temp_str_1='';",
              "temp_int=0;",
              "for(i=0; i<ShipCustomShipInfosCount(Player()); i=i+1)",
              "{",
              "    temp_str=ShipCustomShipInfoTextData(Player(),i,2);",
              "    if(temp_str=='')continue;",
              "    if(substr(temp_str,0,10)=='Biomodules')",
              "    {",
              "        temp_int=temp_int+1;",
              "        temp_str_1=temp_str_1+'<clrEnd>'+temp_int+'.<clr> <ShipCustomShipInfoTextData(Player(),i,1)>'+\"<br>\";",
              "    }",
              "}",
              "//Вычисляем процент пиратской скидки (78% при 100 рейтинге)",
              "temp_dword = round(100.0 * ShipStatus(Player(), 1) / 130) + 1;",
              "",
              "if(GetGameOptions('FontDialog')==0) DefSplt='</color>-------------------------------------------------------------';",
              "else if(GetGameOptions('FontDialog')==1) DefSplt='</color>------------------------------------------';",
              "else if(GetGameOptions('FontDialog')==2) DefSplt='</color>-----------------------------------------';",
              "else DefSplt='</color>-------------------------------------';"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  580,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  63,
          "Total.Lines":  282,
          "Code.Type":  "Turn",
          "Code":          
          [
              "var_dialog=1;",
              "Sound('Sound.DelMsg');",
              "PlayerImmunity(PlayerImmunity()-(PlayerImmunity()*Rnd(20,30))/100);",
              "ShipMoney(Player(),ShipMoney(Player())-(biomm_cost[GAnswerData+3]-(biomm_cost[GAnswerData+3]*temp_dword)/100));",
              "//Добавляем общую инфошку биомодулей, если её у игрока ещё нет",
              "if(ShipFindCustomShipInfoByType(Player(),'bioMM') < 0)ShipAddCustomShipInfo(Player(),'bioMM','',0,0,0);",
              "//Узнаём, в какую часть тела будет установлен новый имплант",
              "temp_str = CT(biomm_PB[GAnswerData] + DeleteTags('.Slot'));",
              "if(temp_str == 'B')",
              "{",
              "    for(i = 1; i <= 4; i = i + 1)",
              "    {",
              "        temp_int = -2;",
              "        temp_str_1 = 'bioMM_brain_' + i;",
              "        temp_int = ShipFindCustomShipInfoByType(Player(), temp_str_1);",
              "        if(temp_int >= 0) continue;",
              "        temp_str_2=CT(biomm_PB[GAnswerData]+DeleteTags('.Stama_pirate'));",
              "        temp_int_2=temp_str_2;",
              "        stama_count=stama_count+temp_int_2;",
              "        temp_str_2=CT(biomm_PB[GAnswerData]+DeleteTags('.Description'));",
              "        //Устанавливается скрытая инфошка нового биомодуля",
              "        ShipAddCustomShipInfo(Player(),temp_str_1,'NoShow',temp_int_2,biomm_cost[GAnswerData+3],0,'</color>'+CT(biomm_PB[GAnswerData]+DeleteTags('.Name')),biomm_PB[GAnswerData],'Pirate');",
              "        //Увеличиваем счётчик установленных биомодулей в общей инфошке",
              "        temp_int=ShipFindCustomShipInfoByType(Player(),'bioMM');",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int,3);",
              "        ShipCustomShipInfoData(Player(),temp_int,3,temp_int_2+1);",
              "        break;",
              "    }",
              "}",
              "else if(temp_str=='H')",
              "{",
              "    for(i=1; i<=4; i=i+1)",
              "    {",
              "        temp_int=-2;",
              "        temp_str_1='bioMM_hand_'+i;",
              "        temp_int=ShipFindCustomShipInfoByType(Player(),temp_str_1);",
              "        if(temp_int>=0)continue;",
              "        temp_str_2=CT(biomm_PB[GAnswerData]+DeleteTags('.Stama_pirate'));",
              "        temp_int_2=temp_str_2;",
              "        stama_count=stama_count+temp_int_2;",
              "        temp_str_2=CT(biomm_PB[GAnswerData]+DeleteTags('.Description'));",
              "        //Устанавливается скрытая инфошка нового биомодуля",
              "        ShipAddCustomShipInfo(Player(),temp_str_1,'NoShow',temp_int_2,biomm_cost[GAnswerData+3],0,'</color>'+CT(biomm_PB[GAnswerData]+DeleteTags('.Name')),biomm_PB[GAnswerData],'Pirate');",
              "        //Увеличиваем счётчик установленных биомодулей в общей инфошке",
              "        temp_int=ShipFindCustomShipInfoByType(Player(),'bioMM');",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int,1);",
              "        ShipCustomShipInfoData(Player(),temp_int,1,temp_int_2+1);",
              "        break;",
              "    }",
              "}",
              "else if(temp_str=='E')",
              "{",
              "    for(i=1; i<=3; i=i+1)",
              "    {",
              "        temp_int=-2;",
              "        temp_str_1='bioMM_eye_'+i;",
              "        temp_int=ShipFindCustomShipInfoByType(Player(),temp_str_1);",
              "        if(temp_int>=0)continue;",
              "        temp_str_2=CT(biomm_PB[GAnswerData]+DeleteTags('.Stama_pirate'));",
              "        temp_int_2=temp_str_2;",
              "        stama_count=stama_count+temp_int_2;",
              "        temp_str_2=CT(biomm_PB[GAnswerData]+DeleteTags('.Description'));",
              "        //Устанавливается скрытая инфошка нового биомодуля",
              "        ShipAddCustomShipInfo(Player(),temp_str_1,'NoShow',temp_int_2,biomm_cost[GAnswerData+3],0,'</color>'+CT(biomm_PB[GAnswerData]+DeleteTags('.Name')),biomm_PB[GAnswerData],'Pirate');",
              "        //Увеличиваем счётчик установленных биомодулей в общей инфошке",
              "        temp_int=ShipFindCustomShipInfoByType(Player(),'bioMM');",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int,2);",
              "        ShipCustomShipInfoData(Player(),temp_int,2,temp_int_2+1);",
              "        break;",
              "    }",
              "}",
              "temp_int_2=CurTurn()+20-(cur_stama-stama_count);",
              "ShipCustomShipInfoTextData(Player(),temp_int,1,temp_int_2);",
              "ShipCustomShipInfoTextData(Player(),temp_int,3,stama_count);",
              "temp_str=CT(biomm_PB[GAnswerData]+DeleteTags('.Bonus_count'));",
              "temp_int=temp_str;",
              "if(temp_int>0)",
              "{",
              "    for(i = 1; i <= temp_int; i = i + 1)",
              "    {",
              "        temp_str = CT(biomm_PB[GAnswerData] + DeleteTags('.Bonus_' + i));",
              "        temp_str = DeleteTags('<temp_str>');",
              "        temp_str_1 = CT(biomm_PB[GAnswerData] + DeleteTags('.Bonus_' + i + '_var'));",
              "        temp_int_1 = temp_str_1;",
              "        AddImplantBonuses(Player(), temp_str, temp_int_1);",
              "    }",
              "}",
              "//Проверяем, требуется ли данному биомодулю дополнительная инфошка/переменная в скрипте",
              "temp_int=CT(biomm_PB[GAnswerData]+DeleteTags('.Uni_code'));",
              "if(temp_int==10)",
              "{",
              "    temp_int_1 = ShipFindCustomShipInfoByType(Player(), 'bioMM_Doono');",
              "    if(~temp_int_1)",
              "    {",
              "        temp_int_2 = ShipCustomShipInfoData(Player(), temp_int_1, 1);",
              "        ShipCustomShipInfoData(Player(), temp_int_1, 1, temp_int_2 + 1);",
              "    }",
              "    else ShipAddCustomShipInfo(Player(), 'bioMM_Doono', 'NoShow', 1, GetShipExpByType(Player(), 0), 0, '0.' + CT(biomm_MC[GAnswerData] + '.AddExpPercent'));",
              "}",
              "else if(temp_int==11)",
              "{",
              "    broot=broot+1;",
              "    broot_data=CurTurn()+Rnd(20,80);",
              "}",
              "else if(temp_int==12)",
              "{",
              "    temp_int_1=ShipFindCustomShipInfoByType(Player(),'bioMM_BM');",
              "    if(temp_int_1>=0)",
              "    {",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int_1,1);",
              "        ShipCustomShipInfoData(Player(),temp_int_1,1,temp_int_2+1);",
              "    }",
              "    else ShipAddCustomShipInfo(Player(),'bioMM_BM','NoShow',1);",
              "}",
              "else if(temp_int==13)",
              "{",
              "    temp_int_1=ShipFindCustomShipInfoByType(Player(),'bioMM_KM');",
              "    if(temp_int_1>=0)",
              "    {",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int_1,1);",
              "        ShipCustomShipInfoData(Player(),temp_int_1,1,temp_int_2+1);",
              "    }",
              "    else ShipAddCustomShipInfo(Player(),'bioMM_KM','NoShow',1);",
              "}",
              "else if(temp_int==14)",
              "{",
              "    temp_int_1=ShipFindCustomShipInfoByType(Player(),'bioMM_TM');",
              "    if(temp_int_1>=0)",
              "    {",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int_1,1);",
              "        ShipCustomShipInfoData(Player(),temp_int_1,1,temp_int_2+1);",
              "    }",
              "    else ShipAddCustomShipInfo(Player(),'bioMM_TM','NoShow',1);",
              "}",
              "else if(temp_int==15)",
              "{",
              "    temp_int=temp_int;//Свободный номер",
              "}",
              "else if(temp_int==16)",
              "{",
              "    temp_int_1=ShipFindCustomShipInfoByType(Player(),'bioMM_AD');",
              "    if(temp_int_1 >= 0)",
              "    {",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int_1,1);",
              "        ShipCustomShipInfoData(Player(),temp_int_1,1,temp_int_2+1);",
              "    }",
              "    else ShipAddCustomShipInfo(Player(),'bioMM_AD','NoShow',1);",
              "}",
              "else if(temp_int==17)",
              "{",
              "    temp_int_1=ShipFindCustomShipInfoByType(Player(),'bioMM_MR');",
              "    if(temp_int_1 >= 0)",
              "    {",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int_1,1);",
              "        ShipCustomShipInfoData(Player(),temp_int_1,1,temp_int_2+1);",
              "    }",
              "    else",
              "    {",
              "        temp_dword_1=ShipItems(Player(),0);",
              "        ItemExtraSpecialsAddByType(temp_dword_1,FindBonusByCustomTag('BM_MR_akrin'));",
              "        ShipAddCustomShipInfo(Player(),'bioMM_MR','NoShow',1,0,(ItemSize(temp_dword_1)*25)/100);",
              "        ItemSize(temp_dword_1,ItemSize(temp_dword_1)+(ItemSize(temp_dword_1)*25)/100);",
              "        HullHP(temp_dword_1,ItemSize(temp_dword_1));",
              "    }",
              "}",
              "else if(temp_int==18)",
              "{",
              "    temp_int_1=ShipFindCustomShipInfoByType(Player(),'bioMM_BS');",
              "    if(temp_int_1>=0)",
              "    {",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int_1,1);",
              "        ShipCustomShipInfoData(Player(),temp_int_1,1,temp_int_2+1);",
              "    }",
              "    else ShipAddCustomShipInfo(Player(),'bioMM_BS','NoShow',1);",
              "}",
              "else if(temp_int==19)king_will=king_will+1;",
              "else if(temp_int==20)open_hole=open_hole+1;",
              "else if(temp_int==22)",
              "{",
              "    temp_int_1=ShipFindCustomShipInfoByType(Player(),'bioMM_RT');",
              "    if(temp_int_1>=0)",
              "    {",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int_1,1);",
              "        ShipCustomShipInfoData(Player(),temp_int_1,1,temp_int_2+1);",
              "    }",
              "    else ShipAddCustomShipInfo(Player(),'bioMM_RT','NoShow',1);",
              "}",
              "else if(temp_int==23)",
              "{",
              "    temp_int_1=ShipFindCustomShipInfoByType(Player(),'bioMM_IC');",
              "    if(temp_int_1>=0)",
              "    {",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int_1,1);",
              "        ShipCustomShipInfoData(Player(),temp_int_1,1,temp_int_2+1);",
              "    }",
              "    else ShipAddCustomShipInfo(Player(),'bioMM_IC','NoShow',1);",
              "    immun_array[29]=1;",
              "    for(i=0; i<=24; i=i+1)",
              "    {",
              "        //Выставляем новый срок болезни/стимулятора, если таковые у игрока имеются",
              "        if(ShipHealthFactor(Player(),i) && !immun_array[i])",
              "        {",
              "            immun_array[i]=ShipHealthFactor(Player(),i)/2;",
              "            ShipHealthFactor(Player(),i,immun_array[i]);",
              "        }",
              "        //По истечении болезни/стимулятора обнуляем элемент",
              "        if(!ShipHealthFactor(Player(),i) && immun_array[i])immun_array[i]=0;",
              "    }",
              "}",
              "else if(temp_int==24)",
              "{",
              "    temp_int_1=ShipFindCustomShipInfoByType(Player(),'bioMM_ND');",
              "    if(temp_int_1>=0)",
              "    {",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int_1,1);",
              "        ShipCustomShipInfoData(Player(),temp_int_1,1,temp_int_2+1);",
              "    }",
              "    else ShipAddCustomShipInfo(Player(),'bioMM_ND','NoShow',1);",
              "    immun_array[29]=2;",
              "    for(i=0; i<=24; i=i+1)",
              "    {",
              "        //Выставляем новый срок болезни/стимулятора, если таковые у игрока имеются",
              "        if(ShipHealthFactor(Player(),i) && !immun_array[i])",
              "        {",
              "            immun_array[i]=ShipHealthFactor(Player(),i);",
              "            ShipHealthFactor(Player(),i,immun_array[i]*2);",
              "        }",
              "        //По истечении болезни/стимулятора обнуляем элемент",
              "        if(!ShipHealthFactor(Player(),i) && immun_array[i])immun_array[i]=0;",
              "    }",
              "}",
              "else if(temp_int==25)",
              "{",
              "    temp_int_1=ShipFindCustomShipInfoByType(Player(),'bioMM_BZ');",
              "    if(temp_int_1 >= 0)",
              "    {",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int_1,1);",
              "        ShipCustomShipInfoData(Player(),temp_int_1,1,temp_int_2+1);",
              "    }",
              "    else ShipAddCustomShipInfo(Player(),'bioMM_BZ','NoShow',1);",
              "}",
              "else if(temp_int==26)",
              "{",
              "    temp_int=temp_int;//Свободный номер",
              "}",
              "else if(temp_int==28)add_dialog[2]=add_dialog[2]+1;",
              "else if(temp_int==29)add_dialog[1]=add_dialog[1]+1;",
              "else if(temp_int==27)",
              "{",
              "    temp_int_1=ShipFindCustomShipInfoByType(Player(),'bioMM_DH');",
              "    if(temp_int_1 >= 0)",
              "    {",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int_1,1);",
              "        ShipCustomShipInfoData(Player(),temp_int_1,1,temp_int_2+1);",
              "    }",
              "    else ShipAddCustomShipInfo(Player(),'bioMM_DH','NoShow',1);",
              "}",
              "else if(temp_int==30)",
              "{",
              "    temp_int_1=ShipFindCustomShipInfoByType(Player(),'bioMM_NS');",
              "    if(temp_int_1 >= 0)",
              "    {",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int_1,1);",
              "        ShipCustomShipInfoData(Player(),temp_int_1,1,temp_int_2+1);",
              "    }",
              "    else ShipAddCustomShipInfo(Player(),'bioMM_NS','NoShow',1);",
              "    temp_int_1=ShipFindCustomShipInfoByType(Player(),'bioMM_NS');",
              "    ShipCustomShipInfoData(Player(),temp_int_1,3,7);",
              "}",
              "else if(temp_int==31)",
              "{",
              "    temp_int_1=ShipFindCustomShipInfoByType(Player(),'bioMM_LS');",
              "    if(temp_int_1 >= 0)",
              "    {",
              "        temp_int_2=ShipCustomShipInfoData(Player(),temp_int_1,1);",
              "        ShipCustomShipInfoData(Player(),temp_int_1,1,temp_int_2+1);",
              "    }",
              "    else ShipAddCustomShipInfo(Player(),'bioMM_LS','NoShow',1);",
              "}",
              "",
              "//Записываем в переменную название биомодуля для подстановки в диалог",
              "temp_str=CT(biomm_PB[GAnswerData]+DeleteTags('.Name'));"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  260,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  65,
          "Total.Lines":  1,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "AddDialogInject('dialog_pb', '', \"Говорят, у вас тут можно разжиться биомодулями\", 0);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  400,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  71,
          "Total.Lines":  12,
          "Code.Type":  "Turn",
          "Code":          
          [
              "var_dialog=0;",
              "InjectAnswer('implant_on','Установить биомодуль',1);",
              "temp_int=0;",
              "for(i=0;i<ShipCustomShipInfosCount(Player());i=i+1)",
              "{",
              "    temp_str=ShipCustomShipInfoTextData(Player(),i,2);",
              "    if(temp_str=='')continue;",
              "    if(substr(temp_str,0,10)=='Biomodules')temp_int=1;",
              "}",
              "if(temp_int==1)InjectAnswer('implant_off','Удалить биомодуль',1);",
              "InjectAnswer('implant_tutorial','Прослушать инструктаж',1);",
              "InjectAnswer('imp_MC_exit','Отказаться от услуг',1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  320,
          "Pos.y":  130,
          "Parent":  -1,
          "#":  74,
          "Total.Lines":  80,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ArrayClear(temp_array);",
              "for(i=0;i<ShipCustomShipInfosCount(Player());i=i+1)",
              "{",
              "    temp_str=ShipCustomShipInfoTextData(Player(),i,2);",
              "    if(temp_str=='')continue;",
              "    if(substr(temp_str,0,10)=='Biomodules')ArrayAdd(temp_array,DeleteTags(ShipCustomShipInfoTextData(Player(),i,1)));",
              "}",
              "for(i=1;i<4;i=i+1)",
              "{",
              "    temp_str=CT(biomm_MC[i]+DeleteTags('.Slot'));",
              "    temp_str_1=CT(biomm_MC[i]+DeleteTags('.Stama'));",
              "    temp_int=temp_str_1;",
              "    temp_str_1=CT(biomm_MC[i]+DeleteTags('.Name'));",
              "    temp_int_3=0;",
              "    for(count2=1;count2<ArrayDim(temp_array);count2=count2+1)",
              "    {",
              "        if(temp_str_1==temp_array[count2])temp_int_3=1;",
              "    }",
              "    cost=biomm_cost[i];",
              "    temp_int_1=0;",
              "    //Проверка на конфликтующие биомодули (в настоящий момент только Иммунокорректор и Игла)",
              "    if((temp_str_1==CT('Biomodules.5_gtu.6.Name') && immun_array[29]==2) || (temp_str_1==CT('Biomodules.5_gtu.11.Name') && immun_array[29]==1))temp_int_1=1;",
              "    //Можно установить",
              "    if(!temp_int_3 && ShipMoney(Player())>=cost && temp_str=='B' && free_brain>0 && cur_stama-temp_int>0) InjectAnswer('implant_on_3',\"Установить <temp_str_1> (<cost> cr).\",i);",
              "    if(!temp_int_3 && temp_int_1==0 && ShipMoney(Player())>=cost && temp_str=='H' && free_hand>0 && cur_stama-temp_int>0) InjectAnswer('implant_on_3',\"Установить <temp_str_1> (<cost> cr).\",i);",
              "    if(!temp_int_3 && ShipMoney(Player())>=cost && temp_str=='E' && free_eye>0 && cur_stama-temp_int>0) InjectAnswer('implant_on_3',\"Установить <temp_str_1> (<cost> cr).\",i);",
              "    //Нельзя установить",
              "    if(temp_str=='B' && (temp_int_3 || free_brain<=0 || cur_stama-temp_int<=0 || ShipMoney(Player())<cost))",
              "    {",
              "        temp_int_5=0;",
              "        for(count2=1;count2<ArrayDim(temp_array);count2=count2+1)",
              "        {",
              "            if(temp_str_1==temp_array[count2])temp_int_5=1;",
              "        }",
              "        if(ShipMoney(Player())<cost || temp_int_5)",
              "        {",
              "            AddDialogBlock(\"Установить\"+' '+temp_str_1+' ('+cost+' cr).',1);",
              "            InjectAnswer('implant_on_2',\"Установить\"+' '+temp_str_1+' ('+cost+' cr).',i);",
              "        }",
              "        else InjectAnswer('implant_on_2',\"Установить <temp_str_1> (<cost> cr).\",i);",
              "    }",
              "    if(temp_str=='H' && (temp_int_3 || temp_int_1==1 || free_hand<=0 || cur_stama-temp_int<=0 || ShipMoney(Player())<cost))",
              "    {",
              "        temp_int_5=0;",
              "        for(count2=1;count2<ArrayDim(temp_array);count2=count2+1)",
              "        {",
              "            if(temp_str_1==temp_array[count2])temp_int_5=1;",
              "        }",
              "        if(ShipMoney(Player())<cost || temp_int_5)",
              "        {",
              "            AddDialogBlock(\"Установить\"+' '+temp_str_1+' ('+cost+' cr).',1);",
              "            InjectAnswer('implant_on_2',\"Установить\"+' '+temp_str_1+' ('+cost+' cr).',i);",
              "        }",
              "        else InjectAnswer('implant_on_2',\"Установить <temp_str_1> (<cost> cr).\",i);",
              "    }",
              "    if(temp_str=='E' && (temp_int_3 || free_eye<=0 || cur_stama-temp_int<=0 || ShipMoney(Player())<cost))",
              "    {",
              "        temp_int_5=0;",
              "        for(count2=1;count2<ArrayDim(temp_array);count2=count2+1)",
              "        {",
              "            if(temp_str_1==temp_array[count2])temp_int_5=1;",
              "        }",
              "        if(ShipMoney(Player())<cost || temp_int_5)",
              "        {",
              "            AddDialogBlock(\"Установить\"+' '+temp_str_1+' ('+cost+' cr).',1);",
              "            InjectAnswer('implant_on_2',\"Установить\"+' '+temp_str_1+' ('+cost+' cr).',i);",
              "        }",
              "        else InjectAnswer('implant_on_2',\"Установить <temp_str_1> (<cost> cr).\",i);",
              "    }",
              "}",
              "temp_int=0;",
              "for(i=0;i<ShipCustomShipInfosCount(Player());i=i+1)",
              "{",
              "    temp_str=ShipCustomShipInfoTextData(Player(),i,2);",
              "    if(temp_str=='')continue;",
              "    if(substr(temp_str,0,10)=='Biomodules')temp_int=1;",
              "}",
              "if(temp_int==1)InjectAnswer('implant_off',\"Удалить биомодуль\",1);",
              "InjectAnswer('implant_tutorial',\"Прослушать инструктаж\",1);",
              "InjectAnswer('imp_MC_exit',\"Отказаться от услуг\",1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  320,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  77,
          "Total.Lines":  10,
          "Code.Type":  "Turn",
          "Code":          
          [
              "InjectAnswer('implant_on',\"Поставить другой биомодуль\",1);",
              "temp_int=0;",
              "for(i=0;i<ShipCustomShipInfosCount(Player());i=i+1)",
              "{",
              "    temp_str=ShipCustomShipInfoTextData(Player(),i,2);",
              "    if(temp_str=='')continue;",
              "    if(substr(temp_str, 0, 10) == 'Biomodules') temp_int = 1;",
              "}",
              "if(temp_int==1)InjectAnswer('implant_off',\"Удалить биомодуль\",1);",
              "InjectAnswer('imp_MC_exit',\"Благодарю, мне хватит\",1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  340,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  81,
          "Total.Lines":  37,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Проверка на конфликтующие биомодули (в настоящий момент только Иммунокорректор и Игла)",
              "temp_str = CT(biomm_MC[GAnswerData] + DeleteTags('.Slot'));",
              "temp_str_1 = CT(biomm_MC[GAnswerData] + DeleteTags('.Stama'));",
              "temp_int = temp_str_1;",
              "temp_str_1 = CT(biomm_MC[GAnswerData] + DeleteTags('.Name'));",
              "temp_int_2 = substr(biomm_MC[GAnswerData], 11, 1);",
              "temp_int_1 = 0;",
              "temp_int_3 = 0;",
              "",
              "if((temp_str_1==CT('Biomodules.5_gtu.6.Name') && immun_array[29]==2) || (temp_str_1==CT('Biomodules.5_gtu.11.Name') && immun_array[29]==1))temp_int_1=1;",
              "if((temp_str=='B' && free_brain<=0) || (temp_str=='H' && free_hand<=0) || (temp_str=='E' && free_eye<=0))",
              "{",
              "    temp_str_1=\"</color>К сожалению после нескольких тестов и углубленного сканирования мы сделали заключение, что установить биомодуль <clr>\"+CT(biomm_MC[GAnswerData]+DeleteTags('.Name'))+\"<clrEnd> и при этом избежать конфликтов, не получится. В эту область уже имплантировано слишком много. Можете выбрать биомодуль для установки в другую область вашего тела, если хотите.\";",
              "    temp_str_2=\"Пожалуй, в другой раз\";",
              "}",
              "if(cur_stama-temp_int<=0)",
              "{",
              "    temp_str_1=\"</color>К сожалению после нескольких тестов и углубленного сканирования мы сделали заключение, что ваш организм не выдержит нагрузки, связанной с имплантацией вам биомодуля <clr>\"+CT(biomm_MC[GAnswerData]+DeleteTags('.Name'))+\"<clrEnd>. Мы вынуждены отказать вам в этой операции. Можете выбрать биомодуль с меньшей нагрузкой на организм, если хотите.\";",
              "    temp_str_2=\"Пожалуй, в другой раз\";",
              "}",
              "if(temp_int_1==1 && temp_str_1==CT('Biomodules.5_gtu.6.Name'))",
              "{",
              "    temp_str=CT('Biomodules.5_gtu.11.Name');",
              "    temp_str_1=\"</color>Проведя некоторые тесты мы сделали вывод, что установить вам биомодуль <temp_str_1> невозможно в силу конфликтов с уже установленным биомодулем <temp_str>. Выберите другой имплант, либо удалите конфликтующий.\";",
              "    temp_str_2=\"Пожалуй, в другой раз\";",
              "}",
              "if(temp_int_1==1 && temp_str_1==CT('Biomodules.5_gtu.11.Name'))",
              "{",
              "    temp_str=CT('Biomodules.5_gtu.6.Name');",
              "    temp_str_1=\"</color>Проведя некоторые тесты мы сделали вывод, что установить вам биомодуль <temp_str_1> невозможно в силу конфликтов с уже установленным биомодулем <temp_str>. Выберите другой имплант, либо удалите конфликтующий.\";",
              "    temp_str_2=\"Пожалуй, в другой раз\";",
              "}",
              "if(temp_int_3==1)",
              "{",
              "    temp_str_1=\"</color>Биомодуль <clr>\"+CT(biomm_MC[GAnswerData]+DeleteTags('.Name'))+\"<clrEnd> уже имплантирован вам. Каждый биомодуль воздействует на определённый участок в вашем организме, установка двух одинаковых биомодулей вызовет увеличенную нагрузку на этот участок. Вынужден вам отказать.\";",
              "    temp_str_2=\"Ну тогда в другой раз\";",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  320,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  83,
          "Total.Lines":  10,
          "Code.Type":  "Turn",
          "Code":          
          [
              "InjectAnswer('implant_on',\"Поставить другой биомодуль\", 1);",
              "temp_int = 0;",
              "for(i = 0; i < ShipCustomShipInfosCount(Player()); i = i + 1)",
              "{",
              "    temp_str = ShipCustomShipInfoTextData(Player(), i, 2);",
              "    if(temp_str == '') continue;",
              "    if(substr(temp_str, 0, 10) == 'Biomodules') temp_int = 1;",
              "}",
              "if(temp_int == 1) InjectAnswer('implant_off', \"Удалить биомодуль\", 1);",
              "InjectAnswer('imp_MC_exit', temp_str_2, 1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  320,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  84,
          "Total.Lines":  10,
          "Code.Type":  "Turn",
          "Code":          
          [
              "InjectAnswer('implant_on', \"Установить биомодуль\", 1);",
              "temp_int = 0;",
              "for(i = 0; i < ShipCustomShipInfosCount(Player()); i = i + 1)",
              "{",
              "    temp_str = ShipCustomShipInfoTextData(Player(), i, 2);",
              "    if(temp_str == '') continue;",
              "    if(substr(temp_str, 0, 10) == 'Biomodules') temp_int = 1;",
              "}",
              "if(temp_int == 1) InjectAnswer('implant_off', \"Удалить биомодуль\", 1);",
              "InjectAnswer('imp_MC_exit', \"Нет, благодарю\", 1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  360,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  90,
          "Total.Lines":  10,
          "Code.Type":  "Turn",
          "Code":          
          [
              "InjectAnswer('implant_on', \"Установить биомодуль\", 1);",
              "temp_int = 0;",
              "for(i = 0; i < ShipCustomShipInfosCount(Player()); i = i + 1)",
              "{",
              "    temp_str = ShipCustomShipInfoTextData(Player(), i, 2);",
              "    if(temp_str == '') continue;",
              "    if(substr(temp_str, 0, 10) == 'Biomodules') temp_int = 1;",
              "}",
              "if(temp_int == 1) InjectAnswer('implant_off', \"Удалить биомодуль\", 1);",
              "InjectAnswer('imp_MC_exit', \"Отказаться от услуг\", 1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  380,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  92,
          "Total.Lines":  16,
          "Code.Type":  "Turn",
          "Code":          
          [
              "temp_str_1='';",
              "temp_int=0;",
              "for(i=0;i<ShipCustomShipInfosCount(Player());i=i+1)",
              "{",
              "    temp_str=ShipCustomShipInfoTextData(Player(),i,2);",
              "    if(temp_str=='')continue;",
              "    if(substr(temp_str,0,10)=='Biomodules')",
              "    {",
              "        temp_int=temp_int+1;",
              "        temp_str_1=temp_str_1+'<clrEnd>'+temp_int+'.<clr> <ShipCustomShipInfoTextData(Player(),i,1)>'+\"<br>\";",
              "    }",
              "}",
              "if(GetGameOptions('FontDialog')==0) DefSplt='</color>-------------------------------------------------------------';",
              "else if(GetGameOptions('FontDialog')==1) DefSplt='</color>------------------------------------------';",
              "else if(GetGameOptions('FontDialog')==2) DefSplt='</color>-----------------------------------------';",
              "else DefSplt='</color>-------------------------------------';"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  320,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  94,
          "Total.Lines":  18,
          "Code.Type":  "Turn",
          "Code":          
          [
              "for(i=0;i<ShipCustomShipInfosCount(Player());i=i+1)",
              "{",
              "    temp_str=ShipCustomShipInfoTextData(Player(),i,2);",
              "    if(temp_str=='')continue;",
              "    if(substr(temp_str,0,10)=='Biomodules')",
              "    {",
              "        temp_str_1='<ShipCustomShipInfoTextData(Player(),i,1)>';",
              "        temp_int_1=ShipCustomShipInfoData(Player(),i,2)/4;",
              "        if(ShipMoney(Player())>=temp_int_1)InjectAnswer('implant_off_2',\"Удалить <temp_str_1> (<temp_int_1> cr).\",i);",
              "        if(ShipMoney(Player())<temp_int_1)",
              "        {",
              "            AddDialogBlock(\"Удалить \"+' '+temp_str_1+' ('+temp_int_1+' cr).',1);",
              "            InjectAnswer('implant_off_2',\"Удалить \"+' '+temp_str_1+' ('+temp_int_1+' cr).',i);",
              "        }",
              "    }",
              "}",
              "InjectAnswer('implant_on',\"Установить биомодуль\",1);",
              "InjectAnswer('imp_MC_exit',\"Отказаться от услуг\",1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  540,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  100,
          "Total.Lines":  11,
          "Code.Type":  "Turn",
          "Code":          
          [
              "var_dialog=0;",
              "InjectAnswer('imp_on_pb',\"Установить биомодуль\",1);",
              "temp_int=0;",
              "for(i=0;i<ShipCustomShipInfosCount(Player());i=i+1)",
              "{",
              "    temp_str=ShipCustomShipInfoTextData(Player(),i,2);",
              "    if(temp_str=='')continue;",
              "    if(substr(temp_str,0,10)=='Biomodules')temp_int=1;",
              "}",
              "if(temp_int==1)InjectAnswer('implant_off_pb',\"Удалить биомодуль\",1);",
              "InjectAnswer('imp_PB_exit',\"Отказаться от услуг\",1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  540,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  102,
          "Total.Lines":  10,
          "Code.Type":  "Turn",
          "Code":          
          [
              "InjectAnswer('imp_on_pb', \"Поставить другой биомодуль\", 1);",
              "temp_int = 0;",
              "for(i = 0; i < ShipCustomShipInfosCount(Player()); i = i + 1)",
              "{",
              "    temp_str = ShipCustomShipInfoTextData(Player(), i, 2);",
              "    if(temp_str == '') continue;",
              "    if(substr(temp_str, 0, 10) == 'Biomodules') temp_int = 1;",
              "}",
              "if(temp_int == 1) InjectAnswer('implant_off_pb', \"Удалить биомодуль\", 1);",
              "InjectAnswer('imp_PB_exit', temp_str_2, 1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  540,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  103,
          "Total.Lines":  10,
          "Code.Type":  "Turn",
          "Code":          
          [
              "InjectAnswer('imp_on_pb',\"Поставить другой биомодуль\",1);",
              "temp_int=0;",
              "for(i=0;i<ShipCustomShipInfosCount(Player());i=i+1)",
              "{",
              "    temp_str=ShipCustomShipInfoTextData(Player(),i,2);",
              "    if(temp_str=='')continue;",
              "    if(substr(temp_str,0,10)=='Biomodules')temp_int=1;",
              "}",
              "if(temp_int==1)InjectAnswer('implant_off_pb',\"Удалить биомодуль\",1);",
              "InjectAnswer('imp_PB_exit',\"Спасибо, мне хватит\",1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  540,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  106,
          "Total.Lines":  10,
          "Code.Type":  "Turn",
          "Code":          
          [
              "InjectAnswer('imp_on_pb',\"Установить биомодуль\",1);",
              "temp_int=0;",
              "for(i=0;i<ShipCustomShipInfosCount(Player());i=i+1)",
              "{",
              "    temp_str=ShipCustomShipInfoTextData(Player(),i,2);",
              "    if(temp_str=='')continue;",
              "    if(substr(temp_str,0,10)=='Biomodules')temp_int=1;",
              "}",
              "if(temp_int==1)InjectAnswer('implant_off_pb',\"Удалить биомодуль\",1);",
              "InjectAnswer('imp_PB_exit',\"Нет уж, спасибо\",1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  620,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  107,
          "Total.Lines":  313,
          "Code.Type":  "Turn",
          "Code":          
          [
              "var_dialog=1;",
              "PlayerImmunity(PlayerImmunity()-(PlayerImmunity()*Rnd(10,15))/100);",
              "temp_str=CT(ShipCustomShipInfoTextData(Player(),GAnswerData,2)+DeleteTags('.Bonus_count'));",
              "temp_str_2=CT(ShipCustomShipInfoTextData(Player(),GAnswerData,2)+DeleteTags('.Name'));",
              "temp_int=temp_str;",
              "if(temp_int > 0)",
              "{",
              "    for(i = 1; i <= temp_int; i = i + 1)",
              "    {",
              "        temp_str = CT(ShipCustomShipInfoTextData(Player(), GAnswerData, 2) + DeleteTags('.Bonus_' + i));",
              "        temp_str = DeleteTags('<temp_str>');",
              "        temp_str_1 = CT(ShipCustomShipInfoTextData(Player(), GAnswerData, 2) + DeleteTags('.Bonus_' + i + '_var'));",
              "        temp_int_1 = temp_str_1;",
              "        temp_int_1 = -1 * temp_int_1;",
              "        AddImplantBonuses(Player(), temp_str, temp_int_1);",
              "    }",
              "}",
              "temp_str=CT(ShipCustomShipInfoTextData(Player(),GAnswerData,2)+DeleteTags('.Slot'));",
              "Sound('Sound.Sell');",
              "if(temp_str=='B')",
              "{",
              "    temp_int=ShipCustomShipInfoData(Player(),GAnswerData,2)/4;",
              "    temp_int=temp_int-(temp_int*temp_dword)/100;",
              "    ShipMoney(Player(),ShipMoney(Player())-temp_int);",
              "    temp_int_2=ShipCustomShipInfoData(Player(),GAnswerData,1);",
              "    stama_count=stama_count-temp_int_2;",
              "    temp_int=ShipFindCustomShipInfoByType(Player(),'bioMM');",
              "    temp_int_1=ShipCustomShipInfoTextData(Player(),temp_int,3);",
              "    ShipCustomShipInfoTextData(Player(),temp_int,3,temp_int_1-temp_int_2);",
              "    temp_int_2=ShipCustomShipInfoData(Player(),temp_int,3);",
              "    ShipCustomShipInfoData(Player(),temp_int,3,temp_int_2-1);",
              "}",
              "if(temp_str=='H')",
              "{",
              "    temp_int=ShipCustomShipInfoData(Player(),GAnswerData,2)/4;",
              "    temp_int=temp_int-(temp_int*temp_dword)/100;",
              "    ShipMoney(Player(),ShipMoney(Player())-temp_int);",
              "    temp_int_2=ShipCustomShipInfoData(Player(),GAnswerData,1);",
              "    stama_count=stama_count-temp_int_2;",
              "    temp_int=ShipFindCustomShipInfoByType(Player(),'bioMM');",
              "    temp_int_1=ShipCustomShipInfoTextData(Player(),temp_int,3);",
              "    ShipCustomShipInfoTextData(Player(),temp_int,3,temp_int_1-temp_int_2);",
              "    temp_int_2=ShipCustomShipInfoData(Player(),temp_int,1);",
              "    ShipCustomShipInfoData(Player(),temp_int,1,temp_int_2-1);",
              "}",
              "if(temp_str=='E')",
              "{",
              "    temp_int=ShipCustomShipInfoData(Player(),GAnswerData,2)/4;",
              "    temp_int=temp_int-(temp_int*temp_dword)/100;",
              "    ShipMoney(Player(),ShipMoney(Player())-temp_int);",
              "    temp_int_2=ShipCustomShipInfoData(Player(),GAnswerData,1);",
              "    stama_count=stama_count-temp_int_2;",
              "    temp_int=ShipFindCustomShipInfoByType(Player(),'bioMM');",
              "    temp_int_1=ShipCustomShipInfoTextData(Player(),temp_int,3);",
              "    ShipCustomShipInfoTextData(Player(),temp_int,3,temp_int_1-temp_int_2);",
              "    temp_int_2=ShipCustomShipInfoData(Player(),temp_int,2);",
              "    ShipCustomShipInfoData(Player(),temp_int,2,temp_int_2-1);",
              "}",
              "//Определяем наличие на корабле и модификатор биомира",
              "temp_float=1.0;",
              "if(ArtefactTypeInUse(Player(),t_ArtBio))",
              "{",
              "    temp_float=CT('Biomodules.BioworldInSlotCoef');",
              "}",
              "else",
              "{",
              "    if(ArtefactTypeInUse(Player(),t_ArtArtefactor))",
              "    {",
              "        for(i=0;i<ShipArts(Player());i=i+1)",
              "        {",
              "            temp_dword=ShipArts(Player(),i);",
              "            if(ItemType(temp_dword)==t_ArtBio)",
              "            {",
              "                if(ItemDurability(temp_dword))",
              "                {",
              "                    temp_float=CT('Biomodules.BioworldInHoldCoef');",
              "                    break;",
              "                }",
              "            }",
              "        }",
              "    }",
              "}",
              "temp_int_1=0;",
              "if(ShipHealthFactor(Player(),15))temp_int_1=temp_int_1+3;",
              "if(ShipHealthFactor(Player(),17))temp_int_1=temp_int_1+3;",
              "if(ShipHealthFactor(Player(),18))temp_int_1=temp_int_1+8;",
              "if(ShipHealthFactor(Player(),20))temp_int_1=temp_int_1+2;",
              "if(ShipHealthFactor(Player(),23))temp_int_1=temp_int_1-1;",
              "if(ShipHealthFactor(Player(),3))temp_int_1=temp_int_1+2;",
              "if(ShipHealthFactor(Player(),4))temp_int_1=temp_int_1-3;",
              "if(ShipHealthFactor(Player(),6))temp_int_1=temp_int_1-6;",
              "if(ShipHealthFactor(Player(),7))temp_int_1=temp_int_1-4;",
              "if(ShipHealthFactor(Player(),9))temp_int_1=temp_int_1-1;",
              "if(ShipHealthFactor(Player(),10))temp_int_1=temp_int_1-2;",
              "if(ShipHealthFactor(Player(),11))temp_int_1=temp_int_1-2;",
              "if(ShipHealthFactor(Player(),12))temp_int_1=temp_int_1-4;",
              "temp_int_1 = temp_int_1 + GlobalImplantsEnduranceBonus;",
              "if(ShipPilotRace(Player())==0)cur_stama=round(temp_float*10+temp_int_1-stama_count);",
              "else if(ShipPilotRace(Player())==1)cur_stama=round(temp_float*7+temp_int_1-stama_count);",
              "else if(ShipPilotRace(Player())==2)cur_stama=round(temp_float*7+temp_int_1-stama_count);",
              "else if(ShipPilotRace(Player())==3)cur_stama=round(temp_float*5+temp_int_1-stama_count);",
              "else if(ShipPilotRace(Player())==4)cur_stama=round(temp_float*6+temp_int_1-stama_count);",
              "temp_int=ShipFindCustomShipInfoByType(Player(),'bioMM_ILL');",
              "if(temp_int>-1)",
              "{",
              "    if(cur_stama>=0)",
              "    {",
              "        ShipDeleteCustomShipInfo(Player(),'bioMM_ILL');",
              "        ShipSpecialBonuses(Player(),bonSkill1,ShipSpecialBonuses(Player(),bonSkill1)+6);",
              "        ShipSpecialBonuses(Player(),bonSkill2,ShipSpecialBonuses(Player(),bonSkill2)+6);",
              "        ShipSpecialBonuses(Player(),bonSkill3,ShipSpecialBonuses(Player(),bonSkill3)+6);",
              "        ShipSpecialBonuses(Player(),bonSkill4,ShipSpecialBonuses(Player(),bonSkill4)+4);",
              "        ShipSpecialBonuses(Player(),bonSkill5,ShipSpecialBonuses(Player(),bonSkill5)+4);",
              "        ShipSpecialBonuses(Player(),bonSkill6,ShipSpecialBonuses(Player(),bonSkill6)+4);",
              "        Ether('mp_Galaxy','',\"Благодаря хирургическому вмешательству \\\"Аугментационная лихорадка\\\" больше вам не угрожает.\");",
              "    }",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM');",
              "    temp_int=CurTurn()+20-(cur_stama-stama_count);",
              "    ShipCustomShipInfoTextData(Player(),temp_int_2,1,temp_int);",
              "    ShipCustomShipInfoTextData(Player(),temp_int_2,3,stama_count);",
              "}",
              "temp_str=CT(ShipCustomShipInfoTextData(Player(),GAnswerData,2)+DeleteTags('.Uni_code'));",
              "ShipDeleteCustomShipInfo(Player(),GAnswerData);",
              "temp_int=temp_str;",
              "if(temp_int==19)king_will=king_will-1;",
              "if(temp_int==10)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_Doono');",
              "    if(~temp_int_2)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_Doono');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "}",
              "if(temp_int==11)broot=broot-1;",
              "if(temp_int==12)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_BM');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_BM');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "}",
              "if(temp_int==13)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_KM');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_KM');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "}",
              "if(temp_int==14)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_TM');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_TM');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "}",
              "if(temp_int==15)",
              "{",
              "    temp_int=temp_int;//Свободный номер",
              "}",
              "if(temp_int==16)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_AD');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_AD');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "}",
              "if(temp_int==17)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_MR');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)",
              "        {",
              "            temp_dword_1=ShipItems(Player(),0);",
              "            ItemExtraSpecialsDeleteByType(temp_dword_1,FindBonusByCustomTag('BM_MR_akrin'),1);",
              "            ItemSize(temp_dword_1,ItemSize(temp_dword_1)-ShipCustomShipInfoData(Player(),temp_int_2,2));",
              "            HullHP(temp_dword_1,ItemSize(temp_dword_1));",
              "            ShipDeleteCustomShipInfo(Player(),'bioMM_MR');",
              "        }",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "}",
              "if(temp_int==18)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_BS');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_BS');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "}",
              "if(temp_int==20)open_hole=open_hole-1;",
              "if(temp_int==22)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_RT');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_RT');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "}",
              "if(temp_int==23)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_IC');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_IC');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "    //Зачищаем массив с измененной длительностью болезней/стимуляторов при удалении Иммунокорректора",
              "    for(i=0;i<=24;i=i+1)",
              "    {",
              "        if(immun_array[i])",
              "        {",
              "            //Возвращаем болезни/стимулятору их изначальную продолжительность",
              "            if(ShipHealthFactor(Player(),i))ShipHealthFactor(Player(),i,ShipHealthFactor(Player(),i)+immun_array[i]);",
              "            immun_array[i]=0;",
              "        }",
              "    }",
              "    immun_array[29]=0;",
              "}",
              "if(temp_int==24)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_ND');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_ND');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "    //Зачищаем массив с измененной длительностью болезней/стимуляторов при удалении Иглы",
              "    for(i=0;i<=24;i=i+1)",
              "    {",
              "        if(immun_array[i])",
              "        {",
              "            //Возвращаем болезни/стимулятору их изначальную продолжительность",
              "            if(ShipHealthFactor(Player(),i))",
              "            {",
              "                if(ShipHealthFactor(Player(),i)>immun_array[i])ShipHealthFactor(Player(),i,ShipHealthFactor(Player(),i)-immun_array[i]);",
              "                else ShipHealthFactor(Player(),i,1);",
              "            }",
              "            immun_array[i]=0;",
              "        }",
              "    }",
              "    immun_array[29]=0;",
              "}",
              "if(temp_int==25)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_BZ');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_BZ');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "}",
              "if(temp_int==26)",
              "{",
              "    temp_int=temp_int;//Свободный номер",
              "}",
              "if(temp_int==28)add_dialog[2]=add_dialog[2]-1;",
              "if(temp_int==29)add_dialog[1]=add_dialog[1]-1;",
              "if(temp_int==27)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_DH');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_DH');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "}",
              "if(temp_int==30)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_NS');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_NS');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "}",
              "if(temp_int==31)",
              "{",
              "    temp_int_2=ShipFindCustomShipInfoByType(Player(),'bioMM_LS');",
              "    if(temp_int_2>=0)",
              "    {",
              "        temp_int_1=ShipCustomShipInfoData(Player(),temp_int_2,1);",
              "        if(temp_int_1==1)ShipDeleteCustomShipInfo(Player(),'bioMM_LS');",
              "        if(temp_int_1>=2)ShipCustomShipInfoData(Player(),temp_int_2,1,temp_int_1-1);",
              "    }",
              "}",
              "temp_int=ShipFindCustomShipInfoByType(Player(),'bioMM');",
              "temp_int_2=ShipCustomShipInfoData(Player(),temp_int,1)+ShipCustomShipInfoData(Player(),temp_int,2)+ShipCustomShipInfoData(Player(),temp_int,3);",
              "if(temp_int_2==0)ShipDeleteCustomShipInfo(Player(),'bioMM');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  540,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  108,
          "Total.Lines":  19,
          "Code.Type":  "Turn",
          "Code":          
          [
              "for(i=0;i<ShipCustomShipInfosCount(Player());i=i+1)",
              "{",
              "    temp_str=ShipCustomShipInfoTextData(Player(),i,2);",
              "    if(temp_str=='')continue;",
              "    if(substr(temp_str,0,10)=='Biomodules')",
              "    {",
              "        temp_str_1='<ShipCustomShipInfoTextData(Player(),i,1)>';",
              "        temp_int_1=ShipCustomShipInfoData(Player(),i,2)/4;",
              "        temp_int_1=temp_int_1-(temp_int_1*temp_dword)/100;",
              "        if(ShipMoney(Player())>=temp_int_1)InjectAnswer('implant_off_pb_2',\"Удалить <temp_str_1> (<temp_int_1> cr).\",i);",
              "        if(ShipMoney(Player())<temp_int_1)",
              "        {",
              "            AddDialogBlock(\"Удалить \"+' '+temp_str_1+' ('+temp_int_1+' cr).',1);",
              "            InjectAnswer('implant_off_pb_2',\"Удалить \"+' '+temp_str_1+' ('+temp_int_1+' cr).',i);",
              "        }",
              "    }",
              "}",
              "InjectAnswer('imp_on_pb',\"Установить биомодуль\",1);",
              "InjectAnswer('imp_PB_exit',\"Отказаться от услуг\",1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  690,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  117,
          "Total.Lines":  13,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "temp_int_1 = 0;",
              "if(ShipTypeN(temp_dword_2) == t_Warrior)",
              "{",
              "    //Исключение флагманов",
              "    if(ShipSubType(temp_dword_2) == 1) temp_int_1 = 1;",
              "}",
              "if(!temp_int_1)",
              "{",
              "    //Добавляем диалог для активации \"Фобоса\"",
              "    temp_int_1 = CT('Biomodules.8_gtu.9.FearStart.Text_count');",
              "    temp_str = '</color>' + CT('Biomodules.8_gtu.9.FearStart.Text_' + Rnd(1, temp_int_1)) + ' ' + CT('Biomodules.8_gtu.9.PlayerText');",
              "    AddDialogInject('dialog_hypno', '', temp_str, 1);",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  690,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  118,
          "Total.Lines":  14,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "temp_int_1=0;",
              "//Исключение флагманов",
              "if(ShipTypeN(temp_dword_2)==t_Warrior && ShipSubType(temp_dword_2)==1) temp_int_1=1;",
              "if(!temp_int_1)",
              "{",
              "    //Если корабль ещё не ослеплён",
              "    if(!ShipHealthFactor(temp_dword_2,1))",
              "    {",
              "        //Добавляем диалог для активации \"Вспышки\"",
              "        temp_int_1=CT('Biomodules.1_gtu.9.BlindStart.Text_count');",
              "        temp_str='</color>'+CT('Biomodules.1_gtu.9.BlindStart.Text_'+Rnd(1,temp_int_1))+' '+CT('Biomodules.1_gtu.9.PlayerText');",
              "        AddDialogInject('dialog_blind','',temp_str,1);",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  710,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  125,
          "Total.Lines":  53,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Задаём время кулдауна до следующей активации \"Вспышки\"",
              "add_dialog_cd[2] = CurTurn();",
              "",
              "//Вычисляем дополнительный шанс защититься от \"Вспышки\" за счёт того, что навешено на лице портрета NPC",
              "temp_int = ShipPilotRace(temp_dword_2);",
              "if(!temp_int) temp_str = GetMainData('Data.StyleFaceMaloc.' + ShipFace(temp_dword_2, 'Path'));",
              "else if(temp_int == Peleng) temp_str = GetMainData('Data.StyleFacePeleng.' + ShipFace(temp_dword_2, 'Path'));",
              "else if(temp_int == People) temp_str = GetMainData('Data.StyleFacePeople.' + ShipFace(temp_dword_2, 'Path'));",
              "else if(temp_int == Fei) temp_str = GetMainData('Data.StyleFaceFei.' + ShipFace(temp_dword_2, 'Path'));",
              "else temp_str = GetMainData('Data.StyleFaceGaal.' + ShipFace(temp_dword_2, 'Path'));",
              "",
              "temp_int = 0;",
              "if(~findsubstr(temp_str, 'visor'))",
              "{",
              "    temp_str = 'Visor';",
              "    temp_int = 10;",
              "}",
              "else if(~findsubstr(temp_str, 'glasses'))",
              "{",
              "    temp_str = 'Glasses';",
              "    temp_int = 15;",
              "}",
              "else if(~findsubstr(temp_str, 'helmet'))",
              "{",
              "    temp_str = 'Helmet';",
              "    temp_int = 20;",
              "}",
              "",
              "//Цель попросту проморгала вспышку (вероятность 20%), либо получила резист за счёт визора, очков или шлема",
              "temp_int_1 = Rnd(1, 100);",
              "if(temp_int_1 <= 20 + temp_int)",
              "{",
              "    //Определяем, что именно залочило \"Вспышку\" (меняется текст)",
              "    if(temp_int_1 <= 20)",
              "    {",
              "        temp_int_1 = CT('Biomodules.1_gtu.9.BlindFailed.Count');",
              "        temp_str = '</color>' + CT('Biomodules.1_gtu.9.BlindFailed.Text_' + Rnd(1, temp_int_1));",
              "    }",
              "    else",
              "    {",
              "        temp_int_1 = CT('Biomodules.1_gtu.9.BlindFailed.Count' + temp_str);",
              "        temp_str = '</color>' + CT('Biomodules.1_gtu.9.BlindFailed.Text' + temp_str + '_' + Rnd(1, temp_int_1));",
              "    }",
              "}",
              "//Вспышка ударила точно в глаза цели",
              "else",
              "{",
              "    temp_int_1 = CT('Biomodules.1_gtu.9.BlindSuccess.Text_count');",
              "    temp_str = '</color>' + CT('Biomodules.1_gtu.9.BlindSuccess.Text_' + Rnd(1, temp_int_1));",
              "    ShipHealthFactor(temp_dword_2, 1, Rnd(10, 20));",
              "    //За это цель на игрока обидится",
              "    ShipSetBad(temp_dword_2, Player());",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  710,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  126,
          "Total.Lines":  186,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Задаём время кулдауна до следующей активации \"Фобоса\"",
              "add_dialog_cd[1] = CurTurn() + 9;",
              "temp_int_2 = 0;",
              "temp_int_3 = ShipFindCustomShipInfoByType(temp_dword_2, 'bioMM_FS');",
              "//Дополнительный множитель штрафа к шансу напугать цель, если цель уже была недавно напугана (в ближайшие полгода)",
              "if(temp_int_3 > -1) temp_int_2 = ShipCustomShipInfoData(temp_dword_2, temp_int_3, 3);",
              "",
              "//Определяем штраф к шансу напугать цель в зависимости от типа корабля-цели",
              "temp_str = ShipType(temp_dword_2);",
              "temp_int_1 = 85;",
              "if(temp_str == 'Ranger')",
              "{",
              "    //Если рейнджер больше торговец",
              "    if(!RangerStatus(temp_dword_2)) temp_int_1 = 90;",
              "    //Если рейнджер больше пират",
              "    else if(RangerStatus(temp_dword_2) == 1) temp_int_1 = 80;",
              "    //Если рейнджер больше воин",
              "    else temp_int_1 = 100;",
              "}",
              "else if(temp_str == 'Warrior' || temp_str == 'EliteWarrior' || temp_str == 'Militiaman1' || temp_str == 'Militiaman2' || temp_str == 'Militiaman3' || temp_str == 'RangerExplorer' || temp_str == 'RangerPirateExplorer') temp_int_1 = 100;",
              "else if(temp_str == 'Pirate' || temp_str == 'PirateRunner' || temp_str == 'Rebel' || temp_str == 'RangerPirate') temp_int_1 = 80;",
              "else if(temp_str == 'Transport' || temp_str == 'Liner' || temp_str == 'Diplomat' || temp_str == 'Smuggler') temp_int_1 = 40;",
              "else if(temp_str == 'Merc' || temp_str == 'Freelancer') temp_int_1 = 90;",
              "else if(temp_str == 'RedLeader' || temp_str == 'AtlantLeader' || temp_str=='FeiLeader') temp_int_1 = 125;",
              "",
              "//Определяем штраф к шансу напугать цель в зависимости от расы пилота-цели",
              "tflt1 = 1.0; //Коэффициент продолжительности испуга в зависимости от расы цели",
              "if(ShipPilotRace(temp_dword_2) == 0)",
              "{",
              "    temp_int_1 = (temp_int_1 * 14) / 10;",
              "    tflt1 = 2.0;",
              "}",
              "else if(ShipPilotRace(temp_dword_2) == 1)",
              "{",
              "    temp_int_1 = (temp_int_1 * 6) / 10;",
              "    tflt1 = 1.5;",
              "}",
              "else if(ShipPilotRace(temp_dword_2) == 3)",
              "{",
              "    temp_int_1 = (temp_int_1 * 6) / 10;",
              "    tflt1 = 0.8;",
              "}",
              "else if(ShipPilotRace(temp_dword_2) == 4)",
              "{",
              "    temp_int_1 = (temp_int_1 * 9) / 10;",
              "    tflt1 = 0.5;",
              "}",
              "",
              "//Формула для определения точного шанса напугать цель",
              "temp_int = ShipSkill(Player(), 'CharmCur') * 25 + Rnd(1, 100) - temp_int_1;",
              "//Применяем дополнительный штраф к шансу напугать цель (если цель уже была недавно напугана)",
              "if(temp_int_2 > 1) temp_int = temp_int - (temp_int * 20 * temp_int_2) / 100;",
              "//Добавляем дополнительный бонус к шансу напугать цель, если у игрока есть гипностимулятор \"Одноглазый Хамас\"",
              "if(ShipHealthFactor(Player(), 14)) temp_int = temp_int + 30;",
              "",
              "//Устрашение не подействовало на цель, выводится соответствующий ответ",
              "if(temp_int < 51)",
              "{",
              "    temp_int_1 = CT('Biomodules.8_gtu.9.FearFailed.Text_count');",
              "    temp_str = '</color>' + CT('Biomodules.8_gtu.9.FearFailed.Text_' + Rnd(1, temp_int_1));",
              "}",
              "//Устрашение подействовало на цель, выбираем варианты её поведения",
              "else",
              "{",
              "    //Обновляем таймеры инфошки испуга цели, если удалось напугать уже недавно напуганный корабль",
              "    if(~temp_int_3)",
              "    {",
              "        ShipCustomShipInfoData(temp_dword_2, temp_int_3, 2, ShipCustomShipInfoData(temp_dword_2, temp_int_3, 2) + round(tflt1 * 120));",
              "        ShipCustomShipInfoData(temp_dword_2, temp_int_3, 3, ShipCustomShipInfoData(temp_dword_2, temp_int_3, 3) + 1);",
              "        if(temp_dword_2 == Player()) ShipAddCustomShipInfo(temp_dword_2, 'bioMM_FS_Visible', CT('ShipInfo.AddInfo.CustomInfos.bioMM_FS_Visible.DescriptionPlayer'));",
              "        else ShipAddCustomShipInfo(temp_dword_2, 'bioMM_FS_Visible');",
              "    }",
              "    //Иначе добавляем инфошку испуга",
              "    else",
              "    {",
              "        ShipAddCustomShipInfo(temp_dword_2, 'bioMM_FS', 'NoShow', 0, CurTurn() + round(tflt1 * 120), 2, 0, 0, '<Name(temp_dword_2)>' + \"<br>\" + '<clr><clrEnd>' + \"<br>\");",
              "        if(temp_dword_2 == Player()) ShipAddCustomShipInfo(temp_dword_2, 'bioMM_FS_Visible', CT('ShipInfo.AddInfo.CustomInfos.bioMM_FS_Visible.DescriptionPlayer'));",
              "        else ShipAddCustomShipInfo(temp_dword_2, 'bioMM_FS_Visible');",
              "    }",
              "    temp_int_1 = CT('Biomodules.8_gtu.9.FearSuccess.Text_count');",
              "    temp_str = '</color>' + CT('Biomodules.8_gtu.9.FearSuccess.Text_' + Rnd(1, temp_int_1));",
              "    if(temp_int >= 51 && temp_int < 70) temp_int_1 = 1; //Выбираем тип поведения 1",
              "    //Цель просто сбросит имеющийся в трюме груз",
              "    else if(temp_int >= 70 && temp_int < 90)",
              "    {",
              "        temp_int_1 = 1;",
              "        for(count2 = ShipItems(temp_dword_2) - 1; count2 > 0; count2 = count2 - 1);",
              "        {",
              "            temp_dword = ShipItems(temp_dword_2, count2);",
              "            if(ItemType(temp_dword) >= t_Food && ItemType(temp_dword) <= t_Narcotics)",
              "            {",
              "                GoodsDrop(temp_dword_2, ItemType(temp_dword), (GoodsCount(temp_dword_2, ItemType(temp_dword)) * 30) / 100);",
              "            }",
              "            if(ItemType(temp_dword) == t_Protoplasm)",
              "            {",
              "                temp_int_2 = (GetNodesFromShip(temp_dword_2) * 30) / 100;",
              "                GetNodesFromShip(temp_dword_2, GetNodesFromShip(temp_dword_2) - temp_int_2);",
              "                temp_float = (Rnd(0,360) * pi) / 180.0;",
              "                DropItemInSystem(ShipStar(temp_dword_2), CreateNodes(temp_int_2, Rnd(0, 2), 1), CoordX(temp_dword_2), CoordY(temp_dword_2), CoordX(temp_dword_2) + 100.0 * sin(temp_float), CoordY(temp_dword_2) - 100.0 * cos(temp_float));",
              "            }",
              "        }",
              "    }",
              "    else if(temp_int >= 90 && temp_int < 100) temp_int_1 = 1; //Выбираем тип поведения 1",
              "    else if(temp_int >= 100) temp_int_1 = 2; //Выбираем тип поведения 2",
              "    //Цель сбросит одно своё рандомное оборудование",
              "    if(temp_int >= 90)",
              "    {",
              "        ArrayClear(temp_array);",
              "        for(count2 = ShipItems(temp_dword_2) - 1; count2 > 0; count2 = count2 - 1)",
              "        {",
              "            temp_dword = ShipItems(temp_dword_2, count2);",
              "            if(ItemType(temp_dword) > t_CustomWeapon) continue;",
              "            if(ItemInScript(temp_dword) == 1) continue;",
              "            //Кроме корпуса, установленного двигателя, установленного бака или единственного установленного орудия",
              "            if(ItemType(temp_dword) <= t_Engine)",
              "            {",
              "                if(ItemIsInUse(temp_dword)) continue;",
              "            }",
              "            if(ShipCntWeapon(temp_dword_2) <= 1)",
              "            {",
              "                if(ItemType(temp_dword) >= t_Weapon1)",
              "                {",
              "                    if(ItemIsInUse(temp_dword)) continue;",
              "                }",
              "            }",
              "            ArrayAdd(temp_array, temp_dword);",
              "        }",
              "        //Проверка на случай, если корабль летает с самым минимальным набором оборудки",
              "        if(ArrayDim(temp_array) > 1)",
              "        {",
              "            temp_dword = temp_array[Rnd(1, ArrayDim(temp_array) - 1)];",
              "            if(ItemIsInUse(temp_dword)) DropItem(temp_dword_2, ItemType(temp_dword), 1);",
              "            else DropItem(temp_dword_2, ItemType(temp_dword), 0);",
              "        }",
              "        ArrayClear(temp_array);",
              "    }",
              "    ShipCustomShipInfoTextData(temp_dword_2, temp_int_3, 1, temp_int_1);",
              "    //Вешается таймер активного испуга",
              "    ShipCustomShipInfoData(temp_dword_2, temp_int_3, 1, CurTurn() + round(tflt1 * 10));",
              "    //Испуганная цель замирает на месте (тип поведения 1)",
              "    if(temp_int_1 == 1)",
              "    {",
              "        NoTalkToShip(temp_dword_2, 1);",
              "        ShipSetBad(temp_dword_2, Player());",
              "        OrderNone(temp_dword_2);",
              "        OrderLock(temp_dword_2, 1);",
              "        temp_dword = 0;",
              "        //Снимаем наведение с орудий цели",
              "        for(count2 = 1; count2 < 6; count2 = count2 + 1)",
              "        {",
              "            temp_dword = ShipEqInSlot(temp_dword_2, t_Weapon1, count2);",
              "            if(temp_dword) WeaponTarget(temp_dword, 0);",
              "        }",
              "    }",
              "    //Испуганная цель начинает следовать за ближайшим кораблём в системе, попутно его атакуя (тип поведения 2)",
              "    if(temp_int_1==2)",
              "    {",
              "        NoTalkToShip(temp_dword_2,1);",
              "        ShipSetBad(temp_dword_2,Player());",
              "        temp_int=200000;",
              "        //Определяем ближайший к цели корабль",
              "        for(count2=0;count2<StarShips(ShipStar(temp_dword_2));count2=count2+1)",
              "        {",
              "            temp_dword=StarShips(ShipStar(temp_dword_2),count2);",
              "            if(temp_dword==temp_dword_2)continue;",
              "            if(Dist(temp_dword_2,temp_dword)<temp_int)",
              "            {",
              "                temp_dword_1=temp_dword;",
              "                temp_int=Dist(temp_dword_2,temp_dword);",
              "            }",
              "        }",
              "        ShipCustomShipInfoTextData(temp_dword_2,temp_int_3,2,Id(temp_dword_1));",
              "        temp_dword = 0;",
              "        //Наводим орудия цели на ближайший корабль/станцию, если тот находится в зоне досягаемости",
              "        for(count2 = 1; count2 < 6; count2 = count2 + 1)",
              "        {",
              "            temp_dword=ShipEqInSlot(temp_dword_2,t_Weapon1,count2);",
              "            if(temp_dword)",
              "            {",
              "                if(Dist(temp_dword_2, temp_dword_1) <= GetEquipmentStats(temp_dword, 2)) WeaponTarget(temp_dword, temp_dword_1);",
              "            }",
              "        }",
              "        OrderFollowShip(temp_dword_2,temp_dword_1,0,10);",
              "        OrderLock(temp_dword_2,1);",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  320,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  135,
          "Total.Lines":  30,
          "Code.Type":  "Turn",
          "Code":          
          [
              "temp_str = '';",
              "temp_int = 0;",
              "//Составляем список стимуляторов для вывода в диалоговое окно (эти переборы кучу раз дублируются здесь, что крайне тупо)",
              "for(i = 13; i <= 24; i = i + 1)",
              "{",
              "    if(ShipHealthFactor(Player(), i))",
              "    {",
              "        cost = GalaxyMoney(2);",
              "        cost = cost + (cost * i * 2) / 100;",
              "        if(PlayerMedPolicy()) cost = cost / 2;",
              "        temp_int = temp_int + 1;",
              "        temp_str_1 = CT('Illness.Stimulant.' + (i - 13) + '.Name');",
              "        temp_str = temp_str + '</color>' + temp_int + '. <temp_str_1>' + \"<br>\";",
              "    }",
              "}",
              "//Также добавляем в список кастомный стимулятор \"Экспирин\" из мода ShuMercs",
              "if(~ShipFindCustomShipInfoByType(Player(), 'ShuMercs_ExpirinStimulant'))",
              "{",
              "    cost = GalaxyMoney(2);",
              "    cost = cost + (cost * 25 * 2) / 100;",
              "    if(PlayerMedPolicy()) cost = cost / 2;",
              "    temp_int = temp_int + 1;",
              "    temp_str_1 = CT('ShipInfo.AddInfo.CustomInfos.ShuMercs_ExpirinStimulant.Name');",
              "    temp_str = temp_str + '</color>' + temp_int + '. <temp_str_1>' + \"<br>\";",
              "}",
              "",
              "if(!GetGameOptions('FontDialog')) DefSplt = '</color>-------------------------------------------------------------';",
              "else if(GetGameOptions('FontDialog') == 1) DefSplt = '</color>------------------------------------------';",
              "else if(GetGameOptions('FontDialog') == 2) DefSplt = '</color>-----------------------------------------';",
              "else DefSplt = '</color>-------------------------------------';"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  380,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  139,
          "Total.Lines":  56,
          "Code.Type":  "Turn",
          "Code":          
          [
              "temp_str = '';",
              "temp_int = 0;",
              "temp_int_1 = 0;",
              "temp_int_2 = 0;",
              "//Ищем всё имеющиеся у игрока стимуляторы",
              "for(i = 13; i <= 24; i = i + 1)",
              "{",
              "    if(ShipHealthFactor(Player(), i) > 0)",
              "    {",
              "        temp_int_1 = temp_int_1 + 1;",
              "        temp_int = GalaxyMoney(2);",
              "        temp_int = temp_int + (temp_int * i * 2) / 100;",
              "        if(PlayerMedPolicy()) temp_int = temp_int / 2;",
              "        temp_int_2 = temp_int_2 + temp_int;",
              "        temp_str = CT('Illness.Stimulant.' + (i - 13) + '.Name');",
              "",
              "        temp_str_1 = \"Удалить <temp_str> (<temp_int> cr).\";",
              "        if(ShipMoney(Player()) < temp_int)",
              "        {",
              "            temp_str_1 = DeleteTags(temp_str_1);",
              "            AddDialogBlock(temp_str_1, 1);",
              "        }",
              "        InjectAnswer('dialog_mc_2_2', temp_str_1, i);",
              "    }",
              "}",
              "//Также добавляем в список на удаление кастомный стимулятор \"Экспирин\" из мода ShuMercs",
              "if(~ShipFindCustomShipInfoByType(Player(), 'ShuMercs_ExpirinStimulant'))",
              "{",
              "    temp_int_1 = temp_int_1 + 1;",
              "    temp_int = GalaxyMoney(2);",
              "    temp_int = temp_int + (temp_int * 25 * 2) / 100;",
              "    if(PlayerMedPolicy()) temp_int = temp_int / 2;",
              "    temp_int_2 = temp_int_2 + temp_int;",
              "    temp_str = CT('ShipInfo.AddInfo.CustomInfos.ShuMercs_ExpirinStimulant.Name');",
              "",
              "    temp_str_1 = \"Удалить <temp_str> (<temp_int> cr).\";",
              "    if(ShipMoney(Player()) < temp_int)",
              "    {",
              "        temp_str_1 = DeleteTags(temp_str_1);",
              "        AddDialogBlock(temp_str_1, 1);",
              "    }",
              "    InjectAnswer('dialog_mc_2_2', temp_str_1, 25);",
              "}",
              "",
              "temp_int_2 = round(1.30 * temp_int_2);",
              "if(temp_int_1)",
              "{",
              "    temp_str_1 = \"Провести полную очистку организма (<temp_int_2> cr).\";",
              "    if(ShipMoney(Player()) < temp_int_2)",
              "    {",
              "        temp_str_1 = DeleteTags(temp_str_1);",
              "        AddDialogBlock(temp_str_1, 1);",
              "    }",
              "    else InjectAnswer('dialog_mc_2_3', temp_str_1, temp_int_2);",
              "}",
              "InjectAnswer('dialog_mc_exit', \"Отказаться от очистки\", 1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  340,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  145,
          "Total.Lines":  14,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipMoney(Player(), ShipMoney(Player()) - GAnswerData);",
              "Sound('Sound.Sell');",
              "PlayerImmunity(100);",
              "for(i = 13; i < 24; i = i + 1)",
              "{",
              "    if(ShipHealthFactor(Player(), i)) ShipHealthFactor(Player(), i, 0);",
              "}",
              "//Удаляем также кастомный стимулятор \"Экспирин\" из мода ShuMercs",
              "if(~ShipFindCustomShipInfoByType(Player(), 'ShuMercs_ExpirinStimulant'))",
              "{",
              "    //Откатываем штраф к bonStimCapacity для игрока",
              "    ShipSpecialBonuses(Player(), bonStimCapacity, ShipSpecialBonuses(Player(), bonStimCapacity) + ShipCustomShipInfoTextData(Player(), 'ShuMercs_ExpirinStimulant', 2));",
              "    ShipDeleteCustomShipInfo(Player(), 'ShuMercs_ExpirinStimulant');",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  130,
          "#":  147,
          "Total.Lines":  8,
          "Code.Type":  "Turn",
          "Code":          
          [
              "vaccinations_available = 3;",
              "if(~ShipFindCustomShipInfoByType(Player(), 'Vaccination'))",
              "{",
              "    for(i = 1; i <= 3; i = i + 1)",
              "    {",
              "        if(ShipCustomShipInfoData(Player(), 'Vaccination', i)) vaccinations_available = vaccinations_available - 1;",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  131,
          "#":  151,
          "Total.Lines":  19,
          "Code.Type":  "Turn",
          "Code":          
          [
              "temp_int = ShipCustomShipInfoTextData(Player(), 'Vaccination', 1);",
              "temp_int_1 = ShipCustomShipInfoTextData(Player(), 'Vaccination', 2);",
              "temp_int_2 = ShipCustomShipInfoTextData(Player(), 'Vaccination', 3);",
              "for(i = 1; i <= 11; i = i + 1) //Разделы болезней в Lang идут с дебильным смещением в -1 относительно их номеров в коде, поэтому приходится его постоянно учитывать",
              "{",
              "    if(i >= 5 && i <= 7) continue; //Нельзя привиться от лучевой болезни, ослепления, наркозависимости, вихревой контузии и мышечного растяжения",
              "    if(i == temp_int || i == temp_int_1 || i == temp_int_2) continue;",
              "    cost = GalaxyMoney(4);",
              "    cost = cost + (cost * i * 3) / 100;",
              "    if(PlayerMedPolicy()) cost = cost / 2;",
              "    temp_str = CT('Illness.Illness.' + i + '.Name');",
              "    if(ShipMoney(Player()) < cost)",
              "    {",
              "        AddDialogBlock(\"Прививка от \" + ' ' + temp_str + \" (\" + cost + \" cr).\", 1);",
              "        InjectAnswer('Vaccination_1', \"Прививка от \" + ' ' + temp_str + \" (\" + cost + \" cr).\", i);",
              "    }",
              "    if(ShipMoney(Player()) >= cost) InjectAnswer('Vaccination_1', \"Прививка от <temp_str> (<cost> cr).\", i);",
              "}",
              "InjectAnswer('Vaccination_exit', \"Отказаться от прививки\", 1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  133,
          "#":  154,
          "Total.Lines":  75,
          "Code.Type":  "Turn",
          "Code":          
          [
              "temp_str = '<color=255,240,100>' + \"<br>\" + CT('Illness.Illness.' + GAnswerData + '.Name') + '</color>';",
              "cost = GalaxyMoney(4);",
              "cost = cost + (cost * GAnswerData * 3) / 100;",
              "if(PlayerMedPolicy()) cost = cost / 2;",
              "ShipMoney(Player(), ShipMoney(Player()) - cost);",
              "Sound('Sound.Sell');",
              "PlayerImmunity(PlayerImmunity() - (PlayerImmunity() * Rnd(15, 25)) / 100);",
              "",
              "if(~ShipFindCustomShipInfoByType(Player(), 'Vaccination'))",
              "{",
              "    for(i = 2; i < 4; i = i + 1)",
              "    {",
              "        if(!ShipCustomShipInfoData(Player(), 'Vaccination', i))",
              "        {",
              "            ShipCustomShipInfoTextData(Player(), 'Vaccination', i, GAnswerData);",
              "            ShipCustomShipInfoData(Player(), 'Vaccination', i, Rnd(350, 370));",
              "            break;",
              "        }",
              "    }",
              "    //Определяем наличие на корабле биомира",
              "    if(ArtefactTypeInUse(Player(), t_ArtBio))",
              "    {",
              "        temp_str = CT('FormInfo.br') + '-----------------------' + temp_str;",
              "        temp_str = temp_str + CT('FormInfo.br') + \"До: <color=255,240,100>\" + GameDateTxtByTurn(CurTurn() + ShipCustomShipInfoData(Player(), 'Vaccination', i)) + '</color>';",
              "    }",
              "    else",
              "    {",
              "        if(ArtefactTypeInUse(Player(), t_ArtArtefactor))",
              "        {",
              "            for(j = 0; j < ShipArts(Player()); j = j + 1)",
              "            {",
              "                temp_dword_1 = ShipArts(Player(), j);",
              "                if(ItemType(temp_dword_1) == t_ArtBio)",
              "                {",
              "                    if(ItemDurability(temp_dword_1))",
              "                    {",
              "                        temp_str = CT('FormInfo.br') + '-----------------------' + temp_str;",
              "                        temp_str = temp_str + CT('FormInfo.br') + \"До: <color=255,240,100>\" + GameDateTxtByTurn(CurTurn() + ShipCustomShipInfoData(Player(), 'Vaccination', i)) + '</color>';",
              "                        break;",
              "                    }",
              "                }",
              "            }",
              "        }",
              "    }",
              "    ShipCustomShipInfoDescription(Player(), 'Vaccination', ShipCustomShipInfoDescription(Player(), 'Vaccination') + temp_str);",
              "}",
              "else",
              "{",
              "    dword cur_info = ShipAddCustomShipInfo(Player(), 'Vaccination', '', Rnd(350, 370), 0, 0, GAnswerData, 0, 0);",
              "    //Определяем наличие на корабле биомира",
              "    if(ArtefactTypeInUse(Player(), t_ArtBio))",
              "    {",
              "        temp_str = temp_str + CT('FormInfo.br') + \"До: <color=255,240,100>\" + GameDateTxtByTurn(CurTurn() + ShipCustomShipInfoData(0, cur_info, 1)) + '</color>';",
              "    }",
              "    else",
              "    {",
              "        if(ArtefactTypeInUse(Player(), t_ArtArtefactor))",
              "        {",
              "            for(j = 0; j < ShipArts(Player()); j = j + 1)",
              "            {",
              "                temp_dword_1 = ShipArts(Player(), j);",
              "                if(ItemType(temp_dword_1) == t_ArtBio)",
              "                {",
              "                    if(ItemDurability(temp_dword_1))",
              "                    {",
              "                        temp_str = temp_str + CT('FormInfo.br') + \"До: <color=255,240,100>\" + GameDateTxtByTurn(CurTurn() + ShipCustomShipInfoData(0, cur_info, 1)) + '</color>';",
              "                        break;",
              "                    }",
              "                }",
              "            }",
              "        }",
              "    }",
              "    ShipCustomShipInfoDescription(0, cur_info, CT('ShipInfo.AddInfo.CustomInfos.Vaccination.Description') + temp_str);",
              "}",
              "temp_str = CT('Illness.Illness.' + GAnswerData + '.Name');"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  150,
          "#":  155,
          "Total.Lines":  15,
          "Code.Type":  "Turn",
          "Code":          
          [
              "temp_int = ShipCustomShipInfoTextData(Player(), 'Vaccination', 1);",
              "temp_int_1 = ShipCustomShipInfoTextData(Player(), 'Vaccination', 2);",
              "temp_int_2 = ShipCustomShipInfoTextData(Player(), 'Vaccination', 3);",
              "temp_str = '';",
              "temp_dword = 0;",
              "for(i = 1; i <= 11; i = i + 1) //Разделы болезней в Lang идут с дебильным смещением в -1 относительно их номеров в коде, поэтому приходится его постоянно учитывать",
              "{",
              "    if(i >= 5 && i <= 7) continue; //Нельзя привиться от лучевой болезни, ослепления, наркозависимости, вихревой контузии и мышечного растяжения",
              "    if(i == temp_int || i == temp_int_1 || i == temp_int_2) continue;",
              "    cost = GalaxyMoney(4);",
              "    cost = cost + (cost * i * 3) / 100;",
              "    if(PlayerMedPolicy()) cost = cost / 2;",
              "    temp_dword = temp_dword + 1;",
              "    temp_str = temp_str + '<clrEnd>' + temp_dword + '. <clr>' + CT('Illness.Illness.' + i + '.Name') + '<clrEnd>' + \"<br>\";",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  560,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  157,
          "Total.Lines":  28,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Проверка на конфликтующие биомодули (в настоящий момент только Иммунокорректор и Игла)",
              "temp_int_1=0;",
              "temp_int_3=0;",
              "temp_str_1=CT(biomm_PB[GAnswerData]+DeleteTags('.Name'));",
              "",
              "if((temp_str_1==CT('Biomodules.5_gtu.6.Name') && immun_array[29]==2) || (temp_str_1==CT('Biomodules.5_gtu.11.Name') && immun_array[29]==1))temp_int_1=1;",
              "if(temp_int_3==1 && temp_int_1==0)",
              "{",
              "    temp_str=\"</color>Так у тебя же уже установлен <temp_str_1>! Извиняй, <Player>, но наши хирурги знают лишь одно место куда можно подключить биомодуль и оно уже занято.\";",
              "    temp_str_2=\"Ну тогда в другой раз\";",
              "}",
              "if(temp_int_3==0 && temp_int_1==0)",
              "{",
              "    temp_str=\"</color>Нет. Так у нас ничего не выйдет. Установить сюда еще один биомодуль просто физически невозможно. Я, конечно, могу понять желание закибернетизироваться по полной, но смотри аккуратнее - того и гляди доминатором станешь. Давай мы тебе лучше что-нибудь вырежем? Хирурги у нас отменные... когда трезвые.\";",
              "    temp_str_2=\"Пожалуй, в другой раз\";",
              "}",
              "if(temp_int_1==1 && temp_str_1==CT('Biomodules.5_gtu.6.Name'))",
              "{",
              "    temp_str=CT('Biomodules.5_gtu.11.Name');",
              "    temp_str=\"</color>Перед установкой давай сверим таблицу конфликтов. Так... биомодуль <temp_str_1>... конфликтует с биомодулем <temp_str> и вызывает необратимую реакцию в области... ну дальше нас не интересует. Выбери другой имплант, мёртвые клиенты плохая реклама.\";",
              "    temp_str_2=\"Ну тогда в другой раз\";",
              "}",
              "if(temp_int_1==1 && temp_str_1==CT('Biomodules.5_gtu.11.Name'))",
              "{",
              "    temp_str=CT('Biomodules.5_gtu.6.Name');",
              "    temp_str=\"</color>Перед установкой давай сверим таблицу конфликтов. Так... биомодуль <temp_str_1>... конфликтует с биомодулем <temp_str> и вызывает необратимую реакцию в области... ну дальше нас не интересует. Выбери другой имплант, мёртвые клиенты плохая реклама.\";",
              "    temp_str_2=\"Ну тогда в другой раз\";",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  230,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  167,
          "Total.Lines":  2,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "//Игрок сменил расу на ПБ (дублируем здесь этот код, чтобы игрок не мог зайти в меню установки биомодулей в обход этой проверки)",
              "PlayerChangeRaceCheck();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  230,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  170,
          "Total.Lines":  32,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "//immun_array[0] - immun_array[24] - болезни и стимуляторы (длительность)",
              "//immun_array[29] - тип установленного биомодуля",
              "//Код для биомодуля Иммунокорректор (если установлен, то immun_array[29] == 1)",
              "if(immun_array[29] == 1)",
              "{",
              "    for(i = 0; i <= 24; i = i + 1)",
              "    {",
              "        //Выставляем новый срок болезни/стимулятора, если таковые у игрока имеются",
              "        if(ShipHealthFactor(Player(), i) && !immun_array[i])",
              "        {",
              "            immun_array[i] = ShipHealthFactor(Player(), i) / 2;",
              "            ShipHealthFactor(Player(), i, immun_array[i]);",
              "        }",
              "        //По истечении болезни/стимулятора обнуляем элемент",
              "        if(!ShipHealthFactor(Player(), i) && immun_array[i]) immun_array[i] = 0;",
              "    }",
              "}",
              "//Код для биомодуля Игла (если установлен, то immun_array[29] == 2)",
              "if(immun_array[29] == 2)",
              "{",
              "    for(i = 0; i <= 24; i = i + 1)",
              "    {",
              "        //Выставляем новый срок болезни/стимулятора, если таковые у игрока имеются",
              "        if(ShipHealthFactor(Player(), i) && !immun_array[i])",
              "        {",
              "            immun_array[i] = ShipHealthFactor(Player(), i);",
              "            ShipHealthFactor(Player(), i, immun_array[i] * 2);",
              "        }",
              "        //По истечении болезни/стимулятора обнуляем элемент",
              "        if(!ShipHealthFactor(Player(), i) && immun_array[i]) immun_array[i] = 0;",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  620,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  172,
          "Total.Lines":  2,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "temp_dword_2 = GetTalkShip();",
              "temp_str = ShipType(temp_dword_2);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  620,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  174,
          "Total.Lines":  19,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "//Диалог с попыткой применить \"Вспышку\" или \"Фобос\" на игрока",
              "temp_dword_2 = GetTalkShip();",
              "",
              "if(GExpImplantsDialog == 1)",
              "{",
              "    temp_int_1 = ShipFindCustomShipInfoByType(temp_dword_2, 'bioMM_FL_NPC');",
              "    temp_str = '</color>' + ShipCustomShipInfoTextData(temp_dword_2, temp_int_1, 1);",
              "    temp_str_1 = '</color>' + ShipCustomShipInfoTextData(temp_dword_2, temp_int_1, 2);",
              "    AddDialogOverride('BlindOnPlayer', 125000); //Так много на случай, если у скриптовых пиратов окажутся свои оверрайды",
              "}",
              "else if(GExpImplantsDialog == 2)",
              "{",
              "    temp_int_1 = ShipFindCustomShipInfoByType(temp_dword_2, 'bioMM_FS_NPC');",
              "    temp_str = '</color>' + ShipCustomShipInfoTextData(temp_dword_2, temp_int_1, 1);",
              "    temp_str_1 = '</color>' + ShipCustomShipInfoTextData(temp_dword_2, temp_int_1, 2);",
              "    AddDialogOverride('FearOnPlayer', 125000); //Так много на случай, если у скриптовых пиратов окажутся свои оверрайды",
              "}",
              "",
              "GExpImplantsDialog = 0;"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  750,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  178,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "SkipGreeting();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  750,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  180,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "SkipGreeting();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  120,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  199,
          "Total.Lines":  59,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Ищем все новорождённые корабли в Галактике и начинаем их подробный перебор",
              "temp_int = BuildListOfNewShips(temp_array, lastShipId, 2+4+8+16, 1+2+4+8+16+128, 1, ',SubFactionFixedStanding,SubFactionPlayerMercsFixedStanding', ',EliteWarrior,Militiaman1,Militiaman2,Militiaman3,Merc,Freelancer,Smuggler,RangerPirate,FemRanger,Rebel,PirateRunner,RedLeader,AtlantLeader,FeiLeader,PlayerMerc');",
              "",
              "if(temp_int) //Если был обнаружен хотя бы один новый корабль, подходящий по заданным фильтрам",
              "{",
              "    for(i = 0; i < ArrayDim(temp_array); i = i + 1)",
              "    {",
              "        temp_int = 0;",
              "        temp_dword = temp_array[i];",
              "        //if(ShipInScript(temp_dword, 0)) continue; //Исключаем скриптовые корабли, не считая корабли с OrderLock",
              "        //Определяем шанс в зависимости от типа корабля",
              "        temp_str = ShipType(temp_dword);",
              "        temp_int_2 = ShipTypeN(temp_dword);",
              "        if(temp_int_2 == t_Ranger) //Рейнджеры и изменники",
              "        {",
              "            if(temp_str == 'RedLeader' || temp_str == 'AtlantLeader' || temp_str == 'FeiLeader' || temp_str == 'PlayerMerc') temp_int = ImplantChanceArray[8];",
              "            else if(temp_str != 'FemRanger') temp_int = ImplantChanceArray[0];",
              "            else temp_int = ImplantChanceArray[1]; //Спецагенты",
              "            temp_str = 'Ranger';",
              "        }",
              "        else if(temp_int_2 == t_Pirate)",
              "        {",
              "            temp_int = ImplantChanceArray[2];",
              "            temp_str = 'Pirate';",
              "        }",
              "        else if(temp_int_2 == t_Warrior)",
              "        {",
              "            temp_int = ImplantChanceArray[3];",
              "            temp_str = 'Warrior';",
              "        }",
              "        else if(temp_int_2 == t_Transport)",
              "        {",
              "            if(temp_str == 'Transport')",
              "            {",
              "                temp_int = ImplantChanceArray[4];",
              "                temp_str = 'Transport';",
              "            }",
              "            else if(temp_str == 'Smuggler')",
              "            {",
              "                temp_int = ImplantChanceArray[5];",
              "                temp_str = 'Transport';",
              "            }",
              "            else if(temp_str == 'Liner')",
              "            {",
              "                temp_int = ImplantChanceArray[6];",
              "                temp_str = 'Liner';",
              "            }",
              "            else if(temp_str == 'Diplomat')",
              "            {",
              "                temp_int = ImplantChanceArray[7];",
              "                temp_str = 'Diplomat';",
              "            }",
              "        }",
              "        //Бросок на шанс",
              "        if(Rnd(1, 100) > temp_int) continue;",
              "        AddImplantsToShip(temp_dword, temp_str, ShipPilotRace(temp_dword));",
              "    }",
              "}",
              "lastShipId = GalaxyShipId();"          
          ]        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "InitPlanet",
          "Pos.x":  -30,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  2,
          "Race":  62,
          "Owner":  62,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  -30,
          "Pos.y":  100,
          "Parent":  -1,
          "#":  0,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "InitStar",
          "Pos.x":  -30,
          "Pos.y":  130,
          "Parent":  -1,
          "#":  1,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "Statements":      
      [
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  150,
          "Pos.y":  260,
          "Parent":  -1,
          "#":  6,
          "Total.Lines":  1,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "GetShipRuins(Player())"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  210,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  7,
          "Total.Lines":  1,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "ShipType(GetShipRuins(Player())) == 'MC'"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  210,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  50,
          "Total.Lines":  1,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "ShipType(GetShipRuins(Player())) == 'PB'"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  420,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  68,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!StarOwner(ShipStar(Player()))"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  380,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  69,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "StarOwner(ShipStar(Player())) == 2"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  580,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  112,
          "Total.Lines":  1,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "GetTalkShip()"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  600,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  113,
          "Total.Lines":  1,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "!TalkByAI()"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  640,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  114,
          "Total.Lines":  3,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "ShipTypeN(temp_dword_2) < t_Tranclucator &&",
              "ShipOwner(temp_dword_2) != Kling &&",
              "ShipOwner(temp_dword_2) != None"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  660,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  115,
          "Total.Lines":  1,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "add_dialog[1] >= 1 && add_dialog_cd[1] < CurTurn()"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  660,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  116,
          "Total.Lines":  1,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "add_dialog[2] >= 1 && add_dialog_cd[2] < CurTurn()"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  290,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  136,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!temp_int"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  340,
          "Pos.y":  350,
          "Parent":  -1,
          "#":  137,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "temp_int"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  380,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  142,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!temp_int"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  380,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  143,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "temp_int"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  147,
          "#":  148,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!vaccinations_available"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  -20,
          "Pos.y":  20,
          "Parent":  147,
          "#":  150,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "vaccinations_available"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  450,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  159,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "var_dialog"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  430,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  161,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!var_dialog"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  650,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  162,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!var_dialog"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  670,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  163,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "var_dialog"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  80,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  169,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!ShipIsTakeoff(Player())"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  600,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  173,
          "Total.Lines":  1,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "GExpImplantsDialog"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  120,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  198,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GalaxyShipId() > lastShipId"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  290,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  207,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "1"          
          ]        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "PlayerState",
          "Pos.x":  -30,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  4,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "[t_OnEnteringForm,t_OnStep|0]\r\nPlayerChangeRaceCheck();",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "temp_int",
          "Pos.x":  160,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  10,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_int_1",
          "Pos.x":  160,
          "Pos.y":  50,
          "Parent":  -1,
          "#":  11,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_dword",
          "Pos.x":  60,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  12,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_dword_1",
          "Pos.x":  60,
          "Pos.y":  50,
          "Parent":  -1,
          "#":  13,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_str",
          "Pos.x":  60,
          "Pos.y":  -50,
          "Parent":  -1,
          "#":  14,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_str_1",
          "Pos.x":  60,
          "Pos.y":  -30,
          "Parent":  -1,
          "#":  15,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_stama",
          "Pos.x":  160,
          "Pos.y":  -50,
          "Parent":  -1,
          "#":  16,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "stama_count",
          "Pos.x":  410,
          "Pos.y":  70,
          "Parent":  -1,
          "#":  17,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  true        
        },
        {
          "Type":  "TVar",
          "Name":  "new_module",
          "Pos.x":  60,
          "Pos.y":  -90,
          "Parent":  -1,
          "#":  18,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_array",
          "Pos.x":  60,
          "Pos.y":  -130,
          "Parent":  -1,
          "#":  20,
          "Var.Type":  "Unknown",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_array_2",
          "Pos.x":  60,
          "Pos.y":  -110,
          "Parent":  -1,
          "#":  21,
          "Var.Type":  "Unknown",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_int_2",
          "Pos.x":  160,
          "Pos.y":  70,
          "Parent":  -1,
          "#":  23,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "free_brain",
          "Pos.x":  60,
          "Pos.y":  -190,
          "Parent":  -1,
          "#":  24,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "free_eye",
          "Pos.x":  60,
          "Pos.y":  -150,
          "Parent":  -1,
          "#":  25,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "free_hand",
          "Pos.x":  60,
          "Pos.y":  -170,
          "Parent":  -1,
          "#":  26,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_str_2",
          "Pos.x":  60,
          "Pos.y":  -10,
          "Parent":  -1,
          "#":  33,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "broot",
          "Pos.x":  -30,
          "Pos.y":  -70,
          "Parent":  -1,
          "#":  35,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  true        
        },
        {
          "Type":  "TVar",
          "Name":  "broot_data",
          "Pos.x":  -30,
          "Pos.y":  -90,
          "Parent":  -1,
          "#":  36,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "king_will",
          "Pos.x":  160,
          "Pos.y":  -70,
          "Parent":  -1,
          "#":  37,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  true        
        },
        {
          "Type":  "TVar",
          "Name":  "open_hole",
          "Pos.x":  160,
          "Pos.y":  -10,
          "Parent":  -1,
          "#":  38,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "open_hole_star",
          "Pos.x":  160,
          "Pos.y":  -110,
          "Parent":  -1,
          "#":  39,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "open_hole_count",
          "Pos.x":  160,
          "Pos.y":  -130,
          "Parent":  -1,
          "#":  40,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "open_hole_data",
          "Pos.x":  160,
          "Pos.y":  -150,
          "Parent":  -1,
          "#":  41,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "immun_conflict",
          "Pos.x":  160,
          "Pos.y":  -170,
          "Parent":  -1,
          "#":  42,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cost",
          "Pos.x":  -30,
          "Pos.y":  50,
          "Parent":  -1,
          "#":  43,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "immun_array",
          "Pos.x":  160,
          "Pos.y":  -190,
          "Parent":  -1,
          "#":  44,
          "Var.Type":  "Array",
          "Init":  "30",
          "Global":  true        
        },
        {
          "Type":  "TVar",
          "Name":  "CurrentPlayerRace_Global",
          "Pos.x":  -120,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  51,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  true        
        },
        {
          "Type":  "TVar",
          "Name":  "count2",
          "Pos.x":  -30,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  52,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "biomm_MC",
          "Pos.x":  -30,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  53,
          "Var.Type":  "Unknown",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "biomm_PB",
          "Pos.x":  -30,
          "Pos.y":  -10,
          "Parent":  -1,
          "#":  54,
          "Var.Type":  "Unknown",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "new_module_pb",
          "Pos.x":  60,
          "Pos.y":  -70,
          "Parent":  -1,
          "#":  66,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "add_dialog",
          "Pos.x":  -30,
          "Pos.y":  -130,
          "Parent":  -1,
          "#":  95,
          "Var.Type":  "Unknown",
          "Init":  "",
          "Global":  true        
        },
        {
          "Type":  "TVar",
          "Name":  "biomm_cost",
          "Pos.x":  -30,
          "Pos.y":  -30,
          "Parent":  -1,
          "#":  111,
          "Var.Type":  "Unknown",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "add_dialog_cd",
          "Pos.x":  -30,
          "Pos.y":  -150,
          "Parent":  -1,
          "#":  127,
          "Var.Type":  "Unknown",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_int_3",
          "Pos.x":  160,
          "Pos.y":  90,
          "Parent":  -1,
          "#":  156,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "var_dialog",
          "Pos.x":  -30,
          "Pos.y":  -170,
          "Parent":  -1,
          "#":  158,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_float",
          "Pos.x":  -120,
          "Pos.y":  -170,
          "Parent":  -1,
          "#":  165,
          "Var.Type":  "Float",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ArrayForBMActcode",
          "Pos.x":  -120,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  166,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  true        
        },
        {
          "Type":  "TVar",
          "Name":  "DefSplt",
          "Pos.x":  60,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  168,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_dword_2",
          "Pos.x":  60,
          "Pos.y":  70,
          "Parent":  -1,
          "#":  171,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GExpImplantsDialog",
          "Pos.x":  660,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  175,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  true        
        },
        {
          "Type":  "TVar",
          "Name":  "RangerImps",
          "Pos.x":  60,
          "Pos.y":  90,
          "Parent":  -1,
          "#":  184,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "WarriorImps",
          "Pos.x":  60,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  185,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "PirateImps",
          "Pos.x":  60,
          "Pos.y":  130,
          "Parent":  -1,
          "#":  186,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "TransportImps",
          "Pos.x":  60,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  187,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "LinerImps",
          "Pos.x":  60,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  188,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "DiplomatImps",
          "Pos.x":  60,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  189,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "SpecArrsUpdate",
          "Pos.x":  60,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  190,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "i",
          "Pos.x":  -30,
          "Pos.y":  70,
          "Parent":  -1,
          "#":  191,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_int_4",
          "Pos.x":  160,
          "Pos.y":  110,
          "Parent":  -1,
          "#":  192,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_int_5",
          "Pos.x":  160,
          "Pos.y":  130,
          "Parent":  -1,
          "#":  193,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "j",
          "Pos.x":  0,
          "Pos.y":  70,
          "Parent":  -1,
          "#":  194,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_str_3",
          "Pos.x":  60,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  195,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "lastShipId",
          "Pos.x":  60,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  196,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "k",
          "Pos.x":  0,
          "Pos.y":  90,
          "Parent":  -1,
          "#":  197,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ImplantChanceArray",
          "Pos.x":  -120,
          "Pos.y":  360,
          "Parent":  -1,
          "#":  200,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "infos",
          "Pos.x":  160,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  201,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GTL",
          "Pos.x":  160,
          "Pos.y":  10,
          "Parent":  -1,
          "#":  202,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "pir_color_chance",
          "Pos.x":  160,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  203,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "bioName",
          "Pos.x":  160,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  204,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tflt1",
          "Pos.x":  -120,
          "Pos.y":  -150,
          "Parent":  -1,
          "#":  205,
          "Var.Type":  "Float",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GlobalImplantsEnduranceBonus",
          "Pos.x":  -120,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  206,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  true        
        },
        {
          "Type":  "TVar",
          "Name":  "vaccinations_available",
          "Pos.x":  110,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  208,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  3,
      "End":  4,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  3,
      "End":  2,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  2,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  0,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  6,
      "End":  7,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  7,
      "End":  8,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  30,
      "End":  29,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  31,
      "End":  32,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  47,
      "End":  48,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  6,
      "End":  50,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  55,
      "End":  56,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  56,
      "End":  57,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  57,
      "End":  58,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  59,
      "End":  63,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  63,
      "End":  64,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  60,
      "End":  61,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  61,
      "End":  62,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  50,
      "End":  65,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  9,
      "End":  68,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  9,
      "End":  69,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  68,
      "End":  67,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  69,
      "End":  70,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  67,
      "End":  71,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  70,
      "End":  71,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  27,
      "End":  19,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  19,
      "End":  73,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  73,
      "End":  74,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  75,
      "End":  30,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  29,
      "End":  77,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  79,
      "End":  80,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  76,
      "End":  81,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  81,
      "End":  82,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  82,
      "End":  83,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  32,
      "End":  84,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  72,
      "End":  85,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  85,
      "End":  86,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  86,
      "End":  87,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  87,
      "End":  88,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  88,
      "End":  89,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  89,
      "End":  90,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  28,
      "End":  31,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  91,
      "End":  92,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  92,
      "End":  93,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  93,
      "End":  94,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  96,
      "End":  99,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  99,
      "End":  100,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  101,
      "End":  102,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  64,
      "End":  103,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  105,
      "End":  106,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  104,
      "End":  107,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  107,
      "End":  105,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  62,
      "End":  108,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  109,
      "End":  110,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  112,
      "End":  113,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  114,
      "End":  115,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  114,
      "End":  116,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  116,
      "End":  118,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  115,
      "End":  117,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  122,
      "End":  124,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  121,
      "End":  123,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  120,
      "End":  125,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  125,
      "End":  122,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  119,
      "End":  126,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  126,
      "End":  121,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  45,
      "End":  135,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  135,
      "End":  137,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  135,
      "End":  136,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  136,
      "End":  128,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  128,
      "End":  138,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  137,
      "End":  46,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  46,
      "End":  139,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  140,
      "End":  47,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  48,
      "End":  142,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  48,
      "End":  143,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  49,
      "End":  138,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  141,
      "End":  145,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  145,
      "End":  129,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  129,
      "End":  146,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  130,
      "End":  147,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  148,
      "End":  132,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  132,
      "End":  149,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  147,
      "End":  150,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  147,
      "End":  148,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  134,
      "End":  149,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  152,
      "End":  134,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  131,
      "End":  151,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  153,
      "End":  154,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  154,
      "End":  133,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  133,
      "End":  149,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  150,
      "End":  155,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  155,
      "End":  131,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  97,
      "End":  157,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  157,
      "End":  101,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  144,
      "End":  49,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  78,
      "End":  161,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  161,
      "End":  79,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  160,
      "End":  80,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  78,
      "End":  159,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  159,
      "End":  160,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  98,
      "End":  162,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  162,
      "End":  109,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  98,
      "End":  163,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  163,
      "End":  164,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  164,
      "End":  110,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  50,
      "End":  167,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  169,
      "End":  34,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  7,
      "End":  170,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  113,
      "End":  172,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  172,
      "End":  114,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  173,
      "End":  174,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  178,
      "End":  179,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  179,
      "End":  182,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  180,
      "End":  181,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  181,
      "End":  183,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  177,
      "End":  178,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  176,
      "End":  180,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  34,
      "End":  198,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  198,
      "End":  199,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  112,
      "End":  173,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  142,
      "End":  207,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  207,
      "End":  138,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  143,
      "End":  139,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "Rect.Text":  
  [
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  283,
      "Rect.Top":  44,
      "Rect.Right":  524,
      "Rect.Bottom":  312,
      "FStyle":  1,
      "FColor":  10710818,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0,300000011920929",
      "AlignX":  0,
      "AlignY":  1,
      "AlignRect":  false,
      "Text":  "Биомодули на МЦ",
      "Color":  0,
      "Font":  "Arial",
      "FontSize":  10,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    },
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  524,
      "Rect.Top":  44,
      "Rect.Right":  745,
      "Rect.Bottom":  258,
      "FStyle":  1,
      "FColor":  10710818,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0,300000011920929",
      "AlignX":  0,
      "AlignY":  1,
      "AlignRect":  false,
      "Text":  "Биомодули на ПБ",
      "Color":  0,
      "Font":  "Arial",
      "FontSize":  10,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    },
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  60,
      "Rect.Top":  312,
      "Rect.Right":  244,
      "Rect.Bottom":  501,
      "FStyle":  1,
      "FColor":  10710818,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0,300000011920929",
      "AlignX":  0,
      "AlignY":  1,
      "AlignRect":  false,
      "Text":  "Прививки",
      "Color":  0,
      "Font":  "Arial",
      "FontSize":  10,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    },
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  244,
      "Rect.Top":  312,
      "Rect.Right":  463,
      "Rect.Bottom":  461,
      "FStyle":  1,
      "FColor":  10710818,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0,300000011920929",
      "AlignX":  0,
      "AlignY":  1,
      "AlignRect":  false,
      "Text":  "Удаление стимуляторов",
      "Color":  0,
      "Font":  "Arial",
      "FontSize":  10,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    },
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  567,
      "Rect.Top":  272,
      "Rect.Right":  878,
      "Rect.Bottom":  441,
      "FStyle":  1,
      "FColor":  10710818,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0,300000011920929",
      "AlignX":  0,
      "AlignY":  1,
      "AlignRect":  false,
      "Text":  "Диалоги для Вспышки и Фобоса",
      "Color":  0,
      "Font":  "Arial",
      "FontSize":  10,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    },
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  137,
      "Rect.Top":  227,
      "Rect.Right":  284,
      "Rect.Bottom":  312,
      "FStyle":  1,
      "FColor":  10710818,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0,300000011920929",
      "AlignX":  0,
      "AlignY":  1,
      "AlignRect":  false,
      "Text":  "Диалоги на МЦ и ПБ",
      "Color":  0,
      "Font":  "Arial",
      "FontSize":  10,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    },
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  283,
      "Rect.Top":  -219,
      "Rect.Right":  745,
      "Rect.Bottom":  45,
      "FStyle":  1,
      "FColor":  10710818,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0,300000011920929",
      "AlignX":  -1,
      "AlignY":  -1,
      "AlignRect":  false,
      "Text":  "  При добавлении новых биомодулей не забудь:\r\n  - Дополнить код установки биомодулей на МЦ (только легальные) и ПБ\r\n  - Дополнить код удаления биомодулей на МЦ и ПБ\r\n  - Дополнить акткод удаления биомодулей при смене расы и код\r\n     их удаления при смене расы в разделе \"Начало на МЦ и ПБ\"\r\n  - Все вышеперечисленное относится только к БМ с нестандартными\r\n    статами, то есть если они добавляют не только бонусы вида bonSpeed\r\n  - Дополнить список биомодулей в Lang правильно\r\n    (легальные всегда вверху списка (по нумерации), запрещённые \r\n     внизу, и обязательно измени счетчики числа БМ в конце списка ГТУ,\r\n     в который ты его добавил)\r\n  - Если биомодуль имеет особый скриптовый эффект, добавь ему\r\n    отдельную инфошку в Lang и дополни тернкод, если надо\r\n  - К особым биомодулям особая инфошка цепляется через скрипт, если \r\n    получает из Lang его особый номер из параметра Uni_code (вычисли \r\n    последний свободный номер и добавь свой)",
      "Color":  0,
      "Font":  "Arial",
      "FontSize":  10,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    },
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  -151,
      "Rect.Top":  288,
      "Rect.Right":  57,
      "Rect.Bottom":  347,
      "FStyle":  1,
      "FColor":  10710818,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0,300000011920929",
      "AlignX":  0,
      "AlignY":  1,
      "AlignRect":  false,
      "Text":  "Доп. бонус/штраф бонус к выносл.\r\nдля изменения другими модами",
      "Color":  0,
      "Font":  "Arial",
      "FontSize":  10,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    }  
  ],
  "BlockPar.EC.Total.Strings":  86,
  "BlockPar.EC":  
  [
    {
      "#":  "100",
      "String":  "Установить биомодуль"    
    },
    {
      "#":  "101",
      "String":  "Удалить "    
    },
    {
      "#":  "103",
      "String":  "<clrEnd>Описание: "    
    },
    {
      "#":  "104",
      "String":  "<clrEnd>Биомодуль: <clr>"    
    },
    {
      "#":  "111",
      "String":  " ("    
    },
    {
      "#":  "113",
      "String":  "Провести полную очистку организма (<0> cr)."    
    },
    {
      "#":  "114",
      "String":  " cr)."    
    },
    {
      "#":  "116",
      "String":  "Удалить <0> (<1> cr)."    
    },
    {
      "#":  "117",
      "String":  "Прививка от <0> (<1> cr)."    
    },
    {
      "#":  "119",
      "String":  "Прививка от "    
    },
    {
      "#":  "120",
      "String":  "Установить <0> (<1> cr)."    
    },
    {
      "#":  "121",
      "String":  "Прививки - это дело хорошее. Они дают практически полный иммунитет к определенной болезни и действуют довольно долго. Наша сеть Медицинских Центров всегда выступала за прививки, однако последнее время большую популярность обрело антипрививочное движение, поэтому нас обязали законом также рассказать о недостатках этого метода...<br>Во-первых, прививки могут способствовать ослаблению общего иммунитета, научных подтверждений тому нет, однако предупредить о такой возможности мы обязаны. Во-вторых, если ваш иммунитет недостаточно силен, то он может не справиться даже с ослабленной версией вируса, которая содержится в вакцине, в этом случае вы заболеете спустя некоторое время. Поэтому мы рекомендуем после прививки не покидать нашу базу, ну или, по крайней мере, не отлетать далеко. В-третьих, любой организм способен поддерживать производство только ограниченного количества типов антител, если их будет слишком много они могут начать воспринимать друг друга как угрозу организму и... Проще говоря мы не делаем более 3-х прививок за раз. Поверьте - это для вашего же блага.<br>Я надеюсь, для вас это все не является проблемой. Перейдем к делу. Сейчас в вашем организме содержится <0> вида антител. Это значит, что мы можем сделать вам еще <1> прививок от следующих болезней:<br><2>"    
    },
    {
      "#":  "122",
      "String":  "Так-так... Посмотрим... Нет, в вашем организме и так уже слишком много различных антител, новые прививки будут неэффективны. Прилетайте позже, когда срок действия ваших прививок истечет, а сейчас, прошу, не задерживайте очередь."    
    },
    {
      "#":  "123",
      "String":  "Так-с... Ну вот и все, биомодуль <0> успешно установлен. И совсем не больно, правда? А вы боялись. В послеоперационный период вам рекомендуется постельный режим, хотя бы в течении пяти дней и... Вы ведь не собираетесь следовать нашим рекомендациям ведь так? Все вы, рейнджеры, такие. Знаю-знаю, галактику спасать и так далее, но о вашем здоровье никто кроме вас самих позаботиться не сможет. Запомните это. Ладно уж, раз вам совсем наплевать на свое здоровье, то мы можем поставить еще один имплант, конечно если хотите, но учтите, что я вам этого не рекомендую."    
    },
    {
      "#":  "130",
      "String":  "Ну и какого клисана ты тогда меня от дел отрываешь? Не устраивают наши условия -  отправляйся к докторишкам. Мы тут с тобой нянчиться не собираемся. Нужен биомодуль - поставим, не нужен - тогда не отнимай мое время."    
    },
    {
      "#":  "133",
      "String":  "</color>Перед установкой давай сверим таблицу конфликтов. Так... биомодуль <0>... конфликтует с биомодулем <1> и вызывает необратимую реакцию в области... ну дальше нас не интересует. Выбери другой имплант, мёртвые клиенты плохая реклама."    
    },
    {
      "#":  "134",
      "String":  "Ну вот и чудненько. Как я уже сказал, наши импланты не такие дорогие, как у докторишек, кроме того, своим парням отдаем еще дешевле. Кстати, не забыл, что для своих ребят дешевле? Твой пиратский рейтинг дает право на скидку в <0>%<br>Итак, что мы имеем на сегодняшний день:<br><1>И учти - никаких сканирований мы тут не проводим. Это еще одна из причин, по которой всю ответственность ты берешь на себя. Если чувствуешь, что организм не выдерживает - не ставь биомодуль, но решение принимай сам. Мы тебе не няньки, чтобы сопли подтирать."    
    },
    {
      "#":  "136",
      "String":  "Не могу не согласиться с вашим решением. Биомодули, без сомнения, полезная штука, но вместе с тем и очень коварная. Сами можете не заметить, как потеряете часть, а то и всего себя. Великий гаальский философ и иикэ-банист Баал-Да сказал однажды: «Когда в вашей иикэ-баане вянет один из цветков, и вы его заменяете, то это все та же иикэ-баана, которая и была раньше. Потом вянет еще один цветок, вы и его меняете, потом еще один и еще. В конце концов, вы заменяете все цветки. Это по-прежнему та же самая иикэ-баана? Или уже нет?»... Понимаете насколько это глубокая мысль, и как она к вам относится? Вы меня вообще слушали? Ай, ладно, дело ваше."    
    },
    {
      "#":  "137",
      "String":  "А, ну биомодули это дело хорошее. Но учти - не самое безопасное. Впрочем, я не собираюсь тебя грузить всей этой фигней, если интересно - слетай к докторишкам, они тебе там все популярно разжуют. Мы же тут имеем дело с самодостаточными, самостоятельными и ответственными гуманоидами. Никаких гарантий, кроме подгона дешевого импланта и выполненной операции не даем. Если возникнут какие-то проблемы, то к нам никаких претензий.<br>Поскольку мы имеем доступ в такие места, о которых ты даже не подозреваешь, мы можем добывать импланты относительно дешево. В среднем мы продаем их на треть дешевле, чем в медицинских центрах. Поверь, наценка там разве что за брендовую наклейку, так что будь спокоен - весь функционал на месте. Но самое интересное - запрещенные биомодули. Ты не поверишь, сколько интересных имплантов Коалиция, в силу тех или иных причин, запрещает. В официальной продаже их не найдешь, а вот у нас они иногда попадаются. Они, как правило, намного дороже, но уж поверь, если что-то и стоит своих денег, то это они.<br>Теперь немного о плохом: аппаратура - кусок гобзавских фекалий. Даже при всем нашем профессионализме, оперировать, используя ЭТО, крайне тяжело. Осложнения после операций практически неизбежны. Из-за этого нагрузка на организм от наших биомодулей, в среднем, раза в полтора выше, чем у аналогичных установленных в медицинских центрах. Это я сразу говорю, чтобы не выслушивать потом твое нытье. Итак, если у тебя со всем этим проблем нет, тогда, как говориться, милости просим."    
    },
    {
      "#":  "138",
      "String":  "Мы рады, что вы умеете вовремя остановиться. Не стоит пренебрегать опасностью, которую могут нести в себе биомодули, несмотря на всю их несомненную полезность. Главное, не забывайте следить за своим  самочувствием и при первых же признаках осложнений, если они проявятся, как можно скорее обязательно обращайтесь к нам."    
    },
    {
      "#":  "140",
      "String":  "Ну и, наконец, вам должно быть интересно, сколько всего имплантов вы сможете установить. Видите ли, количество ограничено не только нагрузкой на организм, но и определенными физиологическими особенностями. Так, скажем, гипотетически, кому угодно возможно установить четыре бионических руки, но успешно пользоваться ими сможет только пеленг, т.к. организм представителя другой расы просто неспособен понять, как управлять двумя лишними руками, в то время как пеленгам, у которых от рождения четыре руки, особого труда это не составит. Точно также и с остальными частями тела - фэяне, благодаря фасеточному строению своего мозга могут эффективно использовать до четырех имплантов соответствующего типа, остальные расы не в состоянии скоординировать более двух, ну а гаальцы, с рождения имеют три глаза и, соответственно, могут эффективно пользоваться тремя глазными имплантами. Вот, собственно, и вся общая информация. Теперь, когда вы в полной мере понимаете риски и возможности мы можем с чистой совестью пригласить вас в операционную."    
    },
    {
      "#":  "141",
      "String":  "Ну смотри... А то ведь я могу еще что-нибудь тебе заменить. Хочешь глаза пенчекряка? А жабры жвырклаца? Не хочешь? Ну и ладно. Наслаждайся своими новыми частями тела, если все-таки надумаешь еще какую-нибудь железку поставить, то я всегда тут."    
    },
    {
      "#":  "144",
      "String":  "</color>Так у тебя же уже установлен <0>! Извиняй, <Player>, но наши хирурги знают лишь одно место куда можно подключить биомодуль и оно уже занято."    
    },
    {
      "#":  "146",
      "String":  "Вы так быстро нас покинули, а ведь мы, в качестве особой благодарности за выполненное задание хотели сделать вам особенный подарок... Но теперь уже поздно, к сожалению. Поэтому примите вместо подарка эту скромную сумму в <0> cr. Можете считать это дополнительной премией за выполнение нашего задания. Удачных вам полетов."    
    },
    {
      "#":  "147",
      "String":  "Рейнджер, ваша помощь нашей планете была оценена по достоинству и мы решили, что вы заслуживаете дополнительную премию в <0> cr. Надеемся на дальнейшее сотрудничество."    
    },
    {
      "#":  "148",
      "String":  "У главы правительства нашей планеты сегодня большой праздник - пополнение в семье и он на радостях навыписывал всем премий. И вам, за выполненное задание, в том числе. Похоже вы ему понравились... Так или иначе, поздравляю вас с дополнительным гонораром в <0> cr."    
    },
    {
      "#":  "149",
      "String":  "Благодаря хирургическому вмешательству \"Аугментационная лихорадка\" больше вам не угрожает."    
    },
    {
      "#":  "150",
      "String":  "Желаете расширить возможности собственного тела? Похвально. Многие в наше время задумываются об этом. Значительное улучшение навыков, совершенно новые возможности, а все, что требуется - заплатить деньги и полежать несколько часов в операционной. Просто сказка, но не все так просто.<br>Установка имплантатов или, как их сейчас модно называть, биомодулей - это сложная операция. Могут возникать осложнения, и я уже не говорю о той нагрузке на организм, которую оказывают биомодули сами по себе. В общем, мы настоятельно рекомендуем отнестись к решению поставить себе один из них со всей серьезностью и ответственностью.<br>Мы же здесь для того, чтобы обеспечить вас самым качественным медицинским сервисом и только проверенными лицензионными имплантатами. Да-да, несмотря на то, что находимся в системе, принадлежащей пиратскому синдикату, где найти дешевый контрафакт не составило бы труда, мы продолжаем заказывать биомодули исключительно у проверенных поставщиков, а то и у производителей напрямую. Конечно это дорого, но поверьте за надежность стоит доплатить. Если вы хотите узнать поподробнее о биомодулях, то можете прослушать наш инструктаж, если вы здесь в первый раз, то мы настоятельно рекомендуем вам это сделать."    
    },
    {
      "#":  "152",
      "String":  "Говорят, у вас тут можно разжиться биомодулями"    
    },
    {
      "#":  "153",
      "String":  "</color>Нет. Так у нас ничего не выйдет. Установить сюда еще один биомодуль просто физически невозможно. Я, конечно, могу понять желание закибернетизироваться по полной, но смотри аккуратнее - того и гляди доминатором станешь. Давай мы тебе лучше что-нибудь вырежем? Хирурги у нас отменные... когда трезвые."    
    },
    {
      "#":  "158",
      "String":  "<clrEnd>Необходимо выносливости: <clr>"    
    },
    {
      "#":  "159",
      "String":  "Брутфорс обнаружил рабочие копии антидоминаторских программ... загрузка завершена."    
    },
    {
      "#":  "160",
      "String":  "Важно понимать, что биомодули, или, если по научному, бионические модульные аугментации - это далеко не такая безопасная вещь, как может показаться на первый взгляд. Конечно, они не могут вызвать зависимость, как, например, стимуляторы, но определенную нагрузку на организм биомодули оказывают.<br>Каждый живой организм может выдержать только определенную нагрузку, если же её превысить, то начинают появляться осложнения - сильные боли, сложности в управлении бионическими протезами, иногда даже галлюцинации. Мы называем это состояние - аугментационная лихорадка. Способов лечения на данный момент не существует. Единственный путь справиться с таким состоянием - снизить нагрузку на организм, либо же повысить порог его выносливости. <br>Вам должно быть интересно, как же избежать подобных осложнений. На самом деле ничего сложного - просто будьте аккуратны и не устанавливайте себе все подряд. Помните, что выносливость организма напрямую зависит от расы. Если брать сухую статистику и абстрагироваться от случайных индивидуальных особенностей, то мы получим следующую картину: фэяне обладают самым низким уровнем выносливости среди всех рас Коалиции, гаальцы - чуть более выносливы, люди и пеленги немного выносливее гаальцев, ну и абсолютными чемпионами являются малоки."    
    },
    {
      "#":  "164",
      "String":  "<clrEnd> уже имплантирован вам. Каждый биомодуль воздействует на определённый участок в вашем организме, установка двух одинаковых биомодулей вызовет увеличенную нагрузку на этот участок. Вынужден вам отказать."    
    },
    {
      "#":  "165",
      "String":  "</color>Биомодуль <clr>"    
    },
    {
      "#":  "166",
      "String":  "<clrEnd> и при этом избежать конфликтов, не получится. В эту область уже имплантировано слишком много. Можете выбрать биомодуль для установки в другую область вашего тела, если хотите."    
    },
    {
      "#":  "167",
      "String":  "</color><br>"    
    },
    {
      "#":  "168",
      "String":  "Отказаться от очистки"    
    },
    {
      "#":  "169",
      "String":  "Благодарю, мне хватит"    
    },
    {
      "#":  "170",
      "String":  "Нет, благодарю"    
    },
    {
      "#":  "171",
      "String":  "Спасибо, мне хватит"    
    },
    {
      "#":  "172",
      "String":  "Ну тогда в другой раз"    
    },
    {
      "#":  "173",
      "String":  "Нет уж, спасибо"    
    },
    {
      "#":  "174",
      "String":  "Пожалуй, в другой раз"    
    },
    {
      "#":  "176",
      "String":  "Отлично. Один маленький укольчик... Как комарик укусит... Ну вот и всё. Теперь в ближайший год <0> вас беспокоить не будет. Хотите леденец? Нет? Ну ладно...<br>Что-нибудь ещё?"    
    },
    {
      "#":  "177",
      "String":  "До: <color=255,240,100>"    
    },
    {
      "#":  "180",
      "String":  "Надоели импланты? Возможность их <clr>удалить<clrEnd> у нас тоже есть. Причём с нехваткой конечностей никаких проблем не возникнет, все недостающие ткани мы тебе на 3D-биопринтере распечатаем. Ага, мы и такое умеем. Круто, да?<br>Кстати, ещё не забыл, что для своих ребят у нас дешевле? Твой пиратский рейтинг даёт право на скидку в <clr><0>%<clrEnd>.<br>Итак, вот что мы можем из тебя вырезать:<br><1><br><2><3><br>Ну, что удалять будем?"    
    },
    {
      "#":  "181",
      "String":  "Также мы предоставляем услуги по <clr>удалению<clrEnd> ненужных имплантов, и, несмотря на очевидную сложность подобных операций, можем гарантировать полную безопасность и постоперационный комфорт.<br>Для <clr>восстановления<clrEnd> всех недостающих тканей используются искусственно выращенные стволовые клетки, а в некоторых особо тяжёлых случаях - частичное клонирование. Можете быть абсолютно спокойны: даже если вы заменили большую часть тела кибернетикой, мы сможем собрать вас заново в максимально оригинальном виде.<br>Итак, в настоящий момент в ваше тело имплантированы следующие биомодули:<br><0><br><1><2><br>Что будем удалять?"    
    },
    {
      "#":  "183",
      "String":  "Прямо сейчас в вашем организме <clr>стимуляторов нет<clrEnd>, однако мы всё равно рады, что вы так заботитесь о своём здоровье. Продолжайте в том же духе - проживёте долгую и насыщенную жизнь."    
    },
    {
      "#":  "184",
      "String":  "Радостно, наконец, встретить сознательного гуманоида, который понимает, какой вред ему может причинить химический допинг.<br>Мы можем <clr>удалить<clrEnd> любой стимулятор из вашего организма, введя специальное вещество, которое вступит в реакцию с молекулами стимулятора, что приводит к их взаимному уничтожению. Процедура проста и абсолютно безвредна, но главный её плюс в том, что мы можем удалить только те стимуляторы, о которых вы сами попросите, не затронув при этом остальные.<br>В качестве альтернативы, мы могли бы провести <clr>комплексную очистку<clrEnd> организма от всех стимуляторов, а также прочих вредоносных веществ, бактерий и паразитов одновременно. Такая очистка не только избавит ваш организм от стимуляторов, но и позволит временно <clr>повысить общий иммунитет<clrEnd> и, как следствие, устойчивость к различным болезням. В интересах вашего здоровья, я настоятельно рекомендую обратить внимание именно на такую процедуру.<br>Согласно результатам анализа, сейчас в вашем организме содержаться следующие стимуляторы:<br><0><br><1><2><br>Также я обязан напомнить, что хотя удаление стимуляторов и остановит их пагубное воздействие на организм, для исправления уже нанесённого вреда этого будет мало."    
    },
    {
      "#":  "185",
      "String":  "<clrEnd>Однако, в вашем организме остались и другие стимуляторы:"    
    },
    {
      "#":  "186",
      "String":  "Ну вот и всё. Мы провели комплексную очистку организма от стимуляторов и всех прочих вредоносных веществ. В медицинском смысле вы чисты как младенец!<br>Данная процедура на время поможет вашему телу лучше справляться с внешними болезнями, ведь ему стало не с кем сражаться внутри самого себя.<br>Очень прошу сохранить наш труд, и впредь стараться вести исключительно здоровый образ жизни."    
    },
    {
      "#":  "187",
      "String":  "Установить"    
    },
    {
      "#":  "32",
      "String":  "Биомодуль <0> успешно удален из вашего организма. Все ткани были восстановлены, никаких следов не осталось - вы как новенький. Первое время старайтесь пить как можно больше воды и не перенапрягайте восстановленные части тела, в остальном все в порядке. Мы вполне можем провести еще одну операцию по удалению, если есть такая необходимость."    
    },
    {
      "#":  "33",
      "String":  "Желаете расширить возможности собственного тела? Похвально. Многие в наше время задумываются об этом. Значительное улучшение навыков, совершенно новые  возможности, а все, что требуется - заплатить деньги и полежать несколько часов в операционной. Просто сказка, но не все так просто.<br>Установка имплантатов или, как их сейчас модно называть, биомодулей - это сложная операция. Могут возникать осложнения, и я уже не говорю о той нагрузке на организм, которую оказывают биомодули сами по себе. В общем, мы настоятельно рекомендуем отнестись к решению поставить себе один из них со всей серьезностью и ответственностью.<br>Мы, в свою очередь, обеспечим вас самым качественным медицинским сервисом и только проверенными лицензионными имплантатами, это очень важно, поверьте, вы не хотите, чтобы дешевая рахишская подделка отказала прямо внутри вашего тела. На этом лучше не экономить. Если вы хотите узнать поподробнее о биомодулях, то можете прослушать наш инструктаж, если вы здесь в первый раз, то мы настоятельно рекомендуем вам это сделать."    
    },
    {
      "#":  "37",
      "String":  "<0>"    
    },
    {
      "#":  "39",
      "String":  "Разумеется, выносливость можно и повысить. Многие стимуляторы, а как показали последние исследования, даже некоторые болезни, способны повысить устойчивость организма к нагрузкам. Одним из лучших выборов в данном случае является Кровяной Джогар, но вообще-то любые стимуляторы укрепляющие организм, улучшающие работу мозга или повышающие силу воли так или иначе помогают бороться с нагрузками. Однако нужно понимать, что любые стимуляторы - это временный эффект. Кроме того нужно помнить о болезнях. Да, некоторые могут помочь организму справиться с нагрузкой, но подавляющее большинство только мешает. От сюда следуют два простых способа предупреждения аугментационной лихорадки - вкалывать стимуляторы и лечить болезни. Конечно, этого не всегда может быть достаточно, особенно если лихорадка все-таки началась. Тогда и остается самый последний, самый радикальный, но зато и самый надежный способ - удаление части, а то и всех биомодулей."    
    },
    {
      "#":  "41",
      "String":  "Далее"    
    },
    {
      "#":  "44",
      "String":  "Хорошо. Как я уже говорил, мы предоставляем только лицензионные биомодули, однако полностью от возможных осложнений это вас не защитит. Перед тем, как начать операцию мы проведем несколько тестов, и если они покажут, что ваш организм не справиться с нагрузкой в операции будет отказано. Тесты, разумеется, бесплатны.<br>Итак, на данный момент наша станция располагает следующими биомодулями:<br><0>Теперь мы проведем небольшое сканирование...<br><1>"    
    },
    {
      "#":  "52",
      "String":  "Мы закончили. Все в полном ажуре, швов почти не видно, биомодуль <0> полностью функционирует и готов к работе. Кстати, ты знал, что многие женщины тащатся от подобных железяк, а? Советую этим пользоваться, если понимаешь о чем я. Ну а пока ты перевариваешь данную информацию мы можем поставить тебе еще парочку имплантов, если хочешь, конечно."    
    },
    {
      "#":  "55",
      "String":  "Биомодуль <0> успешно удален, ну и ещё кое-что по мелочи. Останется небольшой шрам, но ведь это не повод для беспокойства, правда? Кроме этого - никаких последствий. Ты прям как новенький. Если есть желание еще что-то удалить, то мы можем вернуть тебя на стол, это не проблема."    
    },
    {
      "#":  "58",
      "String":  "Конец связи"    
    },
    {
      "#":  "60",
      "String":  "Сделать прививку"    
    },
    {
      "#":  "61",
      "String":  "Удаление вредных веществ из организма"    
    },
    {
      "#":  "62",
      "String":  "Меня интересуют биомодули"    
    },
    {
      "#":  "64",
      "String":  "Желаете их удалить?"    
    },
    {
      "#":  "66",
      "String":  "Отказаться от услуг"    
    },
    {
      "#":  "70",
      "String":  "Мы удалили стимулятор <0> из вашего организма и хотя ущерб, которые он уже нанес, мы не исправили, по крайней мере мы избавили вас от дальнейших осложнений.<br><1>"    
    },
    {
      "#":  "71",
      "String":  "Это ваше право, но, я вас очень прошу, подумайте еще раз. Стимуляторы разрушают вашу иммунную систему и наносят серьезный ущерб здоровью. Отказ от них сослужит вам добрую службу."    
    },
    {
      "#":  "74",
      "String":  "Отказаться от прививки"    
    },
    {
      "#":  "79",
      "String":  "Дело ваше. Хотя лично я считаю, что прививки - наиболее эффективный способ сохранить свое здоровье. Однако дело это сугубо добровольное - не хотите, не надо. Чем еще я вам могу помочь?"    
    },
    {
      "#":  "8",
      "String":  "<br>"    
    },
    {
      "#":  "82",
      "String":  "</color>Ну-с, похоже, что все в порядке. Общих противопоказаний нет, однако могут возникнуть индивидуальные проблемы с некоторыми конкретными биомодулями, но это мы уже будем проверять позже."    
    },
    {
      "#":  "83",
      "String":  "</color>Великий Космос, да наши сканеры просто взбесились. На вашем теле уже нет живого места – сплошная кибернетика, а организм испытывает просто невероятные нагрузки. Если вы до сих пор не испытываете никаких осложнений, то это невероятная удача, но я бы не стал слишком на нее рассчитывать. Мы рекомендуем как можно скорее удалить часть биомодулей, пожалейте свой организм."    
    },
    {
      "#":  "84",
      "String":  "</color>К сожалению, похоже, что ваше тело уже просто не способно вместить в себя еще больше кибернетики. Боюсь установка новых биомодулей в данной ситуации просто физически невозможна. Если хотите мы можем что-нибудь удалить."    
    },
    {
      "#":  "85",
      "String":  "</color>К сожалению, наши базовые медицинские сканеры показывают, что ваш организм уже испытывает серьезную нагрузку. Мы вынуждены отказать вам в установке новых биомодулей. Более того, мы бы рекомендовали удалить один или несколько имеющихся, чтобы снизить нагрузку и избежать осложнений."    
    },
    {
      "#":  "86",
      "String":  "<clrEnd>Модифицируемая часть: <clr>Глаз"    
    },
    {
      "#":  "87",
      "String":  "<clrEnd>Модифицируемая часть: <clr>Рука"    
    },
    {
      "#":  "88",
      "String":  "<clrEnd>Модифицируемая часть: <clr>Мозг"    
    },
    {
      "#":  "89",
      "String":  "</color>Проведя некоторые тесты мы сделали вывод, что установить вам биомодуль <0> невозможно в силу конфликтов с уже установленным биомодулем <1>. Выберите другой имплант, либо удалите конфликтующий."    
    },
    {
      "#":  "90",
      "String":  "<clrEnd>. Мы вынуждены отказать вам в этой операции. Можете выбрать биомодуль с меньшей нагрузкой на организм, если хотите."    
    },
    {
      "#":  "91",
      "String":  "</color>К сожалению после нескольких тестов и углубленного сканирования мы сделали заключение, что ваш организм не выдержит нагрузки, связанной с имплантацией вам биомодуля <clr>"    
    },
    {
      "#":  "93",
      "String":  "</color>К сожалению после нескольких тестов и углубленного сканирования мы сделали заключение, что установить биомодуль <clr>"    
    },
    {
      "#":  "94",
      "String":  "Прослушать инструктаж"    
    },
    {
      "#":  "95",
      "String":  "Удалить биомодуль"    
    },
    {
      "#":  "99",
      "String":  "Поставить другой биомодуль"    
    }  
  ]
}