{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -286,
  "ViewPos.y":  -50,
  "ScriptName":  "Mod_RevWarriorsVsPirates",
  "ScriptFileOut":  "H:\\Mod_RevWarriorsVsPirates.scr",
  "ScriptTextOut":  "H:\\Mod_RevWarriorsVsPirates.txt",
  "GraphPoint.Count":  59,
  "GraphLink.Count":  31,
  "GraphRectText.Count":  0,
  "Variables.Count":  19,
  "Stars.Count":  2,
  "Planets.Count":  2,
  "Ships.Count":  2,
  "States.Count":  8,
  "Groups.Count":  3,
  "Places.Count":  1,
  "Items.Count":  3,
  "Ethers.Count":  0,
  "Dialogs.Count":  1,
  "DialogMessages.Count":  1,
  "DialogAnswers.Count":  1,
  "Operations.Count":  10,
  "Statements.Count":  6,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "DialogAnswers":      
      [
        {
          "Type":  "TDialogAnswer",
          "Name":  "hangar",
          "Pos.x":  370,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  50,
          "Msg":  "<tStr2>",
          "AMsg.Num":  "0"        
        }      
      ],
      "DialogMessages":      
      [
        {
          "Type":  "TDialogMsg",
          "Name":  "DialogMsg1",
          "Pos.x":  370,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  51,
          "Msg":  "<tStr1>",
          "DMsg.Num":  "0"        
        }      
      ],
      "Dialogs":      
      [
        {
          "Type":  "TDialog",
          "Name":  "DialogWBSpecial",
          "Pos.x":  370,
          "Pos.y":  130,
          "Parent":  -1,
          "#":  49        
        }      
      ],
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "Warriors",
          "Pos.x":  380,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  7,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "Pirates",
          "Pos.x":  620,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  8,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "WarBase",
          "Pos.x":  490,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  22,
          "Owner":  62,
          "Group.Type":  1,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  "WB"        
        }      
      ],
      "Items":      
      [
        {
          "Type":  "TItem",
          "Name":  "qBomb1",
          "Pos.x":  120,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  33,
          "Class":  5,
          "Item.Type":  0,
          "Size":  10,
          "Level":  1,
          "Radius":  150,
          "Owner":  6,
          "Useless":  ""        
        },
        {
          "Type":  "TItem",
          "Name":  "qBomb2",
          "Pos.x":  120,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  34,
          "Class":  5,
          "Item.Type":  0,
          "Size":  10,
          "Level":  1,
          "Radius":  150,
          "Owner":  6,
          "Useless":  ""        
        },
        {
          "Type":  "TItem",
          "Name":  "qBomb3",
          "Pos.x":  120,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  35,
          "Class":  5,
          "Item.Type":  0,
          "Size":  10,
          "Level":  1,
          "Radius":  150,
          "Owner":  6,
          "Useless":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  310,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  0,
          "Total.Lines":  21,
          "Code.Type":  "Init",
          "Code":          
          [
              "//NewsAdd(ScriptRun(ShipStar(Player()),GetShipPlanet(Player()),'Mod_RevWarriorsVsPirates'));",
              "//Устройство массива bombsId: первый индекс соответствет номеру бомбы.",
              "//в первой ячейке второго индекса хринтся указатель на саму бомбу,",
              "//во второй - номер в списке предметов/артов корабля",
              "//удалить третий индекс как нерабочий",
              "free(bombsId);",
              "bombsId = newarray(3, 3);",
              "bombsId[0, 2] = qBomb1;",
              "bombsId[1, 2] = qBomb2;",
              "bombsId[2, 2] = qBomb3;",
              "//В игре расчет углов через функции идет от оси Y (!) по часовой стрелке (!!)",
              "//Пересчет угла в декартову систему координат",
              "function DabToNormal(dword a)",
              "{",
              "    if(a >= 0 && a <= 90) a = 90 - a;",
              "    else if(a > 90 && a <= 180) a = 270 + (180 - a);",
              "    else if(a > 180 && a <= 270) a = 180 + (270 - a);",
              "    else if(a > 270 && a <= 360) a = 90 + (360 - a);",
              "",
              "    result = a;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  310,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  1,
          "Total.Lines":  4,
          "Code.Type":  "Global",
          "Code":          
          [
              "if(PirateWin() != 3 && PirateWin() != 4)",
              "{",
              "    if(GLastTurnRun(GScriptName) + 2430 < CurTurn()) GRun();",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  310,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  11,
          "Total.Lines":  409,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Значения переменной sst:",
              "//sst==0: формируются скриптовые группы",
              "//sst==1: скриптовые группы сформированы, формируются данные для алгоритма выбора ближайшего к ВБ пирата",
              "//sst==2: нормальная работа алгоритма, ВБ не сбрасывала бомбы",
              "//sst==3: значения первой ячейки второго индекса массива перезаписано, бомбы сброшены",
              "//Формируются группы военных и пиратов",
              "if(!sst)",
              "{",
              "    //Ищем в системе военную базу",
              "    tmp = StarRuins(CoalStar, 'WB');",
              "    //Присоединяем военную базу к отдельной группе",
              "    ShipJoin(WarBase, tmp);",
              "    //Выдаем бомбы",
              "    //Если у игрока подключен мод ExpArts, выдаем военным бомбы оттуда",
              "    if(IsScriptActive('Mod_ExpArts'))",
              "    {",
              "        for(i = 0; i < ArrayDim(bombsId); i = i + 1)",
              "        {",
              "            //Создаем кварковую бомбу",
              "            tmp2 = CreateQuestItem('Quark_bomb', ItemOwner(tmp2, ShipOwner(tmp)));",
              "",
              "            //Записываем в бомбу задержку таймера на два-три дня",
              "            UselessItemData(tmp2, 1, Rnd(2, 3));",
              "",
              "            //Устанавливаем таймер в положение выкл. и добавляем контактный взрыватель",
              "            UselessItemData(tmp2, 2, -3);",
              "",
              "            //Название бомбы",
              "            SetName(tmp2, Format(Name(tmp2), CT('Script.Mod_ExpArts.TheBomb'), '</color>' + CT('Script.Mod_ExpArts.TheMine') + CT('Script.Mod_ExpArts.BombWithTimer')));",
              "",
              "            //Добавляем к описанию бомбы время срабатывания таймера",
              "            UselessItemText(tmp2, CT('UselessItems.' + EquipmentImageName(tmp2) + '.Text') + substr(CT('Cheat.Ok'), 0, 2) + '<br><clr><clrEnd><br>' + CT('Script.Mod_ExpArts.TimerIsSet'));",
              "            ItemSize(tmp2, ItemSize(tmp2) + Rnd(-2, 2));",
              "            ItemCost(tmp2, ItemCost(tmp2) + Rnd(-297, 303));",
              "",
              "            //Добавляем Id бомбы в массив",
              "            bombsId[i, 0] = Id(tmp2);",
              "",
              "            //Добавляем бомбу на корабль",
              "            AddItemToShip(tmp, tmp2);",
              "            NoDropItem(tmp2, 1);",
              "        }",
              "",
              "        //Ищем в списке предметов станции бомбы",
              "        for(i = 0; i < ArrayDim(bombsId); i = i + 1)",
              "        {",
              "            for(j = ShipItems(tmp); j >= 0; j = j - 1)",
              "            {",
              "                tmp2 = ShipItems(tmp, j);",
              "                //Заносим в массив номер бомбы в списке предметов корабля",
              "                if(tmp2 == IdToItem(bombsId[i, 0])) bombsId[i, 1] = j;",
              "            }",
              "        }",
              "    }",
              "    //В противном случае создаем обычные кварковые бомбы",
              "    else",
              "    {",
              "        for(i = 0; i < ArrayDim(bombsId); i = i + 1)",
              "        {",
              "            tmp2 = CreateArt(t_ArtefactBomb, ShipOwner(tmp));",
              "            bombsId[i, 0] = Id(tmp2);",
              "            AddItemToShip(tmp, tmp2);",
              "            NoDropItem(tmp2, 1);",
              "        }",
              "",
              "        //Перебираем артефакты военной базы",
              "        for(i = 0; i < ArrayDim(bombsId); i = i + 1)",
              "        {",
              "            for(j = ShipArts(tmp); j >= 0; j = j - 1)",
              "            {",
              "                tmp2 = ShipArts(tmp, j);",
              "                //Заносим в массив номер бомбы в списке артефактов корабля",
              "                if(tmp2 == IdToItem(bombsId[i, 0])) bombsId[i, 1] = j;",
              "            }",
              "        }",
              "    }",
              "",
              "    //Запоминаем начальные координаты военной базы",
              "    wbCoordX = CoordX(tmp);",
              "    wbCoordY = CoordY(tmp);",
              "",
              "    //Выводим начальную новость",
              "    //AddPlanetNews('По неподтвержденным данным стало известно о готовящейся диверсии в системе <Name(CoalStar)>. Неназванный источик сообщает, что группа пиратов планирует совершить нападение на  военную базу <ShortName(GroupToShip(WarBase))>. Несмотря на отсутствие прямых доказательств, правительство планеты <Name(CoalPlanet)> уже распорядилось усилить охрану базы.');",
              "    tStr1 = Format(CT('Script.Mod_RevWarriorsVsPirates.N1'), '#0#', Name(CoalStar), '#1#', ShortName(GroupToShip(WarBase)), '#2#', Name(CoalPlanet));",
              "    AddPlanetNews(tStr1);",
              "",
              "    //Создаем военных",
              "    for(i = 0; i < 5; i = i + 1)",
              "    {",
              "        //Создаем военного",
              "        tmp = BuyWarrior(CoalPlanet, 1000);",
              "",
              "        //Устанавливаем размер корпуса",
              "        //Коэффициент сложности (0.00085*GalaxyDiffLevels()+1) = [1,0425..1,425] при сложности [50..500]",
              "        ItemSize(ShipItems(tmp, 0), round((0.00085 * GalaxyDiffLevels() + 1) * GalaxyTechLevel() * 100) + Rnd(-25, 45));",
              "",
              "        //На всякий случай, устанавливаем минимальный размер корпуса 250",
              "        if(ItemSize(ShipItems(tmp, 0)) < 250) ItemSize(ShipItems(tmp, 0), 250);",
              "",
              "        //Восстанавливаем прочность корпуса",
              "        HullHP(tmp, ItemSize(ShipItems(tmp, 0)));",
              "",
              "        //Устанавливаем базовый вид для корпуса",
              "        Chameleon(tmp);",
              "",
              "        //Гарантированно открываем слот дроида",
              "        ShipSpecialBonuses(tmp, bonSlotDroid, 1);",
              "",
              "        //Аналогично для слота ГЗП",
              "        ShipSpecialBonuses(tmp, bonSlotDef, 1);",
              "",
              "        //Обновляем оборудование военного",
              "        for(j = 0; j < 5; j = j + 1) ShipRefit(tmp);",
              "",
              "        //Гарантированно снимаем серию с корпуса",
              "        HullSeries(ShipItems(tmp, 0), -1);",
              "",
              "        //Определяем навыки точности, маневренности и техники",
              "        for(j = 0; j < 3; j = j + 1)",
              "        {",
              "            tint = round(0.5 * GalaxyTechLevel()) + Rnd(0, 2);",
              "            ShipSkill(tmp, j, tint);",
              "        }",
              "",
              "        //Выдаем ГЗП, если у военного он почему-то отсутствует",
              "        if(!ShipEqInSlot(tmp, t_DefGenerator))",
              "        {",
              "            tmp2 = CreateEquipment(t_DefGenerator, Rnd(20, 45), GalaxyTechLevel(), ShipOwner(tmp));",
              "            AddItemToShip(tmp, tmp2);",
              "            ItemIsInUse(tmp2, tmp, 1);",
              "        }",
              "",
              "        //Аналогично для дроида",
              "        if(!ShipEqInSlot(tmp, t_RepairRobot))",
              "        {",
              "            tmp2 = CreateEquipment(t_RepairRobot, Rnd(20, 45), GalaxyTechLevel(), ShipOwner(tmp));",
              "            AddItemToShip(tmp, tmp2);",
              "            ItemIsInUse(tmp2, tmp, 1);",
              "        }",
              "",
              "        //Повышаем технический уровень оборудования военных",
              "        for(j = ShipItems(tmp); j >= 0; j = j - 1)",
              "        {",
              "            tmp2 = ShipItems(tmp, j);",
              "",
              "            //Пропускаем оборудование в трюме",
              "            if(!ItemIsInUse(tmp2)) continue;",
              "            //Пропускаем корпус",
              "            if(ItemType(tmp2) == t_Hull) continue;",
              "            //Пропускаем конец списка",
              "            if(tmp2 != 0)",
              "            {",
              "                if((GalaxyTechLevel() - ItemLevel(tmp2)) >= 2)",
              "                {",
              "                    //Улучшение оружия будет производиться с учетом случайного фактора",
              "                    //tint влияет на то, будет ли оружие улучшено до уровня текущего ГТУ или меньшего",
              "                    tint = Rnd(0, 2);",
              "                    if(ItemType(tmp2) >= t_Weapon1 && ItemType(tmp2) <= t_Weapon18)",
              "                    {",
              "                        //Если оружие отстает от ГТУ ровно на два уровня, и военному не повезло с рандомом, улучшения не будет",
              "                        //Заодно скрипт не будет исполнять лишний код",
              "                        if((GalaxyTechLevel() - ItemLevel(tmp2) - tint) == 0) continue;",
              "                        //Создаем идентичное оружие текущего или слегка устаревшего ГТУ",
              "                        else tmp3 = CreateEquipment(ItemType(tmp2), ItemSize(tmp2), (GalaxyTechLevel() - tint), ItemOwner(tmp2));",
              "                    }",
              "                    //Отдельное условие для кастомного оружия",
              "                    else if(ItemType(tmp2) == t_CustomWeapon)",
              "                    {",
              "                        if((GalaxyTechLevel() - ItemLevel(tmp2) - tint) == 0) continue;",
              "                        else tmp3 = CreateCustomWeapon(CustomWeaponType(tmp2), ItemSize(tmp2), (GalaxyTechLevel() - tint), ItemOwner(tmp2));",
              "                    }",
              "                    //Создаем идентичный предмет текущего ГТУ",
              "                    else tmp3 = CreateEquipment(ItemType(tmp2), ItemSize(tmp2), GalaxyTechLevel(), ItemOwner(tmp2));",
              "",
              "                    //Если у оригинального предмета был акрин, накладываем его на копию",
              "                    if(~EqSpecial(tmp2)) SpecialToEquipment(EqSpecial(tmp2), tmp3);",
              "",
              "                    //Аналогично для микромодулей",
              "                    if(~EqModule(tmp2)) ModuleToEquipment(EqModule(tmp2), tmp3);",
              "",
              "                    //Повышаем технологический уровень оригинального предмета",
              "                    ItemLevel(tmp2, GalaxyTechLevel());",
              "                    //Повышаем стоимость предмета",
              "                    ItemCost(tmp2, ItemCost(tmp3));",
              "                    //Копия нам больше не нужна",
              "                    FreeItem(tmp3);",
              "                }",
              "            }",
              "        }",
              "",
              "        //Рандомно улучшаем оборудование военного",
              "        ShipImproveItems(tmp, 3 * GalaxyTechLevel());",
              "",
              "        //Устраняем возможный перевес",
              "        ShipCalcParam(tmp);",
              "        if(ShipFreeSpace(tmp) < 0)",
              "        {",
              "            ItemSize(ShipItems(tmp, 0), ItemSize(ShipItems(tmp, 0)) + abs(ShipFreeSpace(tmp)) + Rnd(1, 5));",
              "            HullHP(tmp, ItemSize(ShipItems(tmp, 0)));",
              "        }",
              "",
              "        //Присоединяем военного к группе",
              "        ShipJoin(Warriors, tmp);",
              "        //Перемещаем военного на базу",
              "        TransferShip(tmp, GroupToShip(WarBase));",
              "    }",
              "",
              "    //Создаем пиратов",
              "    //Очистка массива",
              "    ArrayClear(piratesId);",
              "    //Меняем владельца планеты для создания пиратов с разной расой",
              "    //Запоминаем изначальную расу и владельца планеты",
              "    planetRace = PlanetRace(PiratePlanet);",
              "    planetOwner = PlanetOwner(PiratePlanet);",
              "    for(i = 0; i < Rnd(10, 15); i = i + 1)",
              "    {",
              "        //Случайно выбираем новую расу",
              "        tint = Rnd(0, 4);",
              "        //Меняем владельца планеты на пиратский клан",
              "        PlanetOwner(PiratePlanet, 7);",
              "        //Меняем расу планеты на случайную",
              "        PlanetRace(PiratePlanet, tint);",
              "        //Создаем пирата",
              "        tmp = BuyPirate(PiratePlanet, 800);",
              "",
              "        //Устанавливаем размер корпуса",
              "        //Коэффициент сложности (0.00085*GalaxyDiffLevels()+1) = [1,0425..1,425] при сложности [50..500]",
              "        ItemSize(ShipItems(tmp, 0), round((0.00085 * GalaxyDiffLevels() + 1) * GalaxyTechLevel() * 75) + Rnd(-25, 45));",
              "",
              "        //На всякий случай, устанавливаем минимальный размер корпуса 250",
              "        if(ItemSize(ShipItems(tmp, 0)) < 250) ItemSize(ShipItems(tmp, 0), 250);",
              "",
              "        //Восстанавливаем прочность корпуса",
              "        HullHP(tmp, ItemSize(ShipItems(tmp, 0)));",
              "",
              "        //Устанавливаем базовый вид для корпуса",
              "        Chameleon(tmp);",
              "",
              "        //Гарантированно открываем слот дроида",
              "        ShipSpecialBonuses(tmp, bonSlotDroid, 1);",
              "",
              "        //Аналогично для слота ГЗП",
              "        ShipSpecialBonuses(tmp, bonSlotDef, 1);",
              "        for(j = 0; j < 4; j = j + 1) ShipRefit(tmp);",
              "",
              "        //Гарантированно снимаем серию с корпуса",
              "        HullSeries(ShipItems(tmp, 0), -1);",
              "        //Определяем навыки точности, маневренности и техники",
              "        for(j = 0; j < 3; j = j + 1)",
              "        {",
              "            tint = round(0.5 * GalaxyTechLevel()) + Rnd(-1, 2);",
              "            ShipSkill(tmp, j, tint);",
              "        }",
              "        //Выдаем ГЗП, если у пирата он почему-то отсутствует",
              "        if(!ShipEqInSlot(tmp, t_DefGenerator))",
              "        {",
              "            tmp2 = CreateEquipment(t_DefGenerator, Rnd(20, 45), GalaxyTechLevel(), ShipOwner(tmp));",
              "            AddItemToShip(tmp, tmp2);",
              "            ItemIsInUse(tmp2, tmp, 1);",
              "        }",
              "        //Аналогично для дроида",
              "        if(!ShipEqInSlot(tmp, t_RepairRobot))",
              "        {",
              "            tmp2 = CreateEquipment(t_RepairRobot, Rnd(20, 45), GalaxyTechLevel(), ShipOwner(tmp));",
              "            AddItemToShip(tmp, tmp2);",
              "            ItemIsInUse(tmp2, tmp, 1);",
              "        }",
              "        //Повышаем технический уровень оборудования пиратов",
              "        for(j = ShipItems(tmp); j >= 0; j = j - 1)",
              "        {",
              "            tmp2 = ShipItems(tmp, j);",
              "            //Пропускаем оборудование в трюме",
              "            if(!ItemIsInUse(tmp2)) continue;",
              "            //Пропускаем корпус",
              "            if(ItemType(tmp2) == t_Hull) continue;",
              "            //Пропускаем конец списка",
              "            if(tmp2 != 0)",
              "            {",
              "                if((GalaxyTechLevel() - ItemLevel(tmp2)) >= 2)",
              "                {",
              "                    //Улучшение оружия будет производиться с учетом случайного фактора",
              "                    //tint влияет на то, будет ли оружие улучшено до уровня текущего ГТУ или меньшего",
              "                    tint = Rnd(0, 2);",
              "                    if(ItemType(tmp2) >= t_Weapon1 && ItemType(tmp2) <= t_Weapon18)",
              "                    {",
              "                        //Если оружие отстает от ГТУ ровно на два уровня, и военному не повезло с рандомом, улучшения не будет",
              "                        //Заодно скрипт не будет исполнять лишний код",
              "                        if((GalaxyTechLevel() - ItemLevel(tmp2) - tint) == 0) continue;",
              "                        //Создаем идентичное оружие текущего или слегка устаревшего ГТУ",
              "                        else tmp3 = CreateEquipment(ItemType(tmp2), ItemSize(tmp2), (GalaxyTechLevel() - tint), ItemOwner(tmp2));",
              "                    }",
              "                    //Отдельное условие для кастомного оружия",
              "                    else if(ItemType(tmp2) == t_CustomWeapon)",
              "                    {",
              "                        if(!(GalaxyTechLevel() - ItemLevel(tmp2) - tint)) continue;",
              "                        else tmp3 = CreateCustomWeapon(CustomWeaponType(tmp2), ItemSize(tmp2), (GalaxyTechLevel() - tint), ItemOwner(tmp2));",
              "                    }",
              "",
              "                    //Создаем идентичный предмет текущего ГТУ",
              "                    else tmp3 = CreateEquipment(ItemType(tmp2), ItemSize(tmp2), GalaxyTechLevel(), ItemOwner(tmp2));",
              "                    //Если у оригинального предмета был акрин, накладываем его на копию",
              "                    if(~EqSpecial(tmp2)) SpecialToEquipment(EqSpecial(tmp2), tmp3);",
              "                    //Аналогично для микромодулей",
              "                    if(~EqModule(tmp2)) ModuleToEquipment(EqModule(tmp2), tmp3);",
              "                    //Повышаем технологический уровень оригинального предмета",
              "                    ItemLevel(tmp2, GalaxyTechLevel());",
              "                    //Повышаем стоимость предмета",
              "                    ItemCost(tmp2, ItemCost(tmp3));",
              "                    //Копия нам больше не нужна",
              "                    FreeItem(tmp3);",
              "                }",
              "            }",
              "        }",
              "",
              "        //Рандомно улучшаем оборудование пирата",
              "        ShipImproveItems(tmp, 2 * GalaxyTechLevel());",
              "        //Устраняем возможный перевес",
              "        ShipCalcParam(tmp);",
              "        if(ShipFreeSpace(tmp) < 0)",
              "        {",
              "            ItemSize(ShipItems(tmp, 0), ItemSize(ShipItems(tmp, 0)) + abs(ShipFreeSpace(tmp)) + Rnd(1, 5));",
              "            HullHP(tmp, ItemSize(ShipItems(tmp, 0)));",
              "        }",
              "        //Заносим пирата в массив",
              "        ArrayAdd(piratesId, Id(tmp));",
              "        //Присоединяем пирата к группе",
              "        ShipJoin(Pirates, tmp);",
              "        MakeShipEnterStar(tmp, CoalStar, PirateStar, 0);",
              "        //Возвращаем планете первоначального владельца и расу",
              "        PlanetRace(PiratePlanet, planetRace);",
              "        PlanetOwner(PiratePlanet, planetOwner);",
              "    }",
              "}",
              "",
              "//Меняем значение переменной-флага",
              "if(!sst) sst = 1;",
              "",
              "//Группы уже сформированы",
              "if(sst)",
              "{",
              "    //Если пираты прилетели в систему, начинаем перебирать массив",
              "    if(GroupIn(Pirates, CoalStar))",
              "    {",
              "        //Назначеаем первый в массиве корабль ближайшим при первом прогоне цикла",
              "        if(!nearestShip && sst == 1) nearestShip = IdToShip(piratesId[1]);",
              "",
              "        //Пропускаем нулевую ячейку с пустым значением",
              "        for(i = 1; i < ArrayDim(piratesId); i = i + 1)",
              "        {",
              "            tmp = IdToShip(piratesId[i]);",
              "            //Пропускаем уничтоженных пиратов",
              "            if(!tmp)",
              "            {",
              "                ArrayDelete(piratesId, i);",
              "                continue;",
              "            }",
              "",
              "            //Пропускаем еще не прилетевших в систему пиратов (уже не нужно)",
              "            if(!ShipInNormalSpace(tmp) && ShipInStar(tmp, CoalStar)) continue;",
              "",
              "            //Если у нас нет ближайшего пирата (например, он умер), выбираем случайного",
              "            if(!(IdToShip(nearestShip)))",
              "            {",
              "                tmp3 = ArrayDim(piratesId) - 1;",
              "                tint = Rnd(1, tmp3);",
              "                nearestShip = piratesId[tint];",
              "                distance = Dist(IdToShip(nearestShip), GroupToShip(WarBase));",
              "            }",
              "",
              "            //Ищем ближайшего к военной базе пирата",
              "            tmp2 = Dist(tmp, GroupToShip(WarBase));",
              "            if(tmp2 <= distance)",
              "            {",
              "                nearestShip = piratesId[i];",
              "                distance = tmp2;",
              "            }",
              "",
              "            //Если мод ExpArts не подключен, прописываем условие взрыва бомб",
              "            if(!IsScriptActive('Mod_ExpArts'))",
              "            {",
              "                //Обязательно убеждаемся в существовании пирата, иначе краш при срабатывании нескольких бомб",
              "                if(ItemExist(qBomb1) && ItemIn(qBomb1, CoalStar))",
              "                {",
              "                    if(IdToShip(piratesId[i]))",
              "                    {",
              "                        if(Dist(qBomb1, IdToShip(piratesId[i])) <= 250) ItemDestroy(qBomb1, 2);",
              "                    }",
              "                }",
              "                if(ItemExist(qBomb2) && ItemIn(qBomb2, CoalStar))",
              "                {",
              "                    if(IdToShip(piratesId[i]))",
              "                    {",
              "                        if(Dist(qBomb2, IdToShip(piratesId[i])) <= 250) ItemDestroy(qBomb2, 2);",
              "                    }",
              "                }",
              "                if(ItemExist(qBomb3) && ItemIn(qBomb3, CoalStar))",
              "                {",
              "                    if(IdToShip(piratesId[i]))",
              "                    {",
              "                        if(Dist(qBomb3, IdToShip(piratesId[i])) <= 250) ItemDestroy(qBomb3, 2);",
              "                    }",
              "                }",
              "            }",
              "        }",
              "",
              "        //Присваиваем переменной другое значение, чтобы не срабатывал триггер на первое присвоение nearestShip",
              "        if(sst == 1) sst = 2;",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  490,
          "Pos.y":  520,
          "Parent":  -1,
          "#":  32,
          "Total.Lines":  107,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Вычисляем точку сброса бомбы",
              "//Точка сброса бомбы (x, y) рассчитывается по формуле x = r * cos(fi), y = r * sin(fi) (точка на окружности)",
              "//CoordX\\Y(CurShip) - центр окружности (текущие координаты военной базы)",
              "//tmp - угол fi, r = 325, домножение на pi / 180 - перевод из градусов в радианы",
              "if(GroupCount(Pirates) && distance<=850)",
              "{",
              "    if(sst != 3)",
              "    {",
              "        tmp = DabToNormal(Angle(IdToShip(nearestShip), CurShip));",
              "",
              "        //CreateActCodeEvent() отказывается принимать конструкции типа IdToItem(bombsId[i, 0]) или перменные, ссылающиеся на такие конструкции",
              "        //Поэтому перезаписываем содержимое массива",
              "        for(i = 0; i < ArrayDim(bombsId); i = i + 1) bombsId[i, 0] = IdToItem(bombsId[i, 0]);",
              "",
              "        //Сброс бомб происходит в обратном порядке, чтобы не сбивать нумерацию в списке предметов корабля",
              "        //Бомба №3",
              "        LinkItemToScript(bombsId[2, 0], qBomb3);",
              "        dropCoordX = CoordX(CurShip) + round(cos(pi / 180 * (tmp + 390)) * 325);",
              "        dropCoordY = CoordY(CurShip) - round(sin(pi / 180 * (tmp + 390)) * 325);",
              "        if(IsScriptActive('Mod_ExpArts'))",
              "        {",
              "            //Изымаем предмет из трюма (если этого не сделать, будет бесконечный дроп)",
              "            GetItemFromShip(CurShip, bombsId[2, 1]);",
              "            //Вручную взводим взрыватель для бомбы из ExpArts (иначе бомба не взорвется)",
              "            CreateActCodeEvent(t_OnDropItemFixed, bombsId[2, 0], CurShip, bombsId[2, 0], 0, UselessItemData(bombsId[2, 0], 2, -7));",
              "        }",
              "        else GetArtFromShip(CurShip, bombsId[2, 1]);",
              "",
              "        //Сбрасываем по рассчитаным координатам",
              "        DropItemInSystem(CoalStar, qBomb3, CoordX(CurShip), CoordY(CurShip), dropCoordX, dropCoordY);",
              "        //Выводим бомбу из скрипта",
              "        if(IsScriptActive('Mod_ExpArts')) ReleaseItemFromScript(qBomb3);",
              "",
              "        //Бомба №2",
              "        LinkItemToScript(bombsId[1, 0], qBomb2);",
              "        dropCoordX = CoordX(CurShip) + round(cos(pi / 180 * (tmp + 360)) * 325);",
              "        dropCoordY = CoordY(CurShip) - round(sin(pi / 180 * (tmp + 360)) * 325);",
              "        if(IsScriptActive('Mod_ExpArts'))",
              "        {",
              "            //Изымаем предмет из трюма (если этого не сделать, будет бесконечный дроп)",
              "            GetItemFromShip(CurShip, bombsId[1, 1]);",
              "            //Вручную взводим взрыватель для бомбы из ExpArts (иначе бомба не взорвется)",
              "            CreateActCodeEvent(t_OnDropItemFixed, bombsId[1, 0], CurShip, bombsId[1, 0], 0, UselessItemData(bombsId[1, 0], 2, -7));",
              "        }",
              "        else GetArtFromShip(CurShip, bombsId[1, 1]);",
              "",
              "        //Сбрасываем по рассчитаным координатам",
              "        DropItemInSystem(CoalStar, qBomb2, CoordX(CurShip), CoordY(CurShip), dropCoordX, dropCoordY);",
              "",
              "        //Выводим бомбу из скрипта",
              "        if(IsScriptActive('Mod_ExpArts')) ReleaseItemFromScript(qBomb2);",
              "",
              "        //Бомба №1",
              "        LinkItemToScript(bombsId[0, 0], qBomb1);",
              "        dropCoordX = CoordX(CurShip) + round(cos(pi / 180 * (tmp + 330)) * 325);",
              "",
              "        //В игре ось Y инвертирована, поэтому меняем знак + на -",
              "        dropCoordY = CoordY(CurShip) - round(sin(pi / 180 * (tmp + 330)) * 325);",
              "        if(IsScriptActive('Mod_ExpArts'))",
              "        {",
              "            //Изымаем предмет из трюма (если этого не сделать, будет бесконечный дроп)",
              "            GetItemFromShip(CurShip, bombsId[0, 1]);",
              "            //Вручную взводим взрыватель для бомбы из ExpArts (иначе бомба не взорвется)",
              "            CreateActCodeEvent(t_OnDropItemFixed, bombsId[0, 0], CurShip, bombsId[0, 0], 0, UselessItemData(bombsId[0, 0], 2, -7));",
              "        }",
              "        else GetArtFromShip(CurShip, bombsId[0, 1]);",
              "",
              "        //Сбрасываем по рассчитаным координатам",
              "        DropItemInSystem(CoalStar, qBomb1, CoordX(CurShip), CoordY(CurShip), dropCoordX, dropCoordY);",
              "",
              "        //Выводим бомбу из скрипта",
              "        if(IsScriptActive('Mod_ExpArts')) ReleaseItemFromScript(qBomb1);",
              "        sst = 3;",
              "    }",
              "}",
              "",
              "//Если пираты побеждены, возвращаем военную базу на место",
              "if(!GroupCount(Pirates))",
              "{",
              "    //Выводим новость о победе военных над пиратами",
              "    //AddPlanetNews('Сегодня была отражена атака пиратов на военную базу <ShortName(GroupToShip(WarBase))>! Правительство планеты <Name(CoalPlanet)> выражает особую благодарность представителям Дзухаллага за предоставленные вовремя разведданные, благодаря которым удалось подготовиться к обороне. Пиратский клан отрицает свою причастность к нападению.');",
              "    tStr1 = Format(CT('Script.Mod_RevWarriorsVsPirates.N3'), '#0#', ShortName(GroupToShip(WarBase)), '#1#', Name(CoalPlanet));",
              "    AddPlanetNews(tStr1);",
              "",
              "    //Изымаем неиспользованные бомбы",
              "    for(i = ArrayDim(bombsId) - 1; i >= 0; i = i - 1)",
              "    {",
              "        //Проверка на существование бомбы",
              "        if(IdToItem(bombsId[i, 0]))",
              "        {",
              "            if(IsScriptActive('Mod_ExpArts')) FreeItem(GetItemFromShip(CurShip, bombsId[i, 1]));",
              "            else FreeItem(GetArtFromShip(CurShip, bombsId[i, 1]));",
              "        }",
              "    }",
              "",
              "    OrderMove(CurShip, wbCoordX, wbCoordY);",
              "    //Блокируем другие приказы, потому что в противном случае база остановится, если на нее попытаются сесть",
              "    OrderLock(CurShip, 1);",
              "",
              "    //Если военная база вернулась на место, выводим ее из скрипта",
              "    if(CoordX(CurShip) == wbCoordX && CoordY(CurShip) == wbCoordY)",
              "    {",
              "        //Обязательно снимаем OrderLock, иначе игра будет думать, что ВБ в скрипте",
              "        OrderLock(CurShip, 0);",
              "        ShipOut(CurShip);",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  650,
          "Pos.y":  550,
          "Parent":  -1,
          "#":  42,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Пираты выполнили свой долг, время уйти на покой",
              "if(ShipInHyperSpace(CurShip)) ShipDestroy(CurShip);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  370,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  45,
          "Total.Lines":  2,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Выводим из скрипта военных, если они выжили",
              "if(EndState) ShipOut(CurShip);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  460,
          "Pos.y":  460,
          "Parent":  -1,
          "#":  47,
          "Total.Lines":  17,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Выводим новость о победе военных над пиратами",
              "//AddPlanetNews('Сегодня была отражена атака пиратов на военную базу <ShortName(GroupToShip(WarBase))>! Правительство планеты <Name(CoalPlanet)> выражает особую благодарность представителям Дзухаллага за предоставленные вовремя разведданные, благодаря которым удалось подготовиться к обороне. Пиратский клан отрицает свою причастность к нападению.');",
              "tStr1 = Format(CT('Script.Mod_RevWarriorsVsPirates.N3'), '#0#', ShortName(GroupToShip(WarBase)), '#1#', Name(CoalPlanet));",
              "AddPlanetNews(tStr1);",
              "",
              "//Изымаем уцелевшие бомбы",
              "for(i = ArrayDim(bombsId) - 1; i >= 0; i = i - 1)",
              "{",
              "    //Проверка на существование бомбы",
              "    if(IdToItem(bombsId[i, 0]))",
              "    {",
              "        if(IsScriptActive('Mod_ExpArts')) FreeItem(GetItemFromShip(CurShip, bombsId[i, 1]));",
              "        else FreeItem(GetArtFromShip(CurShip, bombsId[i, 1]));",
              "    }",
              "}",
              "",
              "ShipOut(CurShip);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  680,
          "Pos.y":  490,
          "Parent":  -1,
          "#":  52,
          "Total.Lines":  4,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Выводим новость о победе пиратов над военными",
              "//AddPlanetNews('В результате нападения пиратов, была уничтожена военная база в системе <Name(CoalStar)>. Представитель Галактического Совета выступил с официальным заявлением об усилении мер безопасности на других стратегически важных объектах. В отношении властей планеты <Name(CoalPlanet)> проводится служебная проверка.');",
              "tStr1 = Format(CT('Script.Mod_RevWarriorsVsPirates.N2'), '#0#', Name(CoalStar), '#1#', Name(CoalPlanet));",
              "AddPlanetNews(tStr1);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  370,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  53,
          "Total.Lines":  3,
          "Code.Type":  "Turn",
          "Code":          
          [
              "tStr1 = '</color>' + CT('Script.Mod_RevWarriorsVsPirates.D1');",
              "tStr2 = '</color>' + CT('Script.Mod_RevWarriorsVsPirates.D2');",
              "SkipGreeting();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  310,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  57,
          "Total.Lines":  4,
          "Code.Type":  "DialogBegin",
          "Code":          
          [
              "if(GetShipRuins(Player()))",
              "{",
              "    if(GetShipRuins(Player()) == GroupToShip(WarBase) && GroupCount(Pirates)) AddDialogOverride('DialogWBSpecial', 10);",
              "}"          
          ]        
        }      
      ],
      "Places":      
      [
        {
          "Type":  "TPlace",
          "Name":  "RetreatPoint",
          "Pos.x":  490,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  36,
          "Place.Type":  3,
          "Angle":  "0",
          "Dist":  "-0.899999797344208",
          "Radius":  200,
          "Obj1":  5,
          "Obj2":  -1        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "CoalPlanet",
          "Pos.x":  490,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  3,
          "Race":  63,
          "Owner":  63,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        },
        {
          "Type":  "TPlanet",
          "Name":  "PiratePlanet",
          "Pos.x":  620,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  6,
          "Race":  63,
          "Owner":  63,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  420,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  4,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  420,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  12,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  1,
          "Player":  false,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  "WB"        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "CoalStar",
          "Pos.x":  490,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  2,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  true,
          "NoComeKling":  true        
        },
        {
          "Type":  "TStar",
          "Name":  "PirateStar",
          "Pos.x":  620,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  5,
          "Constellation":  0,
          "Priority":  1,
          "NoKling":  true,
          "NoComeKling":  true        
        }      
      ],
      "Statements":      
      [
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  340,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  20,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipInNormalSpace(GroupToShip(Pirates)) && CountIn(Pirates, CoalStar)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  490,
          "Pos.y":  460,
          "Parent":  -1,
          "#":  26,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "distance <= 1350 && !GroupCount(Warriors)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  620,
          "Pos.y":  460,
          "Parent":  -1,
          "#":  37,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!GroupCount(Warriors)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  650,
          "Pos.y":  490,
          "Parent":  -1,
          "#":  41,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!GroupCount(WarBase) && !GroupCount(Warriors)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  340,
          "Pos.y":  440,
          "Parent":  -1,
          "#":  44,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!GroupCount(Pirates)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  460,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  46,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!GroupCount(Pirates) && sst"          
          ]        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "DoNothing",
          "Pos.x":  380,
          "Pos.y":  380,
          "Parent":  -1,
          "#":  19,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "Interception",
          "Pos.x":  340,
          "Pos.y":  410,
          "Parent":  -1,
          "#":  21,
          "Move":  2,
          "MoveObj":  8,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  8            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "WBState",
          "Pos.x":  490,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  23,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  8            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "AttackWarriors",
          "Pos.x":  620,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  25,
          "Move":  2,
          "MoveObj":  7,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  7            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "Retreat",
          "Pos.x":  490,
          "Pos.y":  490,
          "Parent":  -1,
          "#":  27,
          "Move":  1,
          "MoveObj":  36,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  8            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "AttackWB",
          "Pos.x":  650,
          "Pos.y":  460,
          "Parent":  -1,
          "#":  38,
          "Move":  2,
          "MoveObj":  22,
          "Attack.Count":  1,
          "Attack.Items":          
          [
            {
              "Target.0":  22            
            }          
          ],
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "EscapeFromSystem",
          "Pos.x":  650,
          "Pos.y":  520,
          "Parent":  -1,
          "#":  40,
          "Move":  3,
          "MoveObj":  5,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "LandToPlanet",
          "Pos.x":  370,
          "Pos.y":  440,
          "Parent":  -1,
          "#":  43,
          "Move":  4,
          "MoveObj":  3,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "i",
          "Pos.x":  170,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  9,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "j",
          "Pos.x":  200,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  10,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tmp",
          "Pos.x":  200,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  13,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tmp2",
          "Pos.x":  200,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  14,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "sst",
          "Pos.x":  130,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  15,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "planetOwner",
          "Pos.x":  170,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  16,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "planetRace",
          "Pos.x":  80,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  17,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint",
          "Pos.x":  80,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  18,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "piratesId",
          "Pos.x":  170,
          "Pos.y":  370,
          "Parent":  -1,
          "#":  24,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "distance",
          "Pos.x":  200,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  28,
          "Var.Type":  "Dword",
          "Init":  "100000",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "nearestShip",
          "Pos.x":  200,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  29,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "wbCoordX",
          "Pos.x":  80,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  30,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "wbCoordY",
          "Pos.x":  170,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  31,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tmp3",
          "Pos.x":  200,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  39,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "bombsId",
          "Pos.x":  170,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  48,
          "Var.Type":  "Unknown",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "dropCoordX",
          "Pos.x":  80,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  54,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "dropCoordY",
          "Pos.x":  170,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  55,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tStr1",
          "Pos.x":  130,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  56,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tStr2",
          "Pos.x":  130,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  58,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  4,
      "End":  2,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  3,
      "End":  2,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  6,
      "End":  5,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TStarLink",
      "Begin":  5,
      "End":  2,
      "Nom":  0,
      "Arrow":  false,
      "DistMin":  10,
      "DistMax":  150,
      "Hole":  false    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  7,
      "End":  3,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  8,
      "End":  6,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  12,
      "End":  2,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  7,
      "End":  19,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  19,
      "End":  20,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  20,
      "End":  21,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  22,
      "End":  3,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  22,
      "End":  23,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  36,
      "End":  2,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  25,
      "End":  37,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  37,
      "End":  38,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  26,
      "End":  27,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  8,
      "End":  25,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  38,
      "End":  41,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  41,
      "End":  40,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  40,
      "End":  42,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  21,
      "End":  44,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  44,
      "End":  43,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  43,
      "End":  45,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  23,
      "End":  26,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  23,
      "End":  46,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  46,
      "End":  47,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  27,
      "End":  32,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  51,
      "End":  50,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  41,
      "End":  52,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  53,
      "End":  51,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  49,
      "End":  53,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "BlockPar.EC.Total.Strings":  1,
  "BlockPar.EC":  
  [
    {
      "#":  "19",
      "String":  "<0>"    
    }  
  ]
}