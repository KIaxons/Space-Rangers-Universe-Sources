{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -436,
  "ViewPos.y":  -98,
  "ScriptName":  "Mod_ExpArts",
  "ScriptFileOut":  "H:\\Mod_RevAcryn.scr",
  "ScriptTextOut":  "H:\\Mod_RevAcryn.txt",
  "GraphPoint.Count":  26,
  "GraphLink.Count":  5,
  "GraphRectText.Count":  0,
  "Variables.Count":  17,
  "Stars.Count":  1,
  "Planets.Count":  1,
  "Ships.Count":  1,
  "States.Count":  1,
  "Groups.Count":  1,
  "Places.Count":  0,
  "Items.Count":  0,
  "Ethers.Count":  0,
  "Dialogs.Count":  0,
  "DialogMessages.Count":  0,
  "DialogAnswers.Count":  0,
  "Operations.Count":  3,
  "Statements.Count":  1,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "PlayerGroup",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  2,
          "#":  3,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  170,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  5,
          "Total.Lines":  1,
          "Code.Type":  "Global",
          "Code":          
          [
              "if(!GLastTurnRun(GScriptName)) GRun();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  190,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  6,
          "Total.Lines":  4,
          "Code.Type":  "Init",
          "Code":          
          [
              "countNOKM = Rnd(32, 45);",
              "countAssemblyDroids = Rnd(37, 51);",
              "countBattleDroids = Rnd(41, 63);",
              "countUbivators = Rnd(51, 83);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  210,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  9,
          "Total.Lines":  354,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GTL = GalaxyTechLevel();",
              "if(GTL >= 5)",
              "{",
              "    //Раскидываем по магазинам боевых дроидов",
              "    if(countBattleDroids <= CurTurn())",
              "    {",
              "        //Начинаем перебирать все системы и станции в них, ищем подходящие",
              "        ArrayClear(tarr1);",
              "        for(i = 0; i < GalaxyStars(); i = i + 1)",
              "        {",
              "            star = GalaxyStar(i);",
              "            //Пропускаем доминаторские и \"кастомные\" системы",
              "            if(StarOwner(star) == 1) continue;",
              "            if(StarCustomFaction(star) != '') continue;",
              "",
              "            //Ищем среди станций системы подходящие для продажи дроида",
              "            for(j = 0; j < StarRuins(star); j = j + 1)",
              "            {",
              "                place = StarRuins(star, j);",
              "                tempStr = ShipType(place);",
              "",
              "                check = 0;",
              "                if(tempStr == 'WB') check = 1;",
              "                else if(tempStr == 'TC') check = 1;",
              "                else if(tempStr == 'PB') check = 1;",
              "                else if(tempStr == 'CB') check = 1;",
              "",
              "                //Проверяем, имеется в продаже станции схожий акрин и если да, то удаляем его",
              "                if(check)",
              "                {",
              "                    //Имеется случайный шанс, что в этот раз на данную станцию акрин добавлен не будет",
              "                    if(Rnd(1, 100) <= 30) continue;",
              "",
              "                    for(k = 0; k < ShopItems(place); k = k + 1)",
              "                    {",
              "                        item = ShopItems(place, k);",
              "",
              "                        check = EqSpecial(item);",
              "                        if(check > -1)",
              "                        {",
              "                            tempStr = BonusNumInCfg(check);",
              "                            if(!findsubstr(tempStr, 'RevAcryn_BattleDroid'))",
              "                            {",
              "                                FreeItem(GetItemFromShop(place, k));",
              "                            }",
              "                        }",
              "                    }",
              "",
              "                    ArrayAdd(tarr1, place);",
              "                }",
              "            }",
              "        }",
              "",
              "        //Если нашли, то выбираем из общего числа найденных станций несколько случайных",
              "        tint1 = ArrayDim(tarr1) - 1;",
              "        if(tint1)",
              "        {",
              "            j = Rnd(2, 4);",
              "            if(j > tint1) j = tint1;",
              "            while(j)",
              "            {",
              "                //Случайно определяем станцию, на которую будет добавлен дроид",
              "                tint1 = Rnd(1, j);",
              "                place = tarr1[tint1];",
              "                //После чего удаляем её из списка",
              "                ArrayDelete(tarr1, tint1);",
              "",
              "                //Определяем ТУ будущего дроида",
              "                tint1 = Rnd(1, 6);",
              "                if(tint1 <= 3) tint1 = 0;",
              "                else if(tint1 <= 5) tint1 = 1;",
              "                else tint1 = 2;",
              "                if(GTL - tint1 < 5) tint1 = 5;",
              "                else tint1 = GTL - tint1;",
              "",
              "                //Определяем расу",
              "                tint2 = PlanetOwner(NearCivilPlanet(place));",
              "                if(tint2 > 2 && tint2 != 7)",
              "                {",
              "                    j = j - 1;",
              "                    continue;",
              "                }",
              "                //И вес будущего дроида",
              "                //Малоки",
              "                if(tint2 == 0) i = round(1.6 * CT('Items.RepairRobot.AverageSize')) + Rnd(-5, 4);",
              "                //Пеленги",
              "                else if(tint2 == 1) i = round(1.2 * CT('Items.RepairRobot.AverageSize')) + Rnd(-3, 4);",
              "                //Люди",
              "                else if(tint2 == 2) i = round(1.0 * CT('Items.RepairRobot.AverageSize')) + Rnd(-3, 5);",
              "                //Пираты",
              "                else i = round(1.3 * CT('Items.RepairRobot.AverageSize')) + Rnd(-3, 4);",
              "                if(j <= 0) i = 1;",
              "",
              "                //Создаём, акринируем, после чего, наконец, добавляем дроида в магазин",
              "                item = CreateEquipment(t_RepairRobot, i, tint1, tint2);",
              "                SetEquipmentStats(item, 0, 0);",
              "                SpecialToEquipment(FindBonusByNameInCfg('RevAcryn_BattleDroid' + tint1), item);",
              "                AddItemToShop(place, item);",
              "",
              "                j = j - 1;",
              "            }",
              "        }",
              "        countBattleDroids = CurTurn() + Rnd(75, 150);",
              "    }",
              "",
              "    //НОКМ начнёт появляться не раньше, чем через 14 лет после начала игры, поскольку НОКМ-3314",
              "    if(CurTurn() >= 5411)",
              "    {",
              "        if(GTL >= 6)",
              "        {",
              "            //Закидываем НОКМ в магазины ВБ по всей Галактике (и иногда на Рамгатру)",
              "            if(countNOKM <= CurTurn())",
              "            {",
              "                check = 0;",
              "                bonus = FindBonusByNameInCfg('RevAcryn_NOKM');",
              "                //Выбираем планету Рамгатру (система Тарон)",
              "                for(i = 0; i < StarPlanets(GalaxyStar(0)); i = i + 1)",
              "                {",
              "                    if(PlanetName(StarPlanets(GalaxyStar(0), i)) == CT('PlanetName.Maloc.02'))",
              "                    {",
              "                        place = StarPlanets(GalaxyStar(0), i);",
              "                        break;",
              "                    }",
              "                }",
              "                //Проверяем её магазин на наличие НОКМ",
              "                for(i = 0; i < ShopItems(place); i = i + 1)",
              "                {",
              "                    item = ShopItems(place, i);",
              "                    if(EqSpecial(item) > -1)",
              "                    {",
              "                        if(EqSpecial(item) == bonus)",
              "                        {",
              "                            check = 1;",
              "                            break;",
              "                        }",
              "                    }",
              "                }",
              "                if(!check)",
              "                {",
              "                    if(Rnd(1, 100) <= 25)",
              "                    {",
              "                        item = CreateEquipment(t_Engine, Rnd(50, 100), 6, 0);",
              "                        SetEquipmentStats(item, 0, 0);",
              "                        SetEquipmentStats(item, 0, 1);",
              "                        SpecialToEquipment(bonus, item);",
              "                        AddItemToShop(place, item);",
              "                    }",
              "                }",
              "                //Начинаем перебирать все системы и станции в них - ищем ВБ",
              "                for(i = 0; i < GalaxyStars(); i = i + 1)",
              "                {",
              "                    star = GalaxyStar(i);",
              "                    if(StarOwner(star) != 0) continue;",
              "                    if(!StarRuins(star, 'WB')) continue;",
              "                    place = StarRuins(star, 'WB');",
              "                    check = 0;",
              "                    //Нашли ВБ, а теперь проверяем её магазин на наличие НОКМ",
              "                    for(j = 0; j < ShopItems(place); j = j + 1)",
              "                    {",
              "                        item = ShopItems(place, j);",
              "                        if(EqSpecial(item) > -1)",
              "                        {",
              "                            if(EqSpecial(item) == bonus)",
              "                            {",
              "                                check = 1;",
              "                                break;",
              "                            }",
              "                        }",
              "                    }",
              "                    if(!check)",
              "                    {",
              "                        if(Rnd(1, 100) <= 14)",
              "                        {",
              "                            item = CreateEquipment(t_Engine, Rnd(60, 120), 6, 0);",
              "                            SetEquipmentStats(item, 0, 0);",
              "                            SetEquipmentStats(item, 0, 1);",
              "                            SpecialToEquipment(bonus, item);",
              "                            ItemDurability(item, Rnd(69, 100));",
              "                            AddItemToShop(place, item);",
              "                        }",
              "                    }",
              "                }",
              "                countNOKM = CurTurn() + Rnd(75, 150);",
              "            }",
              "        }",
              "    }",
              "",
              "    //Закидываем сборочного дроида в магазины ЦР, НБ, ТЦ и МЦ по всей Галактике",
              "    if(countAssemblyDroids <= CurTurn())",
              "    {",
              "        bonus = FindBonusByNameInCfg('RevAcryn_AssemblyDroidNormal');",
              "        //Начинаем перебирать все системы и станции в них - ищем ЦР, НБ, ТЦ и МЦ",
              "        for(i = 0; i < GalaxyStars(); i = i + 1)",
              "        {",
              "            star = GalaxyStar(i);",
              "            if(StarOwner(star) != 0) continue;",
              "            for(j = 0; j < StarRuins(star); j = j + 1)",
              "            {",
              "                place = StarRuins(star, j);",
              "                tempStr = ShipType(place);",
              "                if(tempStr != 'RC' && tempStr != 'SB' && tempStr != 'TC' && tempStr != 'MC') continue;",
              "                check = 0;",
              "                //Нашли станцию, а теперь проверяем её магазин на наличие сборочного дроида",
              "                for(k = 0; k < ShopItems(place); k = k + 1)",
              "                {",
              "                    item = ShopItems(place, k);",
              "                    if(EqSpecial(item) > -1)",
              "                    {",
              "                        if(EqSpecial(item) == bonus)",
              "                        {",
              "                            check = 1;",
              "                            break;",
              "                        }",
              "                    }",
              "                }",
              "                if(!check)",
              "                {",
              "                    if(Rnd(1, 100) <= 10)",
              "                    {",
              "                        check = Rnd(Peleng, Gaal); //Определяем расу-производителя",
              "                        if(check == 1) item = CreateEquipment(t_RepairRobot, Rnd(70, 95), GTL, check);",
              "                        else if(check == 2) item = CreateEquipment(t_RepairRobot, Rnd(65, 80), GTL, check);",
              "                        else if(check == 3) item = CreateEquipment(t_RepairRobot, Rnd(50, 65), GTL, check);",
              "                        else if(check == 4) item = CreateEquipment(t_RepairRobot, Rnd(60, 75), GTL, check);",
              "",
              "                        //Задаём эффективность ремонта сборочного дроида:",
              "                        //5 ГТУ - 20 * 5 = 100",
              "                        //6 ГТУ - 30 * 5 = 150",
              "                        //7 ГТУ - 40 * 5 = 200",
              "                        //8 ГТУ - 50 * 5 = 250",
              "                        SetEquipmentStats(item, (20 + ((GTL - 5) * 10)) * 5, 0);",
              "",
              "                        SpecialToEquipment(bonus, item);",
              "                        if(tempStr == 'MC') ItemDurability(item, Rnd(67, 100));",
              "                        LinkItemToScript(item);",
              "                        //Присваиваем ему акткод",
              "                        ItemOnActCode(item, GenerateCodeStringFromBlock('ActCodeBlocksList.RevAcrynAssemblyDroidActCode'));",
              "                        SetName(item, '<color=49,239,255>' + CT('Items.RepairRobot.AssemblyDroidType.' + ItemLevel(item)) + Name(item) + '</color>');",
              "                        //Разрешаем продажу этого скриптового дроида",
              "                        CanSellItem(item, 1);",
              "                        //И добавляем дроида в магазин",
              "                        AddItemToShop(place, item);",
              "                    }",
              "                }",
              "            }",
              "        }",
              "        countAssemblyDroids = CurTurn() + Rnd(75, 150);",
              "    }",
              "",
              "    //Раскидываем по магазинам \"Убиваторов\"",
              "    if(GTL >= 7)",
              "    {",
              "        if(countUbivators <= CurTurn())",
              "        {",
              "            //Начинаем перебирать все системы и станции в них, ищем подходящие",
              "            ArrayClear(tarr1);",
              "            for(i = 0; i < GalaxyStars(); i = i + 1)",
              "            {",
              "                star = GalaxyStar(i);",
              "                //Пропускаем доминаторские и \"кастомные\" системы",
              "                if(StarOwner(star) == 1) continue;",
              "                if(StarCustomFaction(star) != '') continue;",
              "",
              "                //Ищем среди станций системы подходящие для продажи Убиватора",
              "                for(j = 0; j < StarRuins(star); j = j + 1)",
              "                {",
              "                    place = StarRuins(star, j);",
              "                    tempStr = ShipType(place);",
              "",
              "                    check = 0;",
              "                    if(tempStr == 'PB') check = 1;",
              "                    else if(tempStr == 'WB') check = 1;",
              "                    else if(tempStr == 'MB') check = 1;",
              "                    else if(tempStr == 'Manaan') check = 1;",
              "",
              "                    //Проверяем, имеется в продаже станции схожий акрин и если да, то удаляем его",
              "                    if(check)",
              "                    {",
              "                        //Имеется случайный шанс, что в этот раз на данную станцию акрин добавлен не будет",
              "                        if(Rnd(1, 100) <= 30) continue;",
              "",
              "                        for(k = 0; k < ShopItems(place); k = k + 1)",
              "                        {",
              "                            item = ShopItems(place, k);",
              "",
              "                            check = EqSpecial(item);",
              "                            if(check > -1)",
              "                            {",
              "                                tempStr = BonusNumInCfg(check);",
              "                                if(!findsubstr(tempStr, 'RevAcryn_Ubivator'))",
              "                                {",
              "                                    FreeItem(GetItemFromShop(place, k));",
              "                                }",
              "                            }",
              "                        }",
              "",
              "                        ArrayAdd(tarr1, place);",
              "                    }",
              "                }",
              "            }",
              "",
              "            //Если нашли, то выбираем из общего числа найденных станций несколько случайных",
              "            tint1 = ArrayDim(tarr1) - 1;",
              "            if(tint1)",
              "            {",
              "                j = Rnd(2, 4);",
              "                if(j > tint1) j = tint1;",
              "                while(j)",
              "                {",
              "                    //Случайно определяем станцию, на которую будет добавлен Убиватор",
              "                    tint1 = Rnd(1, j);",
              "                    place = tarr1[tint1];",
              "                    //После чего удаляем её из списка",
              "                    ArrayDelete(tarr1, tint1);",
              "",
              "                    //Определяем ТУ будущего Убиватора",
              "                    if(GTL == 8) tint1 = Rnd(7, 8);",
              "                    else tint1 = 7;",
              "",
              "                    //Определяем расу",
              "                    tint2 = PlanetOwner(NearCivilPlanet(place));",
              "                    if(tint2 == 5 || tint2 == 6)",
              "                    {",
              "                        j = j - 1;",
              "                        continue;",
              "                    }",
              "                    //И вес будущего Убиватора",
              "                    //Малоки",
              "                    if(tint2 == 0) i = round(1.6 * CT('Items.Radar.AverageSize')) + Rnd(-5, 4);",
              "                    //Пеленги",
              "                    else if(tint2 == 1) i = round(1.2 * CT('Items.Radar.AverageSize')) + Rnd(-3, 4);",
              "                    //Люди",
              "                    else if(tint2 == 2) i = round(1.0 * CT('Items.Radar.AverageSize')) + Rnd(-3, 5);",
              "                    //Фэяне",
              "                    else if(tint2 == 3) i = round(0.6 * CT('Items.Radar.AverageSize')) + Rnd(-1, 6);",
              "                    //Гаальцы",
              "                    else if(tint2 == 4) i = round(0.8 * CT('Items.Radar.AverageSize')) + Rnd(-2, 6);",
              "                    //Пираты",
              "                    else i = round(1.3 * CT('Items.Radar.AverageSize')) + Rnd(-3, 4);",
              "                    if(j <= 0) i = 1;",
              "",
              "                    //Создаём, акринируем, после чего, наконец, добавляем Убиватора в магазин",
              "                    item = CreateEquipment(t_Radar, i, tint1, tint2);",
              "                    SetEquipmentStats(item, 0, 0);",
              "                    SpecialToEquipment(FindBonusByNameInCfg('RevAcryn_Ubivator' + tint1), item);",
              "                    AddItemToShop(place, item);",
              "",
              "                    j = j - 1;",
              "                }",
              "            }",
              "            countUbivators = CurTurn() + Rnd(75, 150);",
              "        }",
              "    }",
              "}"          
          ]        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "InitPlanet",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  1,
          "#":  2,
          "Race":  62,
          "Owner":  62,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  70,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  0,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "InitStar",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  0,
          "#":  1,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "Statements":      
      [
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  210,
          "Pos.y":  120,
          "Parent":  -1,
          "#":  11,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!ShipIsTakeoff(Player())"          
          ]        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "PlayerState",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  3,
          "#":  4,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "i",
          "Pos.x":  170,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  7,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "j",
          "Pos.x":  170,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  8,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "countNOKM",
          "Pos.x":  310,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  10,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "item",
          "Pos.x":  170,
          "Pos.y":  260,
          "Parent":  -1,
          "#":  12,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "place",
          "Pos.x":  170,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  13,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "k",
          "Pos.x":  230,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  14,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "star",
          "Pos.x":  170,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  15,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "bonus",
          "Pos.x":  170,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  16,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "check",
          "Pos.x":  230,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  17,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "countAssemblyDroids",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  10,
          "#":  18,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tempStr",
          "Pos.x":  230,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  19,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "countBattleDroids",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  18,
          "#":  20,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint1",
          "Pos.x":  170,
          "Pos.y":  320,
          "Parent":  -1,
          "#":  21,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint2",
          "Pos.x":  170,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  22,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tarr1",
          "Pos.x":  230,
          "Pos.y":  260,
          "Parent":  -1,
          "#":  23,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "countUbivators",
          "Pos.x":  0,
          "Pos.y":  20,
          "Parent":  20,
          "#":  24,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GTL",
          "Pos.x":  170,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  25,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  3,
      "End":  4,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  3,
      "End":  2,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  2,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  0,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  11,
      "End":  9,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "BlockPar.EC.Total.Strings":  0,
  "BlockPar.EC":  
  [
  
  ]
}