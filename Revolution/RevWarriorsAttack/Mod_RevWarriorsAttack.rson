{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -284,
  "ViewPos.y":  -15,
  "ScriptName":  "Mod_RevWarriorsAttack",
  "ScriptFileOut":  "H:\\Mod_RevWarriorsAttack.scr",
  "ScriptTextOut":  "H:\\Mod_RevWarriorsAttack.txt",
  "GraphPoint.Count":  57,
  "GraphLink.Count":  37,
  "GraphRectText.Count":  0,
  "Variables.Count":  13,
  "Stars.Count":  2,
  "Planets.Count":  2,
  "Ships.Count":  1,
  "States.Count":  8,
  "Groups.Count":  3,
  "Places.Count":  3,
  "Items.Count":  3,
  "Ethers.Count":  0,
  "Dialogs.Count":  0,
  "DialogMessages.Count":  0,
  "DialogAnswers.Count":  0,
  "Operations.Count":  8,
  "Statements.Count":  14,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "Warriors",
          "Pos.x":  540,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  5,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "PlayerGroup",
          "Pos.x":  680,
          "Pos.y":  360,
          "Parent":  -1,
          "#":  14,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "BombCarrier",
          "Pos.x":  380,
          "Pos.y":  360,
          "Parent":  -1,
          "#":  17,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Items":      
      [
        {
          "Type":  "TItem",
          "Name":  "quarkBomb_3",
          "Pos.x":  190,
          "Pos.y":  440,
          "Parent":  -1,
          "#":  27,
          "Class":  5,
          "Item.Type":  0,
          "Size":  10,
          "Level":  1,
          "Radius":  150,
          "Owner":  6,
          "Useless":  ""        
        },
        {
          "Type":  "TItem",
          "Name":  "quarkBomb_2",
          "Pos.x":  190,
          "Pos.y":  460,
          "Parent":  -1,
          "#":  28,
          "Class":  5,
          "Item.Type":  0,
          "Size":  10,
          "Level":  1,
          "Radius":  150,
          "Owner":  6,
          "Useless":  ""        
        },
        {
          "Type":  "TItem",
          "Name":  "quarkBomb_1",
          "Pos.x":  190,
          "Pos.y":  420,
          "Parent":  -1,
          "#":  29,
          "Class":  5,
          "Item.Type":  14,
          "Size":  10,
          "Level":  1,
          "Radius":  150,
          "Owner":  6,
          "Useless":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  320,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  12,
          "Total.Lines":  4,
          "Code.Type":  "Global",
          "Code":          
          [
              "if(CurTurn() > 1030)",
              "{",
              "    if(GLastTurnRun(GScriptName) + 1460 < CurTurn()) GRun();",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  340,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  13,
          "Total.Lines":  444,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Формируем группу из 3-6 военных",
              "if(!q)",
              "{",
              "    for(i = 0; i < Rnd(3, 6); i = i + 1)",
              "    {",
              "        //Создаем военного с очень большим стартовым капиталом",
              "        tmp=BuyWarrior(StartPlanet,1000);",
              "        //Устанавливаем размер корпуса",
              "        //Коэффициент сложности (0.00085*GalaxyDiffLevels()+1) = [1,0425..1,425] при сложности [50..500]",
              "        ItemSize(ShipItems(tmp,0),round((0.00085*GalaxyDiffLevels()+1)*GalaxyTechLevel()*100)+Rnd(-25,45));",
              "        //На всякий случай, устанавливаем минимальный размер корпуса 250",
              "        if(ItemSize(ShipItems(tmp,0))<250)",
              "            ItemSize(ShipItems(tmp,0),250);",
              "        //Восстанавливаем прочность корпуса",
              "        HullHP(tmp,ItemSize(ShipItems(tmp,0)));",
              "        //Устанавливаем базовый вид для корпуса",
              "        Chameleon(tmp);",
              "        //Гарантированно открываем слот дроида",
              "            ShipSpecialBonuses(tmp,bonSlotDroid,1);",
              "        //Аналогично для слота ГЗП",
              "            ShipSpecialBonuses(tmp,bonSlotDef,1);",
              "        //Обновляем оборудование военного",
              "        for(j=0;j<5;j=j+1) ShipRefit(tmp);",
              "        //Гарантированно снимаем серию с корпуса",
              "        HullSeries(ShipItems(tmp,0),-1);",
              "        tmp2=ShipItems(tmp,0);",
              "        //Открываем слоты для артефактов, если их меньше трех",
              "        if(GetEquipmentStats(tmp2,2)<3)",
              "            ShipSpecialBonuses(tmp,bonSlotArt,3-GetEquipmentStats(tmp2,2));",
              "        //Определяем навыки точности, маневренности и техники",
              "        for(j=0;j<3;j=j+1)",
              "        {",
              "            tint=round(0.5*GalaxyTechLevel())+Rnd(0,2);",
              "            ShipSkill(tmp,j,tint);",
              "        }",
              "        //Выдаем ГЗП, если у военного он почему-то отсутствует",
              "        if(!ShipEqInSlot(tmp,t_DefGenerator))",
              "        {",
              "            tmp2=CreateEquipment(t_DefGenerator,Rnd(20,45),GalaxyTechLevel(),ShipOwner(tmp));",
              "            AddItemToShip(tmp,tmp2);",
              "            ItemIsInUse(tmp2,tmp,1);",
              "        }",
              "        //Аналогично для дроида",
              "        if(!ShipEqInSlot(tmp,t_RepairRobot))",
              "        {",
              "            tmp2=CreateEquipment(t_RepairRobot,Rnd(20,45),GalaxyTechLevel(),ShipOwner(tmp));",
              "            AddItemToShip(tmp,tmp2);",
              "            ItemIsInUse(tmp2,tmp,1);",
              "        }",
              "        //Повышаем технический уровень оборудования военных",
              "        for(j=ShipItems(tmp);j>=0;j=j-1)",
              "        {",
              "            tmp2=ShipItems(tmp,j);",
              "            //Пропускаем оборудование в трюме",
              "            if(!ItemIsInUse(tmp2))",
              "                continue;",
              "            //Пропускаем корпус",
              "            if(ItemType(tmp2)==t_Hull)",
              "                continue;",
              "            //Пропускаем конец списка",
              "            if(tmp2!=0)",
              "            {",
              "                if((GalaxyTechLevel()-ItemLevel(tmp2))>=2)",
              "                {",
              "                    //Улучшение оружия будет производиться с учетом случайного фактора",
              "                    //tint влияет на то, будет ли оружие улучшено до уровня текущего ГТУ или меньшего",
              "                    tint=Rnd(0,2);",
              "                    if(ItemType(tmp2)>=t_Weapon1 && ItemType(tmp2)<=t_Weapon18)",
              "                    {",
              "                        //Если оружие отстает от ГТУ ровно на два уровня, и военному не повезло с рандомом, улучшения не будет",
              "                        //Заодно скрипт не будет исполнять лишний код",
              "                        if((GalaxyTechLevel()-ItemLevel(tmp2)-tint)==0)",
              "                            continue;",
              "                        //Создаем идентичное оружие текущего или слегка устаревшего ГТУ",
              "                        else",
              "                            tmp3=CreateEquipment(ItemType(tmp2),ItemSize(tmp2),(GalaxyTechLevel()-tint),ItemOwner(tmp2));",
              "                    }",
              "                    //Отдельное условие для кастомного оружия",
              "                    else if(ItemType(tmp2)==t_CustomWeapon)",
              "                    {",
              "                        if((GalaxyTechLevel()-ItemLevel(tmp2)-tint)==0)",
              "                            continue;",
              "                        else",
              "                            tmp3=CreateCustomWeapon(CustomWeaponType(tmp2),ItemSize(tmp2),(GalaxyTechLevel()-tint),ItemOwner(tmp2));",
              "                    }",
              "                    //Создаем идентичный предмет текущего ГТУ",
              "                    else",
              "                        tmp3=CreateEquipment(ItemType(tmp2),ItemSize(tmp2),GalaxyTechLevel(),ItemOwner(tmp2));",
              "                    //Если у оригинального предмета был акрин, накладываем его на копию",
              "                    if(EqSpecial(tmp2)>-1)",
              "                        SpecialToEquipment(EqSpecial(tmp2),tmp3);",
              "                    //Аналогично для микромодулей",
              "                    if(EqModule(tmp2)>-1)",
              "                        ModuleToEquipment(EqModule(tmp2),tmp3);",
              "                    //Повышаем технологический уровень оригинального предмета",
              "                    ItemLevel(tmp2,GalaxyTechLevel());",
              "                    //Повышаем стоимость предмета",
              "                    ItemCost(tmp2,ItemCost(tmp3));",
              "                    //Копия нам больше не нужна",
              "                    FreeItem(tmp3);",
              "                }",
              "            }",
              "        }",
              "        //Улучшаем оборудование военных",
              "        for(j=ShipItems(tmp);j>=0;j=j-1)",
              "        {",
              "            tmp2=ShipItems(tmp,j);",
              "            //Пропускаем оборудование в трюме",
              "            if(!ItemIsInUse(tmp2))",
              "                continue;",
              "            //Пропускаем конец списка",
              "            if(tmp2!=0)",
              "            //Пропускаем уже улучшенное оборудование",
              "            if(!ItemImprovement(tmp2))",
              "            {",
              "                //На степень улучшения будут влиять ГТУ и рандом",
              "                tint=Rnd(1,100);",
              "                //ГТУ = 3 или 4",
              "                if(GalaxyTechLevel()<5)",
              "                {",
              "                    //15% - лучшие специалисты, 25% - обычные специалисты, 60% - стажеры",
              "                    if(tint>85)",
              "                        tmp3=2;",
              "                    else if(tint>60)",
              "                        tmp3=1;",
              "                    else",
              "                        tmp3=0;",
              "                }",
              "                //ГТУ = 7 или 8",
              "                else if(GalaxyTechLevel()>6)",
              "                {",
              "                    //60% - лучшие специалисты, 25% - обычные специалисты, 15% - стажеры",
              "                    if(tint>40)",
              "                        tmp3=2;",
              "                    else if(tint>15)",
              "                        tmp3=1;",
              "                    else",
              "                        tmp3=0;",
              "                }",
              "                //ГТУ = 5 или 7",
              "                else",
              "                {",
              "                    //35% - лучшие специалисты, 35% - обычные специалисты, 30% - стажеры",
              "                    if(tint>65)",
              "                        tmp3=2;",
              "                    else if(tint>30)",
              "                        tmp3=1;",
              "                    else",
              "                        tmp3=0;",
              "                }",
              "                ItemImprovement(tmp2,tmp3,0);",
              "            }",
              "        }",
              "        //С некоторой вероятностью выдаем военному один или несколько стимуляторов",
              "        //Малокская сижа",
              "        if(Rnd(1,100)<=35)",
              "            ShipHealthFactor(tmp,13,-1);",
              "        //Звездная пыль",
              "        if(Rnd(1,100)<=35)",
              "            ShipHealthFactor(tmp,15,-1);",
              "        //Гаалистра времени",
              "        if(Rnd(1,100)<=35)",
              "            ShipHealthFactor(tmp,17,-1);",
              "        //Если военный находится под действием хотя бы одного стимулятора, выдаем биомир",
              "        if((ShipHealthFactor(tmp,13)>0) || (ShipHealthFactor(tmp,15)>0) || (ShipHealthFactor(tmp,17)>0))",
              "        {",
              "            tmp2=CreateArt(t_ArtBio,ShipOwner(tmp));",
              "            //С вероятностью 34% артефакт будет выпадать в качестве трофея",
              "            if(Rnd(1,100)<=66)",
              "                NoDropItem(tmp2,1);",
              "            AddItemToShip(tmp,tmp2);",
              "            ItemIsInUse(tmp2,tmp,1);",
              "        }",
              "        //С вероятностью 40% выдаем военному случайный дополнительный артефакт",
              "        if(Rnd(1,100)<=40)",
              "        {",
              "            tint=Rnd(1,4);",
              "            //Железные жупи",
              "            if(tint==1)",
              "            {",
              "                tmp2=CreateArt(t_ArtefactHull,ShipOwner(tmp));",
              "                //С вероятностью 34% артефакт будет выпадать в качестве трофея",
              "                if(Rnd(1,100)<=66)",
              "                    NoDropItem(tmp2,1);",
              "                AddItemToShip(tmp,tmp2);",
              "                ItemIsInUse(tmp2,tmp,1);",
              "            }",
              "            //Поляризатор",
              "            else if(tint==2)",
              "            {",
              "                tmp2=CreateArt(t_ArtefactDef,ShipOwner(tmp));",
              "                //С вероятностью 34% артефакт будет выпадать в качестве трофея",
              "                if(Rnd(1,100)<=66)",
              "                    NoDropItem(tmp2,1);",
              "                AddItemToShip(tmp,tmp2);",
              "                ItemIsInUse(tmp2,tmp,1);",
              "            }",
              "            //аЭгис",
              "            else if(tint==3)",
              "            {",
              "                tmp2=CreateArt(t_ArtPDTurret,ShipOwner(tmp));",
              "                //С вероятностью 34% артефакт будет выпадать в качестве трофея",
              "                if(Rnd(1,100)<=66)",
              "                    NoDropItem(tmp2,1);",
              "                AddItemToShip(tmp,tmp2);",
              "                ItemIsInUse(tmp2,tmp,1);",
              "            }",
              "            //Проглот",
              "            else if(tint==4)",
              "            {",
              "                tmp2=CreateArt(t_ArtEnergyDef,ShipOwner(tmp));",
              "                //С вероятностью 34% артефакт будет выпадать в качестве трофея",
              "                if(Rnd(1,100)<=66)",
              "                    NoDropItem(tmp2,1);",
              "                AddItemToShip(tmp,tmp2);",
              "                ItemIsInUse(tmp2,tmp,1);",
              "            }",
              "",
              "        }",
              "",
              "        //Первый созданный корабль будет нести бомбы",
              "        if(!i)",
              "        {",
              "            tmp2 = ShipItems(tmp, 0);",
              "            //Если у военного закрыт слот форсажа, открываем",
              "            if(GetEquipmentStats(tmp2, 8) < 1) ShipSpecialBonuses(tmp, bonSlotForsage, 1);",
              "            //Выдаем обливионный коннектор, чтобы у военного не сломался двигатель",
              "            tmp2 = CreateArt(t_ArtForsage, ShipOwner(tmp));",
              "            if(Rnd(1, 100) <= 66) NoDropItem(tmp2, 1);",
              "            AddItemToShip(tmp, tmp2);",
              "            ItemIsInUse(tmp2, tmp, 1);",
              "            //По этой же причине выдаем ему стимулятор \"супер техник\"",
              "            ShipHealthFactor(tmp, 16, -1);",
              "            //Если у военного нет биомира, исправляем ситуацию",
              "            if(!ArtefactTypeInUse(tmp, t_ArtBio))",
              "            {",
              "                tmp2 = CreateArt(t_ArtBio, ShipOwner(tmp));",
              "                if(Rnd(1, 100) <= 66)",
              "                NoDropItem(tmp2, 1);",
              "                AddItemToShip(tmp, tmp2);",
              "                ItemIsInUse(tmp2, tmp, 1);",
              "            }",
              "            //Загружаем бомбы на корабль",
              "            //Если у игрока подключен мод ExpArts, выдаем военным бомбы оттуда",
              "            if(IsScriptActive('Mod_ExpArts'))",
              "            {",
              "                for(j = 0; j <= 2; j = j + 1)",
              "                {",
              "                    //Создаем кварковую бомбу",
              "                    tmp2 = CreateQuestItem('Quark_bomb');",
              "                    ItemOwner(tmp2, ShipOwner(tmp));",
              "                    //С вероятностью 50% на бомбе будет таймер",
              "                    if(Rnd(1, 100) <= 50)",
              "                    {",
              "                        //Записываем в бомбу задержку таймера",
              "                        UselessItemData(tmp2, 1, Rnd(1, 3));",
              "                        //Устанавливаем таймер в положение выкл. и добавляем контактный взрыватель",
              "                        UselessItemData(tmp2, 2, -3);",
              "                        //Название бомбы",
              "                        SetName(tmp2, Format(Name(tmp2), CT('Script.Mod_ExpArts.TheBomb'), '</color>' + CT('Script.Mod_ExpArts.TheMine') + CT('Script.Mod_ExpArts.BombWithTimer')));",
              "                        //Добавляем к описанию бомбы время срабатывания таймера",
              "                        UselessItemText(tmp2, CT('UselessItems.'+EquipmentImageName(tmp2) + '.Text') + substr(CT('Cheat.Ok'), 0, 2) + '<br><clr><clrEnd><br>' + CT('Script.Mod_ExpArts.TimerIsSet'));",
              "                        SetName(tmp2, Format(Name(tmp2), CT('Script.Mod_ExpArts.TheBomb'), '</color>' + CT('Script.Mod_ExpArts.TheMine')));",
              "                    }",
              "                    //Устанавливаем контактный взрыватель и меняем название",
              "                    else",
              "                    {",
              "                        UselessItemData(tmp2, 2, -1);",
              "                        SetName(tmp2, Format(Name(tmp2), CT('Script.Mod_ExpArts.TheBomb'), '</color>' + CT('Script.Mod_ExpArts.TheMine')));",
              "                    }",
              "                    ItemSize(tmp2, ItemSize(tmp2) + Rnd(-2, 2));",
              "                    ItemCost(tmp2, ItemCost(tmp2) + Rnd(-297, 303));",
              "                    AddItemToShip(tmp, tmp2);",
              "                }",
              "            }",
              "            //В противном случае создаем обычные кварковые бомбы",
              "            else",
              "            {",
              "                for(j = 0; j < 3; j = j + 1)",
              "                {",
              "                    tmp2 = CreateArt(t_ArtefactBomb, ShipOwner(tmp));",
              "                    AddItemToShip(tmp, tmp2);",
              "                }",
              "            }",
              "",
              "            //Заносим корабль с бомбами в отдельную группу",
              "            ShipJoin(BombCarrier, tmp);",
              "        }",
              "        //Присоединяем военного к основной группе",
              "        else ShipJoin(Warriors, tmp);",
              "",
              "        ArrangeItems(tmp);",
              "        FreeAllHoldEquipment(tmp);",
              "        FixOverweight(tmp);",
              "    }",
              "}",
              "//Группа военных уже сформирована и находится в пути",
              "if(!q) q = 1;",
              "",
              "if(q)",
              "{",
              "    //Если корабль с бомбами жив и находится в нужной системе, формируем массив с доминаторами",
              "    if(GroupCount(BombCarrier) && GroupIn(BombCarrier,TargetSystem))",
              "    {",
              "        //Перебираем все корабли в системе",
              "        for(j=StarShips(TargetSystem); j>=0; j=j-1)",
              "        {",
              "            tmp=StarShips(TargetSystem,j);",
              "            //Пропускаем конец списка",
              "            if(tmp)",
              "            {",
              "                //Выбираем только доминаторов",
              "                if(!ShipTypeN(tmp))",
              "                {",
              "                    //Пропускаем боссов",
              "                    if(!ShipSubType(tmp)) continue;",
              "                    //Пропускаем клигов",
              "                    if(ShipSubType(tmp)==7) continue;",
              "                    //Добавляем id доминатора в массив",
              "                    ArrayAdd(domiks,Id(tmp));",
              "                    //Заполняем нулями массив с количеством находящихся рядом доминаторов",
              "                    ArrayAdd(nShips,0);",
              "                }",
              "            }",
              "        }",
              "        //Если в системе не осталось доминаторов, выводим военных из скрипта",
              "        if(ArrayDim(domiks)<=1 || StarOwner(TargetSystem)!=1)",
              "        {",
              "            if(ShipInStar(GroupToShip(BombCarrier),StartSystem)) ChangeState('Landing',GroupToShip(BombCarrier));",
              "            else AllShipOut();",
              "        }",
              "        if(ArrayDim(domiks)>1)",
              "        {",
              "            //Назначеаем первый в массиве корабль ближайшим при первом прогоне цикла",
              "            if(!isNearest && q==1) isNearest=IdToShip(domiks[1]);",
              "            //Перебираем значения массива",
              "            //Игнорируем нулевую ячейку с пустым значением",
              "            for(j=1; j<ArrayDim(domiks); j=j+1)",
              "            {",
              "                tmp=IdToShip(domiks[j]);",
              "                //Пропускаем уничтоженных доминаторов, заодно сразу же удаляем элемент из второго массива",
              "                if(!tmp)",
              "                {",
              "                    ArrayDelete(domiks,j);",
              "                    ArrayDelete(nShips,j);",
              "                    continue;",
              "                }",
              "                //Пропускаем отсутствующие в системе корабли (например, доминатор решил атаковать другую систему)",
              "                if(ShipStar(tmp)!=TargetSystem)",
              "                {",
              "                    ArrayDelete(domiks,j);",
              "                    ArrayDelete(nShips,j);",
              "                    continue;",
              "                }",
              "                //Пропускаем не находящиеся в космосе корабли (например, доминатор сел на планету)",
              "                if(!ShipInNormalSpace(tmp))",
              "                {",
              "                    ArrayDelete(domiks,j);",
              "                    ArrayDelete(nShips,j);",
              "                    continue;",
              "                }",
              "                //Записываем во второй массив, сколько доминаторов находится неподалеку от каждого доминатора",
              "                for(k=1; k<ArrayDim(domiks); k=k+1)",
              "                {",
              "                    //Пропускаем уже выбранный корабль",
              "                    if(j==k)",
              "                        continue;",
              "                    //Смотрим расстояние между выбранным доминатором и остальными",
              "                    tmp3=Dist(tmp,IdToShip(domiks[k]));",
              "                    //Если доминатор находится близко к своему \"сородичу\", фиксируем этот факт во втором массиве",
              "                    if(tmp3<=350) nShips[j]=nShips[j]+1;",
              "                }",
              "                //Если цель для сближения мертва на момент начала хода, случайно выбираем новую",
              "                if(!(IdToShip(isNearest)))",
              "                {",
              "                    tmp2=ArrayDim(domiks)-1;",
              "                    tint=Rnd(1,tmp2);",
              "                    isNearest=domiks[tint];",
              "                    shipsNear=0;",
              "                }",
              "                //Записываем, сколько доминаторов рядом с ним",
              "                //Ищем доминатора с наибольшим количеством \"сородичей\" рядом",
              "                if(shipsNear<nShips[j])",
              "                {",
              "                    shipsNear=nShips[j];",
              "                    isNearest=domiks[j];",
              "                }",
              "                //Если находится несколько доминаторов с одинаковым количеством \"соседей\", ищем ближайшего",
              "                if(shipsNear==nShips[j])",
              "                {",
              "                    tmp2=Dist(GroupToShip(BombCarrier),tmp);",
              "                    if(tmp2<=distance)",
              "                    {",
              "                        isNearest=domiks[j];",
              "                        distance=tmp2;",
              "                    }",
              "                }",
              "                //Если мод ExpArts не подключен, прописываем условие взрыва бомб",
              "                if(!IsScriptActive('Mod_ExpArts'))",
              "                {",
              "                    //Если бомбы сброшены и находятся около доминаторов, подрываем",
              "                    //Обязательно убеждаемся в существовании доминатора, иначе краш при срабатывании нескольких бомб",
              "                    if(ItemExist(quarkBomb_1) && ItemIn(quarkBomb_1,TargetSystem))",
              "                    {",
              "                        if(IdToShip(domiks[j]))",
              "                        {",
              "                            if(Dist(quarkBomb_1,IdToShip(domiks[j]))<=250) ItemDestroy(quarkBomb_1,2);",
              "                        }",
              "                    }",
              "                    if(ItemExist(quarkBomb_2) && ItemIn(quarkBomb_2,TargetSystem))",
              "                    {",
              "                        if(IdToShip(domiks[j]))",
              "                        {",
              "                            if(Dist(quarkBomb_2,IdToShip(domiks[j]))<=250) ItemDestroy(quarkBomb_2,2);",
              "                        }",
              "                    }",
              "",
              "                    if(ItemExist(quarkBomb_3) && ItemIn(quarkBomb_3, TargetSystem))",
              "                    {",
              "                        if(IdToShip(domiks[j]))",
              "                        {",
              "                            if(Dist(quarkBomb_3, IdToShip(domiks[j])) <= 250) ItemDestroy(quarkBomb_3, 2);",
              "                        }",
              "                    }",
              "                }",
              "            }",
              "        }",
              "",
              "        //Очищаем массивы",
              "        ArrayClear(domiks);",
              "        ArrayClear(nShips);",
              "        //Присваиваем переменной другое значение, чтобы не срабатывал триггер на первое присвоение isNearest",
              "        if(q == 1) q = 2;",
              "    }",
              "",
              "    //Если ни в одной из скриптовых групп нет кораблей - выводим из скрипта игрока и бомбы (если они есть)",
              "    if((!GroupCount(Warriors)) && (!GroupCount(BombCarrier)))",
              "    {",
              "        if(ItemExist(quarkBomb_1)) ReleaseItemFromScript(quarkBomb_1);",
              "        if(ItemExist(quarkBomb_2)) ReleaseItemFromScript(quarkBomb_2);",
              "        if(ItemExist(quarkBomb_3)) ReleaseItemFromScript(quarkBomb_3);",
              "        AllShipOut();",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  350,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  26,
          "Total.Lines":  72,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(!ShipInHyperSpace(CurShip) && ShipInStar(CurShip,TargetSystem))",
              "{",
              "    //Если корабль с бомбами прибыл в систему, отдаем приказ на сближение с ближайшим доминатором",
              "    //Включаем форсаж",
              "    OrderForsage(CurShip,1);",
              "    OrderFollowShip(CurShip,IdToShip(isNearest),0);",
              "}",
              "if(Dist(CurShip,IdToShip(isNearest))<=350)",
              "{",
              "    tmp3=0;",
              "    //Если у игрока подключен мод ExpArts, ищем в трюме корабля юзлессы",
              "    if(IsScriptActive('Mod_ExpArts'))",
              "    {",
              "        for(i=ShipItems(CurShip);i>=0;i=i-1)",
              "        {",
              "            tmp2=ShipItems(CurShip,i);",
              "            if(ItemType(tmp2)==t_UselessItem)",
              "            {",
              "                //Привязываем бомбы к скрипту",
              "                tmp3=tmp3+1;",
              "                if(tmp3==1)",
              "                {",
              "                    LinkItemToScript(tmp2,quarkBomb_1);",
              "                    CanSellItem(quarkBomb_1,1);",
              "                }",
              "                else if(tmp3==2)",
              "                {",
              "                    LinkItemToScript(tmp2,quarkBomb_2);",
              "                    CanSellItem(quarkBomb_2,1);",
              "                }",
              "                else if(tmp3==3)",
              "                {",
              "                    LinkItemToScript(tmp2,quarkBomb_3);",
              "                    CanSellItem(quarkBomb_3,1);",
              "                }",
              "            }",
              "        }",
              "    }",
              "    //В противном случае, ищем бомбы среди артефактов",
              "    else",
              "    {",
              "        for(i=ShipArts(CurShip);i>=0;i=i-1)",
              "        {",
              "            tmp2=ShipArts(CurShip,i);",
              "            if(ItemType(tmp2)==t_ArtefactBomb)",
              "            {",
              "                //Аналогично привязываем бомбы к скрипту",
              "                tmp3=tmp3+1;",
              "                if(tmp3==1)",
              "                {",
              "                    LinkItemToScript(tmp2,quarkBomb_1);",
              "                    CanSellItem(quarkBomb_1,1);",
              "                }",
              "                else if(tmp3==2)",
              "                {",
              "                    LinkItemToScript(tmp2,quarkBomb_2);",
              "                    CanSellItem(quarkBomb_2,1);",
              "                }",
              "                else if(tmp3==3)",
              "                {",
              "                    LinkItemToScript(tmp2,quarkBomb_3);",
              "                    CanSellItem(quarkBomb_3,1);",
              "                }",
              "            }",
              "        }",
              "    }",
              "    //Если военный подлетел достаточно близко, сбрасываем бомбы",
              "    DropScriptItem(CurShip,quarkBomb_1);",
              "    DropScriptItem(CurShip,quarkBomb_2);",
              "    DropScriptItem(CurShip,quarkBomb_3);",
              "",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  350,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  40,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipOut(CurShip);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  540,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  42,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipOut(CurShip);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  510,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  45,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipOut(CurShip);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  410,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  47,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "ShipDestroy(CurShip);"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  300,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  56,
          "Total.Lines":  27,
          "Code.Type":  "Init",
          "Code":          
          [
              "//Функция для исправления перевеса корабля (если он есть): расширяет вместимость корпуса, повышает HP до максимума",
              "function FixOverweight(ship)",
              "{",
              "    ShipCalcParam(ship);",
              "    int space = ShipFreeSpace(ship);",
              "    if(space < 0)",
              "    {",
              "        dword hull = ShipItems(ship, 0);",
              "        ItemSize(hull, ItemSize(hull) + abs(space) + RndObject(1, 3, ship));",
              "        HullHP(hull, 'To100');",
              "        ShipCalcParam(ship);",
              "    }",
              "}",
              "",
              "//Функция, удаляющая из трюма корабля всё оборудование и оружие, но не удаляющая скриптовые предметы",
              "function FreeAllHoldEquipment(ship)",
              "{",
              "    for(int i = ShipItems(ship) - 1; i > 0; i = i - 1)",
              "    {",
              "        dword item = ShipItems(ship, i);",
              "        if(ItemIsInUse(item)) continue;",
              "        if(ItemType(item) < t_FuelTanks) continue;",
              "        if(ItemType(item) > t_CustomWeapon) continue;",
              "        if(ItemInScript(item) == 1) continue;",
              "        FreeItem(GetItemFromShip(ship, i));",
              "    }",
              "}"          
          ]        
        }      
      ],
      "Places":      
      [
        {
          "Type":  "TPlace",
          "Name":  "NearBombCarrier",
          "Pos.x":  560,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  16,
          "Place.Type":  5,
          "Angle":  "0",
          "Dist":  "0",
          "Radius":  250,
          "Obj1":  17,
          "Obj2":  -1        
        },
        {
          "Type":  "TPlace",
          "Name":  "JumpPoint",
          "Pos.x":  560,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  18,
          "Place.Type":  3,
          "Angle":  "0",
          "Dist":  "1",
          "Radius":  50,
          "Obj1":  1,
          "Obj2":  -1        
        },
        {
          "Type":  "TPlace",
          "Name":  "RegroupPoint",
          "Pos.x":  560,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  30,
          "Place.Type":  3,
          "Angle":  "0",
          "Dist":  "1",
          "Radius":  250,
          "Obj1":  0,
          "Obj2":  -1        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "StartPlanet",
          "Pos.x":  540,
          "Pos.y":  360,
          "Parent":  -1,
          "#":  2,
          "Race":  62,
          "Owner":  63,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        },
        {
          "Type":  "TPlanet",
          "Name":  "OccupiedPlanet",
          "Pos.x":  540,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  3,
          "Race":  62,
          "Owner":  65,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  460,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  4,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "StartSystem",
          "Pos.x":  540,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  0,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  true,
          "NoComeKling":  false        
        },
        {
          "Type":  "TStar",
          "Name":  "TargetSystem",
          "Pos.x":  540,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  1,
          "Constellation":  0,
          "Priority":  1,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "Statements":      
      [
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  350,
          "Pos.y":  480,
          "Parent":  -1,
          "#":  22,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GroupIn(Warriors,NearBombCarrier) && GroupIn(BombCarrier,JumpPoint)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  570,
          "Pos.y":  490,
          "Parent":  -1,
          "#":  25,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "(GroupIn(BombCarrier,JumpPoint) && GroupIn(Warriors,NearBombCarrier))"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  540,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  33,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "EndState"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  380,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  36,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "EndState"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  540,
          "Pos.y":  490,
          "Parent":  -1,
          "#":  37,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GroupCount(BombCarrier)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  380,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  39,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "EndState"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  570,
          "Pos.y":  570,
          "Parent":  -1,
          "#":  41,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "(GroupIn(Warriors,RegroupPoint) && GroupIn(BombCarrier,RegroupPoint)) || !GroupCount(BombCarrier)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  350,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  43,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GroupCount(Warriors)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  510,
          "Pos.y":  460,
          "Parent":  -1,
          "#":  44,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!GroupCount(BombCarrier)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  440,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  46,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "!GroupCount(Warriors) && q!=0"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  440,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  49,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "EndState"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  540,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  50,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "GroupCount(BombCarrier)"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  320,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  51,
          "Total.Lines":  1,
          "Code.Type":  "Global",
          "Code":          
          [
              "GRunFrom == 3"          
          ]        
        },
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  350,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  52,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "Dist(CurShip,IdToShip(isNearest))<=350"          
          ]        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "PlayerState",
          "Pos.x":  680,
          "Pos.y":  390,
          "Parent":  -1,
          "#":  19,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "Move",
          "Pos.x":  380,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  20,
          "Move":  1,
          "MoveObj":  18,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "Follow",
          "Pos.x":  540,
          "Pos.y":  460,
          "Parent":  -1,
          "#":  21,
          "Move":  2,
          "MoveObj":  17,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "Jump2",
          "Pos.x":  570,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  23,
          "Move":  3,
          "MoveObj":  1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "Jump",
          "Pos.x":  380,
          "Pos.y":  480,
          "Parent":  -1,
          "#":  24,
          "Move":  3,
          "MoveObj":  1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "Retreat",
          "Pos.x":  380,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  31,
          "Move":  1,
          "MoveObj":  30,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "Regroup",
          "Pos.x":  570,
          "Pos.y":  540,
          "Parent":  -1,
          "#":  32,
          "Move":  1,
          "MoveObj":  30,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "Landing",
          "Pos.x":  440,
          "Pos.y":  480,
          "Parent":  -1,
          "#":  48,
          "Move":  4,
          "MoveObj":  2,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "i",
          "Pos.x":  190,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  6,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "j",
          "Pos.x":  220,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  7,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tmp",
          "Pos.x":  190,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  8,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tmp2",
          "Pos.x":  190,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  9,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tmp3",
          "Pos.x":  190,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  10,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tint",
          "Pos.x":  220,
          "Pos.y":  320,
          "Parent":  -1,
          "#":  11,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "q",
          "Pos.x":  190,
          "Pos.y":  320,
          "Parent":  -1,
          "#":  15,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "domiks",
          "Pos.x":  190,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  34,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "isNearest",
          "Pos.x":  190,
          "Pos.y":  340,
          "Parent":  -1,
          "#":  35,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "distance",
          "Pos.x":  190,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  38,
          "Var.Type":  "Dword",
          "Init":  "100000",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "nShips",
          "Pos.x":  190,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  53,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "k",
          "Pos.x":  250,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  54,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "shipsNear",
          "Pos.x":  190,
          "Pos.y":  360,
          "Parent":  -1,
          "#":  55,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TStarLink",
      "Begin":  0,
      "End":  1,
      "Nom":  0,
      "Arrow":  false,
      "DistMin":  0,
      "DistMax":  50,
      "Hole":  false    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  2,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  3,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  4,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  5,
      "End":  2,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  14,
      "End":  2,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  17,
      "End":  2,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  14,
      "End":  19,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  18,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  25,
      "End":  23,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  22,
      "End":  24,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  16,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  30,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  33,
      "End":  32,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  37,
      "End":  25,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  21,
      "End":  37,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  5,
      "End":  21,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  17,
      "End":  20,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  36,
      "End":  26,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  24,
      "End":  36,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  39,
      "End":  40,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  32,
      "End":  41,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  41,
      "End":  42,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  31,
      "End":  39,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  43,
      "End":  22,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  21,
      "End":  44,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  44,
      "End":  45,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  46,
      "End":  48,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  48,
      "End":  49,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  49,
      "End":  47,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  20,
      "End":  46,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  23,
      "End":  50,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  50,
      "End":  33,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  20,
      "End":  43,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  51,
      "End":  12,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  52,
      "End":  31,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  26,
      "End":  52,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "BlockPar.EC.Total.Strings":  0,
  "BlockPar.EC":  
  [
  
  ]
}